<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<struct type='{_NSAffineTransformStruct=&quot;m11&quot;f&quot;m12&quot;f&quot;m21&quot;f&quot;m22&quot;f&quot;tX&quot;f&quot;tY&quot;f}' type64='{_NSAffineTransformStruct=&quot;m11&quot;d&quot;m12&quot;d&quot;m21&quot;d&quot;m22&quot;d&quot;tX&quot;d&quot;tY&quot;d}' name='NSAffineTransformStruct'>
<field type='f' type64='d' name='m11' declared_type='CGFloat'/>
<field type='f' type64='d' name='m12' declared_type='CGFloat'/>
<field type='f' type64='d' name='m21' declared_type='CGFloat'/>
<field type='f' type64='d' name='m22' declared_type='CGFloat'/>
<field type='f' type64='d' name='tX' declared_type='CGFloat'/>
<field type='f' type64='d' name='tY' declared_type='CGFloat'/>
</struct>
<struct type='{_NSDecimal=&quot;_exponent&quot;b8&quot;_length&quot;b4&quot;_isNegative&quot;b1&quot;_isCompact&quot;b1&quot;_reserved&quot;b18&quot;_mantissa&quot;[8S]}' name='NSDecimal'>
<field type='b8' name='_exponent' declared_type='int'/>
<field type='b4' name='_length' declared_type='unsigned int'/>
<field type='b1' name='_isNegative' declared_type='unsigned int'/>
<field type='b1' name='_isCompact' declared_type='unsigned int'/>
<field type='b18' name='_reserved' declared_type='unsigned int'/>
<field type='[8S]' name='_mantissa' declared_type='unsigned short*'/>
</struct>
<struct type='{_NSFastEnumerationState=&quot;state&quot;L&quot;itemsPtr&quot;^@&quot;mutationsPtr&quot;^L&quot;extra&quot;[5L]}' type64='{_NSFastEnumerationState=&quot;state&quot;Q&quot;itemsPtr&quot;^@&quot;mutationsPtr&quot;^Q&quot;extra&quot;[5Q]}' name='NSFastEnumerationState'>
<field type='L' type64='Q' name='state' declared_type='unsigned long'/>
<field type='^@' name='itemsPtr' declared_type='id*'/>
<field type='^L' type64='^Q' name='mutationsPtr' declared_type='unsigned long*'/>
<field type='[5L]' type64='[5Q]' name='extra' declared_type='unsigned long*'/>
</struct>
<struct type='{_NSHashEnumerator=&quot;_pi&quot;I&quot;_si&quot;I&quot;_bs&quot;^v}' type64='{_NSHashEnumerator=&quot;_pi&quot;Q&quot;_si&quot;Q&quot;_bs&quot;^v}' name='NSHashEnumerator'>
<field type='I' type64='Q' name='_pi' declared_type='NSUInteger'/>
<field type='I' type64='Q' name='_si' declared_type='NSUInteger'/>
<field type='^v' name='_bs' declared_type='void*'/>
</struct>
<struct type='{_NSHashTableCallBacks=&quot;hash&quot;^?&quot;isEqual&quot;^?&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?}' name='NSHashTableCallBacks'>
<field type='^?' name='hash' function_pointer='true' declared_type='NSUInteger (*)(NSHashTable *, void *)'>
<arg type='@' declared_type='NSHashTable*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</field>
<field type='^?' name='isEqual' function_pointer='true' declared_type='BOOL (*)(NSHashTable *, void *, void *)'>
<arg type='@' declared_type='NSHashTable*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='B' declared_type='BOOL'/>
</field>
<field type='^?' name='retain' function_pointer='true' declared_type='void (*)(NSHashTable *, void *)'>
<arg type='@' declared_type='NSHashTable*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field type='^?' name='release' function_pointer='true' declared_type='void (*)(NSHashTable *, void *)'>
<arg type='@' declared_type='NSHashTable*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field type='^?' name='describe' function_pointer='true' declared_type='NSString *(*)(NSHashTable *, void *)'>
<arg type='@' declared_type='NSHashTable*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='@' declared_type='NSString*'/>
</field>
</struct>
<struct type='{_NSMapEnumerator=&quot;_pi&quot;I&quot;_si&quot;I&quot;_bs&quot;^v}' type64='{_NSMapEnumerator=&quot;_pi&quot;Q&quot;_si&quot;Q&quot;_bs&quot;^v}' name='NSMapEnumerator'>
<field type='I' type64='Q' name='_pi' declared_type='NSUInteger'/>
<field type='I' type64='Q' name='_si' declared_type='NSUInteger'/>
<field type='^v' name='_bs' declared_type='void*'/>
</struct>
<struct type='{_NSMapTableKeyCallBacks=&quot;hash&quot;^?&quot;isEqual&quot;^?&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?&quot;notAKeyMarker&quot;^v}' name='NSMapTableKeyCallBacks'>
<field type='^?' name='hash' function_pointer='true' declared_type='NSUInteger (*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</field>
<field type='^?' name='isEqual' function_pointer='true' declared_type='BOOL (*)(NSMapTable *, void *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='B' declared_type='BOOL'/>
</field>
<field type='^?' name='retain' function_pointer='true' declared_type='void (*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field type='^?' name='release' function_pointer='true' declared_type='void (*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field type='^?' name='describe' function_pointer='true' declared_type='NSString *(*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='@' declared_type='NSString*'/>
</field>
<field type='^v' const='true' name='notAKeyMarker' declared_type='void*'/>
</struct>
<struct type='{_NSMapTableValueCallBacks=&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?}' name='NSMapTableValueCallBacks'>
<field type='^?' name='retain' function_pointer='true' declared_type='void (*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field type='^?' name='release' function_pointer='true' declared_type='void (*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field type='^?' name='describe' function_pointer='true' declared_type='NSString *(*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='@' declared_type='NSString*'/>
</field>
</struct>
<struct type='{_NSPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' name='NSPoint'>
<field type='f' type64='d' name='x' declared_type='CGFloat'/>
<field type='f' type64='d' name='y' declared_type='CGFloat'/>
</struct>
<struct type='{_NSRange=&quot;location&quot;I&quot;length&quot;I}' type64='{_NSRange=&quot;location&quot;Q&quot;length&quot;Q}' name='NSRange'>
<field type='I' type64='Q' name='location' declared_type='NSUInteger'/>
<field type='I' type64='Q' name='length' declared_type='NSUInteger'/>
</struct>
<struct type='{_NSRect=&quot;origin&quot;{_NSPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{_NSSize=&quot;width&quot;f&quot;height&quot;f}}' type64='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}' name='NSRect'>
<field type='{_NSPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type64='CGPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' name='origin' declared_type='NSPoint'/>
<field type='{_NSSize=&quot;width&quot;f&quot;height&quot;f}' declared_type64='CGSize' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}' name='size' declared_type='NSSize'/>
</struct>
<struct type='{_NSSize=&quot;width&quot;f&quot;height&quot;f}' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}' name='NSSize'>
<field type='f' type64='d' name='width' declared_type='CGFloat'/>
<field type='f' type64='d' name='height' declared_type='CGFloat'/>
</struct>
<struct type='{_NSSwappedDouble=&quot;v&quot;Q}' name='NSSwappedDouble'>
<field type='Q' name='v' declared_type='unsigned long long'/>
</struct>
<struct type='{_NSSwappedFloat=&quot;v&quot;I}' name='NSSwappedFloat'>
<field type='I' name='v' declared_type='unsigned int'/>
</struct>
<opaque type='^{__NSAppleEventManagerSuspension=}' name='NSAppleEventManagerSuspensionID'/>
<opaque type='^{_NSZone=}' name='NSZone'/>
<constant type='@' const='true' name='NSAMPMDesignation' declared_type='NSString*'/>
<constant type='@' name='NSAppleEventManagerWillProcessFirstEventNotification' declared_type='NSString*'/>
<constant type='d' const='true' name='NSAppleEventTimeOutDefault' declared_type='double'/>
<constant type='d' const='true' name='NSAppleEventTimeOutNone' declared_type='double'/>
<constant type='@' const='true' name='NSAppleScriptErrorAppName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSAppleScriptErrorBriefMessage' declared_type='NSString*'/>
<constant type='@' const='true' name='NSAppleScriptErrorMessage' declared_type='NSString*'/>
<constant type='@' const='true' name='NSAppleScriptErrorNumber' declared_type='NSString*'/>
<constant type='@' const='true' name='NSAppleScriptErrorRange' declared_type='NSString*'/>
<constant type='@' const='true' name='NSArgumentDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSAssertionHandlerKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSAverageKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSBuddhistCalendar' declared_type='NSString*'/>
<constant type='@' const='true' name='NSBundleDidLoadNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSCharacterConversionException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSChineseCalendar' declared_type='NSString*'/>
<constant type='@' name='NSClassDescriptionNeededForClassNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSCocoaErrorDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSConnectionDidDieNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSConnectionDidInitializeNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSConnectionReplyMode' declared_type='NSString*'/>
<constant type='@' const='true' name='NSCountKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSCurrencySymbol' declared_type='NSString*'/>
<constant type='@' const='true' name='NSCurrentLocaleDidChangeNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDateFormatString' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDateTimeOrdering' declared_type='NSString*'/>
<constant type='B' name='NSDeallocateZombies' declared_type='BOOL'/>
<constant type='B' name='NSDebugEnabled' declared_type='BOOL'/>
<constant type='@' const='true' name='NSDecimalDigits' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDecimalNumberDivideByZeroException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDecimalNumberExactnessException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDecimalNumberOverflowException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDecimalNumberUnderflowException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDecimalSeparator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDefaultRunLoopMode' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDestinationInvalidException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDidBecomeSingleThreadedNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDistinctUnionOfArraysKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDistinctUnionOfObjectsKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSDistinctUnionOfSetsKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSEarlierTimeDesignations' declared_type='NSString*'/>
<constant type='@' const='true' name='NSErrorFailingURLStringKey' declared_type='NSString*'/>
<constant type='@' name='NSFTPPropertyActiveTransferModeKey' declared_type='NSString*'/>
<constant type='@' name='NSFTPPropertyFTPProxy' declared_type='NSString*'/>
<constant type='@' name='NSFTPPropertyFileOffsetKey' declared_type='NSString*'/>
<constant type='@' name='NSFTPPropertyUserLoginKey' declared_type='NSString*'/>
<constant type='@' name='NSFTPPropertyUserPasswordKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFailedAuthenticationException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileAppendOnly' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileBusy' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileCreationDate' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileDeviceIdentifier' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileExtensionHidden' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileGroupOwnerAccountID' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileGroupOwnerAccountName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileHFSCreatorCode' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileHFSTypeCode' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileHandleConnectionAcceptedNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileHandleDataAvailableNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileHandleNotificationDataItem' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileHandleNotificationFileHandleItem' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileHandleNotificationMonitorModes' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileHandleOperationException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileHandleReadCompletionNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileHandleReadToEndOfFileCompletionNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileImmutable' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileModificationDate' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileOwnerAccountID' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileOwnerAccountName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFilePathErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFilePosixPermissions' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileReferenceCount' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileSize' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileSystemFileNumber' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileSystemFreeNodes' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileSystemFreeSize' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileSystemNodes' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileSystemNumber' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileSystemSize' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileType' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileTypeBlockSpecial' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileTypeCharacterSpecial' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileTypeDirectory' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileTypeRegular' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileTypeSocket' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileTypeSymbolicLink' declared_type='NSString*'/>
<constant type='@' const='true' name='NSFileTypeUnknown' declared_type='NSString*'/>
<constant type='d' name='NSFoundationVersionNumber' declared_type='double'/>
<constant type='@' const='true' name='NSGenericException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSGlobalDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSGrammarCorrections' declared_type='NSString*'/>
<constant type='@' const='true' name='NSGrammarRange' declared_type='NSString*'/>
<constant type='@' const='true' name='NSGrammarUserDescription' declared_type='NSString*'/>
<constant type='@' const='true' name='NSGregorianCalendar' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieComment' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieCommentURL' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieDiscard' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieExpires' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieManagerAcceptPolicyChangedNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieManagerCookiesChangedNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieMaximumAge' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieOriginURL' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookiePath' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookiePort' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieSecure' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieValue' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHTTPCookieVersion' declared_type='NSString*'/>
<constant type='@' name='NSHTTPPropertyErrorPageDataKey' declared_type='NSString*'/>
<constant type='@' name='NSHTTPPropertyHTTPProxy' declared_type='NSString*'/>
<constant type='@' name='NSHTTPPropertyRedirectionHeadersKey' declared_type='NSString*'/>
<constant type='@' name='NSHTTPPropertyServerHTTPVersionKey' declared_type='NSString*'/>
<constant type='@' name='NSHTTPPropertyStatusCodeKey' declared_type='NSString*'/>
<constant type='@' name='NSHTTPPropertyStatusReasonKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHebrewCalendar' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHelpAnchorErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSHourNameDesignations' declared_type='NSString*'/>
<constant type='@' const='true' name='NSISO8601Calendar' declared_type='NSString*'/>
<constant type='@' const='true' name='NSInconsistentArchiveException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSIndianCalendar' declared_type='NSString*'/>
<constant type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true' name='NSIntHashCallBacks' declared_type='NSHashTableCallBacks'/>
<constant type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true' name='NSIntMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks'/>
<constant type='{_NSMapTableValueCallBacks=^?^?^?}' const='true' name='NSIntMapValueCallBacks' declared_type='NSMapTableValueCallBacks'/>
<constant type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true' name='NSIntegerHashCallBacks' declared_type='NSHashTableCallBacks'/>
<constant type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true' name='NSIntegerMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks'/>
<constant type='{_NSMapTableValueCallBacks=^?^?^?}' const='true' name='NSIntegerMapValueCallBacks' declared_type='NSMapTableValueCallBacks'/>
<constant type='@' const='true' name='NSInternalInconsistencyException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSInternationalCurrencyString' declared_type='NSString*'/>
<constant type='@' const='true' name='NSInvalidArchiveOperationException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSInvalidArgumentException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSInvalidReceivePortException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSInvalidSendPortException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSInvalidUnarchiveOperationException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSInvocationOperationCancelledException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSInvocationOperationVoidResultException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSIsNilTransformerName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSIsNotNilTransformerName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSIslamicCalendar' declared_type='NSString*'/>
<constant type='@' const='true' name='NSIslamicCivilCalendar' declared_type='NSString*'/>
<constant type='@' const='true' name='NSJapaneseCalendar' declared_type='NSString*'/>
<constant type='B' name='NSKeepAllocationStatistics' declared_type='BOOL'/>
<constant type='@' const='true' name='NSKeyValueChangeIndexesKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSKeyValueChangeKindKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSKeyValueChangeNewKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSKeyValueChangeNotificationIsPriorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSKeyValueChangeOldKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSKeyedUnarchiveFromDataTransformerName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLaterTimeDesignations' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagAdjective' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagAdverb' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagClassifier' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagCloseParenthesis' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagCloseQuote' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagConjunction' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagDash' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagDeterminer' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagIdiom' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagInterjection' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagNoun' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagNumber' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagOpenParenthesis' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagOpenQuote' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagOrganizationName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagOther' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagOtherPunctuation' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagOtherWhitespace' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagOtherWord' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagParagraphBreak' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagParticle' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagPersonalName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagPlaceName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagPreposition' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagPronoun' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagPunctuation' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagSchemeLanguage' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagSchemeLemma' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagSchemeLexicalClass' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagSchemeNameType' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagSchemeNameTypeOrLexicalClass' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagSchemeScript' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagSchemeTokenType' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagSentenceTerminator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagVerb' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagWhitespace' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagWord' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLinguisticTagWordJoiner' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLoadedClasses' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocalNotificationCenterType' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleAlternateQuotationBeginDelimiterKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleAlternateQuotationEndDelimiterKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleCalendar' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleCollationIdentifier' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleCollatorIdentifier' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleCountryCode' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleCurrencyCode' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleCurrencySymbol' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleDecimalSeparator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleExemplarCharacterSet' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleGroupingSeparator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleIdentifier' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleLanguageCode' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleMeasurementSystem' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleQuotationBeginDelimiterKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleQuotationEndDelimiterKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleScriptCode' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleUsesMetricSystem' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocaleVariantCode' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocalizedDescriptionKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocalizedFailureReasonErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocalizedRecoveryOptionsErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSLocalizedRecoverySuggestionErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMachErrorDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMallocException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMaximumKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataItemDisplayNameKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataItemFSContentChangeDateKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataItemFSCreationDateKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataItemFSNameKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataItemFSSizeKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataItemIsUbiquitousKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataItemPathKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataItemURLKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataQueryDidFinishGatheringNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataQueryDidStartGatheringNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataQueryDidUpdateNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataQueryGatheringProgressNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataQueryLocalComputerScope' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataQueryNetworkScope' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataQueryResultContentRelevanceAttribute' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataQueryUbiquitousDataScope' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataQueryUbiquitousDocumentsScope' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataQueryUserHomeScope' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataUbiquitousItemHasUnresolvedConflictsKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataUbiquitousItemIsDownloadedKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataUbiquitousItemIsDownloadingKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataUbiquitousItemIsUploadedKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataUbiquitousItemIsUploadingKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataUbiquitousItemPercentDownloadedKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMetadataUbiquitousItemPercentUploadedKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMinimumKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSMonthNameArray' declared_type='NSString*'/>
<constant type='@' const='true' name='NSNegateBooleanTransformerName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSNegativeCurrencyFormatString' declared_type='NSString*'/>
<constant type='@' const='true' name='NSNetServicesErrorCode' declared_type='NSString*'/>
<constant type='@' const='true' name='NSNetServicesErrorDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSNextDayDesignations' declared_type='NSString*'/>
<constant type='@' const='true' name='NSNextNextDayDesignations' declared_type='NSString*'/>
<constant type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true' name='NSNonOwnedPointerHashCallBacks' declared_type='NSHashTableCallBacks'/>
<constant type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true' name='NSNonOwnedPointerMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks'/>
<constant type='{_NSMapTableValueCallBacks=^?^?^?}' const='true' name='NSNonOwnedPointerMapValueCallBacks' declared_type='NSMapTableValueCallBacks'/>
<constant type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true' name='NSNonOwnedPointerOrNullMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks'/>
<constant type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true' name='NSNonRetainedObjectHashCallBacks' declared_type='NSHashTableCallBacks'/>
<constant type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true' name='NSNonRetainedObjectMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks'/>
<constant type='{_NSMapTableValueCallBacks=^?^?^?}' const='true' name='NSNonRetainedObjectMapValueCallBacks' declared_type='NSMapTableValueCallBacks'/>
<constant type='@' const='true' name='NSOSStatusErrorDomain' declared_type='NSString*'/>
<constant type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true' name='NSObjectHashCallBacks' declared_type='NSHashTableCallBacks'/>
<constant type='@' const='true' name='NSObjectInaccessibleException' declared_type='NSString*'/>
<constant type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true' name='NSObjectMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks'/>
<constant type='{_NSMapTableValueCallBacks=^?^?^?}' const='true' name='NSObjectMapValueCallBacks' declared_type='NSMapTableValueCallBacks'/>
<constant type='@' const='true' name='NSObjectNotAvailableException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSOldStyleException' declared_type='NSString*'/>
<constant type='@' name='NSOperationNotSupportedForKeyException' declared_type='NSString*'/>
<constant type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true' name='NSOwnedObjectIdentityHashCallBacks' declared_type='NSHashTableCallBacks'/>
<constant type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true' name='NSOwnedPointerHashCallBacks' declared_type='NSHashTableCallBacks'/>
<constant type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' const='true' name='NSOwnedPointerMapKeyCallBacks' declared_type='NSMapTableKeyCallBacks'/>
<constant type='{_NSMapTableValueCallBacks=^?^?^?}' const='true' name='NSOwnedPointerMapValueCallBacks' declared_type='NSMapTableValueCallBacks'/>
<constant type='@' const='true' name='NSPOSIXErrorDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSParseErrorException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSPersianCalendar' declared_type='NSString*'/>
<constant type='{_NSHashTableCallBacks=^?^?^?^?^?}' const='true' name='NSPointerToStructHashCallBacks' declared_type='NSHashTableCallBacks'/>
<constant type='@' const='true' name='NSPortDidBecomeInvalidNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSPortReceiveException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSPortSendException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSPortTimeoutException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSPositiveCurrencyFormatString' declared_type='NSString*'/>
<constant type='@' const='true' name='NSPriorDayDesignations' declared_type='NSString*'/>
<constant type='@' const='true' name='NSRangeException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSRecoveryAttempterErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSRegistrationDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSRepublicOfChinaCalendar' declared_type='NSString*'/>
<constant type='@' const='true' name='NSRunLoopCommonModes' declared_type='NSString*'/>
<constant type='@' const='true' name='NSShortDateFormatString' declared_type='NSString*'/>
<constant type='@' const='true' name='NSShortMonthNameArray' declared_type='NSString*'/>
<constant type='@' const='true' name='NSShortTimeDateFormatString' declared_type='NSString*'/>
<constant type='@' const='true' name='NSShortWeekDayNameArray' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamDataWrittenToMemoryStreamKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamFileCurrentOffsetKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamNetworkServiceType' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamNetworkServiceTypeBackground' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamNetworkServiceTypeVideo' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamNetworkServiceTypeVoIP' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamNetworkServiceTypeVoice' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSOCKSErrorDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSOCKSProxyConfigurationKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSOCKSProxyHostKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSOCKSProxyPasswordKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSOCKSProxyPortKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSOCKSProxyUserKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSOCKSProxyVersion4' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSOCKSProxyVersion5' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSOCKSProxyVersionKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSocketSSLErrorDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSocketSecurityLevelKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSocketSecurityLevelNegotiatedSSL' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSocketSecurityLevelNone' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSocketSecurityLevelSSLv2' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSocketSecurityLevelSSLv3' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStreamSocketSecurityLevelTLSv1' declared_type='NSString*'/>
<constant type='@' const='true' name='NSStringEncodingErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSSumKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSSystemClockDidChangeNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSSystemTimeZoneDidChangeNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTaskDidTerminateNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingAirlineKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingCityKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingCountryKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingFlightKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingJobTitleKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingNameKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingOrganizationKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingPhoneKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingStateKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingStreetKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTextCheckingZIPKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSThisDayDesignations' declared_type='NSString*'/>
<constant type='@' const='true' name='NSThousandsSeparator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSThreadWillExitNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTimeDateFormatString' declared_type='NSString*'/>
<constant type='@' const='true' name='NSTimeFormatString' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLAttributeModificationDateKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLAuthenticationMethodClientCertificate' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLAuthenticationMethodDefault' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLAuthenticationMethodHTMLForm' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLAuthenticationMethodHTTPBasic' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLAuthenticationMethodHTTPDigest' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLAuthenticationMethodNTLM' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLAuthenticationMethodNegotiate' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLAuthenticationMethodServerTrust' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLContentAccessDateKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLContentModificationDateKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLCreationDateKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLCredentialStorageChangedNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLCustomIconKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLEffectiveIconKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLErrorDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLErrorFailingURLErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLErrorFailingURLPeerTrustErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLErrorFailingURLStringErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileAllocatedSizeKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileResourceIdentifierKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileResourceTypeBlockSpecial' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileResourceTypeCharacterSpecial' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileResourceTypeDirectory' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileResourceTypeKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileResourceTypeNamedPipe' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileResourceTypeRegular' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileResourceTypeSocket' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileResourceTypeSymbolicLink' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileResourceTypeUnknown' declared_type='NSString*'/>
<constant type='@' name='NSURLFileScheme' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileSecurityKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLFileSizeKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLHasHiddenExtensionKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsAliasFileKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsDirectoryKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsExcludedFromBackupKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsExecutableKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsHiddenKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsMountTriggerKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsPackageKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsReadableKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsRegularFileKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsSymbolicLinkKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsSystemImmutableKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsUbiquitousItemKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsUserImmutableKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsVolumeKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLIsWritableKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLKeysOfUnsetValuesKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLLabelColorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLLabelNumberKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLLinkCountKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLLocalizedLabelKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLLocalizedNameKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLLocalizedTypeDescriptionKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLNameKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLParentDirectoryURLKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLPathKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLPreferredIOBlockSizeKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLProtectionSpaceFTP' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLProtectionSpaceFTPProxy' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLProtectionSpaceHTTP' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLProtectionSpaceHTTPProxy' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLProtectionSpaceHTTPS' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLProtectionSpaceHTTPSProxy' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLProtectionSpaceSOCKSProxy' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLTotalFileAllocatedSizeKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLTotalFileSizeKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLTypeIdentifierKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLUbiquitousItemHasUnresolvedConflictsKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLUbiquitousItemIsDownloadedKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLUbiquitousItemIsDownloadingKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLUbiquitousItemIsUploadedKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLUbiquitousItemIsUploadingKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLUbiquitousItemPercentDownloadedKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLUbiquitousItemPercentUploadedKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeAvailableCapacityKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeCreationDateKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeIdentifierKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeIsAutomountedKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeIsBrowsableKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeIsEjectableKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeIsInternalKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeIsJournalingKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeIsLocalKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeIsReadOnlyKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeIsRemovableKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeLocalizedFormatDescriptionKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeLocalizedNameKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeMaximumFileSizeKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeNameKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeResourceCountKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsAdvisoryFileLockingKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsCasePreservedNamesKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsCaseSensitiveNamesKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsExtendedSecurityKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsHardLinksKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsJournalingKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsPersistentIDsKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsRenamingKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsRootDirectoryDatesKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsSparseFilesKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsSymbolicLinksKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsVolumeSizesKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeSupportsZeroRunsKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeTotalCapacityKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeURLForRemountingKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeURLKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSURLVolumeUUIDStringKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUbiquitousKeyValueStoreChangeReasonKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUbiquitousKeyValueStoreChangedKeysKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUbiquitousKeyValueStoreDidChangeExternallyNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUbiquityIdentityDidChangeNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUnarchiveFromDataTransformerName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUndefinedKeyException' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUnderlyingErrorKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUndoManagerCheckpointNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUndoManagerDidCloseUndoGroupNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUndoManagerDidOpenUndoGroupNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUndoManagerDidRedoChangeNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUndoManagerDidUndoChangeNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUndoManagerGroupIsDiscardableKey' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUndoManagerWillCloseUndoGroupNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUndoManagerWillRedoChangeNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUndoManagerWillUndoChangeNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUnionOfArraysKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUnionOfObjectsKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUnionOfSetsKeyValueOperator' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUserDefaultsDidChangeNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSUserNotificationDefaultSoundName' declared_type='NSString*'/>
<constant type='@' const='true' name='NSWeekDayNameArray' declared_type='NSString*'/>
<constant type='@' const='true' name='NSWillBecomeMultiThreadedNotification' declared_type='NSString*'/>
<constant type='@' const='true' name='NSXMLParserErrorDomain' declared_type='NSString*'/>
<constant type='@' const='true' name='NSYearMonthWeekDesignations' declared_type='NSString*'/>
<constant type='{_NSPoint=ff}' const='true' type64='{CGPoint=dd}' name='NSZeroPoint' declared_type='NSPoint'/>
<constant type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='NSZeroRect' declared_type='NSRect'/>
<constant type='{_NSSize=ff}' const='true' type64='{CGSize=dd}' name='NSZeroSize' declared_type='NSSize'/>
<constant type='B' name='NSZombieEnabled' declared_type='BOOL'/>
<enum value='1' name='NSASCIIStringEncoding'/>
<enum value='4' name='NSAdminApplicationDirectory'/>
<enum value='14' name='NSAggregateExpressionType'/>
<enum value='15' name='NSAlignAllEdgesInward'/>
<enum value='983040' name='NSAlignAllEdgesNearest'/>
<enum value='3840' name='NSAlignAllEdgesOutward'/>
<enum value='32' name='NSAlignHeightInward'/>
<enum value='2097152' name='NSAlignHeightNearest'/>
<enum value='8192' name='NSAlignHeightOutward'/>
<enum value='4' name='NSAlignMaxXInward'/>
<enum value='262144' name='NSAlignMaxXNearest'/>
<enum value='1024' name='NSAlignMaxXOutward'/>
<enum value='8' name='NSAlignMaxYInward'/>
<enum value='524288' name='NSAlignMaxYNearest'/>
<enum value='2048' name='NSAlignMaxYOutward'/>
<enum value='1' name='NSAlignMinXInward'/>
<enum value='65536' name='NSAlignMinXNearest'/>
<enum value='256' name='NSAlignMinXOutward'/>
<enum value='2' name='NSAlignMinYInward'/>
<enum value='131072' name='NSAlignMinYNearest'/>
<enum value='512' name='NSAlignMinYOutward'/>
<enum value='9223372036854775808' name='NSAlignRectFlipped'/>
<enum value='16' name='NSAlignWidthInward'/>
<enum value='1048576' name='NSAlignWidthNearest'/>
<enum value='4096' name='NSAlignWidthOutward'/>
<enum value='100' name='NSAllApplicationsDirectory'/>
<enum value='65535' name='NSAllDomainsMask'/>
<enum value='101' name='NSAllLibrariesDirectory'/>
<enum value='1' name='NSAllPredicateModifier'/>
<enum value='8' name='NSAnchoredSearch'/>
<enum value='1' name='NSAndPredicateType'/>
<enum value='2' name='NSAnyPredicateModifier'/>
<enum value='1' name='NSApplicationDirectory'/>
<enum value='23' name='NSApplicationScriptsDirectory'/>
<enum value='14' name='NSApplicationSupportDirectory'/>
<enum value='3' name='NSArgumentEvaluationScriptError'/>
<enum value='6' name='NSArgumentsWrongScriptError'/>
<enum value='1' name='NSAtomicWrite'/>
<enum value='1048576' name='NSAttributedStringEnumerationLongestEffectiveRangeNotRequired'/>
<enum value='2' name='NSAttributedStringEnumerationReverse'/>
<enum value='11' name='NSAutosavedInformationDirectory'/>
<enum value='4' name='NSBackwardsSearch'/>
<enum value='5' name='NSBeginsWithComparison'/>
<enum value='8' name='NSBeginsWithPredicateOperatorType'/>
<enum value='100' name='NSBetweenPredicateOperatorType'/>
<enum value='256' name='NSBinarySearchingFirstEqual'/>
<enum value='1024' name='NSBinarySearchingInsertionIndex'/>
<enum value='512' name='NSBinarySearchingLastEqual'/>
<enum value='19' name='NSBlockExpressionType'/>
<enum value='7' name='NSBundleExecutableArchitectureI386'/>
<enum value='18' name='NSBundleExecutableArchitecturePPC'/>
<enum value='16777234' name='NSBundleExecutableArchitecturePPC64'/>
<enum value='16777223' name='NSBundleExecutableArchitectureX86_64'/>
<enum value='3' name='NSByteCountFormatterCountStyleBinary'/>
<enum value='2' name='NSByteCountFormatterCountStyleDecimal'/>
<enum value='0' name='NSByteCountFormatterCountStyleFile'/>
<enum value='1' name='NSByteCountFormatterCountStyleMemory'/>
<enum value='65535' name='NSByteCountFormatterUseAll'/>
<enum value='1' name='NSByteCountFormatterUseBytes'/>
<enum value='0' name='NSByteCountFormatterUseDefault'/>
<enum value='64' name='NSByteCountFormatterUseEB'/>
<enum value='8' name='NSByteCountFormatterUseGB'/>
<enum value='2' name='NSByteCountFormatterUseKB'/>
<enum value='4' name='NSByteCountFormatterUseMB'/>
<enum value='32' name='NSByteCountFormatterUsePB'/>
<enum value='16' name='NSByteCountFormatterUseTB'/>
<enum value='65280' name='NSByteCountFormatterUseYBOrHigher'/>
<enum value='128' name='NSByteCountFormatterUseZB'/>
<enum value='13' name='NSCachesDirectory'/>
<enum value='4' name='NSCalculationDivideByZero'/>
<enum value='1' name='NSCalculationLossOfPrecision'/>
<enum value='0' name='NSCalculationNoError'/>
<enum value='3' name='NSCalculationOverflow'/>
<enum value='2' name='NSCalculationUnderflow'/>
<enum value='1048576' name='NSCalendarCalendarUnit'/>
<enum value='10' name='NSCannotCreateScriptCommandError'/>
<enum value='1' name='NSCaseInsensitivePredicateOption'/>
<enum value='1' name='NSCaseInsensitiveSearch'/>
<enum value='2' name='NSCollectorDisabledOption'/>
<enum value='0' name='NSConstantValueExpressionType'/>
<enum value='2' name='NSContainerSpecifierError'/>
<enum value='7' name='NSContainsComparison'/>
<enum value='99' name='NSContainsPredicateOperatorType'/>
<enum value='10' name='NSCoreServiceDirectory'/>
<enum value='11' name='NSCustomSelectorPredicateOperatorType'/>
<enum value='1' name='NSDataReadingMapped'/>
<enum value='8' name='NSDataReadingMappedAlways'/>
<enum value='1' name='NSDataReadingMappedIfSafe'/>
<enum value='2' name='NSDataReadingUncached'/>
<enum value='2' name='NSDataSearchAnchored'/>
<enum value='1' name='NSDataSearchBackwards'/>
<enum value='1' name='NSDataWritingAtomic'/>
<enum value='536870912' name='NSDataWritingFileProtectionComplete'/>
<enum value='805306368' name='NSDataWritingFileProtectionCompleteUnlessOpen'/>
<enum value='1073741824' name='NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication'/>
<enum value='4026531840' name='NSDataWritingFileProtectionMask'/>
<enum value='268435456' name='NSDataWritingFileProtectionNone'/>
<enum value='2' name='NSDataWritingWithoutOverwriting'/>
<enum value='1000' name='NSDateFormatterBehavior10_0'/>
<enum value='1040' name='NSDateFormatterBehavior10_4'/>
<enum value='0' name='NSDateFormatterBehaviorDefault'/>
<enum value='4' name='NSDateFormatterFullStyle'/>
<enum value='3' name='NSDateFormatterLongStyle'/>
<enum value='2' name='NSDateFormatterMediumStyle'/>
<enum value='0' name='NSDateFormatterNoStyle'/>
<enum value='1' name='NSDateFormatterShortStyle'/>
<enum value='16' name='NSDayCalendarUnit'/>
<enum value='8' name='NSDecimalMaxSize'/>
<enum value='32767' name='NSDecimalNoScale'/>
<enum value='2' name='NSDemoApplicationDirectory'/>
<enum value='12' name='NSDesktopDirectory'/>
<enum value='3' name='NSDeveloperApplicationDirectory'/>
<enum value='6' name='NSDeveloperDirectory'/>
<enum value='2' name='NSDiacriticInsensitivePredicateOption'/>
<enum value='128' name='NSDiacriticInsensitiveSearch'/>
<enum value='0' name='NSDirectPredicateModifier'/>
<enum value='4' name='NSDirectoryEnumerationSkipsHiddenFiles'/>
<enum value='2' name='NSDirectoryEnumerationSkipsPackageDescendants'/>
<enum value='1' name='NSDirectoryEnumerationSkipsSubdirectoryDescendants'/>
<enum value='9' name='NSDocumentDirectory'/>
<enum value='8' name='NSDocumentationDirectory'/>
<enum value='15' name='NSDownloadsDirectory'/>
<enum value='6' name='NSEndsWithComparison'/>
<enum value='9' name='NSEndsWithPredicateOperatorType'/>
<enum value='1' name='NSEnumerationConcurrent'/>
<enum value='2' name='NSEnumerationReverse'/>
<enum value='0' name='NSEqualToComparison'/>
<enum value='4' name='NSEqualToPredicateOperatorType'/>
<enum value='2' name='NSEraCalendarUnit'/>
<enum value='1' name='NSEvaluatedObjectExpressionType'/>
<enum value='1' name='NSEverySubelement'/>
<enum value='3585' name='NSExecutableArchitectureMismatchError'/>
<enum value='3839' name='NSExecutableErrorMaximum'/>
<enum value='3584' name='NSExecutableErrorMinimum'/>
<enum value='3588' name='NSExecutableLinkError'/>
<enum value='3587' name='NSExecutableLoadError'/>
<enum value='3584' name='NSExecutableNotLoadableError'/>
<enum value='3586' name='NSExecutableRuntimeMismatchError'/>
<enum value='3328' name='NSFeatureUnsupportedError'/>
<enum value='2' name='NSFileCoordinatorReadingResolvesSymbolicLink'/>
<enum value='1' name='NSFileCoordinatorReadingWithoutChanges'/>
<enum value='1' name='NSFileCoordinatorWritingForDeleting'/>
<enum value='4' name='NSFileCoordinatorWritingForMerging'/>
<enum value='2' name='NSFileCoordinatorWritingForMoving'/>
<enum value='8' name='NSFileCoordinatorWritingForReplacing'/>
<enum value='1023' name='NSFileErrorMaximum'/>
<enum value='0' name='NSFileErrorMinimum'/>
<enum value='255' name='NSFileLockingError'/>
<enum value='1' name='NSFileManagerItemReplacementUsingNewMetadataOnly'/>
<enum value='2' name='NSFileManagerItemReplacementWithoutDeletingBackupItem'/>
<enum value='4' name='NSFileNoSuchFileError'/>
<enum value='259' name='NSFileReadCorruptFileError'/>
<enum value='261' name='NSFileReadInapplicableStringEncodingError'/>
<enum value='258' name='NSFileReadInvalidFileNameError'/>
<enum value='257' name='NSFileReadNoPermissionError'/>
<enum value='260' name='NSFileReadNoSuchFileError'/>
<enum value='263' name='NSFileReadTooLargeError'/>
<enum value='256' name='NSFileReadUnknownError'/>
<enum value='264' name='NSFileReadUnknownStringEncodingError'/>
<enum value='262' name='NSFileReadUnsupportedSchemeError'/>
<enum value='1' name='NSFileVersionAddingByMoving'/>
<enum value='1' name='NSFileVersionReplacingByMoving'/>
<enum value='1' name='NSFileWrapperReadingImmediate'/>
<enum value='2' name='NSFileWrapperReadingWithoutMapping'/>
<enum value='1' name='NSFileWrapperWritingAtomic'/>
<enum value='2' name='NSFileWrapperWritingWithNameUpdating'/>
<enum value='516' name='NSFileWriteFileExistsError'/>
<enum value='517' name='NSFileWriteInapplicableStringEncodingError'/>
<enum value='514' name='NSFileWriteInvalidFileNameError'/>
<enum value='513' name='NSFileWriteNoPermissionError'/>
<enum value='640' name='NSFileWriteOutOfSpaceError'/>
<enum value='512' name='NSFileWriteUnknownError'/>
<enum value='518' name='NSFileWriteUnsupportedSchemeError'/>
<enum value='642' name='NSFileWriteVolumeReadOnlyError'/>
<enum value='512' name='NSForcedOrderingSearch'/>
<enum value='2048' name='NSFormattingError'/>
<enum value='2559' name='NSFormattingErrorMaximum'/>
<enum value='2048' name='NSFormattingErrorMinimum'/>
<enum value='397.40' name='NSFoundationVersionNumber10_0'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_1'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_2'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_3'/>
<enum value='425.00' name='NSFoundationVersionNumber10_1_4'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_1'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_2'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_3'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_4'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_5'/>
<enum value='462.00' name='NSFoundationVersionNumber10_2_6'/>
<enum value='462.70' name='NSFoundationVersionNumber10_2_7'/>
<enum value='462.70' name='NSFoundationVersionNumber10_2_8'/>
<enum value='500.00' name='NSFoundationVersionNumber10_3'/>
<enum value='500.00' name='NSFoundationVersionNumber10_3_1'/>
<enum value='500.30' name='NSFoundationVersionNumber10_3_2'/>
<enum value='500.54' name='NSFoundationVersionNumber10_3_3'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_4'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_5'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_6'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_7'/>
<enum value='500.56' name='NSFoundationVersionNumber10_3_8'/>
<enum value='500.58' name='NSFoundationVersionNumber10_3_9'/>
<enum value='567.00' name='NSFoundationVersionNumber10_4'/>
<enum value='567.00' name='NSFoundationVersionNumber10_4_1'/>
<enum value='567.29' name='NSFoundationVersionNumber10_4_10'/>
<enum value='567.36' name='NSFoundationVersionNumber10_4_11'/>
<enum value='567.12' name='NSFoundationVersionNumber10_4_2'/>
<enum value='567.21' name='NSFoundationVersionNumber10_4_3'/>
<enum value='567.23' name='NSFoundationVersionNumber10_4_4_Intel'/>
<enum value='567.21' name='NSFoundationVersionNumber10_4_4_PowerPC'/>
<enum value='567.25' name='NSFoundationVersionNumber10_4_5'/>
<enum value='567.26' name='NSFoundationVersionNumber10_4_6'/>
<enum value='567.27' name='NSFoundationVersionNumber10_4_7'/>
<enum value='567.28' name='NSFoundationVersionNumber10_4_8'/>
<enum value='567.29' name='NSFoundationVersionNumber10_4_9'/>
<enum value='677.00' name='NSFoundationVersionNumber10_5'/>
<enum value='677.10' name='NSFoundationVersionNumber10_5_1'/>
<enum value='677.15' name='NSFoundationVersionNumber10_5_2'/>
<enum value='677.19' name='NSFoundationVersionNumber10_5_3'/>
<enum value='677.19' name='NSFoundationVersionNumber10_5_4'/>
<enum value='677.21' name='NSFoundationVersionNumber10_5_5'/>
<enum value='677.22' name='NSFoundationVersionNumber10_5_6'/>
<enum value='677.24' name='NSFoundationVersionNumber10_5_7'/>
<enum value='677.26' name='NSFoundationVersionNumber10_5_8'/>
<enum value='751.00' name='NSFoundationVersionNumber10_6'/>
<enum value='751.00' name='NSFoundationVersionNumber10_6_1'/>
<enum value='751.14' name='NSFoundationVersionNumber10_6_2'/>
<enum value='751.21' name='NSFoundationVersionNumber10_6_3'/>
<enum value='751.29' name='NSFoundationVersionNumber10_6_4'/>
<enum value='751.42' name='NSFoundationVersionNumber10_6_5'/>
<enum value='751.53' name='NSFoundationVersionNumber10_6_6'/>
<enum value='751.53' name='NSFoundationVersionNumber10_6_7'/>
<enum value='751.62' name='NSFoundationVersionNumber10_6_8'/>
<enum value='833.10' name='NSFoundationVersionNumber10_7'/>
<enum value='833.10' name='NSFoundationVersionNumber10_7_1'/>
<enum value='833.20' name='NSFoundationVersionNumber10_7_2'/>
<enum value='833.24' name='NSFoundationVersionNumber10_7_3'/>
<enum value='833.25' name='NSFoundationVersionNumber10_7_4'/>
<enum value='412' name='NSFoundationVersionWithFileManagerResourceForkSupport'/>
<enum value='4' name='NSFunctionExpressionType'/>
<enum value64='1' name='NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES'/>
<enum value='4' name='NSGreaterThanComparison'/>
<enum value='3' name='NSGreaterThanOrEqualToComparison'/>
<enum value='3' name='NSGreaterThanOrEqualToPredicateOperatorType'/>
<enum value='2' name='NSGreaterThanPredicateOperatorType'/>
<enum value='4' name='NSHPUXOperatingSystem'/>
<enum value='0' name='NSHTTPCookieAcceptPolicyAlways'/>
<enum value='1' name='NSHTTPCookieAcceptPolicyNever'/>
<enum value='2' name='NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain'/>
<enum value='65536' name='NSHashTableCopyIn'/>
<enum value='512' name='NSHashTableObjectPointerPersonality'/>
<enum value='0' name='NSHashTableStrongMemory'/>
<enum value='5' name='NSHashTableWeakMemory'/>
<enum value='1' name='NSHashTableZeroingWeakMemory'/>
<enum value='32' name='NSHourCalendarUnit'/>
<enum value='1' name='NSINTEGER_DEFINED'/>
<enum value='21' name='NSISO2022JPStringEncoding'/>
<enum value='5' name='NSISOLatin1StringEncoding'/>
<enum value='9' name='NSISOLatin2StringEncoding'/>
<enum value='10' name='NSInPredicateOperatorType'/>
<enum value='0' name='NSIndexSubelement'/>
<enum value='16' name='NSInputMethodsDirectory'/>
<enum value='2147483647' value64='9223372036854775807' name='NSIntegerMax'/>
<enum value='-2147483648' value64='-9223372036854775808' name='NSIntegerMin'/>
<enum value='8' name='NSInternalScriptError'/>
<enum value='5' name='NSInternalSpecifierError'/>
<enum value='6' name='NSIntersectSetExpressionType'/>
<enum value='4' name='NSInvalidIndexSpecifierError'/>
<enum value='99' name='NSItemReplacementDirectory'/>
<enum value='4' name='NSJSONReadingAllowFragments'/>
<enum value='1' name='NSJSONReadingMutableContainers'/>
<enum value='2' name='NSJSONReadingMutableLeaves'/>
<enum value='1' name='NSJSONWritingPrettyPrinted'/>
<enum value='3' name='NSJapaneseEUCStringEncoding'/>
<enum value='3' name='NSKeyPathExpressionType'/>
<enum value='2' name='NSKeySpecifierEvaluationScriptError'/>
<enum value='2' name='NSKeyValueChangeInsertion'/>
<enum value='3' name='NSKeyValueChangeRemoval'/>
<enum value='4' name='NSKeyValueChangeReplacement'/>
<enum value='1' name='NSKeyValueChangeSetting'/>
<enum value='3' name='NSKeyValueIntersectSetMutation'/>
<enum value='2' name='NSKeyValueMinusSetMutation'/>
<enum value='4' name='NSKeyValueObservingOptionInitial'/>
<enum value='1' name='NSKeyValueObservingOptionNew'/>
<enum value='2' name='NSKeyValueObservingOptionOld'/>
<enum value='8' name='NSKeyValueObservingOptionPrior'/>
<enum value='4' name='NSKeyValueSetSetMutation'/>
<enum value='1' name='NSKeyValueUnionSetMutation'/>
<enum value='1024' name='NSKeyValueValidationError'/>
<enum value='2' name='NSLessThanComparison'/>
<enum value='1' name='NSLessThanOrEqualToComparison'/>
<enum value='1' name='NSLessThanOrEqualToPredicateOperatorType'/>
<enum value='0' name='NSLessThanPredicateOperatorType'/>
<enum value='5' name='NSLibraryDirectory'/>
<enum value='7' name='NSLikePredicateOperatorType'/>
<enum value='16' name='NSLinguisticTaggerJoinNames'/>
<enum value='8' name='NSLinguisticTaggerOmitOther'/>
<enum value='2' name='NSLinguisticTaggerOmitPunctuation'/>
<enum value='4' name='NSLinguisticTaggerOmitWhitespace'/>
<enum value='1' name='NSLinguisticTaggerOmitWords'/>
<enum value='2' name='NSLiteralSearch'/>
<enum value='2' name='NSLocalDomainMask'/>
<enum value='4' name='NSLocaleLanguageDirectionBottomToTop'/>
<enum value='1' name='NSLocaleLanguageDirectionLeftToRight'/>
<enum value='2' name='NSLocaleLanguageDirectionRightToLeft'/>
<enum value='3' name='NSLocaleLanguageDirectionTopToBottom'/>
<enum value='0' name='NSLocaleLanguageDirectionUnknown'/>
<enum value='5' name='NSMACHOperatingSystem'/>
<enum value='30' name='NSMacOSRomanStringEncoding'/>
<enum value='0' name='NSMachPortDeallocateNone'/>
<enum value='2' name='NSMachPortDeallocateReceiveRight'/>
<enum value='1' name='NSMachPortDeallocateSendRight'/>
<enum value='65536' name='NSMapTableCopyIn'/>
<enum value='512' name='NSMapTableObjectPointerPersonality'/>
<enum value='0' name='NSMapTableStrongMemory'/>
<enum value='5' name='NSMapTableWeakMemory'/>
<enum value='1' name='NSMapTableZeroingWeakMemory'/>
<enum value='1' name='NSMappedRead'/>
<enum value='6' name='NSMatchesPredicateOperatorType'/>
<enum value='4' name='NSMatchingAnchored'/>
<enum value='2' name='NSMatchingCompleted'/>
<enum value='4' name='NSMatchingHitEnd'/>
<enum value='16' name='NSMatchingInternalError'/>
<enum value='1' name='NSMatchingProgress'/>
<enum value='2' name='NSMatchingReportCompletion'/>
<enum value='1' name='NSMatchingReportProgress'/>
<enum value='8' name='NSMatchingRequiredEnd'/>
<enum value='8' name='NSMatchingWithTransparentBounds'/>
<enum value='16' name='NSMatchingWithoutAnchoringBounds'/>
<enum value64='2' name='NSMaxXEdge'/>
<enum value64='3' name='NSMaxYEdge'/>
<enum value='2147483646' name='NSMaximumStringLength'/>
<enum value='2' name='NSMiddleSubelement'/>
<enum value64='0' name='NSMinXEdge'/>
<enum value64='1' name='NSMinYEdge'/>
<enum value='7' name='NSMinusSetExpressionType'/>
<enum value='64' name='NSMinuteCalendarUnit'/>
<enum value='8' name='NSMonthCalendarUnit'/>
<enum value='17' name='NSMoviesDirectory'/>
<enum value='18' name='NSMusicDirectory'/>
<enum value='2' name='NSNEXTSTEPStringEncoding'/>
<enum value='1' name='NSNetServiceNoAutoRename'/>
<enum value='-72003' name='NSNetServicesActivityInProgress'/>
<enum value='-72004' name='NSNetServicesBadArgumentError'/>
<enum value='-72005' name='NSNetServicesCancelledError'/>
<enum value='-72001' name='NSNetServicesCollisionError'/>
<enum value='-72006' name='NSNetServicesInvalidError'/>
<enum value='-72002' name='NSNetServicesNotFoundError'/>
<enum value='-72007' name='NSNetServicesTimeoutError'/>
<enum value='-72000' name='NSNetServicesUnknownError'/>
<enum value='4' name='NSNetworkDomainMask'/>
<enum value='0' name='NSNoScriptError'/>
<enum value='0' name='NSNoSpecifierError'/>
<enum value='4' name='NSNoSubelement'/>
<enum value='1' name='NSNoTopLevelContainersSpecifierError'/>
<enum value='7' name='NSNonLossyASCIIStringEncoding'/>
<enum value='4' name='NSNormalizedPredicateOption'/>
<enum value='5' name='NSNotEqualToPredicateOperatorType'/>
<enum value='2147483647' value64='9223372036854775807' name='NSNotFound'/>
<enum value='0' name='NSNotPredicateType'/>
<enum value='1' name='NSNotificationCoalescingOnName'/>
<enum value='2' name='NSNotificationCoalescingOnSender'/>
<enum value='1' name='NSNotificationDeliverImmediately'/>
<enum value='0' name='NSNotificationNoCoalescing'/>
<enum value='2' name='NSNotificationPostToAllSessions'/>
<enum value='2' name='NSNotificationSuspensionBehaviorCoalesce'/>
<enum value='4' name='NSNotificationSuspensionBehaviorDeliverImmediately'/>
<enum value='1' name='NSNotificationSuspensionBehaviorDrop'/>
<enum value='3' name='NSNotificationSuspensionBehaviorHold'/>
<enum value='1000' name='NSNumberFormatterBehavior10_0'/>
<enum value='1040' name='NSNumberFormatterBehavior10_4'/>
<enum value='0' name='NSNumberFormatterBehaviorDefault'/>
<enum value='2' name='NSNumberFormatterCurrencyStyle'/>
<enum value='1' name='NSNumberFormatterDecimalStyle'/>
<enum value='0' name='NSNumberFormatterNoStyle'/>
<enum value='1' name='NSNumberFormatterPadAfterPrefix'/>
<enum value='3' name='NSNumberFormatterPadAfterSuffix'/>
<enum value='0' name='NSNumberFormatterPadBeforePrefix'/>
<enum value='2' name='NSNumberFormatterPadBeforeSuffix'/>
<enum value='3' name='NSNumberFormatterPercentStyle'/>
<enum value='0' name='NSNumberFormatterRoundCeiling'/>
<enum value='2' name='NSNumberFormatterRoundDown'/>
<enum value='1' name='NSNumberFormatterRoundFloor'/>
<enum value='5' name='NSNumberFormatterRoundHalfDown'/>
<enum value='4' name='NSNumberFormatterRoundHalfEven'/>
<enum value='6' name='NSNumberFormatterRoundHalfUp'/>
<enum value='3' name='NSNumberFormatterRoundUp'/>
<enum value='4' name='NSNumberFormatterScientificStyle'/>
<enum value='5' name='NSNumberFormatterSpellOutStyle'/>
<enum value='64' name='NSNumericSearch'/>
<enum value='7' name='NSOSF1OperatingSystem'/>
<enum value='3' name='NSObjectAutoreleasedEvent'/>
<enum value='5' name='NSObjectExtraRefDecrementedEvent'/>
<enum value='4' name='NSObjectExtraRefIncrementedEvent'/>
<enum value='7' name='NSObjectInternalRefDecrementedEvent'/>
<enum value='6' name='NSObjectInternalRefIncrementedEvent'/>
<enum value='62464' name='NSOpenStepUnicodeReservedBase'/>
<enum value='9' name='NSOperationNotSupportedForKeyScriptError'/>
<enum value='6' name='NSOperationNotSupportedForKeySpecifierError'/>
<enum value='-1' name='NSOperationQueueDefaultMaxConcurrentOperationCount'/>
<enum value='4' name='NSOperationQueuePriorityHigh'/>
<enum value='-4' name='NSOperationQueuePriorityLow'/>
<enum value='0' name='NSOperationQueuePriorityNormal'/>
<enum value='8' name='NSOperationQueuePriorityVeryHigh'/>
<enum value='-8' name='NSOperationQueuePriorityVeryLow'/>
<enum value='2' name='NSOrPredicateType'/>
<enum value='-1' name='NSOrderedAscending'/>
<enum value='1' name='NSOrderedDescending'/>
<enum value='0' name='NSOrderedSame'/>
<enum value='19' name='NSPicturesDirectory'/>
<enum value='768' name='NSPointerFunctionsCStringPersonality'/>
<enum value='65536' name='NSPointerFunctionsCopyIn'/>
<enum value='1280' name='NSPointerFunctionsIntegerPersonality'/>
<enum value='4' name='NSPointerFunctionsMachVirtualMemory'/>
<enum value='3' name='NSPointerFunctionsMallocMemory'/>
<enum value='0' name='NSPointerFunctionsObjectPersonality'/>
<enum value='512' name='NSPointerFunctionsObjectPointerPersonality'/>
<enum value='2' name='NSPointerFunctionsOpaqueMemory'/>
<enum value='256' name='NSPointerFunctionsOpaquePersonality'/>
<enum value='0' name='NSPointerFunctionsStrongMemory'/>
<enum value='1024' name='NSPointerFunctionsStructPersonality'/>
<enum value='5' name='NSPointerFunctionsWeakMemory'/>
<enum value='1' name='NSPointerFunctionsZeroingWeakMemory'/>
<enum value='0' name='NSPositionAfter'/>
<enum value='1' name='NSPositionBefore'/>
<enum value='2' name='NSPositionBeginning'/>
<enum value='3' name='NSPositionEnd'/>
<enum value='4' name='NSPositionReplace'/>
<enum value='2' name='NSPostASAP'/>
<enum value='3' name='NSPostNow'/>
<enum value='1' name='NSPostWhenIdle'/>
<enum value='22' name='NSPreferencePanesDirectory'/>
<enum value='20' name='NSPrinterDescriptionDirectory'/>
<enum value='200' name='NSPropertyListBinaryFormat_v1_0'/>
<enum value='4095' name='NSPropertyListErrorMaximum'/>
<enum value='3840' name='NSPropertyListErrorMinimum'/>
<enum value='0' name='NSPropertyListImmutable'/>
<enum value='1' name='NSPropertyListMutableContainers'/>
<enum value='2' name='NSPropertyListMutableContainersAndLeaves'/>
<enum value='1' name='NSPropertyListOpenStepFormat'/>
<enum value='3840' name='NSPropertyListReadCorruptError'/>
<enum value='3842' name='NSPropertyListReadStreamError'/>
<enum value='3841' name='NSPropertyListReadUnknownVersionError'/>
<enum value='3851' name='NSPropertyListWriteStreamError'/>
<enum value='100' name='NSPropertyListXMLFormat_v1_0'/>
<enum value='65536' name='NSProprietaryStringEncoding'/>
<enum value='2048' name='NSQuarterCalendarUnit'/>
<enum value='3' name='NSRandomSubelement'/>
<enum value='1' name='NSReceiverEvaluationScriptError'/>
<enum value='4' name='NSReceiversCantHandleCommandScriptError'/>
<enum value='2' name='NSRegularExpressionAllowCommentsAndWhitespace'/>
<enum value='16' name='NSRegularExpressionAnchorsMatchLines'/>
<enum value='1' name='NSRegularExpressionCaseInsensitive'/>
<enum value='8' name='NSRegularExpressionDotMatchesLineSeparators'/>
<enum value='4' name='NSRegularExpressionIgnoreMetacharacters'/>
<enum value='1024' name='NSRegularExpressionSearch'/>
<enum value='64' name='NSRegularExpressionUseUnicodeWordBoundaries'/>
<enum value='32' name='NSRegularExpressionUseUnixLineSeparators'/>
<enum value='0' name='NSRelativeAfter'/>
<enum value='1' name='NSRelativeBefore'/>
<enum value='5' name='NSRequiredArgumentsMissingScriptError'/>
<enum value='3' name='NSRoundBankers'/>
<enum value='1' name='NSRoundDown'/>
<enum value='0' name='NSRoundPlain'/>
<enum value='2' name='NSRoundUp'/>
<enum value='2' name='NSSaveOptionsAsk'/>
<enum value='1' name='NSSaveOptionsNo'/>
<enum value='0' name='NSSaveOptionsYes'/>
<enum value='1' name='NSScannedOption'/>
<enum value='128' name='NSSecondCalendarUnit'/>
<enum value='21' name='NSSharedPublicDirectory'/>
<enum value='8' name='NSShiftJISStringEncoding'/>
<enum value='3' name='NSSolarisOperatingSystem'/>
<enum value='1' name='NSSortConcurrent'/>
<enum value='16' name='NSSortStable'/>
<enum value='16' name='NSStreamEventEndEncountered'/>
<enum value='8' name='NSStreamEventErrorOccurred'/>
<enum value='2' name='NSStreamEventHasBytesAvailable'/>
<enum value='4' name='NSStreamEventHasSpaceAvailable'/>
<enum value='0' name='NSStreamEventNone'/>
<enum value='1' name='NSStreamEventOpenCompleted'/>
<enum value='5' name='NSStreamStatusAtEnd'/>
<enum value='6' name='NSStreamStatusClosed'/>
<enum value='7' name='NSStreamStatusError'/>
<enum value='0' name='NSStreamStatusNotOpen'/>
<enum value='2' name='NSStreamStatusOpen'/>
<enum value='1' name='NSStreamStatusOpening'/>
<enum value='3' name='NSStreamStatusReading'/>
<enum value='4' name='NSStreamStatusWriting'/>
<enum value='1' name='NSStringEncodingConversionAllowLossy'/>
<enum value='2' name='NSStringEncodingConversionExternalRepresentation'/>
<enum value='2' name='NSStringEnumerationByComposedCharacterSequences'/>
<enum value='0' name='NSStringEnumerationByLines'/>
<enum value='1' name='NSStringEnumerationByParagraphs'/>
<enum value='4' name='NSStringEnumerationBySentences'/>
<enum value='3' name='NSStringEnumerationByWords'/>
<enum value='1024' name='NSStringEnumerationLocalized'/>
<enum value='256' name='NSStringEnumerationReverse'/>
<enum value='512' name='NSStringEnumerationSubstringNotRequired'/>
<enum value='13' name='NSSubqueryExpressionType'/>
<enum value='6' name='NSSunOSOperatingSystem'/>
<enum value='6' name='NSSymbolStringEncoding'/>
<enum value='8' name='NSSystemDomainMask'/>
<enum value='1' name='NSTaskTerminationReasonExit'/>
<enum value='2' name='NSTaskTerminationReasonUncaughtSignal'/>
<enum value='18446744069414584320' name='NSTextCheckingAllCustomTypes'/>
<enum value='4294967295' name='NSTextCheckingAllSystemTypes'/>
<enum value='18446744073709551615' name='NSTextCheckingAllTypes'/>
<enum value='16' name='NSTextCheckingTypeAddress'/>
<enum value='512' name='NSTextCheckingTypeCorrection'/>
<enum value='128' name='NSTextCheckingTypeDash'/>
<enum value='8' name='NSTextCheckingTypeDate'/>
<enum value='4' name='NSTextCheckingTypeGrammar'/>
<enum value='32' name='NSTextCheckingTypeLink'/>
<enum value='1' name='NSTextCheckingTypeOrthography'/>
<enum value='2048' name='NSTextCheckingTypePhoneNumber'/>
<enum value='64' name='NSTextCheckingTypeQuote'/>
<enum value='1024' name='NSTextCheckingTypeRegularExpression'/>
<enum value='256' name='NSTextCheckingTypeReplacement'/>
<enum value='2' name='NSTextCheckingTypeSpelling'/>
<enum value='4096' name='NSTextCheckingTypeTransitInformation'/>
<enum value='978307200.0' name='NSTimeIntervalSince1970'/>
<enum value='2097152' name='NSTimeZoneCalendarUnit'/>
<enum value='2' name='NSTimeZoneNameStyleDaylightSaving'/>
<enum value='4' name='NSTimeZoneNameStyleGeneric'/>
<enum value='3' name='NSTimeZoneNameStyleShortDaylightSaving'/>
<enum value='5' name='NSTimeZoneNameStyleShortGeneric'/>
<enum value='1' name='NSTimeZoneNameStyleShortStandard'/>
<enum value='0' name='NSTimeZoneNameStyleStandard'/>
<enum value='102' name='NSTrashDirectory'/>
<enum value='4294967295' value64='18446744073709551615' name='NSUIntegerMax'/>
<enum value='512' name='NSURLBookmarkCreationMinimalBookmark'/>
<enum value='256' name='NSURLBookmarkCreationPreferFileIDResolution'/>
<enum value='4096' name='NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess'/>
<enum value='1024' name='NSURLBookmarkCreationSuitableForBookmarkFile'/>
<enum value='2048' name='NSURLBookmarkCreationWithSecurityScope'/>
<enum value='1024' name='NSURLBookmarkResolutionWithSecurityScope'/>
<enum value='512' name='NSURLBookmarkResolutionWithoutMounting'/>
<enum value='256' name='NSURLBookmarkResolutionWithoutUI'/>
<enum value='0' name='NSURLCacheStorageAllowed'/>
<enum value='1' name='NSURLCacheStorageAllowedInMemoryOnly'/>
<enum value='2' name='NSURLCacheStorageNotAllowed'/>
<enum value='1' name='NSURLCredentialPersistenceForSession'/>
<enum value='0' name='NSURLCredentialPersistenceNone'/>
<enum value='2' name='NSURLCredentialPersistencePermanent'/>
<enum value='-1011' name='NSURLErrorBadServerResponse'/>
<enum value='-1000' name='NSURLErrorBadURL'/>
<enum value='-1019' name='NSURLErrorCallIsActive'/>
<enum value='-999' name='NSURLErrorCancelled'/>
<enum value='-3002' name='NSURLErrorCannotCloseFile'/>
<enum value='-1004' name='NSURLErrorCannotConnectToHost'/>
<enum value='-3000' name='NSURLErrorCannotCreateFile'/>
<enum value='-1016' name='NSURLErrorCannotDecodeContentData'/>
<enum value='-1015' name='NSURLErrorCannotDecodeRawData'/>
<enum value='-1003' name='NSURLErrorCannotFindHost'/>
<enum value='-2000' name='NSURLErrorCannotLoadFromNetwork'/>
<enum value='-3005' name='NSURLErrorCannotMoveFile'/>
<enum value='-3001' name='NSURLErrorCannotOpenFile'/>
<enum value='-1017' name='NSURLErrorCannotParseResponse'/>
<enum value='-3004' name='NSURLErrorCannotRemoveFile'/>
<enum value='-3003' name='NSURLErrorCannotWriteToFile'/>
<enum value='-1205' name='NSURLErrorClientCertificateRejected'/>
<enum value='-1206' name='NSURLErrorClientCertificateRequired'/>
<enum value='-1006' name='NSURLErrorDNSLookupFailed'/>
<enum value='-1103' name='NSURLErrorDataLengthExceedsMaximum'/>
<enum value='-1020' name='NSURLErrorDataNotAllowed'/>
<enum value='-3006' name='NSURLErrorDownloadDecodingFailedMidStream'/>
<enum value='-3007' name='NSURLErrorDownloadDecodingFailedToComplete'/>
<enum value='-1100' name='NSURLErrorFileDoesNotExist'/>
<enum value='-1101' name='NSURLErrorFileIsDirectory'/>
<enum value='-1007' name='NSURLErrorHTTPTooManyRedirects'/>
<enum value='-1018' name='NSURLErrorInternationalRoamingOff'/>
<enum value='-1005' name='NSURLErrorNetworkConnectionLost'/>
<enum value='-1102' name='NSURLErrorNoPermissionsToReadFile'/>
<enum value='-1009' name='NSURLErrorNotConnectedToInternet'/>
<enum value='-1010' name='NSURLErrorRedirectToNonExistentLocation'/>
<enum value='-1021' name='NSURLErrorRequestBodyStreamExhausted'/>
<enum value='-1008' name='NSURLErrorResourceUnavailable'/>
<enum value='-1200' name='NSURLErrorSecureConnectionFailed'/>
<enum value='-1201' name='NSURLErrorServerCertificateHasBadDate'/>
<enum value='-1203' name='NSURLErrorServerCertificateHasUnknownRoot'/>
<enum value='-1204' name='NSURLErrorServerCertificateNotYetValid'/>
<enum value='-1202' name='NSURLErrorServerCertificateUntrusted'/>
<enum value='-1001' name='NSURLErrorTimedOut'/>
<enum value='-1' name='NSURLErrorUnknown'/>
<enum value='-1002' name='NSURLErrorUnsupportedURL'/>
<enum value='-1013' name='NSURLErrorUserAuthenticationRequired'/>
<enum value='-1012' name='NSURLErrorUserCancelledAuthentication'/>
<enum value='-1014' name='NSURLErrorZeroByteResource'/>
<enum value='3' name='NSURLHandleLoadFailed'/>
<enum value='2' name='NSURLHandleLoadInProgress'/>
<enum value='1' name='NSURLHandleLoadSucceeded'/>
<enum value='0' name='NSURLHandleNotLoaded'/>
<enum value='3' name='NSURLNetworkServiceTypeBackground'/>
<enum value='0' name='NSURLNetworkServiceTypeDefault'/>
<enum value='2' name='NSURLNetworkServiceTypeVideo'/>
<enum value='1' name='NSURLNetworkServiceTypeVoIP'/>
<enum value='4' name='NSURLNetworkServiceTypeVoice'/>
<enum value='1' name='NSURLRequestReloadIgnoringCacheData'/>
<enum value='4' name='NSURLRequestReloadIgnoringLocalAndRemoteCacheData'/>
<enum value='1' name='NSURLRequestReloadIgnoringLocalCacheData'/>
<enum value='5' name='NSURLRequestReloadRevalidatingCacheData'/>
<enum value='3' name='NSURLRequestReturnCacheDataDontLoad'/>
<enum value='2' name='NSURLRequestReturnCacheDataElseLoad'/>
<enum value='0' name='NSURLRequestUseProtocolCachePolicy'/>
<enum value='-1' name='NSURLResponseUnknownLength'/>
<enum value='2415919360' name='NSUTF16BigEndianStringEncoding'/>
<enum value='2483028224' name='NSUTF16LittleEndianStringEncoding'/>
<enum value='10' name='NSUTF16StringEncoding'/>
<enum value='2550137088' name='NSUTF32BigEndianStringEncoding'/>
<enum value='2617245952' name='NSUTF32LittleEndianStringEncoding'/>
<enum value='2348810496' name='NSUTF32StringEncoding'/>
<enum value='4' name='NSUTF8StringEncoding'/>
<enum value='3' name='NSUbiquitousKeyValueStoreAccountChange'/>
<enum value='1' name='NSUbiquitousKeyValueStoreInitialSyncChange'/>
<enum value='2' name='NSUbiquitousKeyValueStoreQuotaViolationChange'/>
<enum value='0' name='NSUbiquitousKeyValueStoreServerChange'/>
<enum value='2' name='NSUncachedRead'/>
<enum value='2147483647' value64='9223372036854775807' name='NSUndefinedDateComponent'/>
<enum value='350000' name='NSUndoCloseGroupingRunLoopOrdering'/>
<enum value='10' name='NSUnicodeStringEncoding'/>
<enum value='5' name='NSUnionSetExpressionType'/>
<enum value='7' name='NSUnknownKeyScriptError'/>
<enum value='3' name='NSUnknownKeySpecifierError'/>
<enum value='3072' name='NSUserCancelledError'/>
<enum value='7' name='NSUserDirectory'/>
<enum value='1' name='NSUserDomainMask'/>
<enum value='2' name='NSUserNotificationActivationTypeActionButtonClicked'/>
<enum value='1' name='NSUserNotificationActivationTypeContentsClicked'/>
<enum value='0' name='NSUserNotificationActivationTypeNone'/>
<enum value='2047' name='NSValidationErrorMaximum'/>
<enum value='1024' name='NSValidationErrorMinimum'/>
<enum value='2' name='NSVariableExpressionType'/>
<enum value='4' name='NSVolumeEnumerationProduceFileReferenceURLs'/>
<enum value='2' name='NSVolumeEnumerationSkipHiddenVolumes'/>
<enum value='256' name='NSWeekCalendarUnit'/>
<enum value='4096' name='NSWeekOfMonthCalendarUnit'/>
<enum value='8192' name='NSWeekOfYearCalendarUnit'/>
<enum value='512' name='NSWeekdayCalendarUnit'/>
<enum value='1024' name='NSWeekdayOrdinalCalendarUnit'/>
<enum value='256' name='NSWidthInsensitiveSearch'/>
<enum value='2' name='NSWindows95OperatingSystem'/>
<enum value='15' name='NSWindowsCP1250StringEncoding'/>
<enum value='11' name='NSWindowsCP1251StringEncoding'/>
<enum value='12' name='NSWindowsCP1252StringEncoding'/>
<enum value='13' name='NSWindowsCP1253StringEncoding'/>
<enum value='14' name='NSWindowsCP1254StringEncoding'/>
<enum value='1' name='NSWindowsNTOperatingSystem'/>
<enum value='1' name='NSWrapCalendarComponents'/>
<enum value='6' name='NSXMLAttributeCDATAKind'/>
<enum value='10' name='NSXMLAttributeDeclarationKind'/>
<enum value='11' name='NSXMLAttributeEntitiesKind'/>
<enum value='10' name='NSXMLAttributeEntityKind'/>
<enum value='14' name='NSXMLAttributeEnumerationKind'/>
<enum value='7' name='NSXMLAttributeIDKind'/>
<enum value='8' name='NSXMLAttributeIDRefKind'/>
<enum value='9' name='NSXMLAttributeIDRefsKind'/>
<enum value='3' name='NSXMLAttributeKind'/>
<enum value='12' name='NSXMLAttributeNMTokenKind'/>
<enum value='13' name='NSXMLAttributeNMTokensKind'/>
<enum value='15' name='NSXMLAttributeNotationKind'/>
<enum value='6' name='NSXMLCommentKind'/>
<enum value='8' name='NSXMLDTDKind'/>
<enum value='2' name='NSXMLDocumentHTMLKind'/>
<enum value='262144' name='NSXMLDocumentIncludeContentTypeDeclaration'/>
<enum value='1' name='NSXMLDocumentKind'/>
<enum value='3' name='NSXMLDocumentTextKind'/>
<enum value='512' name='NSXMLDocumentTidyHTML'/>
<enum value='1024' name='NSXMLDocumentTidyXML'/>
<enum value='8192' name='NSXMLDocumentValidate'/>
<enum value='1' name='NSXMLDocumentXHTMLKind'/>
<enum value='65536' name='NSXMLDocumentXInclude'/>
<enum value='0' name='NSXMLDocumentXMLKind'/>
<enum value='18' name='NSXMLElementDeclarationAnyKind'/>
<enum value='20' name='NSXMLElementDeclarationElementKind'/>
<enum value='17' name='NSXMLElementDeclarationEmptyKind'/>
<enum value='11' name='NSXMLElementDeclarationKind'/>
<enum value='19' name='NSXMLElementDeclarationMixedKind'/>
<enum value='16' name='NSXMLElementDeclarationUndefinedKind'/>
<enum value='2' name='NSXMLElementKind'/>
<enum value='9' name='NSXMLEntityDeclarationKind'/>
<enum value='1' name='NSXMLEntityGeneralKind'/>
<enum value='4' name='NSXMLEntityParameterKind'/>
<enum value='2' name='NSXMLEntityParsedKind'/>
<enum value='5' name='NSXMLEntityPredefined'/>
<enum value='3' name='NSXMLEntityUnparsedKind'/>
<enum value='0' name='NSXMLInvalidKind'/>
<enum value='4' name='NSXMLNamespaceKind'/>
<enum value='4' name='NSXMLNodeCompactEmptyElement'/>
<enum value='2' name='NSXMLNodeExpandEmptyElement'/>
<enum value='1' name='NSXMLNodeIsCDATA'/>
<enum value='16384' name='NSXMLNodeLoadExternalEntitiesAlways'/>
<enum value='524288' name='NSXMLNodeLoadExternalEntitiesNever'/>
<enum value='32768' name='NSXMLNodeLoadExternalEntitiesSameOriginOnly'/>
<enum value='0' name='NSXMLNodeOptionsNone'/>
<enum value='4293918750' name='NSXMLNodePreserveAll'/>
<enum value='2097152' name='NSXMLNodePreserveAttributeOrder'/>
<enum value='16777216' name='NSXMLNodePreserveCDATA'/>
<enum value='134217728' name='NSXMLNodePreserveCharacterReferences'/>
<enum value='67108864' name='NSXMLNodePreserveDTD'/>
<enum value='6' name='NSXMLNodePreserveEmptyElements'/>
<enum value='4194304' name='NSXMLNodePreserveEntities'/>
<enum value='1048576' name='NSXMLNodePreserveNamespaceOrder'/>
<enum value='8388608' name='NSXMLNodePreservePrefixes'/>
<enum value='24' name='NSXMLNodePreserveQuotes'/>
<enum value='33554432' name='NSXMLNodePreserveWhitespace'/>
<enum value='131072' name='NSXMLNodePrettyPrint'/>
<enum value='16' name='NSXMLNodeUseDoubleQuotes'/>
<enum value='8' name='NSXMLNodeUseSingleQuotes'/>
<enum value='12' name='NSXMLNotationDeclarationKind'/>
<enum value='41' name='NSXMLParserAttributeHasNoValueError'/>
<enum value='51' name='NSXMLParserAttributeListNotFinishedError'/>
<enum value='50' name='NSXMLParserAttributeListNotStartedError'/>
<enum value='40' name='NSXMLParserAttributeNotFinishedError'/>
<enum value='39' name='NSXMLParserAttributeNotStartedError'/>
<enum value='42' name='NSXMLParserAttributeRedefinedError'/>
<enum value='63' name='NSXMLParserCDATANotFinishedError'/>
<enum value='10' name='NSXMLParserCharacterRefAtEOFError'/>
<enum value='13' name='NSXMLParserCharacterRefInDTDError'/>
<enum value='12' name='NSXMLParserCharacterRefInEpilogError'/>
<enum value='11' name='NSXMLParserCharacterRefInPrologError'/>
<enum value='80' name='NSXMLParserCommentContainsDoubleHyphenError'/>
<enum value='45' name='NSXMLParserCommentNotFinishedError'/>
<enum value='59' name='NSXMLParserConditionalSectionNotFinishedError'/>
<enum value='58' name='NSXMLParserConditionalSectionNotStartedError'/>
<enum value='61' name='NSXMLParserDOCTYPEDeclNotFinishedError'/>
<enum value='512' name='NSXMLParserDelegateAbortedParseError'/>
<enum value='3' name='NSXMLParserDocumentStartError'/>
<enum value='55' name='NSXMLParserElementContentDeclNotFinishedError'/>
<enum value='54' name='NSXMLParserElementContentDeclNotStartedError'/>
<enum value='4' name='NSXMLParserEmptyDocumentError'/>
<enum value='32' name='NSXMLParserEncodingNotSupportedError'/>
<enum value='90' name='NSXMLParserEntityBoundaryError'/>
<enum value='29' name='NSXMLParserEntityIsExternalError'/>
<enum value='30' name='NSXMLParserEntityIsParameterError'/>
<enum value='37' name='NSXMLParserEntityNotFinishedError'/>
<enum value='36' name='NSXMLParserEntityNotStartedError'/>
<enum value='14' name='NSXMLParserEntityRefAtEOFError'/>
<enum value='17' name='NSXMLParserEntityRefInDTDError'/>
<enum value='16' name='NSXMLParserEntityRefInEpilogError'/>
<enum value='15' name='NSXMLParserEntityRefInPrologError'/>
<enum value='89' name='NSXMLParserEntityRefLoopError'/>
<enum value='23' name='NSXMLParserEntityReferenceMissingSemiError'/>
<enum value='22' name='NSXMLParserEntityReferenceWithoutNameError'/>
<enum value='84' name='NSXMLParserEntityValueRequiredError'/>
<enum value='75' name='NSXMLParserEqualExpectedError'/>
<enum value='82' name='NSXMLParserExternalStandaloneEntityError'/>
<enum value='60' name='NSXMLParserExternalSubsetNotFinishedError'/>
<enum value='86' name='NSXMLParserExtraContentError'/>
<enum value='73' name='NSXMLParserGTRequiredError'/>
<enum value='1' name='NSXMLParserInternalError'/>
<enum value='9' name='NSXMLParserInvalidCharacterError'/>
<enum value='87' name='NSXMLParserInvalidCharacterInEntityError'/>
<enum value='8' name='NSXMLParserInvalidCharacterRefError'/>
<enum value='83' name='NSXMLParserInvalidConditionalSectionError'/>
<enum value='7' name='NSXMLParserInvalidDecimalCharacterRefError'/>
<enum value='81' name='NSXMLParserInvalidEncodingError'/>
<enum value='79' name='NSXMLParserInvalidEncodingNameError'/>
<enum value='6' name='NSXMLParserInvalidHexCharacterRefError'/>
<enum value='91' name='NSXMLParserInvalidURIError'/>
<enum value='72' name='NSXMLParserLTRequiredError'/>
<enum value='74' name='NSXMLParserLTSlashRequiredError'/>
<enum value='38' name='NSXMLParserLessThanSymbolInAttributeError'/>
<enum value='44' name='NSXMLParserLiteralNotFinishedError'/>
<enum value='43' name='NSXMLParserLiteralNotStartedError'/>
<enum value='62' name='NSXMLParserMisplacedCDATAEndStringError'/>
<enum value='64' name='NSXMLParserMisplacedXMLDeclarationError'/>
<enum value='53' name='NSXMLParserMixedContentDeclNotFinishedError'/>
<enum value='52' name='NSXMLParserMixedContentDeclNotStartedError'/>
<enum value='68' name='NSXMLParserNAMERequiredError'/>
<enum value='67' name='NSXMLParserNMTOKENRequiredError'/>
<enum value='35' name='NSXMLParserNamespaceDeclarationError'/>
<enum value='94' name='NSXMLParserNoDTDError'/>
<enum value='85' name='NSXMLParserNotWellBalancedError'/>
<enum value='49' name='NSXMLParserNotationNotFinishedError'/>
<enum value='48' name='NSXMLParserNotationNotStartedError'/>
<enum value='2' name='NSXMLParserOutOfMemoryError'/>
<enum value='69' name='NSXMLParserPCDATARequiredError'/>
<enum value='18' name='NSXMLParserParsedEntityRefAtEOFError'/>
<enum value='20' name='NSXMLParserParsedEntityRefInEpilogError'/>
<enum value='88' name='NSXMLParserParsedEntityRefInInternalError'/>
<enum value='21' name='NSXMLParserParsedEntityRefInInternalSubsetError'/>
<enum value='19' name='NSXMLParserParsedEntityRefInPrologError'/>
<enum value='25' name='NSXMLParserParsedEntityRefMissingSemiError'/>
<enum value='24' name='NSXMLParserParsedEntityRefNoNameError'/>
<enum value='5' name='NSXMLParserPrematureDocumentEndError'/>
<enum value='47' name='NSXMLParserProcessingInstructionNotFinishedError'/>
<enum value='46' name='NSXMLParserProcessingInstructionNotStartedError'/>
<enum value='71' name='NSXMLParserPublicIdentifierRequiredError'/>
<enum value='66' name='NSXMLParserSeparatorRequiredError'/>
<enum value='65' name='NSXMLParserSpaceRequiredError'/>
<enum value='78' name='NSXMLParserStandaloneValueError'/>
<enum value='34' name='NSXMLParserStringNotClosedError'/>
<enum value='33' name='NSXMLParserStringNotStartedError'/>
<enum value='76' name='NSXMLParserTagNameMismatchError'/>
<enum value='92' name='NSXMLParserURIFragmentError'/>
<enum value='70' name='NSXMLParserURIRequiredError'/>
<enum value='26' name='NSXMLParserUndeclaredEntityError'/>
<enum value='77' name='NSXMLParserUnfinishedTagError'/>
<enum value='31' name='NSXMLParserUnknownEncodingError'/>
<enum value='28' name='NSXMLParserUnparsedEntityError'/>
<enum value='57' name='NSXMLParserXMLDeclNotFinishedError'/>
<enum value='56' name='NSXMLParserXMLDeclNotStartedError'/>
<enum value='5' name='NSXMLProcessingInstructionKind'/>
<enum value='7' name='NSXMLTextKind'/>
<enum value='4224' name='NSXPCConnectionErrorMaximum'/>
<enum value='4096' name='NSXPCConnectionErrorMinimum'/>
<enum value='4097' name='NSXPCConnectionInterrupted'/>
<enum value='4099' name='NSXPCConnectionInvalid'/>
<enum value='4096' name='NSXPCConnectionPrivileged'/>
<enum value='4101' name='NSXPCConnectionReplyInvalid'/>
<enum value='4' name='NSYearCalendarUnit'/>
<enum value='16384' name='NSYearForWeekOfYearCalendarUnit'/>
<enum value='1' name='NS_BLOCKS_AVAILABLE'/>
<enum value='2' name='NS_BigEndian'/>
<enum value='1' name='NS_LittleEndian'/>
<enum value='0' name='NS_UNICHAR_IS_EIGHT_BIT'/>
<enum value='0' name='NS_UnknownByteOrder'/>
<function inline='true' name='CFBridgingRelease'>
<arg type='@' name='X' declared_type='CFTypeRef'/>
<retval type='@' declared_type='id'/>
</function>
<function inline='true' name='CFBridgingRetain'>
<arg type='@' name='X' declared_type='id'/>
<retval type='@' declared_type='CFTypeRef'/>
</function>
<function name='NSAllHashTableObjects'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSAllMapTableKeys'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSAllMapTableValues'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSAllocateCollectable'>
<arg type='I' type64='Q' name='size' declared_type='NSUInteger'/>
<arg type='I' type64='Q' name='options' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSAllocateMemoryPages'>
<arg type='I' type64='Q' name='bytes' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSAllocateObject'>
<arg type='#' name='aClass' declared_type='Class'/>
<arg type='I' type64='Q' name='extraBytes' declared_type='NSUInteger'/>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSClassFromString'>
<arg type='@' name='aClassName' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</function>
<function name='NSCompareHashTables'>
<arg type='@' name='table1' declared_type='NSHashTable*'/>
<arg type='@' name='table2' declared_type='NSHashTable*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSCompareMapTables'>
<arg type='@' name='table1' declared_type='NSMapTable*'/>
<arg type='@' name='table2' declared_type='NSMapTable*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSContainsRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='bRect' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function inline='true' name='NSConvertHostDoubleToSwapped'>
<arg type='d' name='x' declared_type='double'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function inline='true' name='NSConvertHostFloatToSwapped'>
<arg type='f' name='x' declared_type='float'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function inline='true' name='NSConvertSwappedDoubleToHost'>
<arg type='{_NSSwappedDouble=Q}' name='x' declared_type='NSSwappedDouble'/>
<retval type='d' declared_type='double'/>
</function>
<function inline='true' name='NSConvertSwappedFloatToHost'>
<arg type='{_NSSwappedFloat=I}' name='x' declared_type='NSSwappedFloat'/>
<retval type='f' declared_type='float'/>
</function>
<function name='NSCopyHashTableWithZone'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='NSHashTable*'/>
</function>
<function name='NSCopyMapTableWithZone'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='NSMapTable*'/>
</function>
<function name='NSCopyMemoryPages'>
<arg type='^v' const='true' name='source' declared_type='void*'/>
<arg type='^v' name='dest' declared_type='void*'/>
<arg type='I' type64='Q' name='bytes' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSCopyObject'>
<arg type='@' name='object' declared_type='id'/>
<arg type='I' type64='Q' name='extraBytes' declared_type='NSUInteger'/>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSCountFrames'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</function>
<function name='NSCountHashTable'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</function>
<function name='NSCountMapTable'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</function>
<function name='NSCreateHashTable'>
<arg type='{_NSHashTableCallBacks=^?^?^?^?^?}' name='callBacks' declared_type='NSHashTableCallBacks'/>
<arg type='I' type64='Q' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSHashTable*'/>
</function>
<function name='NSCreateHashTableWithZone'>
<arg type='{_NSHashTableCallBacks=^?^?^?^?^?}' name='callBacks' declared_type='NSHashTableCallBacks'/>
<arg type='I' type64='Q' name='capacity' declared_type='NSUInteger'/>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='NSHashTable*'/>
</function>
<function name='NSCreateMapTable'>
<arg type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' name='keyCallBacks' declared_type='NSMapTableKeyCallBacks'/>
<arg type='{_NSMapTableValueCallBacks=^?^?^?}' name='valueCallBacks' declared_type='NSMapTableValueCallBacks'/>
<arg type='I' type64='Q' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSMapTable*'/>
</function>
<function name='NSCreateMapTableWithZone'>
<arg type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' name='keyCallBacks' declared_type='NSMapTableKeyCallBacks'/>
<arg type='{_NSMapTableValueCallBacks=^?^?^?}' name='valueCallBacks' declared_type='NSMapTableValueCallBacks'/>
<arg type='I' type64='Q' name='capacity' declared_type='NSUInteger'/>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='NSMapTable*'/>
</function>
<function name='NSCreateZone'>
<arg type='I' type64='Q' name='startSize' declared_type='NSUInteger'/>
<arg type='I' type64='Q' name='granularity' declared_type='NSUInteger'/>
<arg type='B' name='canFree' declared_type='BOOL'/>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</function>
<function name='NSDeallocateMemoryPages'>
<arg type='^v' name='ptr' declared_type='void*'/>
<arg type='I' type64='Q' name='bytes' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDeallocateObject'>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalAdd'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='leftOperand' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='rightOperand' declared_type='NSDecimal*'/>
<arg type='I' type64='Q' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' type64='Q' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalCompact'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='number' declared_type='NSDecimal*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalCompare'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='leftOperand' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='rightOperand' declared_type='NSDecimal*'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</function>
<function name='NSDecimalCopy'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='destination' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='source' declared_type='NSDecimal*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalDivide'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='leftOperand' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='rightOperand' declared_type='NSDecimal*'/>
<arg type='I' type64='Q' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' type64='Q' declared_type='NSCalculationError'/>
</function>
<function inline='true' name='NSDecimalIsNotANumber'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='dcm' declared_type='NSDecimal*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSDecimalMultiply'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='leftOperand' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='rightOperand' declared_type='NSDecimal*'/>
<arg type='I' type64='Q' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' type64='Q' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalMultiplyByPowerOf10'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='number' declared_type='NSDecimal*'/>
<arg type='s' name='power' declared_type='short'/>
<arg type='I' type64='Q' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' type64='Q' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalNormalize'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='number1' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='number2' declared_type='NSDecimal*'/>
<arg type='I' type64='Q' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' type64='Q' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalPower'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='number' declared_type='NSDecimal*'/>
<arg type='I' type64='Q' name='power' declared_type='NSUInteger'/>
<arg type='I' type64='Q' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' type64='Q' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalRound'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='number' declared_type='NSDecimal*'/>
<arg type='i' type64='q' name='scale' declared_type='NSInteger'/>
<arg type='I' type64='Q' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalString'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='dcm' declared_type='NSDecimal*'/>
<arg type='@' name='locale' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSDecimalSubtract'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='result' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='leftOperand' declared_type='NSDecimal*'/>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' const='true' name='rightOperand' declared_type='NSDecimal*'/>
<arg type='I' type64='Q' name='roundingMode' declared_type='NSRoundingMode'/>
<retval type='I' type64='Q' declared_type='NSCalculationError'/>
</function>
<function name='NSDecrementExtraRefCountWasZero'>
<arg type='@' name='object' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSDefaultMallocZone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</function>
<function name='NSDivideRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='inRect' declared_type='NSRect'/>
<arg type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' name='slice' declared_type='NSRect*'/>
<arg type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' name='rem' declared_type='NSRect*'/>
<arg type='f' type64='d' name='amount' declared_type='CGFloat'/>
<arg type='i' type64='Q' name='edge' declared_type='NSRectEdge'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSEndHashTableEnumeration'>
<arg type='^{_NSHashEnumerator=II^v}' type64='^{_NSHashEnumerator=QQ^v}' name='enumerator' declared_type='NSHashEnumerator*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSEndMapTableEnumeration'>
<arg type='^{_NSMapEnumerator=II^v}' type64='^{_NSMapEnumerator=QQ^v}' name='enumerator' declared_type='NSMapEnumerator*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSEnumerateHashTable'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<retval type='{_NSHashEnumerator=II^v}' type64='{_NSHashEnumerator=QQ^v}' declared_type='NSHashEnumerator'/>
</function>
<function name='NSEnumerateMapTable'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<retval type='{_NSMapEnumerator=II^v}' type64='{_NSMapEnumerator=QQ^v}' declared_type='NSMapEnumerator'/>
</function>
<function name='NSEqualPoints'>
<arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' name='aPoint' declared_type='NSPoint'/>
<arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' name='bPoint' declared_type='NSPoint'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function inline='true' name='NSEqualRanges'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range1' declared_type='NSRange'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range2' declared_type='NSRange'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSEqualRects'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='bRect' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSEqualSizes'>
<arg type='{_NSSize=ff}' type64='{CGSize=dd}' name='aSize' declared_type='NSSize'/>
<arg type='{_NSSize=ff}' type64='{CGSize=dd}' name='bSize' declared_type='NSSize'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSExtraRefCount'>
<arg type='@' name='object' declared_type='id'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</function>
<function name='NSFileTypeForHFSTypeCode'>
<arg type='L' type64='I' name='hfsFileTypeCode' declared_type='OSType'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSFrameAddress'>
<arg type='I' type64='Q' name='frame' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSFreeHashTable'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSFreeMapTable'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSFullUserName'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSGetSizeAndAlignment'>
<arg type='*' const='true' name='typePtr' declared_type='char*'/>
<arg type='^I' type64='^Q' name='sizep' declared_type='NSUInteger*'/>
<arg type='^I' type64='^Q' name='alignp' declared_type='NSUInteger*'/>
<retval type='*' const='true' declared_type='char*'/>
</function>
<function name='NSGetUncaughtExceptionHandler'>
<retval type='^?' function_pointer='true' declared_type='NSUncaughtExceptionHandler*'>
<arg type='@' declared_type='NSException*'/>
<retval type='v' declared_type='void'/>
</retval>
</function>
<function name='NSHFSTypeCodeFromFileType'>
<arg type='@' name='fileTypeString' declared_type='NSString*'/>
<retval type='L' type64='I' declared_type='OSType'/>
</function>
<function name='NSHFSTypeOfFile'>
<arg type='@' name='fullFilePath' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSHashGet'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<arg type='^v' const='true' name='pointer' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSHashInsert'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<arg type='^v' const='true' name='pointer' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSHashInsertIfAbsent'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<arg type='^v' const='true' name='pointer' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSHashInsertKnownAbsent'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<arg type='^v' const='true' name='pointer' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSHashRemove'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<arg type='^v' const='true' name='pointer' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function inline='true' name='NSHeight'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='f' type64='d' declared_type='CGFloat'/>
</function>
<function name='NSHomeDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSHomeDirectoryForUser'>
<arg type='@' name='userName' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function inline='true' name='NSHostByteOrder'>
<retval type='l' type64='q' declared_type='long'/>
</function>
<function name='NSIncrementExtraRefCount'>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSInsetRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<arg type='f' type64='d' name='dX' declared_type='CGFloat'/>
<arg type='f' type64='d' name='dY' declared_type='CGFloat'/>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</function>
<function name='NSIntegralRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</function>
<function name='NSIntegralRectWithOptions'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<arg type='Q' name='opts' declared_type='NSAlignmentOptions'/>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</function>
<function name='NSIntersectionRange'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range1' declared_type='NSRange'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range2' declared_type='NSRange'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</function>
<function name='NSIntersectionRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='bRect' declared_type='NSRect'/>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</function>
<function name='NSIntersectsRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='bRect' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSIsEmptyRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSIsFreedObject'>
<arg type='@' name='anObject' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function inline='true' name='NSLocationInRange'>
<arg type='I' type64='Q' name='loc' declared_type='NSUInteger'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSLog' variadic='true'>
<arg printf_format='true' type='@' name='format' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSLogPageSize'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</function>
<function name='NSLogv'>
<arg printf_format='true' type='@' name='format' declared_type='NSString*'/>
<arg type='*' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' name='args' declared_type='va_list'/>
<retval type='v' declared_type='void'/>
</function>
<function inline='true' name='NSMakeCollectable'>
<arg type='@' name='cf' declared_type='CFTypeRef'/>
<retval type='@' declared_type='id'/>
</function>
<function inline='true' name='NSMakePoint'>
<arg type='f' type64='d' name='x' declared_type='CGFloat'/>
<arg type='f' type64='d' name='y' declared_type='CGFloat'/>
<retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' declared_type='NSPoint'/>
</function>
<function inline='true' name='NSMakeRange'>
<arg type='I' type64='Q' name='loc' declared_type='NSUInteger'/>
<arg type='I' type64='Q' name='len' declared_type='NSUInteger'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</function>
<function inline='true' name='NSMakeRect'>
<arg type='f' type64='d' name='x' declared_type='CGFloat'/>
<arg type='f' type64='d' name='y' declared_type='CGFloat'/>
<arg type='f' type64='d' name='w' declared_type='CGFloat'/>
<arg type='f' type64='d' name='h' declared_type='CGFloat'/>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</function>
<function inline='true' name='NSMakeSize'>
<arg type='f' type64='d' name='w' declared_type='CGFloat'/>
<arg type='f' type64='d' name='h' declared_type='CGFloat'/>
<retval type='{_NSSize=ff}' type64='{CGSize=dd}' declared_type='NSSize'/>
</function>
<function name='NSMapGet'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<arg type='^v' const='true' name='key' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSMapInsert'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<arg type='^v' const='true' name='key' declared_type='void*'/>
<arg type='^v' const='true' name='value' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSMapInsertIfAbsent'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<arg type='^v' const='true' name='key' declared_type='void*'/>
<arg type='^v' const='true' name='value' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSMapInsertKnownAbsent'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<arg type='^v' const='true' name='key' declared_type='void*'/>
<arg type='^v' const='true' name='value' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSMapMember'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<arg type='^v' const='true' name='key' declared_type='void*'/>
<arg type='^^v' name='originalKey' declared_type='void**'/>
<arg type='^^v' name='value' declared_type='void**'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSMapRemove'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<arg type='^v' const='true' name='key' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function inline='true' name='NSMaxRange'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</function>
<function inline='true' name='NSMaxX'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='f' type64='d' declared_type='CGFloat'/>
</function>
<function inline='true' name='NSMaxY'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='f' type64='d' declared_type='CGFloat'/>
</function>
<function inline='true' name='NSMidX'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='f' type64='d' declared_type='CGFloat'/>
</function>
<function inline='true' name='NSMidY'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='f' type64='d' declared_type='CGFloat'/>
</function>
<function inline='true' name='NSMinX'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='f' type64='d' declared_type='CGFloat'/>
</function>
<function inline='true' name='NSMinY'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='f' type64='d' declared_type='CGFloat'/>
</function>
<function name='NSMouseInRect'>
<arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' name='aPoint' declared_type='NSPoint'/>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<arg type='B' name='flipped' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSNextHashEnumeratorItem'>
<arg type='^{_NSHashEnumerator=II^v}' type64='^{_NSHashEnumerator=QQ^v}' name='enumerator' declared_type='NSHashEnumerator*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSNextMapEnumeratorPair'>
<arg type='^{_NSMapEnumerator=II^v}' type64='^{_NSMapEnumerator=QQ^v}' name='enumerator' declared_type='NSMapEnumerator*'/>
<arg type='^^v' name='key' declared_type='void**'/>
<arg type='^^v' name='value' declared_type='void**'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSOffsetRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<arg type='f' type64='d' name='dX' declared_type='CGFloat'/>
<arg type='f' type64='d' name='dY' declared_type='CGFloat'/>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</function>
<function name='NSOpenStepRootDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSPageSize'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</function>
<function inline='true' name='NSPointFromCGPoint'>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}' name='cgpoint' declared_type='CGPoint'/>
<retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' declared_type='NSPoint'/>
</function>
<function name='NSPointFromString'>
<arg type='@' name='aString' declared_type='NSString*'/>
<retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' declared_type='NSPoint'/>
</function>
<function name='NSPointInRect'>
<arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' name='aPoint' declared_type='NSPoint'/>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function inline='true' name='NSPointToCGPoint'>
<arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' name='nspoint' declared_type='NSPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</function>
<function name='NSProtocolFromString'>
<arg type='@' name='namestr' declared_type='NSString*'/>
<retval type='@' declared_type='Protocol*'/>
</function>
<function name='NSRangeFromString'>
<arg type='@' name='aString' declared_type='NSString*'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</function>
<function name='NSRealMemoryAvailable'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</function>
<function name='NSReallocateCollectable'>
<arg type='^v' name='ptr' declared_type='void*'/>
<arg type='I' type64='Q' name='size' declared_type='NSUInteger'/>
<arg type='I' type64='Q' name='options' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSRecordAllocationEvent'>
<arg type='i' name='eventType' declared_type='int'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function inline='true' name='NSRectFromCGRect'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='cgrect' declared_type='CGRect'/>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</function>
<function name='NSRectFromString'>
<arg type='@' name='aString' declared_type='NSString*'/>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</function>
<function inline='true' name='NSRectToCGRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='nsrect' declared_type='NSRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect'/>
</function>
<function name='NSRecycleZone'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSResetHashTable'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSResetMapTable'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSReturnAddress'>
<arg type='I' type64='Q' name='frame' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSRoundDownToMultipleOfPageSize'>
<arg type='I' type64='Q' name='bytes' declared_type='NSUInteger'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</function>
<function name='NSRoundUpToMultipleOfPageSize'>
<arg type='I' type64='Q' name='bytes' declared_type='NSUInteger'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</function>
<function name='NSSearchPathForDirectoriesInDomains'>
<arg type='I' type64='Q' name='directory' declared_type='NSSearchPathDirectory'/>
<arg type='I' type64='Q' name='domainMask' declared_type='NSSearchPathDomainMask'/>
<arg type='B' name='expandTilde' declared_type='BOOL'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSSelectorFromString'>
<arg type='@' name='aSelectorName' declared_type='NSString*'/>
<retval type=':' declared_type='SEL'/>
</function>
<function name='NSSetUncaughtExceptionHandler'>
<arg type='^?' function_pointer='true' declared_type='NSUncaughtExceptionHandler*'>
<arg type='@' declared_type='NSException*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='NSSetZoneName'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<arg type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSShouldRetainWithZone'>
<arg type='@' name='anObject' declared_type='id'/>
<arg type='^{_NSZone=}' name='requestedZone' declared_type='NSZone*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function inline='true' name='NSSizeFromCGSize'>
<arg type='{CGSize=ff}' type64='{CGSize=dd}' name='cgsize' declared_type='CGSize'/>
<retval type='{_NSSize=ff}' type64='{CGSize=dd}' declared_type='NSSize'/>
</function>
<function name='NSSizeFromString'>
<arg type='@' name='aString' declared_type='NSString*'/>
<retval type='{_NSSize=ff}' type64='{CGSize=dd}' declared_type='NSSize'/>
</function>
<function inline='true' name='NSSizeToCGSize'>
<arg type='{_NSSize=ff}' type64='{CGSize=dd}' name='nssize' declared_type='NSSize'/>
<retval type='{CGSize=ff}' type64='{CGSize=dd}' declared_type='CGSize'/>
</function>
<function name='NSStringFromClass'>
<arg type='#' name='aClass' declared_type='Class'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromHashTable'>
<arg type='@' name='table' declared_type='NSHashTable*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromMapTable'>
<arg type='@' name='table' declared_type='NSMapTable*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromPoint'>
<arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' name='aPoint' declared_type='NSPoint'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromProtocol'>
<arg type='@' name='proto' declared_type='Protocol*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromRange'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromSelector'>
<arg type=':' name='aSelector' declared_type='SEL'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromSize'>
<arg type='{_NSSize=ff}' type64='{CGSize=dd}' name='aSize' declared_type='NSSize'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function inline='true' name='NSSwapBigDoubleToHost'>
<arg type='{_NSSwappedDouble=Q}' name='x' declared_type='NSSwappedDouble'/>
<retval type='d' declared_type='double'/>
</function>
<function inline='true' name='NSSwapBigFloatToHost'>
<arg type='{_NSSwappedFloat=I}' name='x' declared_type='NSSwappedFloat'/>
<retval type='f' declared_type='float'/>
</function>
<function inline='true' name='NSSwapBigIntToHost'>
<arg type='I' name='x' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function inline='true' name='NSSwapBigLongLongToHost'>
<arg type='Q' name='x' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function inline='true' name='NSSwapBigLongToHost'>
<arg type='L' type64='Q' name='x' declared_type='unsigned long'/>
<retval type='L' type64='Q' declared_type='unsigned long'/>
</function>
<function inline='true' name='NSSwapBigShortToHost'>
<arg type='S' name='x' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function inline='true' name='NSSwapDouble'>
<arg type='{_NSSwappedDouble=Q}' name='x' declared_type='NSSwappedDouble'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function inline='true' name='NSSwapFloat'>
<arg type='{_NSSwappedFloat=I}' name='x' declared_type='NSSwappedFloat'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function inline='true' name='NSSwapHostDoubleToBig'>
<arg type='d' name='x' declared_type='double'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function inline='true' name='NSSwapHostDoubleToLittle'>
<arg type='d' name='x' declared_type='double'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function inline='true' name='NSSwapHostFloatToBig'>
<arg type='f' name='x' declared_type='float'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function inline='true' name='NSSwapHostFloatToLittle'>
<arg type='f' name='x' declared_type='float'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function inline='true' name='NSSwapHostIntToBig'>
<arg type='I' name='x' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function inline='true' name='NSSwapHostIntToLittle'>
<arg type='I' name='x' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function inline='true' name='NSSwapHostLongLongToBig'>
<arg type='Q' name='x' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function inline='true' name='NSSwapHostLongLongToLittle'>
<arg type='Q' name='x' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function inline='true' name='NSSwapHostLongToBig'>
<arg type='L' type64='Q' name='x' declared_type='unsigned long'/>
<retval type='L' type64='Q' declared_type='unsigned long'/>
</function>
<function inline='true' name='NSSwapHostLongToLittle'>
<arg type='L' type64='Q' name='x' declared_type='unsigned long'/>
<retval type='L' type64='Q' declared_type='unsigned long'/>
</function>
<function inline='true' name='NSSwapHostShortToBig'>
<arg type='S' name='x' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function inline='true' name='NSSwapHostShortToLittle'>
<arg type='S' name='x' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function inline='true' name='NSSwapInt'>
<arg type='I' name='inv' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function inline='true' name='NSSwapLittleDoubleToHost'>
<arg type='{_NSSwappedDouble=Q}' name='x' declared_type='NSSwappedDouble'/>
<retval type='d' declared_type='double'/>
</function>
<function inline='true' name='NSSwapLittleFloatToHost'>
<arg type='{_NSSwappedFloat=I}' name='x' declared_type='NSSwappedFloat'/>
<retval type='f' declared_type='float'/>
</function>
<function inline='true' name='NSSwapLittleIntToHost'>
<arg type='I' name='x' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function inline='true' name='NSSwapLittleLongLongToHost'>
<arg type='Q' name='x' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function inline='true' name='NSSwapLittleLongToHost'>
<arg type='L' type64='Q' name='x' declared_type='unsigned long'/>
<retval type='L' type64='Q' declared_type='unsigned long'/>
</function>
<function inline='true' name='NSSwapLittleShortToHost'>
<arg type='S' name='x' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function inline='true' name='NSSwapLong'>
<arg type='L' type64='Q' name='inv' declared_type='unsigned long'/>
<retval type='L' type64='Q' declared_type='unsigned long'/>
</function>
<function inline='true' name='NSSwapLongLong'>
<arg type='Q' name='inv' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function inline='true' name='NSSwapShort'>
<arg type='S' name='inv' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function name='NSTemporaryDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSUnionRange'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range1' declared_type='NSRange'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range2' declared_type='NSRange'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</function>
<function name='NSUnionRect'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='bRect' declared_type='NSRect'/>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</function>
<function name='NSUserName'>
<retval type='@' declared_type='NSString*'/>
</function>
<function inline='true' name='NSWidth'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='aRect' declared_type='NSRect'/>
<retval type='f' type64='d' declared_type='CGFloat'/>
</function>
<function name='NSZoneCalloc'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<arg type='I' type64='Q' name='numElems' declared_type='NSUInteger'/>
<arg type='I' type64='Q' name='byteSize' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSZoneFree'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<arg type='^v' name='ptr' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSZoneFromPointer'>
<arg type='^v' name='ptr' declared_type='void*'/>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</function>
<function name='NSZoneMalloc'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<arg type='I' type64='Q' name='size' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSZoneName'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSZoneRealloc'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<arg type='^v' name='ptr' declared_type='void*'/>
<arg type='I' type64='Q' name='size' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NXReadNSObjectFromCoder'>
<arg type='@' name='decoder' declared_type='NSCoder*'/>
<retval type='@' declared_type='NSObject*'/>
</function>
<class name='NSAffineTransform'>
<method selector='appendTransform:'>
<arg type='@' name='transform' declared_type='NSAffineTransform*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTransform:'>
<arg type='@' name='transform' declared_type='NSAffineTransform*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invert'>
<retval type='v' declared_type='void'/>
</method>
<method selector='prependTransform:'>
<arg type='@' name='transform' declared_type='NSAffineTransform*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotateByDegrees:'>
<arg type='f' type64='d' name='angle' declared_type='CGFloat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotateByRadians:'>
<arg type='f' type64='d' name='angle' declared_type='CGFloat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scaleBy:'>
<arg type='f' type64='d' name='scale' declared_type='CGFloat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scaleXBy:yBy:'>
<arg type='f' type64='d' name='scaleX' declared_type='CGFloat' index='0'/>
<arg type='f' type64='d' name='scaleY' declared_type='CGFloat' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTransformStruct:'>
<arg type='{_NSAffineTransformStruct=ffffff}' type64='{_NSAffineTransformStruct=dddddd}' name='transformStruct' declared_type='NSAffineTransformStruct' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='transform'>
<retval type='@' declared_type='NSAffineTransform*'/>
</method>
<method selector='transformPoint:'>
<arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' name='aPoint' declared_type='NSPoint' index='0'/>
<retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' declared_type='NSPoint'/>
</method>
<method selector='transformSize:'>
<arg type='{_NSSize=ff}' type64='{CGSize=dd}' name='aSize' declared_type='NSSize' index='0'/>
<retval type='{_NSSize=ff}' type64='{CGSize=dd}' declared_type='NSSize'/>
</method>
<method selector='transformStruct'>
<retval type='{_NSAffineTransformStruct=ffffff}' type64='{_NSAffineTransformStruct=dddddd}' declared_type='NSAffineTransformStruct'/>
</method>
<method selector='translateXBy:yBy:'>
<arg type='f' type64='d' name='deltaX' declared_type='CGFloat' index='0'/>
<arg type='f' type64='d' name='deltaY' declared_type='CGFloat' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSAppleEventDescriptor'>
<method selector='aeDesc'>
<retval type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true' declared_type='AEDesc*'/>
</method>
<method class_method='true' selector='appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:'>
<arg type='L' type64='I' name='eventClass' declared_type='AEEventClass' index='0'/>
<arg type='L' type64='I' name='eventID' declared_type='AEEventID' index='1'/>
<arg type='@' name='targetDescriptor' declared_type='NSAppleEventDescriptor*' index='2'/>
<arg type='s' name='returnID' declared_type='AEReturnID' index='3'/>
<arg type='l' type64='i' name='transactionID' declared_type='AETransactionID' index='4'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='attributeDescriptorForKeyword:'>
<arg type='L' type64='I' name='keyword' declared_type='AEKeyword' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='booleanValue'>
<retval type='B' declared_type='Boolean'/>
</method>
<method selector='coerceToDescriptorType:'>
<arg type='L' type64='I' name='descriptorType' declared_type='DescType' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='descriptorAtIndex:'>
<arg type='i' type64='q' name='index' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='descriptorForKeyword:'>
<arg type='L' type64='I' name='keyword' declared_type='AEKeyword' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='descriptorType'>
<retval type='L' type64='I' declared_type='DescType'/>
</method>
<method class_method='true' selector='descriptorWithBoolean:'>
<arg type='B' name='boolean' declared_type='Boolean' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithDescriptorType:bytes:length:'>
<arg type='L' type64='I' name='descriptorType' declared_type='DescType' index='0'/>
<arg type='^v' const='true' name='bytes' declared_type='void*' index='1'/>
<arg type='I' type64='Q' name='byteCount' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithDescriptorType:data:'>
<arg type='L' type64='I' name='descriptorType' declared_type='DescType' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithEnumCode:'>
<arg type='L' type64='I' name='enumerator' declared_type='OSType' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithInt32:'>
<arg type='l' type64='i' name='signedInt' declared_type='SInt32' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithTypeCode:'>
<arg type='L' type64='I' name='typeCode' declared_type='OSType' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='enumCodeValue'>
<retval type='L' type64='I' declared_type='OSType'/>
</method>
<method selector='eventClass'>
<retval type='L' type64='I' declared_type='AEEventClass'/>
</method>
<method selector='eventID'>
<retval type='L' type64='I' declared_type='AEEventID'/>
</method>
<method selector='initListDescriptor'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRecordDescriptor'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAEDescNoCopy:'>
<arg type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true' name='aeDesc' declared_type='AEDesc*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDescriptorType:bytes:length:'>
<arg type='L' type64='I' name='descriptorType' declared_type='DescType' index='0'/>
<arg type='^v' const='true' name='bytes' declared_type='void*' index='1'/>
<arg type='I' type64='Q' name='byteCount' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDescriptorType:data:'>
<arg type='L' type64='I' name='descriptorType' declared_type='DescType' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithEventClass:eventID:targetDescriptor:returnID:transactionID:'>
<arg type='L' type64='I' name='eventClass' declared_type='AEEventClass' index='0'/>
<arg type='L' type64='I' name='eventID' declared_type='AEEventID' index='1'/>
<arg type='@' name='targetDescriptor' declared_type='NSAppleEventDescriptor*' index='2'/>
<arg type='s' name='returnID' declared_type='AEReturnID' index='3'/>
<arg type='l' type64='i' name='transactionID' declared_type='AETransactionID' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertDescriptor:atIndex:'>
<arg type='@' name='descriptor' declared_type='NSAppleEventDescriptor*' index='0'/>
<arg type='i' type64='q' name='index' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='int32Value'>
<retval type='l' type64='i' declared_type='SInt32'/>
</method>
<method selector='keywordForDescriptorAtIndex:'>
<arg type='i' type64='q' name='index' declared_type='NSInteger' index='0'/>
<retval type='L' type64='I' declared_type='AEKeyword'/>
</method>
<method class_method='true' selector='listDescriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='nullDescriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='numberOfItems'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='paramDescriptorForKeyword:'>
<arg type='L' type64='I' name='keyword' declared_type='AEKeyword' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='recordDescriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='removeDescriptorAtIndex:'>
<arg type='i' type64='q' name='index' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeDescriptorWithKeyword:'>
<arg type='L' type64='I' name='keyword' declared_type='AEKeyword' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeParamDescriptorWithKeyword:'>
<arg type='L' type64='I' name='keyword' declared_type='AEKeyword' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='returnID'>
<retval type='s' declared_type='AEReturnID'/>
</method>
<method selector='setAttributeDescriptor:forKeyword:'>
<arg type='@' name='descriptor' declared_type='NSAppleEventDescriptor*' index='0'/>
<arg type='L' type64='I' name='keyword' declared_type='AEKeyword' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDescriptor:forKeyword:'>
<arg type='@' name='descriptor' declared_type='NSAppleEventDescriptor*' index='0'/>
<arg type='L' type64='I' name='keyword' declared_type='AEKeyword' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParamDescriptor:forKeyword:'>
<arg type='@' name='descriptor' declared_type='NSAppleEventDescriptor*' index='0'/>
<arg type='L' type64='I' name='keyword' declared_type='AEKeyword' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='transactionID'>
<retval type='l' type64='i' declared_type='AETransactionID'/>
</method>
<method selector='typeCodeValue'>
<retval type='L' type64='I' declared_type='OSType'/>
</method>
</class>
<class name='NSAppleEventManager'>
<method selector='appleEventForSuspensionID:'>
<arg type='^{__NSAppleEventManagerSuspension=}' name='suspensionID' declared_type='NSAppleEventManagerSuspensionID' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='currentAppleEvent'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='currentReplyAppleEvent'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='dispatchRawAppleEvent:withRawReply:handlerRefCon:'>
<arg type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' const='true' name='theAppleEvent' declared_type='AppleEvent*' index='0'/>
<arg type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' name='theReply' declared_type='AppleEvent*' index='1'/>
<arg type='l' type64='^v' name='handlerRefCon' declared_type='SRefCon' index='2'/>
<retval type='s' declared_type='OSErr'/>
</method>
<method selector='removeEventHandlerForEventClass:andEventID:'>
<arg type='L' type64='I' name='eventClass' declared_type='AEEventClass' index='0'/>
<arg type='L' type64='I' name='eventID' declared_type='AEEventID' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replyAppleEventForSuspensionID:'>
<arg type='^{__NSAppleEventManagerSuspension=}' name='suspensionID' declared_type='NSAppleEventManagerSuspensionID' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='resumeWithSuspensionID:'>
<arg type='^{__NSAppleEventManagerSuspension=}' name='suspensionID' declared_type='NSAppleEventManagerSuspensionID' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrentAppleEventAndReplyEventWithSuspensionID:'>
<arg type='^{__NSAppleEventManagerSuspension=}' name='suspensionID' declared_type='NSAppleEventManagerSuspensionID' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEventHandler:andSelector:forEventClass:andEventID:'>
<arg type='@' name='handler' declared_type='id' index='0'/>
<arg type=':' name='handleEventSelector' declared_type='SEL' index='1'/>
<arg type='L' type64='I' name='eventClass' declared_type='AEEventClass' index='2'/>
<arg type='L' type64='I' name='eventID' declared_type='AEEventID' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedAppleEventManager'>
<retval type='@' declared_type='NSAppleEventManager*'/>
</method>
<method selector='suspendCurrentAppleEvent'>
<retval type='^{__NSAppleEventManagerSuspension=}' declared_type='NSAppleEventManagerSuspensionID'/>
</method>
</class>
<class name='NSAppleScript'>
<method selector='compileAndReturnError:'>
<arg type='^@' name='errorInfo' declared_type='NSDictionary**' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='executeAndReturnError:'>
<arg type='^@' name='errorInfo' declared_type='NSDictionary**' index='0'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='executeAppleEvent:error:'>
<arg type='@' name='event' declared_type='NSAppleEventDescriptor*' index='0'/>
<arg type='^@' name='errorInfo' declared_type='NSDictionary**' index='1'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='errorInfo' declared_type='NSDictionary**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSource:'>
<arg type='@' name='source' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isCompiled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='source'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSArchiver'>
<method class_method='true' selector='archiveRootObject:toFile:'>
<arg type='@' name='rootObject' declared_type='id' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='archivedDataWithRootObject:'>
<arg type='@' name='rootObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='archiverData'>
<retval type='@' declared_type='NSMutableData*'/>
</method>
<method selector='classNameEncodedForTrueClassName:'>
<arg type='@' name='trueName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='encodeClassName:intoClassName:'>
<arg type='@' name='trueName' declared_type='NSString*' index='0'/>
<arg type='@' name='inArchiveName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRootObject:'>
<arg type='@' name='rootObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initForWritingWithMutableData:'>
<arg type='@' name='mdata' declared_type='NSMutableData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='replaceObject:withObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='@' name='newObject' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSArray'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='options' declared_type='NSKeyValueObservingOptions' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserver:toObjectsAtIndexes:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='2'/>
<arg type='I' type64='Q' name='options' declared_type='NSKeyValueObservingOptions' index='3'/>
<arg type='^v' name='context' declared_type='void*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='array'>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayByAddingObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='arrayByAddingObjectsFromArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='arrayWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithObjects:' variadic='true' sentinel='0'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithObjects:count:'>
<arg type='^@' const='true' name='objects' declared_type='id*' index='0'/>
<arg type='I' type64='Q' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='componentsJoinedByString:'>
<arg type='@' name='separator' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='containsObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='level' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumerateObjectsAtIndexes:options:usingBlock:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='filteredArrayUsingPredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='firstObjectCommonWithArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='getObjects:'>
<arg type='^@' name='objects' declared_type='id*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjects:range:'>
<arg type='^@' name='objects' declared_type='id*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexOfObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObject:inRange:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObject:inSortedRange:options:usingComparator:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='r' declared_type='NSRange' index='1'/>
<arg type='I' type64='Q' name='opts' declared_type='NSBinarySearchingOptions' index='2'/>
<arg type='@?' name='cmp' function_pointer='true' declared_type='NSComparator' index='3'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectAtIndexes:options:passingTest:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectIdenticalTo:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectIdenticalTo:inRange:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectWithOptions:passingTest:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexesOfObjectsAtIndexes:options:passingTest:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsWithOptions:passingTest:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='initWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:copyItems:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:' variadic='true' sentinel='0'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:count:'>
<arg type='^@' const='true' name='objects' declared_type='id*' index='0'/>
<arg type='I' type64='Q' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='argument' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectAtIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectsAtIndexes:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathsMatchingExtensions:'>
<arg type='@' name='filterTypes' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='^v' name='context' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:fromObjectsAtIndexes:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:fromObjectsAtIndexes:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverseObjectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortedArrayHint'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='sortedArrayUsingComparator:'>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingDescriptors:'>
<arg type='@' name='sortDescriptors' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingFunction:context:'>
<arg type='^?' name='comparator' function_pointer='true' declared_type='NSInteger (*)(id, id, void *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</arg>
<arg type='^v' name='context' declared_type='void*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingFunction:context:hint:'>
<arg type='^?' name='comparator' function_pointer='true' declared_type='NSInteger (*)(id, id, void *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</arg>
<arg type='^v' name='context' declared_type='void*' index='1'/>
<arg type='@' name='hint' declared_type='NSData*' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingSelector:'>
<arg type=':' name='comparator' declared_type='SEL' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayWithOptions:usingComparator:'>
<arg type='I' type64='Q' name='opts' declared_type='NSSortOptions' index='0'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='subarrayWithRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='writeToFile:atomically:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='atomically' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSAssertionHandler'>
<method class_method='true' selector='currentHandler'>
<retval type='@' declared_type='NSAssertionHandler*'/>
</method>
<method selector='handleFailureInFunction:file:lineNumber:description:' variadic='true'>
<arg type='@' name='functionName' declared_type='NSString*' index='0'/>
<arg type='@' name='fileName' declared_type='NSString*' index='1'/>
<arg type='i' type64='q' name='line' declared_type='NSInteger' index='2'/>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='handleFailureInMethod:object:file:lineNumber:description:' variadic='true'>
<arg type=':' name='selector' declared_type='SEL' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='fileName' declared_type='NSString*' index='2'/>
<arg type='i' type64='q' name='line' declared_type='NSInteger' index='3'/>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='attribute:atIndex:effectiveRange:'>
<arg type='@' name='attrName' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='location' declared_type='NSUInteger' index='1'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='range' declared_type='NSRangePointer' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='attribute:atIndex:longestEffectiveRange:inRange:'>
<arg type='@' name='attrName' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='location' declared_type='NSUInteger' index='1'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='range' declared_type='NSRangePointer' index='2'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='rangeLimit' declared_type='NSRange' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='attributedSubstringFromRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributesAtIndex:effectiveRange:'>
<arg type='I' type64='Q' name='location' declared_type='NSUInteger' index='0'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='range' declared_type='NSRangePointer' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='attributesAtIndex:longestEffectiveRange:inRange:'>
<arg type='I' type64='Q' name='location' declared_type='NSUInteger' index='0'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='range' declared_type='NSRangePointer' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='rangeLimit' declared_type='NSRange' index='2'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='enumerateAttribute:inRange:options:usingBlock:'>
<arg type='@' name='attrName' declared_type='NSString*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='enumerationRange' declared_type='NSRange' index='1'/>
<arg type='I' type64='Q' name='opts' declared_type='NSAttributedStringEnumerationOptions' index='2'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSRange, BOOL *)' index='3'>
<arg type='@' declared_type='id'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateAttributesInRange:options:usingBlock:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='enumerationRange' declared_type='NSRange' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSAttributedStringEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSDictionary *, NSRange, BOOL *)' index='2'>
<arg type='@' declared_type='NSDictionary*'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithAttributedString:'>
<arg type='@' name='attrStr' declared_type='NSAttributedString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='str' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:attributes:'>
<arg type='@' name='str' declared_type='NSString*' index='0'/>
<arg type='@' name='attrs' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToAttributedString:'>
<arg type='@' name='other' declared_type='NSAttributedString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='length'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSAutoreleasePool'>
<method class_method='true' selector='addObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drain'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='showPools'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSBlockOperation'>
<method selector='addExecutionBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='blockOperationWithBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='executionBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSBundle'>
<method selector='URLForAuxiliaryExecutable:'>
<arg type='@' name='executableName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForResource:withExtension:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForResource:withExtension:subdirectory:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='subpath' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='URLForResource:withExtension:subdirectory:inBundleWithURL:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='subpath' declared_type='NSString*' index='2'/>
<arg type='@' name='bundleURL' declared_type='NSURL*' index='3'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForResource:withExtension:subdirectory:localization:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='subpath' declared_type='NSString*' index='2'/>
<arg type='@' name='localizationName' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLsForResourcesWithExtension:subdirectory:'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='subpath' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='URLsForResourcesWithExtension:subdirectory:inBundleWithURL:'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='subpath' declared_type='NSString*' index='1'/>
<arg type='@' name='bundleURL' declared_type='NSURL*' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='URLsForResourcesWithExtension:subdirectory:localization:'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='subpath' declared_type='NSString*' index='1'/>
<arg type='@' name='localizationName' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='allBundles'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='allFrameworks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='appStoreReceiptURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='builtInPlugInsPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='builtInPlugInsURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='bundleForClass:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='bundleIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='bundlePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='bundleURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='bundleWithIdentifier:'>
<arg type='@' name='identifier' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method class_method='true' selector='bundleWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method class_method='true' selector='bundleWithURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='classNamed:'>
<arg type='@' name='className' declared_type='NSString*' index='0'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='developmentLocalization'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='executableArchitectures'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='executablePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='executableURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='infoDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='load'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadAndReturnError:'>
<arg type='^@' name='error' declared_type='NSError**' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedInfoDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='localizedStringForKey:value:table:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='@' name='value' declared_type='NSString*' index='1'/>
<arg type='@' name='tableName' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='mainBundle'>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='objectForInfoDictionaryKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pathForAuxiliaryExecutable:'>
<arg type='@' name='executableName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForResource:ofType:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='pathForResource:ofType:inDirectory:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='bundlePath' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForResource:ofType:inDirectory:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='subpath' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForResource:ofType:inDirectory:forLocalization:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='ext' declared_type='NSString*' index='1'/>
<arg type='@' name='subpath' declared_type='NSString*' index='2'/>
<arg type='@' name='localizationName' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='pathsForResourcesOfType:inDirectory:'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='bundlePath' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathsForResourcesOfType:inDirectory:'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='subpath' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathsForResourcesOfType:inDirectory:forLocalization:'>
<arg type='@' name='ext' declared_type='NSString*' index='0'/>
<arg type='@' name='subpath' declared_type='NSString*' index='1'/>
<arg type='@' name='localizationName' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='preferredLocalizations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='preferredLocalizationsFromArray:'>
<arg type='@' name='localizationsArray' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='preferredLocalizationsFromArray:forPreferences:'>
<arg type='@' name='localizationsArray' declared_type='NSArray*' index='0'/>
<arg type='@' name='preferencesArray' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='preflightAndReturnError:'>
<arg type='^@' name='error' declared_type='NSError**' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='principalClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='privateFrameworksPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='privateFrameworksURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='resourcePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resourceURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='sharedFrameworksPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='sharedFrameworksURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='sharedSupportPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='sharedSupportURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='unload'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSByteCountFormatter'>
<method selector='allowedUnits'>
<retval type='I' type64='Q' declared_type='NSByteCountFormatterUnits'/>
</method>
<method selector='allowsNonnumericFormatting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='countStyle'>
<retval type='i' type64='q' declared_type='NSByteCountFormatterCountStyle'/>
</method>
<method selector='includesActualByteCount'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='includesCount'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='includesUnit'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isAdaptive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAdaptive:'>
<arg type='B' name='adaptive' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowedUnits:'>
<arg type='I' type64='Q' name='allowedUnits' declared_type='NSByteCountFormatterUnits' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsNonnumericFormatting:'>
<arg type='B' name='allowsNonnumericFormatting' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCountStyle:'>
<arg type='i' type64='q' name='countStyle' declared_type='NSByteCountFormatterCountStyle' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludesActualByteCount:'>
<arg type='B' name='includesActualByteCount' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludesCount:'>
<arg type='B' name='includesCount' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludesUnit:'>
<arg type='B' name='includesUnit' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZeroPadsFractionDigits:'>
<arg type='B' name='zeroPadsFractionDigits' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringFromByteCount:'>
<arg type='q' name='byteCount' declared_type='long long' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='stringFromByteCount:countStyle:'>
<arg type='q' name='byteCount' declared_type='long long' index='0'/>
<arg type='i' type64='q' name='countStyle' declared_type='NSByteCountFormatterCountStyle' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='zeroPadsFractionDigits'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSCache'>
<method selector='countLimit'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='evictsObjectsWithDiscardedContent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='key' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg type='@' name='key' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCountLimit:'>
<arg type='I' type64='Q' name='lim' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='d' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEvictsObjectsWithDiscardedContent:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:cost:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='id' index='1'/>
<arg type='I' type64='Q' name='g' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTotalCostLimit:'>
<arg type='I' type64='Q' name='lim' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalCostLimit'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSCachedURLResponse'>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='initWithResponse:data:'>
<arg type='@' name='response' declared_type='NSURLResponse*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithResponse:data:userInfo:storagePolicy:'>
<arg type='@' name='response' declared_type='NSURLResponse*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<arg type='@' name='userInfo' declared_type='NSDictionary*' index='2'/>
<arg type='I' type64='Q' name='storagePolicy' declared_type='NSURLCacheStoragePolicy' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSURLResponse*'/>
</method>
<method selector='storagePolicy'>
<retval type='I' type64='Q' declared_type='NSURLCacheStoragePolicy'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSCalendar'>
<method class_method='true' selector='autoupdatingCurrentCalendar'>
<retval type='@' declared_type='id'/>
</method>
<method selector='calendarIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='components:fromDate:'>
<arg type='I' type64='Q' name='unitFlags' declared_type='NSUInteger' index='0'/>
<arg type='@' name='date' declared_type='NSDate*' index='1'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='components:fromDate:toDate:options:'>
<arg type='I' type64='Q' name='unitFlags' declared_type='NSUInteger' index='0'/>
<arg type='@' name='startingDate' declared_type='NSDate*' index='1'/>
<arg type='@' name='resultDate' declared_type='NSDate*' index='2'/>
<arg type='I' type64='Q' name='opts' declared_type='NSUInteger' index='3'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method class_method='true' selector='currentCalendar'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateByAddingComponents:toDate:options:'>
<arg type='@' name='comps' declared_type='NSDateComponents*' index='0'/>
<arg type='@' name='date' declared_type='NSDate*' index='1'/>
<arg type='I' type64='Q' name='opts' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dateFromComponents:'>
<arg type='@' name='comps' declared_type='NSDateComponents*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='firstWeekday'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='initWithCalendarIdentifier:'>
<arg type='@' name='ident' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method selector='maximumRangeOfUnit:'>
<arg type='I' type64='Q' name='unit' declared_type='NSCalendarUnit' index='0'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='minimumDaysInFirstWeek'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='minimumRangeOfUnit:'>
<arg type='I' type64='Q' name='unit' declared_type='NSCalendarUnit' index='0'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='ordinalityOfUnit:inUnit:forDate:'>
<arg type='I' type64='Q' name='smaller' declared_type='NSCalendarUnit' index='0'/>
<arg type='I' type64='Q' name='larger' declared_type='NSCalendarUnit' index='1'/>
<arg type='@' name='date' declared_type='NSDate*' index='2'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='rangeOfUnit:inUnit:forDate:'>
<arg type='I' type64='Q' name='smaller' declared_type='NSCalendarUnit' index='0'/>
<arg type='I' type64='Q' name='larger' declared_type='NSCalendarUnit' index='1'/>
<arg type='@' name='date' declared_type='NSDate*' index='2'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rangeOfUnit:startDate:interval:forDate:'>
<arg type='I' type64='Q' name='unit' declared_type='NSCalendarUnit' index='0'/>
<arg type='^@' name='datep' declared_type='NSDate**' index='1'/>
<arg type='^d' name='tip' declared_type='NSTimeInterval*' index='2'/>
<arg type='@' name='date' declared_type='NSDate*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setFirstWeekday:'>
<arg type='I' type64='Q' name='weekday' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg type='@' name='locale' declared_type='NSLocale*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumDaysInFirstWeek:'>
<arg type='I' type64='Q' name='mdw' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg type='@' name='tz' declared_type='NSTimeZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
</class>
<class name='NSCalendarDate'>
<method class_method='true' selector='calendarDate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='calendarFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dateByAddingYears:months:days:hours:minutes:seconds:'>
<arg type='i' type64='q' name='year' declared_type='NSInteger' index='0'/>
<arg type='i' type64='q' name='month' declared_type='NSInteger' index='1'/>
<arg type='i' type64='q' name='day' declared_type='NSInteger' index='2'/>
<arg type='i' type64='q' name='hour' declared_type='NSInteger' index='3'/>
<arg type='i' type64='q' name='minute' declared_type='NSInteger' index='4'/>
<arg type='i' type64='q' name='second' declared_type='NSInteger' index='5'/>
<retval type='@' declared_type='NSCalendarDate*'/>
</method>
<method class_method='true' selector='dateWithString:calendarFormat:'>
<arg type='@' name='description' declared_type='NSString*' index='0'/>
<arg type='@' name='format' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithString:calendarFormat:locale:'>
<arg type='@' name='description' declared_type='NSString*' index='0'/>
<arg type='@' name='format' declared_type='NSString*' index='1'/>
<arg type='@' name='locale' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithYear:month:day:hour:minute:second:timeZone:'>
<arg type='i' type64='q' name='year' declared_type='NSInteger' index='0'/>
<arg type='I' type64='Q' name='month' declared_type='NSUInteger' index='1'/>
<arg type='I' type64='Q' name='day' declared_type='NSUInteger' index='2'/>
<arg type='I' type64='Q' name='hour' declared_type='NSUInteger' index='3'/>
<arg type='I' type64='Q' name='minute' declared_type='NSUInteger' index='4'/>
<arg type='I' type64='Q' name='second' declared_type='NSUInteger' index='5'/>
<arg type='@' name='aTimeZone' declared_type='NSTimeZone*' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dayOfCommonEra'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='dayOfMonth'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='dayOfWeek'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='dayOfYear'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='descriptionWithCalendarFormat:'>
<arg type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithCalendarFormat:locale:'>
<arg type='@' name='format' declared_type='NSString*' index='0'/>
<arg type='@' name='locale' declared_type='id' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hourOfDay'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='description' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:calendarFormat:'>
<arg type='@' name='description' declared_type='NSString*' index='0'/>
<arg type='@' name='format' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:calendarFormat:locale:'>
<arg type='@' name='description' declared_type='NSString*' index='0'/>
<arg type='@' name='format' declared_type='NSString*' index='1'/>
<arg type='@' name='locale' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithYear:month:day:hour:minute:second:timeZone:'>
<arg type='i' type64='q' name='year' declared_type='NSInteger' index='0'/>
<arg type='I' type64='Q' name='month' declared_type='NSUInteger' index='1'/>
<arg type='I' type64='Q' name='day' declared_type='NSUInteger' index='2'/>
<arg type='I' type64='Q' name='hour' declared_type='NSUInteger' index='3'/>
<arg type='I' type64='Q' name='minute' declared_type='NSUInteger' index='4'/>
<arg type='I' type64='Q' name='second' declared_type='NSUInteger' index='5'/>
<arg type='@' name='aTimeZone' declared_type='NSTimeZone*' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='minuteOfHour'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='monthOfYear'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='secondOfMinute'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='setCalendarFormat:'>
<arg type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg type='@' name='aTimeZone' declared_type='NSTimeZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='yearOfCommonEra'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='years:months:days:hours:minutes:seconds:sinceDate:'>
<arg type='^i' type64='^q' name='yp' declared_type='NSInteger*' index='0'/>
<arg type='^i' type64='^q' name='mop' declared_type='NSInteger*' index='1'/>
<arg type='^i' type64='^q' name='dp' declared_type='NSInteger*' index='2'/>
<arg type='^i' type64='^q' name='hp' declared_type='NSInteger*' index='3'/>
<arg type='^i' type64='^q' name='mip' declared_type='NSInteger*' index='4'/>
<arg type='^i' type64='^q' name='sp' declared_type='NSInteger*' index='5'/>
<arg type='@' name='date' declared_type='NSCalendarDate*' index='6'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCharacterSet'>
<method class_method='true' selector='alphanumericCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method selector='bitmapRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='capitalizedLetterCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method selector='characterIsMember:'>
<arg type='S' name='aCharacter' declared_type='unichar' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='characterSetWithBitmapRepresentation:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='characterSetWithCharactersInString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='characterSetWithContentsOfFile:'>
<arg type='@' name='fName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='characterSetWithRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='aRange' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='controlCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='decimalDigitCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='decomposableCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method selector='hasMemberInPlane:'>
<arg type='C' name='thePlane' declared_type='uint8_t' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='illegalCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method selector='invertedSet'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='isSupersetOfSet:'>
<arg type='@' name='theOtherSet' declared_type='NSCharacterSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='letterCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method selector='longCharacterIsMember:'>
<arg type='L' type64='I' name='theLongChar' declared_type='UTF32Char' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='lowercaseLetterCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='newlineCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='nonBaseCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='punctuationCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='symbolCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='uppercaseLetterCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='whitespaceAndNewlineCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='whitespaceCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSClassDescription'>
<method selector='attributeKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='classDescriptionForClass:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='@' declared_type='NSClassDescription*'/>
</method>
<method class_method='true' selector='invalidateClassDescriptionCache'>
<retval type='v' declared_type='void'/>
</method>
<method selector='inverseForRelationshipKey:'>
<arg type='@' name='relationshipKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='registerClassDescription:forClass:'>
<arg type='@' name='description' declared_type='NSClassDescription*' index='0'/>
<arg type='#' name='aClass' declared_type='Class' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toManyRelationshipKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='toOneRelationshipKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSCloneCommand'>
<method selector='keySpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg type='@' name='receiversRef' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCloseCommand'>
<method selector='saveOptions'>
<retval type='I' type64='Q' declared_type='NSSaveOptions'/>
</method>
</class>
<class name='NSCoder'>
<method selector='allowedClasses'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='allowsKeyedCoding'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeArrayOfObjCType:count:at:'>
<arg type='*' const='true' name='itemType' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='count' declared_type='NSUInteger' index='1'/>
<arg type='^v' name='array' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='decodeBoolForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeBytesForKey:returnedLength:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='^I' type64='^Q' name='lengthp' declared_type='NSUInteger*' index='1'/>
<retval type='*' const='true' declared_type='uint8_t*'/>
</method>
<method selector='decodeBytesWithReturnedLength:'>
<arg type='^I' type64='^Q' name='lengthp' declared_type='NSUInteger*' index='0'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='decodeDataObject'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='decodeDoubleForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='decodeFloatForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='decodeInt32ForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='int32_t'/>
</method>
<method selector='decodeInt64ForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='q' declared_type='int64_t'/>
</method>
<method selector='decodeIntForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='int'/>
</method>
<method selector='decodeIntegerForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='decodeNXObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeObjectForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeObjectOfClass:forKey:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeObjectOfClasses:forKey:'>
<arg type='@' name='classes' declared_type='NSSet*' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodePoint'>
<retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' declared_type='NSPoint'/>
</method>
<method selector='decodePointForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' declared_type='NSPoint'/>
</method>
<method selector='decodePropertyList'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodePropertyListForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeRect'>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</method>
<method selector='decodeRectForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</method>
<method selector='decodeSize'>
<retval type='{_NSSize=ff}' type64='{CGSize=dd}' declared_type='NSSize'/>
</method>
<method selector='decodeSizeForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='{_NSSize=ff}' type64='{CGSize=dd}' declared_type='NSSize'/>
</method>
<method selector='decodeValueOfObjCType:at:'>
<arg type='*' const='true' name='type' declared_type='char*' index='0'/>
<arg type='^v' name='data' declared_type='void*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='decodeValuesOfObjCTypes:' variadic='true'>
<arg type='*' const='true' name='types' declared_type='char*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeArrayOfObjCType:count:at:'>
<arg type='*' const='true' name='type' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='count' declared_type='NSUInteger' index='1'/>
<arg type='^v' const='true' name='array' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBool:forKey:'>
<arg type='B' name='boolv' declared_type='BOOL' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBycopyObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeByrefObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBytes:length:'>
<arg type='^v' const='true' name='byteaddr' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBytes:length:forKey:'>
<arg type='*' const='true' name='bytesp' declared_type='uint8_t*' index='0'/>
<arg type='I' type64='Q' name='lenv' declared_type='NSUInteger' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:forKey:'>
<arg type='@' name='objv' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDataObject:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDouble:forKey:'>
<arg type='d' name='realv' declared_type='double' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeFloat:forKey:'>
<arg type='f' name='realv' declared_type='float' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt32:forKey:'>
<arg type='i' name='intv' declared_type='int32_t' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt64:forKey:'>
<arg type='q' name='intv' declared_type='int64_t' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt:forKey:'>
<arg type='i' name='intv' declared_type='int' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInteger:forKey:'>
<arg type='i' type64='q' name='intv' declared_type='NSInteger' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeNXObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeObject:forKey:'>
<arg type='@' name='objv' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodePoint:'>
<arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' name='point' declared_type='NSPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodePoint:forKey:'>
<arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' name='point' declared_type='NSPoint' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodePropertyList:'>
<arg type='@' name='aPropertyList' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRect:'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='rect' declared_type='NSRect' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRect:forKey:'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='rect' declared_type='NSRect' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRootObject:'>
<arg type='@' name='rootObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeSize:'>
<arg type='{_NSSize=ff}' type64='{CGSize=dd}' name='size' declared_type='NSSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeSize:forKey:'>
<arg type='{_NSSize=ff}' type64='{CGSize=dd}' name='size' declared_type='NSSize' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeValueOfObjCType:at:'>
<arg type='*' const='true' name='type' declared_type='char*' index='0'/>
<arg type='^v' const='true' name='addr' declared_type='void*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeValuesOfObjCTypes:' variadic='true'>
<arg type='*' const='true' name='types' declared_type='char*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectZone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
<method selector='requiresSecureCoding'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setObjectZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemVersion'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='versionForClassName:'>
<arg type='@' name='className' declared_type='NSString*' index='0'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</class>
<class name='NSComparisonPredicate'>
<method selector='comparisonPredicateModifier'>
<retval type='I' type64='Q' declared_type='NSComparisonPredicateModifier'/>
</method>
<method selector='customSelector'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='initWithLeftExpression:rightExpression:customSelector:'>
<arg type='@' name='lhs' declared_type='NSExpression*' index='0'/>
<arg type='@' name='rhs' declared_type='NSExpression*' index='1'/>
<arg type=':' name='selector' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLeftExpression:rightExpression:modifier:type:options:'>
<arg type='@' name='lhs' declared_type='NSExpression*' index='0'/>
<arg type='@' name='rhs' declared_type='NSExpression*' index='1'/>
<arg type='I' type64='Q' name='modifier' declared_type='NSComparisonPredicateModifier' index='2'/>
<arg type='I' type64='Q' name='type' declared_type='NSPredicateOperatorType' index='3'/>
<arg type='I' type64='Q' name='options' declared_type='NSComparisonPredicateOptions' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='leftExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='options'>
<retval type='I' type64='Q' declared_type='NSComparisonPredicateOptions'/>
</method>
<method selector='predicateOperatorType'>
<retval type='I' type64='Q' declared_type='NSPredicateOperatorType'/>
</method>
<method class_method='true' selector='predicateWithLeftExpression:rightExpression:customSelector:'>
<arg type='@' name='lhs' declared_type='NSExpression*' index='0'/>
<arg type='@' name='rhs' declared_type='NSExpression*' index='1'/>
<arg type=':' name='selector' declared_type='SEL' index='2'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='predicateWithLeftExpression:rightExpression:modifier:type:options:'>
<arg type='@' name='lhs' declared_type='NSExpression*' index='0'/>
<arg type='@' name='rhs' declared_type='NSExpression*' index='1'/>
<arg type='I' type64='Q' name='modifier' declared_type='NSComparisonPredicateModifier' index='2'/>
<arg type='I' type64='Q' name='type' declared_type='NSPredicateOperatorType' index='3'/>
<arg type='I' type64='Q' name='options' declared_type='NSComparisonPredicateOptions' index='4'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='rightExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
</class>
<class name='NSCompoundPredicate'>
<method class_method='true' selector='andPredicateWithSubpredicates:'>
<arg type='@' name='subpredicates' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='compoundPredicateType'>
<retval type='I' type64='Q' declared_type='NSCompoundPredicateType'/>
</method>
<method selector='initWithType:subpredicates:'>
<arg type='I' type64='Q' name='type' declared_type='NSCompoundPredicateType' index='0'/>
<arg type='@' name='subpredicates' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='notPredicateWithSubpredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='orPredicateWithSubpredicates:'>
<arg type='@' name='subpredicates' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='subpredicates'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSCondition'>
<method selector='broadcast'>
<retval type='v' declared_type='void'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='signal'>
<retval type='v' declared_type='void'/>
</method>
<method selector='wait'>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitUntilDate:'>
<arg type='@' name='limit' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSConditionLock'>
<method selector='condition'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='initWithCondition:'>
<arg type='i' type64='q' name='condition' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lockBeforeDate:'>
<arg type='@' name='limit' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lockWhenCondition:'>
<arg type='i' type64='q' name='condition' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='lockWhenCondition:beforeDate:'>
<arg type='i' type64='q' name='condition' declared_type='NSInteger' index='0'/>
<arg type='@' name='limit' declared_type='NSDate*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tryLockWhenCondition:'>
<arg type='i' type64='q' name='condition' declared_type='NSInteger' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unlockWithCondition:'>
<arg type='i' type64='q' name='condition' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSConnection'>
<method selector='addRequestMode:'>
<arg type='@' name='rmode' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRunLoop:'>
<arg type='@' name='runloop' declared_type='NSRunLoop*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='allConnections'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='connectionWithReceivePort:sendPort:'>
<arg type='@' name='receivePort' declared_type='NSPort*' index='0'/>
<arg type='@' name='sendPort' declared_type='NSPort*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='connectionWithRegisteredName:host:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='hostName' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='connectionWithRegisteredName:host:usingNameServer:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='hostName' declared_type='NSString*' index='1'/>
<arg type='@' name='server' declared_type='NSPortNameServer*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='currentConversation'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='defaultConnection'>
<retval type='@' declared_type='NSConnection*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dispatchWithComponents:'>
<arg type='@' name='components' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableMultipleThreads'>
<retval type='v' declared_type='void'/>
</method>
<method selector='independentConversationQueueing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithReceivePort:sendPort:'>
<arg type='@' name='receivePort' declared_type='NSPort*' index='0'/>
<arg type='@' name='sendPort' declared_type='NSPort*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isValid'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='multipleThreadsEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='receivePort'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='registerName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='registerName:withNameServer:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='server' declared_type='NSPortNameServer*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='remoteObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeRequestMode:'>
<arg type='@' name='rmode' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeRunLoop:'>
<arg type='@' name='runloop' declared_type='NSRunLoop*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replyTimeout'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='requestModes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='requestTimeout'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='rootObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='rootProxy'>
<retval type='@' declared_type='NSDistantObject*'/>
</method>
<method class_method='true' selector='rootProxyForConnectionWithRegisteredName:host:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='hostName' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSDistantObject*'/>
</method>
<method class_method='true' selector='rootProxyForConnectionWithRegisteredName:host:usingNameServer:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='hostName' declared_type='NSString*' index='1'/>
<arg type='@' name='server' declared_type='NSPortNameServer*' index='2'/>
<retval type='@' declared_type='NSDistantObject*'/>
</method>
<method selector='runInNewThread'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendPort'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method class_method='true' selector='serviceConnectionWithName:rootObject:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='root' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='serviceConnectionWithName:rootObject:usingNameServer:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='root' declared_type='id' index='1'/>
<arg type='@' name='server' declared_type='NSPortNameServer*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndependentConversationQueueing:'>
<arg type='B' name='yorn' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReplyTimeout:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRequestTimeout:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRootObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='statistics'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSCountedSet'>
<method selector='addObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='countForObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='initWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' type64='Q' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='removeObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCreateCommand'>
<method selector='createClassDescription'>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='resolvedKeyDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSData'>
<method selector='bytes'>
<retval type='^v' const='true' declared_type='void*'/>
</method>
<method class_method='true' selector='data'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithBytes:length:'>
<arg type='^v' const='true' name='bytes' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithBytesNoCopy:length:'>
<arg type='^v' name='bytes' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithBytesNoCopy:length:freeWhenDone:'>
<arg type='^v' name='bytes' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<arg type='B' name='b' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithContentsOfFile:options:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='readOptionsMask' declared_type='NSDataReadingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithContentsOfMappedFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithContentsOfURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='readOptionsMask' declared_type='NSDataReadingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getBytes:'>
<arg type='^v' name='buffer' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getBytes:length:'>
<arg type='^v' name='buffer' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getBytes:range:'>
<arg type='^v' name='buffer' declared_type='void*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBytes:length:'>
<arg type='^v' const='true' name='bytes' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytesNoCopy:length:'>
<arg type='^v' name='bytes' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytesNoCopy:length:freeWhenDone:'>
<arg type='^v' name='bytes' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<arg type='B' name='b' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:options:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='readOptionsMask' declared_type='NSDataReadingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfMappedFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='readOptionsMask' declared_type='NSDataReadingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToData:'>
<arg type='@' name='other' declared_type='NSData*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='length'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='rangeOfData:options:range:'>
<arg type='@' name='dataToFind' declared_type='NSData*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSDataSearchOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='searchRange' declared_type='NSRange' index='2'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='subdataWithRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='writeToFile:atomically:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToFile:options:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='writeOptionsMask' declared_type='NSDataWritingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='atomically' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='writeOptionsMask' declared_type='NSDataWritingOptions' index='1'/>
<arg type='^@' name='errorPtr' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSDataDetector'>
<method selector='checkingTypes'>
<retval type='Q' declared_type='NSTextCheckingTypes'/>
</method>
<method class_method='true' selector='dataDetectorWithTypes:error:'>
<arg type='Q' name='checkingTypes' declared_type='NSTextCheckingTypes' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSDataDetector*'/>
</method>
<method selector='initWithTypes:error:'>
<arg type='Q' name='checkingTypes' declared_type='NSTextCheckingTypes' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSDate'>
<method selector='addTimeInterval:'>
<arg type='d' name='seconds' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='compare:'>
<arg type='@' name='other' declared_type='NSDate*' index='0'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method class_method='true' selector='date'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateByAddingTimeInterval:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateWithCalendarFormat:timeZone:'>
<arg type='@' name='format' declared_type='NSString*' index='0'/>
<arg type='@' name='aTimeZone' declared_type='NSTimeZone*' index='1'/>
<retval type='@' declared_type='NSCalendarDate*'/>
</method>
<method class_method='true' selector='dateWithNaturalLanguageString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithNaturalLanguageString:locale:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='@' name='locale' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithTimeInterval:sinceDate:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='date' declared_type='NSDate*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithTimeIntervalSince1970:'>
<arg type='d' name='secs' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithTimeIntervalSinceNow:'>
<arg type='d' name='secs' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithTimeIntervalSinceReferenceDate:'>
<arg type='d' name='secs' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithCalendarFormat:timeZone:locale:'>
<arg type='@' name='format' declared_type='NSString*' index='0'/>
<arg type='@' name='aTimeZone' declared_type='NSTimeZone*' index='1'/>
<arg type='@' name='locale' declared_type='id' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='distantFuture'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='distantPast'>
<retval type='@' declared_type='id'/>
</method>
<method selector='earlierDate:'>
<arg type='@' name='anotherDate' declared_type='NSDate*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='description' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeInterval:sinceDate:'>
<arg type='d' name='secsToBeAdded' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='anotherDate' declared_type='NSDate*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeIntervalSince1970:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeIntervalSinceNow:'>
<arg type='d' name='secs' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeIntervalSinceReferenceDate:'>
<arg type='d' name='secsToBeAdded' declared_type='NSTimeInterval' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToDate:'>
<arg type='@' name='otherDate' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='laterDate:'>
<arg type='@' name='anotherDate' declared_type='NSDate*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='timeIntervalSince1970'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeIntervalSinceDate:'>
<arg type='@' name='anotherDate' declared_type='NSDate*' index='0'/>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeIntervalSinceNow'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method class_method='true' selector='timeIntervalSinceReferenceDate'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeIntervalSinceReferenceDate'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
</class>
<class name='NSDateComponents'>
<method selector='calendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='date'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='day'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='era'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='hour'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='isLeapMonth'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='minute'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='month'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='quarter'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='second'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='setCalendar:'>
<arg type='@' name='cal' declared_type='NSCalendar*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDay:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEra:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHour:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeapMonth:'>
<arg type='B' name='lm' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinute:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMonth:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQuarter:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSecond:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg type='@' name='tz' declared_type='NSTimeZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeek:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekOfMonth:'>
<arg type='i' type64='q' name='w' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekOfYear:'>
<arg type='i' type64='q' name='w' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekday:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekdayOrdinal:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYear:'>
<arg type='i' type64='q' name='v' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYearForWeekOfYear:'>
<arg type='i' type64='q' name='y' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='week'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='weekOfMonth'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='weekOfYear'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='weekday'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='weekdayOrdinal'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='year'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='yearForWeekOfYear'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</class>
<class name='NSDateFormatter'>
<method selector='AMSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='PMSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='allowsNaturalLanguage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='calendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='dateFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='dateFormatFromTemplate:options:locale:'>
<arg type='@' name='tmplate' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSUInteger' index='1'/>
<arg type='@' name='locale' declared_type='NSLocale*' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dateFromString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dateStyle'>
<retval type='I' type64='Q' declared_type='NSDateFormatterStyle'/>
</method>
<method selector='defaultDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='defaultFormatterBehavior'>
<retval type='I' type64='Q' declared_type='NSDateFormatterBehavior'/>
</method>
<method selector='doesRelativeDateFormatting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='eraSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='formatterBehavior'>
<retval type='I' type64='Q' declared_type='NSDateFormatterBehavior'/>
</method>
<method selector='generatesCalendarDates'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg type='^@' type_modifier='o' name='obj' declared_type='id*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<arg type='^{_NSRange=II}' type_modifier='N' type64='^{_NSRange=QQ}' name='rangep' declared_type='NSRange*' index='2'/>
<arg type='^@' type_modifier='o' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='gregorianStartDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='initWithDateFormat:allowNaturalLanguage:'>
<arg type='@' name='format' declared_type='NSString*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLenient'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method class_method='true' selector='localizedStringFromDate:dateStyle:timeStyle:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<arg type='I' type64='Q' name='dstyle' declared_type='NSDateFormatterStyle' index='1'/>
<arg type='I' type64='Q' name='tstyle' declared_type='NSDateFormatterStyle' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='longEraSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='monthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='quarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setAMSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCalendar:'>
<arg type='@' name='calendar' declared_type='NSCalendar*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateFormat:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateStyle:'>
<arg type='I' type64='Q' name='style' declared_type='NSDateFormatterStyle' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setDefaultFormatterBehavior:'>
<arg type='I' type64='Q' name='behavior' declared_type='NSDateFormatterBehavior' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoesRelativeDateFormatting:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEraSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatterBehavior:'>
<arg type='I' type64='Q' name='behavior' declared_type='NSDateFormatterBehavior' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGeneratesCalendarDates:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGregorianStartDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLenient:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg type='@' name='locale' declared_type='NSLocale*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLongEraSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPMSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQuarterSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortQuarterSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortStandaloneMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortStandaloneQuarterSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortStandaloneWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandaloneMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandaloneQuarterSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandaloneWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeStyle:'>
<arg type='I' type64='Q' name='style' declared_type='NSDateFormatterStyle' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg type='@' name='tz' declared_type='NSTimeZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTwoDigitStartDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortStandaloneMonthSymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortStandaloneWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekdaySymbols:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shortMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortQuarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortStandaloneMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortStandaloneQuarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortStandaloneWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='standaloneMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='standaloneQuarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='standaloneWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='stringFromDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='timeStyle'>
<retval type='I' type64='Q' declared_type='NSDateFormatterStyle'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='twoDigitStartDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='veryShortMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='veryShortStandaloneMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='veryShortStandaloneWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='veryShortWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='weekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSDecimalNumber'>
<method selector='compare:'>
<arg type='@' name='decimalNumber' declared_type='NSNumber*' index='0'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method selector='decimalNumberByAdding:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByAdding:withBehavior:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByDividingBy:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByDividingBy:withBehavior:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingBy:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingBy:withBehavior:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingByPowerOf10:'>
<arg type='s' name='power' declared_type='short' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingByPowerOf10:withBehavior:'>
<arg type='s' name='power' declared_type='short' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByRaisingToPower:'>
<arg type='I' type64='Q' name='power' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByRaisingToPower:withBehavior:'>
<arg type='I' type64='Q' name='power' declared_type='NSUInteger' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByRoundingAccordingToBehavior:'>
<arg type='@' name='behavior' declared_type='id' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberBySubtracting:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberBySubtracting:withBehavior:'>
<arg type='@' name='decimalNumber' declared_type='NSDecimalNumber*' index='0'/>
<arg type='@' name='behavior' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='decimalNumberWithDecimal:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='dcm' declared_type='NSDecimal' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='decimalNumberWithMantissa:exponent:isNegative:'>
<arg type='Q' name='mantissa' declared_type='unsigned long long' index='0'/>
<arg type='s' name='exponent' declared_type='short' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='decimalNumberWithString:'>
<arg type='@' name='numberValue' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='decimalNumberWithString:locale:'>
<arg type='@' name='numberValue' declared_type='NSString*' index='0'/>
<arg type='@' name='locale' declared_type='id' index='1'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method class_method='true' selector='defaultBehavior'>
<retval type='@' declared_type='id'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='initWithDecimal:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='dcm' declared_type='NSDecimal' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMantissa:exponent:isNegative:'>
<arg type='Q' name='mantissa' declared_type='unsigned long long' index='0'/>
<arg type='s' name='exponent' declared_type='short' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='numberValue' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:locale:'>
<arg type='@' name='numberValue' declared_type='NSString*' index='0'/>
<arg type='@' name='locale' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='maximumDecimalNumber'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='minimumDecimalNumber'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='notANumber'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='objCType'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method class_method='true' selector='one'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='setDefaultBehavior:'>
<arg type='@' name='behavior' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='zero'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
</class>
<class name='NSDecimalNumberHandler'>
<method class_method='true' selector='decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg type='I' type64='Q' name='roundingMode' declared_type='NSRoundingMode' index='0'/>
<arg type='s' name='scale' declared_type='short' index='1'/>
<arg type='B' name='exact' declared_type='BOOL' index='2'/>
<arg type='B' name='overflow' declared_type='BOOL' index='3'/>
<arg type='B' name='underflow' declared_type='BOOL' index='4'/>
<arg type='B' name='divideByZero' declared_type='BOOL' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='defaultDecimalNumberHandler'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg type='I' type64='Q' name='roundingMode' declared_type='NSRoundingMode' index='0'/>
<arg type='s' name='scale' declared_type='short' index='1'/>
<arg type='B' name='exact' declared_type='BOOL' index='2'/>
<arg type='B' name='overflow' declared_type='BOOL' index='3'/>
<arg type='B' name='underflow' declared_type='BOOL' index='4'/>
<arg type='B' name='divideByZero' declared_type='BOOL' index='5'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSDeleteCommand'>
<method selector='keySpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg type='@' name='receiversRef' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDictionary'>
<method selector='allKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allKeysForObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allValues'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='count'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionInStringsFileFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='level' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='dictionary'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithDictionary:'>
<arg type='@' name='dict' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithObject:forKey:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithObjects:forKeys:'>
<arg type='@' name='objects' declared_type='NSArray*' index='0'/>
<arg type='@' name='keys' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithObjects:forKeys:count:'>
<arg type='^@' const='true' name='objects' declared_type='id*' index='0'/>
<arg type='^@' const='true' name='keys' declared_type='id*' index='1'/>
<arg type='I' type64='Q' name='cnt' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithObjectsAndKeys:' variadic='true' sentinel='0'>
<arg type='@' name='firstObject' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='enumerateKeysAndObjectsUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, id, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateKeysAndObjectsWithOptions:usingBlock:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, id, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='fileCreationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='fileExtensionHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileGroupOwnerAccountID'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='fileGroupOwnerAccountName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileHFSCreatorCode'>
<retval type='L' type64='I' declared_type='OSType'/>
</method>
<method selector='fileHFSTypeCode'>
<retval type='L' type64='I' declared_type='OSType'/>
</method>
<method selector='fileIsAppendOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileIsImmutable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileModificationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='fileOwnerAccountID'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='fileOwnerAccountName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='filePosixPermissions'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='fileSize'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='fileSystemFileNumber'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='fileSystemNumber'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='fileType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getObjects:andKeys:'>
<arg type='^@' name='objects' declared_type='id*' index='0'/>
<arg type='^@' name='keys' declared_type='id*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDictionary:'>
<arg type='@' name='otherDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDictionary:copyItems:'>
<arg type='@' name='otherDictionary' declared_type='NSDictionary*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:forKeys:'>
<arg type='@' name='objects' declared_type='NSArray*' index='0'/>
<arg type='@' name='keys' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:forKeys:count:'>
<arg type='^@' const='true' name='objects' declared_type='id*' index='0'/>
<arg type='^@' const='true' name='keys' declared_type='id*' index='1'/>
<arg type='I' type64='Q' name='cnt' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjectsAndKeys:' variadic='true' sentinel='0'>
<arg type='@' name='firstObject' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToDictionary:'>
<arg type='@' name='otherDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='keysOfEntriesPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, id, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='keysOfEntriesWithOptions:passingTest:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, id, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='keysSortedByValueUsingComparator:'>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='keysSortedByValueUsingSelector:'>
<arg type=':' name='comparator' declared_type='SEL' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='keysSortedByValueWithOptions:usingComparator:'>
<arg type='I' type64='Q' name='opts' declared_type='NSSortOptions' index='0'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='aKey' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg type='@' name='key' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectsForKeys:notFoundMarker:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<arg type='@' name='marker' declared_type='id' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='sharedKeySetForKeys:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='writeToFile:atomically:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='atomically' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSDirectoryEnumerator'>
<method selector='directoryAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='level'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='skipDescendants'>
<retval type='v' declared_type='void'/>
</method>
<method selector='skipDescendents'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDistantObject'>
<method selector='connectionForProxy'>
<retval type='@' declared_type='NSConnection*'/>
</method>
<method selector='initWithLocal:connection:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<arg type='@' name='connection' declared_type='NSConnection*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:connection:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<arg type='@' name='connection' declared_type='NSConnection*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='proxyWithLocal:connection:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<arg type='@' name='connection' declared_type='NSConnection*' index='1'/>
<retval type='@' declared_type='NSDistantObject*'/>
</method>
<method class_method='true' selector='proxyWithTarget:connection:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<arg type='@' name='connection' declared_type='NSConnection*' index='1'/>
<retval type='@' declared_type='NSDistantObject*'/>
</method>
<method selector='setProtocolForProxy:'>
<arg type='@' name='proto' declared_type='Protocol*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDistantObjectRequest'>
<method selector='connection'>
<retval type='@' declared_type='NSConnection*'/>
</method>
<method selector='conversation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='invocation'>
<retval type='@' declared_type='NSInvocation*'/>
</method>
<method selector='replyWithException:'>
<arg type='@' name='exception' declared_type='NSException*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDistributedLock'>
<method selector='breakLock'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lockDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='lockWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDistributedLock*'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unlock'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDistributedNotificationCenter'>
<method selector='addObserver:selector:name:object:'>
<arg type='@' name='observer' declared_type='id' index='0'/>
<arg type=':' name='aSelector' declared_type='SEL' index='1'/>
<arg type='@' name='aName' declared_type='NSString*' index='2'/>
<arg type='@' name='anObject' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserver:selector:name:object:suspensionBehavior:'>
<arg type='@' name='observer' declared_type='id' index='0'/>
<arg type=':' name='selector' declared_type='SEL' index='1'/>
<arg type='@' name='name' declared_type='NSString*' index='2'/>
<arg type='@' name='object' declared_type='NSString*' index='3'/>
<arg type='I' type64='Q' name='suspensionBehavior' declared_type='NSNotificationSuspensionBehavior' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='defaultCenter'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='notificationCenterForType:'>
<arg type='@' name='notificationCenterType' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDistributedNotificationCenter*'/>
</method>
<method selector='postNotificationName:object:'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='anObject' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:userInfo:'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='anObject' declared_type='NSString*' index='1'/>
<arg type='@' name='aUserInfo' declared_type='NSDictionary*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:userInfo:deliverImmediately:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='object' declared_type='NSString*' index='1'/>
<arg type='@' name='userInfo' declared_type='NSDictionary*' index='2'/>
<arg type='B' name='deliverImmediately' declared_type='BOOL' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:userInfo:options:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='object' declared_type='NSString*' index='1'/>
<arg type='@' name='userInfo' declared_type='NSDictionary*' index='2'/>
<arg type='I' type64='Q' name='options' declared_type='NSUInteger' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:name:object:'>
<arg type='@' name='observer' declared_type='id' index='0'/>
<arg type='@' name='aName' declared_type='NSString*' index='1'/>
<arg type='@' name='anObject' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuspended:'>
<arg type='B' name='suspended' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='suspended'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSEnumerator'>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='nextObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSError'>
<method selector='code'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='domain'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='errorWithDomain:code:userInfo:'>
<arg type='@' name='domain' declared_type='NSString*' index='0'/>
<arg type='i' type64='q' name='code' declared_type='NSInteger' index='1'/>
<arg type='@' name='dict' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='helpAnchor'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithDomain:code:userInfo:'>
<arg type='@' name='domain' declared_type='NSString*' index='0'/>
<arg type='i' type64='q' name='code' declared_type='NSInteger' index='1'/>
<arg type='@' name='dict' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='localizedDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedFailureReason'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedRecoveryOptions'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedRecoverySuggestion'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='recoveryAttempter'>
<retval type='@' declared_type='id'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSException'>
<method selector='callStackReturnAddresses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='callStackSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='exceptionWithName:reason:userInfo:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='reason' declared_type='NSString*' index='1'/>
<arg type='@' name='userInfo' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='NSException*'/>
</method>
<method selector='initWithName:reason:userInfo:'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='aReason' declared_type='NSString*' index='1'/>
<arg type='@' name='aUserInfo' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='raise'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='raise:format:' variadic='true'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='raise:format:arguments:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='1'/>
<arg type='*' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' name='argList' declared_type='va_list' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reason'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSExpression'>
<method selector='arguments'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='collection'>
<retval type='@' declared_type='id'/>
</method>
<method selector='constantValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='expressionBlock'>
<retval type='@?' function_pointer='true' declared_type='id (^)(id, NSArray *, NSMutableDictionary *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSArray*'/>
<arg type='@' declared_type='NSMutableDictionary*'/>
<retval type='@' declared_type='id'/>
</retval>
</method>
<method class_method='true' selector='expressionForAggregate:'>
<arg type='@' name='subexpressions' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForBlock:arguments:'>
<arg type='@?' name='block' function_pointer='true' declared_type='id (^)(id, NSArray *, NSMutableDictionary *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSArray*'/>
<arg type='@' declared_type='NSMutableDictionary*'/>
<retval type='@' declared_type='id'/>
</arg>
<arg type='@' name='arguments' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForConstantValue:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForEvaluatedObject'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForFunction:arguments:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='parameters' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForFunction:selectorName:arguments:'>
<arg type='@' name='target' declared_type='NSExpression*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='parameters' declared_type='NSArray*' index='2'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForIntersectSet:with:'>
<arg type='@' name='left' declared_type='NSExpression*' index='0'/>
<arg type='@' name='right' declared_type='NSExpression*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForMinusSet:with:'>
<arg type='@' name='left' declared_type='NSExpression*' index='0'/>
<arg type='@' name='right' declared_type='NSExpression*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForSubquery:usingIteratorVariable:predicate:'>
<arg type='@' name='expression' declared_type='NSExpression*' index='0'/>
<arg type='@' name='variable' declared_type='NSString*' index='1'/>
<arg type='@' name='predicate' declared_type='id' index='2'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForUnionSet:with:'>
<arg type='@' name='left' declared_type='NSExpression*' index='0'/>
<arg type='@' name='right' declared_type='NSExpression*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForVariable:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionType'>
<retval type='I' type64='Q' declared_type='NSExpressionType'/>
</method>
<method selector='expressionValueWithObject:context:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='@' name='context' declared_type='NSMutableDictionary*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='expressionWithFormat:' variadic='true'>
<arg type='@' name='expressionFormat' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionWithFormat:argumentArray:'>
<arg type='@' name='expressionFormat' declared_type='NSString*' index='0'/>
<arg type='@' name='arguments' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionWithFormat:arguments:'>
<arg type='@' name='expressionFormat' declared_type='NSString*' index='0'/>
<arg type='*' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' name='argList' declared_type='va_list' index='1'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='function'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithExpressionType:'>
<arg type='I' type64='Q' name='type' declared_type='NSExpressionType' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='keyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='leftExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='operand'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='predicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='rightExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='variable'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSFileCoordinator'>
<method class_method='true' selector='addFilePresenter:'>
<arg type='@' name='filePresenter' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateReadingItemAtURL:options:error:byAccessor:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSFileCoordinatorReadingOptions' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' index='2'/>
<arg type='@?' name='reader' function_pointer='true' declared_type='void (^)(NSURL *)' index='3'>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'>
<arg type='@' name='readingURL' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='readingOptions' declared_type='NSFileCoordinatorReadingOptions' index='1'/>
<arg type='@' name='writingURL' declared_type='NSURL*' index='2'/>
<arg type='I' type64='Q' name='writingOptions' declared_type='NSFileCoordinatorWritingOptions' index='3'/>
<arg type='^@' name='outError' declared_type='NSError**' index='4'/>
<arg type='@?' name='readerWriter' function_pointer='true' declared_type='void (^)(NSURL *, NSURL *)' index='5'>
<arg type='@' declared_type='NSURL*'/>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateWritingItemAtURL:options:error:byAccessor:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSFileCoordinatorWritingOptions' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' index='2'/>
<arg type='@?' name='writer' function_pointer='true' declared_type='void (^)(NSURL *)' index='3'>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'>
<arg type='@' name='url1' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='options1' declared_type='NSFileCoordinatorWritingOptions' index='1'/>
<arg type='@' name='url2' declared_type='NSURL*' index='2'/>
<arg type='I' type64='Q' name='options2' declared_type='NSFileCoordinatorWritingOptions' index='3'/>
<arg type='^@' name='outError' declared_type='NSError**' index='4'/>
<arg type='@?' name='writer' function_pointer='true' declared_type='void (^)(NSURL *, NSURL *)' index='5'>
<arg type='@' declared_type='NSURL*'/>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='filePresenters'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithFilePresenter:'>
<arg type='@' name='filePresenterOrNil' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemAtURL:didMoveToURL:'>
<arg type='@' name='oldURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='newURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='itemAtURL:willMoveToURL:'>
<arg type='@' name='oldURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='newURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:'>
<arg type='@' name='readingURLs' declared_type='NSArray*' index='0'/>
<arg type='I' type64='Q' name='readingOptions' declared_type='NSFileCoordinatorReadingOptions' index='1'/>
<arg type='@' name='writingURLs' declared_type='NSArray*' index='2'/>
<arg type='I' type64='Q' name='writingOptions' declared_type='NSFileCoordinatorWritingOptions' index='3'/>
<arg type='^@' name='outError' declared_type='NSError**' index='4'/>
<arg type='@?' name='batchAccessor' function_pointer='true' declared_type='void (^)(void (^)(void))' index='5'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='removeFilePresenter:'>
<arg type='@' name='filePresenter' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSFileHandle'>
<method selector='acceptConnectionInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='acceptConnectionInBackgroundAndNotifyForModes:'>
<arg type='@' name='modes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='availableData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='closeFile'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fileDescriptor'>
<retval type='i' declared_type='int'/>
</method>
<method class_method='true' selector='fileHandleForReadingAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleForReadingFromURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleForUpdatingAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleForUpdatingURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleForWritingAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleForWritingToURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleWithNullDevice'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleWithStandardError'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleWithStandardInput'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleWithStandardOutput'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFileDescriptor:'>
<arg type='i' name='fd' declared_type='int' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFileDescriptor:closeOnDealloc:'>
<arg type='i' name='fd' declared_type='int' index='0'/>
<arg type='B' name='closeopt' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='offsetInFile'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='readDataOfLength:'>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='readDataToEndOfFile'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='readInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='readInBackgroundAndNotifyForModes:'>
<arg type='@' name='modes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='readToEndOfFileInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='readToEndOfFileInBackgroundAndNotifyForModes:'>
<arg type='@' name='modes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='readabilityHandler'>
<retval type='@?' function_pointer='true' declared_type='void (^)(NSFileHandle *)'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='seekToEndOfFile'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='seekToFileOffset:'>
<arg type='Q' name='offset' declared_type='unsigned long long' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReadabilityHandler:'>
<arg type='@?' name='readabilityHandler' function_pointer='true' declared_type='void (^)(NSFileHandle *)' index='0'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWriteabilityHandler:'>
<arg type='@?' name='writeabilityHandler' function_pointer='true' declared_type='void (^)(NSFileHandle *)' index='0'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='synchronizeFile'>
<retval type='v' declared_type='void'/>
</method>
<method selector='truncateFileAtOffset:'>
<arg type='Q' name='offset' declared_type='unsigned long long' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitForDataInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitForDataInBackgroundAndNotifyForModes:'>
<arg type='@' name='modes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writeData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writeabilityHandler'>
<retval type='@?' function_pointer='true' declared_type='void (^)(NSFileHandle *)'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
</class>
<class name='NSFileManager'>
<method selector='URLForDirectory:inDomain:appropriateForURL:create:error:'>
<arg type='I' type64='Q' name='directory' declared_type='NSSearchPathDirectory' index='0'/>
<arg type='I' type64='Q' name='domain' declared_type='NSSearchPathDomainMask' index='1'/>
<arg type='@' name='url' declared_type='NSURL*' index='2'/>
<arg type='B' name='shouldCreate' declared_type='BOOL' index='3'/>
<arg type='^@' name='error' declared_type='NSError**' index='4'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForPublishingUbiquitousItemAtURL:expirationDate:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='outDate' declared_type='NSDate**' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForUbiquityContainerIdentifier:'>
<arg type='@' name='containerIdentifier' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLsForDirectory:inDomains:'>
<arg type='I' type64='Q' name='directory' declared_type='NSSearchPathDirectory' index='0'/>
<arg type='I' type64='Q' name='domainMask' declared_type='NSSearchPathDomainMask' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='attributesOfFileSystemForPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='attributesOfItemAtPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='changeCurrentDirectoryPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='changeFileAttributes:atPath:'>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='componentsToDisplayForPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='contentsAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='contentsEqualAtPath:andPath:'>
<arg type='@' name='path1' declared_type='NSString*' index='0'/>
<arg type='@' name='path2' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='contentsOfDirectoryAtPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='keys' declared_type='NSArray*' index='1'/>
<arg type='I' type64='Q' name='mask' declared_type='NSDirectoryEnumerationOptions' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='copyItemAtPath:toPath:error:'>
<arg type='@' name='srcPath' declared_type='NSString*' index='0'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='copyItemAtURL:toURL:error:'>
<arg type='@' name='srcURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='copyPath:toPath:handler:'>
<arg type='@' name='src' declared_type='NSString*' index='0'/>
<arg type='@' name='dest' declared_type='NSString*' index='1'/>
<arg type='@' name='handler' declared_type='id' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createDirectoryAtPath:attributes:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createDirectoryAtPath:withIntermediateDirectories:attributes:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='createIntermediates' declared_type='BOOL' index='1'/>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createDirectoryAtURL:withIntermediateDirectories:attributes:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='createIntermediates' declared_type='BOOL' index='1'/>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createFileAtPath:contents:attributes:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<arg type='@' name='attr' declared_type='NSDictionary*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createSymbolicLinkAtPath:pathContent:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='otherpath' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createSymbolicLinkAtPath:withDestinationPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='destPath' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createSymbolicLinkAtURL:withDestinationURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='destURL' declared_type='NSURL*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='currentDirectoryPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='defaultManager'>
<retval type='@' declared_type='NSFileManager*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='destinationOfSymbolicLinkAtPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='directoryContentsAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='displayNameAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumeratorAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDirectoryEnumerator*'/>
</method>
<method selector='enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='keys' declared_type='NSArray*' index='1'/>
<arg type='I' type64='Q' name='mask' declared_type='NSDirectoryEnumerationOptions' index='2'/>
<arg type='@?' name='handler' function_pointer='true' declared_type='BOOL (^)(NSURL *, NSError *)' index='3'>
<arg type='@' declared_type='NSURL*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSDirectoryEnumerator*'/>
</method>
<method selector='evictUbiquitousItemAtURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileAttributesAtPath:traverseLink:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='yorn' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileExistsAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileExistsAtPath:isDirectory:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^B' name='isDirectory' declared_type='BOOL*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileSystemAttributesAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileSystemRepresentationWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='isDeletableFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExecutableFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReadableFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUbiquitousItemAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isWritableFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='linkItemAtPath:toPath:error:'>
<arg type='@' name='srcPath' declared_type='NSString*' index='0'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='linkItemAtURL:toURL:error:'>
<arg type='@' name='srcURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='linkPath:toPath:handler:'>
<arg type='@' name='src' declared_type='NSString*' index='0'/>
<arg type='@' name='dest' declared_type='NSString*' index='1'/>
<arg type='@' name='handler' declared_type='id' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mountedVolumeURLsIncludingResourceValuesForKeys:options:'>
<arg type='@' name='propertyKeys' declared_type='NSArray*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSVolumeEnumerationOptions' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='moveItemAtPath:toPath:error:'>
<arg type='@' name='srcPath' declared_type='NSString*' index='0'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='moveItemAtURL:toURL:error:'>
<arg type='@' name='srcURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='movePath:toPath:handler:'>
<arg type='@' name='src' declared_type='NSString*' index='0'/>
<arg type='@' name='dest' declared_type='NSString*' index='1'/>
<arg type='@' name='handler' declared_type='id' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pathContentOfSymbolicLinkAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='removeFileAtPath:handler:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='handler' declared_type='id' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeItemAtPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeItemAtURL:error:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:'>
<arg type='@' name='originalItemURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='newItemURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='backupItemName' declared_type='NSString*' index='2'/>
<arg type='I' type64='Q' name='options' declared_type='NSFileManagerItemReplacementOptions' index='3'/>
<arg type='^@' name='resultingURL' declared_type='NSURL**' index='4'/>
<arg type='^@' name='error' declared_type='NSError**' index='5'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAttributes:ofItemAtPath:error:'>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUbiquitous:itemAtURL:destinationURL:error:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<arg type='@' name='url' declared_type='NSURL*' index='1'/>
<arg type='@' name='destinationURL' declared_type='NSURL*' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='startDownloadingUbiquitousItemAtURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stringWithFileSystemRepresentation:length:'>
<arg type='*' const='true' name='str' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='len' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='subpathsAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='subpathsOfDirectoryAtPath:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='trashItemAtURL:resultingItemURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='outResultingURL' declared_type='NSURL**' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ubiquityIdentityToken'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSFileVersion'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='addVersionOfItemAtURL:withContentsOfURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='contentsURL' declared_type='NSURL*' index='1'/>
<arg type='I' type64='Q' name='options' declared_type='NSFileVersionAddingOptions' index='2'/>
<arg type='^@' name='outError' declared_type='NSError**' index='3'/>
<retval type='@' declared_type='NSFileVersion*'/>
</method>
<method class_method='true' selector='currentVersionOfItemAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSFileVersion*'/>
</method>
<method selector='isConflict'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDiscardable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isResolved'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizedName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedNameOfSavingComputer'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='modificationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='otherVersionsOfItemAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='persistentIdentifier'>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAndReturnError:'>
<arg type='^@' name='outError' declared_type='NSError**' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='removeOtherVersionsOfItemAtURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='outError' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='replaceItemAtURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSFileVersionReplacingOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='setDiscardable:'>
<arg type='B' name='discardable' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResolved:'>
<arg type='B' name='resolved' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='temporaryDirectoryURLForNewVersionOfItemAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='unresolvedConflictVersionsOfItemAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='versionOfItemAtURL:forPersistentIdentifier:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='persistentIdentifier' declared_type='id' index='1'/>
<retval type='@' declared_type='NSFileVersion*'/>
</method>
</class>
<class name='NSFileWrapper'>
<method selector='addFileWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addFileWrapper:'>
<arg type='@' name='child' declared_type='NSFileWrapper*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addRegularFileWithContents:preferredFilename:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='@' name='fileName' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addSymbolicLinkWithDestination:preferredFilename:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='filename' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileWrappers'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='filename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initDirectoryWithFileWrappers:'>
<arg type='@' name='childrenByPreferredName' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRegularFileWithContents:'>
<arg type='@' name='contents' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initSymbolicLinkWithDestination:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initSymbolicLinkWithDestinationURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSerializedRepresentation:'>
<arg type='@' name='serializeRepresentation' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSFileWrapperReadingOptions' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDirectory'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRegularFile'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSymbolicLink'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyForFileWrapper:'>
<arg type='@' name='child' declared_type='NSFileWrapper*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='matchesContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='needsToBeUpdatedFromPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='preferredFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='readFromURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSFileWrapperReadingOptions' index='1'/>
<arg type='^@' name='outError' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='regularFileContents'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='removeFileWrapper:'>
<arg type='@' name='child' declared_type='NSFileWrapper*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='serializedRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='setFileAttributes:'>
<arg type='@' name='fileAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFilename:'>
<arg type='@' name='fileName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredFilename:'>
<arg type='@' name='fileName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='symbolicLinkDestination'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='symbolicLinkDestinationURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='updateFromPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToFile:atomically:updateFilenames:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='atomicFlag' declared_type='BOOL' index='1'/>
<arg type='B' name='updateFilenamesFlag' declared_type='BOOL' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:options:originalContentsURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSFileWrapperWritingOptions' index='1'/>
<arg type='@' name='originalContentsURL' declared_type='NSURL*' index='2'/>
<arg type='^@' name='outError' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSFormatter'>
<method selector='attributedStringForObjectValue:withDefaultAttributes:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='@' name='attrs' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='editingStringForObjectValue:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getObjectValue:forString:errorDescription:'>
<arg type='^@' type_modifier='o' name='obj' declared_type='id*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<arg type='^@' type_modifier='o' name='error' declared_type='NSString**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPartialStringValid:newEditingString:errorDescription:'>
<arg type='@' name='partialString' declared_type='NSString*' index='0'/>
<arg type='^@' name='newString' declared_type='NSString**' index='1'/>
<arg type='^@' name='error' declared_type='NSString**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:'>
<arg type='^@' name='partialStringPtr' declared_type='NSString**' index='0'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='proposedSelRangePtr' declared_type='NSRangePointer' index='1'/>
<arg type='@' name='origString' declared_type='NSString*' index='2'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='origSelRange' declared_type='NSRange' index='3'/>
<arg type='^@' name='error' declared_type='NSString**' index='4'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stringForObjectValue:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSGarbageCollector'>
<method selector='collectExhaustively'>
<retval type='v' declared_type='void'/>
</method>
<method selector='collectIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='defaultCollector'>
<retval type='@' declared_type='id'/>
</method>
<method selector='disable'>
<retval type='v' declared_type='void'/>
</method>
<method selector='disableCollectorForPointer:'>
<arg type='^v' const='true' name='ptr' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enable'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableCollectorForPointer:'>
<arg type='^v' const='true' name='ptr' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isCollecting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='zone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
</class>
<class name='NSHTTPCookie'>
<method selector='comment'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='commentURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='cookieWithProperties:'>
<arg type='@' name='properties' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='cookiesWithResponseHeaderFields:forURL:'>
<arg type='@' name='headerFields' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='URL' declared_type='NSURL*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='domain'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='expiresDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='initWithProperties:'>
<arg type='@' name='properties' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isHTTPOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSecure'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSessionOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='path'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='portList'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='requestHeaderFieldsWithCookies:'>
<arg type='@' name='cookies' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='value'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='version'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSHTTPCookieStorage'>
<method selector='cookieAcceptPolicy'>
<retval type='I' type64='Q' declared_type='NSHTTPCookieAcceptPolicy'/>
</method>
<method selector='cookies'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cookiesForURL:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='deleteCookie:'>
<arg type='@' name='cookie' declared_type='NSHTTPCookie*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCookie:'>
<arg type='@' name='cookie' declared_type='NSHTTPCookie*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCookieAcceptPolicy:'>
<arg type='I' type64='Q' name='cookieAcceptPolicy' declared_type='NSHTTPCookieAcceptPolicy' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCookies:forURL:mainDocumentURL:'>
<arg type='@' name='cookies' declared_type='NSArray*' index='0'/>
<arg type='@' name='URL' declared_type='NSURL*' index='1'/>
<arg type='@' name='mainDocumentURL' declared_type='NSURL*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedHTTPCookieStorage'>
<retval type='@' declared_type='NSHTTPCookieStorage*'/>
</method>
<method selector='sortedCookiesUsingDescriptors:'>
<arg type='@' name='sortOrder' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSHTTPURLResponse'>
<method selector='allHeaderFields'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initWithURL:statusCode:HTTPVersion:headerFields:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='i' type64='q' name='statusCode' declared_type='NSInteger' index='1'/>
<arg type='@' name='HTTPVersion' declared_type='NSString*' index='2'/>
<arg type='@' name='headerFields' declared_type='NSDictionary*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='localizedStringForStatusCode:'>
<arg type='i' type64='q' name='statusCode' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='statusCode'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</class>
<class name='NSHashTable'>
<method selector='addObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='anyObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='containsObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='hashTableWithOptions:'>
<arg type='I' type64='Q' name='options' declared_type='NSPointerFunctionsOptions' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='hashTableWithWeakObjects'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOptions:capacity:'>
<arg type='I' type64='Q' name='options' declared_type='NSPointerFunctionsOptions' index='0'/>
<arg type='I' type64='Q' name='initialCapacity' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPointerFunctions:capacity:'>
<arg type='@' name='functions' declared_type='NSPointerFunctions*' index='0'/>
<arg type='I' type64='Q' name='initialCapacity' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectHashTable:'>
<arg type='@' name='other' declared_type='NSHashTable*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intersectsHashTable:'>
<arg type='@' name='other' declared_type='NSHashTable*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToHashTable:'>
<arg type='@' name='other' declared_type='NSHashTable*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfHashTable:'>
<arg type='@' name='other' declared_type='NSHashTable*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='member:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='minusHashTable:'>
<arg type='@' name='other' declared_type='NSHashTable*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='pointerFunctions'>
<retval type='@' declared_type='NSPointerFunctions*'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepresentation'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='unionHashTable:'>
<arg type='@' name='other' declared_type='NSHashTable*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='weakObjectsHashTable'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSHost'>
<method selector='address'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addresses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='currentHost'>
<retval type='@' declared_type='NSHost*'/>
</method>
<method class_method='true' selector='flushHostCache'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='hostWithAddress:'>
<arg type='@' name='address' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSHost*'/>
</method>
<method class_method='true' selector='hostWithName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSHost*'/>
</method>
<method selector='isEqualToHost:'>
<arg type='@' name='aHost' declared_type='NSHost*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='isHostCacheEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizedName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='names'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='setHostCacheEnabled:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSIndexPath'>
<method selector='compare:'>
<arg type='@' name='otherObject' declared_type='NSIndexPath*' index='0'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method selector='getIndexes:'>
<arg type='^I' type64='^Q' name='indexes' declared_type='NSUInteger*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexAtPosition:'>
<arg type='I' type64='Q' name='position' declared_type='NSUInteger' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexPathByAddingIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='indexPathByRemovingLastIndex'>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method class_method='true' selector='indexPathWithIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='indexPathWithIndexes:length:'>
<arg type='^I' const='true' type64='^Q' name='indexes' declared_type='NSUInteger*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndexes:length:'>
<arg type='^I' const='true' type64='^Q' name='indexes' declared_type='NSUInteger*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='length'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSIndexSet'>
<method selector='containsIndex:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsIndexes:'>
<arg type='@' name='indexSet' declared_type='NSIndexSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsIndexesInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='countOfIndexesInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='enumerateIndexesInRange:options:usingBlock:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSUInteger, BOOL *)' index='2'>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateIndexesUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSUInteger, BOOL *)' index='0'>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateIndexesWithOptions:usingBlock:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSUInteger, BOOL *)' index='1'>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateRangesInRange:options:usingBlock:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSRange, BOOL *)' index='2'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateRangesUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSRange, BOOL *)' index='0'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateRangesWithOptions:usingBlock:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSRange, BOOL *)' index='1'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstIndex'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='getIndexes:maxCount:inIndexRange:'>
<arg type='^I' type64='^Q' name='indexBuffer' declared_type='NSUInteger*' index='0'/>
<arg type='I' type64='Q' name='bufferSize' declared_type='NSUInteger' index='1'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='range' declared_type='NSRangePointer' index='2'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexGreaterThanIndex:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexGreaterThanOrEqualToIndex:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexInRange:options:passingTest:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='2'>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexLessThanIndex:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexLessThanOrEqualToIndex:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='0'>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='indexSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='indexSetWithIndex:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='indexSetWithIndexesInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='indexWithOptions:passingTest:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='1'>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexesInRange:options:passingTest:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='2'>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='0'>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesWithOptions:passingTest:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(NSUInteger, BOOL *)' index='1'>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndex:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndexSet:'>
<arg type='@' name='indexSet' declared_type='NSIndexSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndexesInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectsIndexesInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToIndexSet:'>
<arg type='@' name='indexSet' declared_type='NSIndexSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastIndex'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSIndexSpecifier'>
<method selector='index'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:index:'>
<arg type='@' name='classDesc' declared_type='NSScriptClassDescription*' index='0'/>
<arg type='@' name='container' declared_type='NSScriptObjectSpecifier*' index='1'/>
<arg type='@' name='property' declared_type='NSString*' index='2'/>
<arg type='i' type64='q' name='index' declared_type='NSInteger' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setIndex:'>
<arg type='i' type64='q' name='index' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSInputStream'>
<method selector='getBuffer:length:'>
<arg type='^*' name='buffer' declared_type='uint8_t**' index='0'/>
<arg type='^I' type64='^Q' name='len' declared_type='NSUInteger*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasBytesAvailable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='inputStreamWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='inputStreamWithFileAtPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='inputStreamWithURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='read:maxLength:'>
<arg type='*' name='buffer' declared_type='uint8_t*' index='0'/>
<arg type='I' type64='Q' name='len' declared_type='NSUInteger' index='1'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</class>
<class name='NSInvocation'>
<method selector='argumentsRetained'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getArgument:atIndex:'>
<arg type='^v' name='argumentLocation' declared_type='void*' index='0'/>
<arg type='i' type64='q' name='idx' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getReturnValue:'>
<arg type='^v' name='retLoc' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='invocationWithMethodSignature:'>
<arg type='@' name='sig' declared_type='NSMethodSignature*' index='0'/>
<retval type='@' declared_type='NSInvocation*'/>
</method>
<method selector='invoke'>
<retval type='v' declared_type='void'/>
</method>
<method selector='invokeWithTarget:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='methodSignature'>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method selector='retainArguments'>
<retval type='v' declared_type='void'/>
</method>
<method selector='selector'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='setArgument:atIndex:'>
<arg type='^v' name='argumentLocation' declared_type='void*' index='0'/>
<arg type='i' type64='q' name='idx' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReturnValue:'>
<arg type='^v' name='retLoc' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelector:'>
<arg type=':' name='selector' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSInvocationOperation'>
<method selector='initWithInvocation:'>
<arg type='@' name='inv' declared_type='NSInvocation*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<arg type=':' name='sel' declared_type='SEL' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invocation'>
<retval type='@' declared_type='NSInvocation*'/>
</method>
<method selector='result'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSJSONSerialization'>
<method class_method='true' selector='JSONObjectWithData:options:error:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='I' type64='Q' name='opt' declared_type='NSJSONReadingOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='JSONObjectWithStream:options:error:'>
<arg type='@' name='stream' declared_type='NSInputStream*' index='0'/>
<arg type='I' type64='Q' name='opt' declared_type='NSJSONReadingOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithJSONObject:options:error:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='opt' declared_type='NSJSONWritingOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='isValidJSONObject:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='writeJSONObject:toStream:options:error:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='@' name='stream' declared_type='NSOutputStream*' index='1'/>
<arg type='I' type64='Q' name='opt' declared_type='NSJSONWritingOptions' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</class>
<class name='NSKeyedArchiver'>
<method class_method='true' selector='archiveRootObject:toFile:'>
<arg type='@' name='rootObject' declared_type='id' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='archivedDataWithRootObject:'>
<arg type='@' name='rootObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='classNameForClass:'>
<arg type='#' name='cls' declared_type='Class' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='classNameForClass:'>
<arg type='#' name='cls' declared_type='Class' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='encodeBool:forKey:'>
<arg type='B' name='boolv' declared_type='BOOL' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBytes:length:forKey:'>
<arg type='*' const='true' name='bytesp' declared_type='uint8_t*' index='0'/>
<arg type='I' type64='Q' name='lenv' declared_type='NSUInteger' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:forKey:'>
<arg type='@' name='objv' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDouble:forKey:'>
<arg type='d' name='realv' declared_type='double' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeFloat:forKey:'>
<arg type='f' name='realv' declared_type='float' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt32:forKey:'>
<arg type='i' name='intv' declared_type='int32_t' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt64:forKey:'>
<arg type='q' name='intv' declared_type='int64_t' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt:forKey:'>
<arg type='i' name='intv' declared_type='int' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeObject:forKey:'>
<arg type='@' name='objv' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='finishEncoding'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initForWritingWithMutableData:'>
<arg type='@' name='data' declared_type='NSMutableData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outputFormat'>
<retval type='I' type64='Q' declared_type='NSPropertyListFormat'/>
</method>
<method class_method='true' selector='setClassName:forClass:'>
<arg type='@' name='codedName' declared_type='NSString*' index='0'/>
<arg type='#' name='cls' declared_type='Class' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClassName:forClass:'>
<arg type='@' name='codedName' declared_type='NSString*' index='0'/>
<arg type='#' name='cls' declared_type='Class' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOutputFormat:'>
<arg type='I' type64='Q' name='format' declared_type='NSPropertyListFormat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSKeyedUnarchiver'>
<method class_method='true' selector='classForClassName:'>
<arg type='@' name='codedName' declared_type='NSString*' index='0'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForClassName:'>
<arg type='@' name='codedName' declared_type='NSString*' index='0'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='containsValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeBoolForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeBytesForKey:returnedLength:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='^I' type64='^Q' name='lengthp' declared_type='NSUInteger*' index='1'/>
<retval type='*' const='true' declared_type='uint8_t*'/>
</method>
<method selector='decodeDoubleForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='decodeFloatForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='decodeInt32ForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='int32_t'/>
</method>
<method selector='decodeInt64ForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='q' declared_type='int64_t'/>
</method>
<method selector='decodeIntForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='i' declared_type='int'/>
</method>
<method selector='decodeObjectForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='finishDecoding'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initForReadingWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setClass:forClassName:'>
<arg type='#' name='cls' declared_type='Class' index='0'/>
<arg type='@' name='codedName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClass:forClassName:'>
<arg type='#' name='cls' declared_type='Class' index='0'/>
<arg type='@' name='codedName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='unarchiveObjectWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='unarchiveObjectWithFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSLinguisticTagger'>
<method class_method='true' selector='availableTagSchemesForLanguage:'>
<arg type='@' name='language' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='enumerateTagsInRange:scheme:options:usingBlock:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='opts' declared_type='NSLinguisticTaggerOptions' index='2'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSString *, NSRange, NSRange, BOOL *)' index='3'>
<arg type='@' declared_type='NSString*'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTagSchemes:options:'>
<arg type='@' name='tagSchemes' declared_type='NSArray*' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='orthographyAtIndex:effectiveRange:'>
<arg type='I' type64='Q' name='charIndex' declared_type='NSUInteger' index='0'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='effectiveRange' declared_type='NSRangePointer' index='1'/>
<retval type='@' declared_type='NSOrthography*'/>
</method>
<method selector='possibleTagsAtIndex:scheme:tokenRange:sentenceRange:scores:'>
<arg type='I' type64='Q' name='charIndex' declared_type='NSUInteger' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='tokenRange' declared_type='NSRangePointer' index='2'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='sentenceRange' declared_type='NSRangePointer' index='3'/>
<arg type='^@' name='scores' declared_type='NSArray**' index='4'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sentenceRangeForRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='setOrthography:range:'>
<arg type='@' name='orthography' declared_type='NSOrthography*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringEditedInRange:changeInLength:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='newRange' declared_type='NSRange' index='0'/>
<arg type='i' type64='q' name='delta' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tagAtIndex:scheme:tokenRange:sentenceRange:'>
<arg type='I' type64='Q' name='charIndex' declared_type='NSUInteger' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='tokenRange' declared_type='NSRangePointer' index='2'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='sentenceRange' declared_type='NSRangePointer' index='3'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tagSchemes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tagsInRange:scheme:options:tokenRanges:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='opts' declared_type='NSLinguisticTaggerOptions' index='2'/>
<arg type='^@' name='tokenRanges' declared_type='NSArray**' index='3'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSLocale'>
<method class_method='true' selector='ISOCountryCodes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='ISOCurrencyCodes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='ISOLanguageCodes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='autoupdatingCurrentLocale'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='availableLocaleIdentifiers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='canonicalLanguageIdentifierFromString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='canonicalLocaleIdentifierFromString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='characterDirectionForLanguage:'>
<arg type='@' name='isoLangCode' declared_type='NSString*' index='0'/>
<retval type='I' type64='Q' declared_type='NSLocaleLanguageDirection'/>
</method>
<method class_method='true' selector='commonISOCurrencyCodes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='componentsFromLocaleIdentifier:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='currentLocale'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayNameForKey:value:'>
<arg type='@' name='key' declared_type='id' index='0'/>
<arg type='@' name='value' declared_type='id' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithLocaleIdentifier:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='lineDirectionForLanguage:'>
<arg type='@' name='isoLangCode' declared_type='NSString*' index='0'/>
<retval type='I' type64='Q' declared_type='NSLocaleLanguageDirection'/>
</method>
<method selector='localeIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='localeIdentifierFromComponents:'>
<arg type='@' name='dict' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='localeIdentifierFromWindowsLocaleCode:'>
<arg type='I' name='lcid' declared_type='uint32_t' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='key' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='preferredLanguages'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='systemLocale'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='windowsLocaleCodeFromLocaleIdentifier:'>
<arg type='@' name='localeIdentifier' declared_type='NSString*' index='0'/>
<retval type='I' declared_type='uint32_t'/>
</method>
</class>
<class name='NSLock'>
<method selector='lockBeforeDate:'>
<arg type='@' name='limit' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSLogicalTest'>
<method selector='initAndTestWithTests:'>
<arg type='@' name='subTests' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initNotTestWithTest:'>
<arg type='@' name='subTest' declared_type='NSScriptWhoseTest*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initOrTestWithTests:'>
<arg type='@' name='subTests' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMachBootstrapServer'>
<method selector='portForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portForName:host:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='host' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='registerPort:name:'>
<arg type='@' name='port' declared_type='NSPort*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='servicePortWithName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMachPort'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMachPort:'>
<arg type='I' name='machPort' declared_type='uint32_t' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMachPort:options:'>
<arg type='I' name='machPort' declared_type='uint32_t' index='0'/>
<arg type='I' type64='Q' name='f' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='machPort'>
<retval type='I' declared_type='uint32_t'/>
</method>
<method class_method='true' selector='portWithMachPort:'>
<arg type='I' name='machPort' declared_type='uint32_t' index='0'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method class_method='true' selector='portWithMachPort:options:'>
<arg type='I' name='machPort' declared_type='uint32_t' index='0'/>
<arg type='I' type64='Q' name='f' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg type='@' name='runLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='runLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMapTable'>
<method selector='count'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initWithKeyOptions:valueOptions:capacity:'>
<arg type='I' type64='Q' name='keyOptions' declared_type='NSPointerFunctionsOptions' index='0'/>
<arg type='I' type64='Q' name='valueOptions' declared_type='NSPointerFunctionsOptions' index='1'/>
<arg type='I' type64='Q' name='initialCapacity' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKeyPointerFunctions:valuePointerFunctions:capacity:'>
<arg type='@' name='keyFunctions' declared_type='NSPointerFunctions*' index='0'/>
<arg type='@' name='valueFunctions' declared_type='NSPointerFunctions*' index='1'/>
<arg type='I' type64='Q' name='initialCapacity' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='keyEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='keyPointerFunctions'>
<retval type='@' declared_type='NSPointerFunctions*'/>
</method>
<method class_method='true' selector='mapTableWithKeyOptions:valueOptions:'>
<arg type='I' type64='Q' name='keyOptions' declared_type='NSPointerFunctionsOptions' index='0'/>
<arg type='I' type64='Q' name='valueOptions' declared_type='NSPointerFunctionsOptions' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mapTableWithStrongToStrongObjects'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mapTableWithStrongToWeakObjects'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mapTableWithWeakToStrongObjects'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mapTableWithWeakToWeakObjects'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='aKey' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg type='@' name='aKey' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='@' name='aKey' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='strongToStrongObjectsMapTable'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='strongToWeakObjectsMapTable'>
<retval type='@' declared_type='id'/>
</method>
<method selector='valuePointerFunctions'>
<retval type='@' declared_type='NSPointerFunctions*'/>
</method>
<method class_method='true' selector='weakToStrongObjectsMapTable'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='weakToWeakObjectsMapTable'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMessagePortNameServer'>
<method selector='portForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portForName:host:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='host' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMetadataItem'>
<method selector='attributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForAttribute:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valuesForAttributes:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSMetadataQuery'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='disableUpdates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableUpdates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='groupedResults'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='groupingAttributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='indexOfResult:'>
<arg type='@' name='result' declared_type='id' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isGathering'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isStarted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isStopped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='notificationBatchingInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='predicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='resultAtIndex:'>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='resultCount'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='results'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='searchScopes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupingAttributes:'>
<arg type='@' name='attrs' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotificationBatchingInterval:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchScopes:'>
<arg type='@' name='scopes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSortDescriptors:'>
<arg type='@' name='descriptors' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValueListAttributes:'>
<arg type='@' name='attrs' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='startQuery'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stopQuery'>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueListAttributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueLists'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='valueOfAttribute:forResultAtIndex:'>
<arg type='@' name='attrName' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMetadataQueryAttributeValueTuple'>
<method selector='attribute'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='count'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='value'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMetadataQueryResultGroup'>
<method selector='attribute'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resultAtIndex:'>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='resultCount'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='results'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='subgroups'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='value'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMethodSignature'>
<method selector='frameLength'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='getArgumentTypeAtIndex:'>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='isOneway'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='methodReturnLength'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='methodReturnType'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='numberOfArguments'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='signatureWithObjCTypes:'>
<arg type='*' const='true' name='types' declared_type='char*' index='0'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
</class>
<class name='NSMoveCommand'>
<method selector='keySpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg type='@' name='receiversRef' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableArray'>
<method selector='addObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='arrayWithCapacity:'>
<arg type='I' type64='Q' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg type='I' type64='Q' name='idx1' declared_type='NSUInteger' index='0'/>
<arg type='I' type64='Q' name='idx2' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filterUsingPredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' type64='Q' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertObject:atIndex:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertObjects:atIndexes:'>
<arg type='@' name='objects' declared_type='NSArray*' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeLastObject'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:inRange:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectIdenticalTo:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectIdenticalTo:inRange:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsAtIndexes:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsFromIndices:numIndices:'>
<arg type='^I' type64='^Q' name='indices' declared_type='NSUInteger*' index='0'/>
<arg type='I' type64='Q' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='anObject' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsAtIndexes:withObjects:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<arg type='@' name='objects' declared_type='NSArray*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsInRange:withObjectsFromArray:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='otherArray' declared_type='NSArray*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsInRange:withObjectsFromArray:range:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='otherArray' declared_type='NSArray*' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='otherRange' declared_type='NSRange' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setArray:'>
<arg type='@' name='otherArray' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingComparator:'>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingDescriptors:'>
<arg type='@' name='sortDescriptors' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg type='^?' name='compare' function_pointer='true' declared_type='NSInteger (*)(id, id, void *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</arg>
<arg type='^v' name='context' declared_type='void*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingSelector:'>
<arg type=':' name='comparator' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortWithOptions:usingComparator:'>
<arg type='I' type64='Q' name='opts' declared_type='NSSortOptions' index='0'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='addAttribute:value:range:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='value' declared_type='id' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAttributes:range:'>
<arg type='@' name='attrs' declared_type='NSDictionary*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendAttributedString:'>
<arg type='@' name='attrString' declared_type='NSAttributedString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteCharactersInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertAttributedString:atIndex:'>
<arg type='@' name='attrString' declared_type='NSAttributedString*' index='0'/>
<arg type='I' type64='Q' name='loc' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mutableString'>
<retval type='@' declared_type='NSMutableString*'/>
</method>
<method selector='removeAttribute:range:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withAttributedString:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='attrString' declared_type='NSAttributedString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='str' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedString:'>
<arg type='@' name='attrString' declared_type='NSAttributedString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributes:range:'>
<arg type='@' name='attrs' declared_type='NSDictionary*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableCharacterSet'>
<method selector='addCharactersInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='aRange' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addCharactersInString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='formIntersectionWithCharacterSet:'>
<arg type='@' name='otherSet' declared_type='NSCharacterSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='formUnionWithCharacterSet:'>
<arg type='@' name='otherSet' declared_type='NSCharacterSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invert'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCharactersInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='aRange' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCharactersInString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableData'>
<method selector='appendBytes:length:'>
<arg type='^v' const='true' name='bytes' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendData:'>
<arg type='@' name='other' declared_type='NSData*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='dataWithCapacity:'>
<arg type='I' type64='Q' name='aNumItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithLength:'>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='increaseLengthBy:'>
<arg type='I' type64='Q' name='extraLength' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' type64='Q' name='capacity' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLength:'>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableBytes'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='replaceBytesInRange:withBytes:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='^v' const='true' name='bytes' declared_type='void*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceBytesInRange:withBytes:length:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='^v' const='true' name='replacementBytes' declared_type='void*' index='1'/>
<arg type='I' type64='Q' name='replacementLength' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resetBytesInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLength:'>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableDictionary'>
<method selector='addEntriesFromDictionary:'>
<arg type='@' name='otherDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='dictionaryWithCapacity:'>
<arg type='I' type64='Q' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithSharedKeySet:'>
<arg type='@' name='keyset' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' type64='Q' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg type='@' name='aKey' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg type='@' name='keyArray' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDictionary:'>
<arg type='@' name='otherDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='@' name='aKey' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKeyedSubscript:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableIndexSet'>
<method selector='addIndex:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addIndexes:'>
<arg type='@' name='indexSet' declared_type='NSIndexSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addIndexesInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllIndexes'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeIndex:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeIndexes:'>
<arg type='@' name='indexSet' declared_type='NSIndexSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeIndexesInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shiftIndexesStartingAtIndex:by:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='i' type64='q' name='delta' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableOrderedSet'>
<method selector='addObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjects:count:'>
<arg type='^@' const='true' name='objects' declared_type='id*' index='0'/>
<arg type='I' type64='Q' name='count' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg type='I' type64='Q' name='idx1' declared_type='NSUInteger' index='0'/>
<arg type='I' type64='Q' name='idx2' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' type64='Q' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertObject:atIndex:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertObjects:atIndexes:'>
<arg type='@' name='objects' declared_type='NSArray*' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intersectOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intersectSet:'>
<arg type='@' name='other' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minusOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minusSet:'>
<arg type='@' name='other' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveObjectsAtIndexes:toIndex:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='orderedSetWithCapacity:'>
<arg type='I' type64='Q' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsAtIndexes:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsAtIndexes:withObjects:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<arg type='@' name='objects' declared_type='NSArray*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsInRange:withObjects:count:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='^@' const='true' name='objects' declared_type='id*' index='1'/>
<arg type='I' type64='Q' name='count' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:atIndex:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortRange:options:usingComparator:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSSortOptions' index='1'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='2'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingComparator:'>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortWithOptions:usingComparator:'>
<arg type='I' type64='Q' name='opts' declared_type='NSSortOptions' index='0'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='unionOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unionSet:'>
<arg type='@' name='other' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableSet'>
<method selector='addObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filterUsingPredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' type64='Q' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minusSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setWithCapacity:'>
<arg type='I' type64='Q' name='numItems' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='unionSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableString'>
<method selector='appendFormat:' variadic='true'>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteCharactersInRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg type='I' type64='Q' name='capacity' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertString:atIndex:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='loc' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='aString' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceOccurrencesOfString:withString:options:range:'>
<arg type='@' name='target' declared_type='NSString*' index='0'/>
<arg type='@' name='replacement' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='options' declared_type='NSStringCompareOptions' index='2'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='searchRange' declared_type='NSRange' index='3'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='setString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='stringWithCapacity:'>
<arg type='I' type64='Q' name='capacity' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMutableURLRequest'>
<method selector='addValue:forHTTPHeaderField:'>
<arg type='@' name='value' declared_type='NSString*' index='0'/>
<arg type='@' name='field' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllHTTPHeaderFields:'>
<arg type='@' name='headerFields' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsCellularAccess:'>
<arg type='B' name='allow' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCachePolicy:'>
<arg type='I' type64='Q' name='policy' declared_type='NSURLRequestCachePolicy' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPBody:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPBodyStream:'>
<arg type='@' name='inputStream' declared_type='NSInputStream*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPMethod:'>
<arg type='@' name='method' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPShouldHandleCookies:'>
<arg type='B' name='should' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPShouldUsePipelining:'>
<arg type='B' name='shouldUsePipelining' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMainDocumentURL:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNetworkServiceType:'>
<arg type='I' type64='Q' name='networkServiceType' declared_type='NSURLRequestNetworkServiceType' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeoutInterval:'>
<arg type='d' name='seconds' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forHTTPHeaderField:'>
<arg type='@' name='value' declared_type='NSString*' index='0'/>
<arg type='@' name='field' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNameSpecifier'>
<method selector='initWithContainerClassDescription:containerSpecifier:key:name:'>
<arg type='@' name='classDesc' declared_type='NSScriptClassDescription*' index='0'/>
<arg type='@' name='container' declared_type='NSScriptObjectSpecifier*' index='1'/>
<arg type='@' name='property' declared_type='NSString*' index='2'/>
<arg type='@' name='name' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNetService'>
<method selector='TXTRecordData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='addresses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='dataFromTXTRecordDictionary:'>
<arg type='@' name='txtDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryFromTXTRecordData:'>
<arg type='@' name='txtData' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='domain'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getInputStream:outputStream:'>
<arg type='^@' type_modifier='o' name='inputStream' declared_type='NSInputStream**' index='0'/>
<arg type='^@' type_modifier='o' name='outputStream' declared_type='NSOutputStream**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hostName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithDomain:type:name:'>
<arg type='@' name='domain' declared_type='NSString*' index='0'/>
<arg type='@' name='type' declared_type='NSString*' index='1'/>
<arg type='@' name='name' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDomain:type:name:port:'>
<arg type='@' name='domain' declared_type='NSString*' index='0'/>
<arg type='@' name='type' declared_type='NSString*' index='1'/>
<arg type='@' name='name' declared_type='NSString*' index='2'/>
<arg type='i' name='port' declared_type='int' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='port'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='protocolSpecificInformation'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='publish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='publishWithOptions:'>
<arg type='I' type64='Q' name='options' declared_type='NSNetServiceOptions' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolve'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolveWithTimeout:'>
<arg type='d' name='timeout' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProtocolSpecificInformation:'>
<arg type='@' name='specificInformation' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTXTRecordData:'>
<arg type='@' name='recordData' declared_type='NSData*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='startMonitoring'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopMonitoring'>
<retval type='v' declared_type='void'/>
</method>
<method selector='type'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSNetServiceBrowser'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForAllDomains'>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForBrowsableDomains'>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForRegistrationDomains'>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForServicesOfType:inDomain:'>
<arg type='@' name='type' declared_type='NSString*' index='0'/>
<arg type='@' name='domainString' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNotification'>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='notificationWithName:object:'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='anObject' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='notificationWithName:object:userInfo:'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='anObject' declared_type='id' index='1'/>
<arg type='@' name='aUserInfo' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSNotificationCenter'>
<method selector='addObserver:selector:name:object:'>
<arg type='@' name='observer' declared_type='id' index='0'/>
<arg type=':' name='aSelector' declared_type='SEL' index='1'/>
<arg type='@' name='aName' declared_type='NSString*' index='2'/>
<arg type='@' name='anObject' declared_type='id' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserverForName:object:queue:usingBlock:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='obj' declared_type='id' index='1'/>
<arg type='@' name='queue' declared_type='NSOperationQueue*' index='2'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSNotification *)' index='3'>
<arg type='@' declared_type='NSNotification*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='defaultCenter'>
<retval type='@' declared_type='id'/>
</method>
<method selector='postNotification:'>
<arg type='@' name='notification' declared_type='NSNotification*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='anObject' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:userInfo:'>
<arg type='@' name='aName' declared_type='NSString*' index='0'/>
<arg type='@' name='anObject' declared_type='id' index='1'/>
<arg type='@' name='aUserInfo' declared_type='NSDictionary*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:'>
<arg type='@' name='observer' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:name:object:'>
<arg type='@' name='observer' declared_type='id' index='0'/>
<arg type='@' name='aName' declared_type='NSString*' index='1'/>
<arg type='@' name='anObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNotificationQueue'>
<method class_method='true' selector='defaultQueue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dequeueNotificationsMatching:coalesceMask:'>
<arg type='@' name='notification' declared_type='NSNotification*' index='0'/>
<arg type='I' type64='Q' name='coalesceMask' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueNotification:postingStyle:'>
<arg type='@' name='notification' declared_type='NSNotification*' index='0'/>
<arg type='I' type64='Q' name='postingStyle' declared_type='NSPostingStyle' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueNotification:postingStyle:coalesceMask:forModes:'>
<arg type='@' name='notification' declared_type='NSNotification*' index='0'/>
<arg type='I' type64='Q' name='postingStyle' declared_type='NSPostingStyle' index='1'/>
<arg type='I' type64='Q' name='coalesceMask' declared_type='NSUInteger' index='2'/>
<arg type='@' name='modes' declared_type='NSArray*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithNotificationCenter:'>
<arg type='@' name='notificationCenter' declared_type='NSNotificationCenter*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSNull'>
<method class_method='true' selector='null'>
<retval type='@' declared_type='NSNull*'/>
</method>
</class>
<class name='NSNumber'>
<method selector='boolValue'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='charValue'>
<retval type='c' declared_type='char'/>
</method>
<method selector='compare:'>
<arg type='@' name='otherNumber' declared_type='NSNumber*' index='0'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method selector='decimalValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='floatValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithBool:'>
<arg type='B' name='value' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithChar:'>
<arg type='c' name='value' declared_type='char' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDouble:'>
<arg type='d' name='value' declared_type='double' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFloat:'>
<arg type='f' name='value' declared_type='float' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithInt:'>
<arg type='i' name='value' declared_type='int' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithInteger:'>
<arg type='i' type64='q' name='value' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLong:'>
<arg type='l' type64='q' name='value' declared_type='long' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLongLong:'>
<arg type='q' name='value' declared_type='long long' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithShort:'>
<arg type='s' name='value' declared_type='short' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedChar:'>
<arg type='C' name='value' declared_type='unsigned char' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedInt:'>
<arg type='I' name='value' declared_type='unsigned int' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedInteger:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedLong:'>
<arg type='L' type64='Q' name='value' declared_type='unsigned long' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedLongLong:'>
<arg type='Q' name='value' declared_type='unsigned long long' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedShort:'>
<arg type='S' name='value' declared_type='unsigned short' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intValue'>
<retval type='i' declared_type='int'/>
</method>
<method selector='integerValue'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='isEqualToNumber:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='longLongValue'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='longValue'>
<retval type='l' type64='q' declared_type='long'/>
</method>
<method class_method='true' selector='numberWithBool:'>
<arg type='B' name='value' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithChar:'>
<arg type='c' name='value' declared_type='char' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithDouble:'>
<arg type='d' name='value' declared_type='double' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithFloat:'>
<arg type='f' name='value' declared_type='float' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithInt:'>
<arg type='i' name='value' declared_type='int' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithInteger:'>
<arg type='i' type64='q' name='value' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithLong:'>
<arg type='l' type64='q' name='value' declared_type='long' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithLongLong:'>
<arg type='q' name='value' declared_type='long long' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithShort:'>
<arg type='s' name='value' declared_type='short' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedChar:'>
<arg type='C' name='value' declared_type='unsigned char' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedInt:'>
<arg type='I' name='value' declared_type='unsigned int' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedInteger:'>
<arg type='I' type64='Q' name='value' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedLong:'>
<arg type='L' type64='Q' name='value' declared_type='unsigned long' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedLongLong:'>
<arg type='Q' name='value' declared_type='unsigned long long' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedShort:'>
<arg type='S' name='value' declared_type='unsigned short' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='shortValue'>
<retval type='s' declared_type='short'/>
</method>
<method selector='stringValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='unsignedCharValue'>
<retval type='C' declared_type='unsigned char'/>
</method>
<method selector='unsignedIntValue'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='unsignedIntegerValue'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='unsignedLongLongValue'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='unsignedLongValue'>
<retval type='L' type64='Q' declared_type='unsigned long'/>
</method>
<method selector='unsignedShortValue'>
<retval type='S' declared_type='unsigned short'/>
</method>
</class>
<class name='NSNumberFormatter'>
<method selector='allowsFloats'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='alwaysShowsDecimalSeparator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attributedStringForNil'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributedStringForNotANumber'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributedStringForZero'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='currencyCode'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currencyDecimalSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currencyGroupingSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currencySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='decimalSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='defaultFormatterBehavior'>
<retval type='I' type64='Q' declared_type='NSNumberFormatterBehavior'/>
</method>
<method selector='exponentSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='format'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='formatWidth'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='formatterBehavior'>
<retval type='I' type64='Q' declared_type='NSNumberFormatterBehavior'/>
</method>
<method selector='generatesDecimalNumbers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg type='^@' type_modifier='o' name='obj' declared_type='id*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<arg type='^{_NSRange=II}' type_modifier='N' type64='^{_NSRange=QQ}' name='rangep' declared_type='NSRange*' index='2'/>
<arg type='^@' type_modifier='o' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='groupingSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='groupingSize'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='hasThousandSeparators'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='internationalCurrencySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isLenient'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPartialStringValidationEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method class_method='true' selector='localizedStringFromNumber:numberStyle:'>
<arg type='@' name='num' declared_type='NSNumber*' index='0'/>
<arg type='I' type64='Q' name='nstyle' declared_type='NSNumberFormatterStyle' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizesFormat'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maximum'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='maximumFractionDigits'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='maximumIntegerDigits'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='maximumSignificantDigits'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='minimum'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='minimumFractionDigits'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='minimumIntegerDigits'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='minimumSignificantDigits'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='minusSign'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='multiplier'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='negativeFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='negativeInfinitySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='negativePrefix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='negativeSuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='nilSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='notANumberSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='numberFromString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberStyle'>
<retval type='I' type64='Q' declared_type='NSNumberFormatterStyle'/>
</method>
<method selector='paddingCharacter'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='paddingPosition'>
<retval type='I' type64='Q' declared_type='NSNumberFormatterPadPosition'/>
</method>
<method selector='perMillSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='percentSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='plusSign'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positiveFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positiveInfinitySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positivePrefix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positiveSuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='roundingBehavior'>
<retval type='@' declared_type='NSDecimalNumberHandler*'/>
</method>
<method selector='roundingIncrement'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='roundingMode'>
<retval type='I' type64='Q' declared_type='NSNumberFormatterRoundingMode'/>
</method>
<method selector='secondaryGroupingSize'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='setAllowsFloats:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlwaysShowsDecimalSeparator:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedStringForNil:'>
<arg type='@' name='newAttributedString' declared_type='NSAttributedString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedStringForNotANumber:'>
<arg type='@' name='newAttributedString' declared_type='NSAttributedString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedStringForZero:'>
<arg type='@' name='newAttributedString' declared_type='NSAttributedString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencyCode:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencyDecimalSeparator:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencyGroupingSeparator:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencySymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDecimalSeparator:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setDefaultFormatterBehavior:'>
<arg type='I' type64='Q' name='behavior' declared_type='NSNumberFormatterBehavior' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExponentSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormat:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatWidth:'>
<arg type='I' type64='Q' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatterBehavior:'>
<arg type='I' type64='Q' name='behavior' declared_type='NSNumberFormatterBehavior' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGeneratesDecimalNumbers:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupingSeparator:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupingSize:'>
<arg type='I' type64='Q' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasThousandSeparators:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInternationalCurrencySymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLenient:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg type='@' name='locale' declared_type='NSLocale*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocalizesFormat:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximum:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumFractionDigits:'>
<arg type='I' type64='Q' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumIntegerDigits:'>
<arg type='I' type64='Q' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumSignificantDigits:'>
<arg type='I' type64='Q' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimum:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumFractionDigits:'>
<arg type='I' type64='Q' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumIntegerDigits:'>
<arg type='I' type64='Q' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumSignificantDigits:'>
<arg type='I' type64='Q' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinusSign:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMultiplier:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativeFormat:'>
<arg type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativeInfinitySymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativePrefix:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativeSuffix:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNilSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotANumberSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberStyle:'>
<arg type='I' type64='Q' name='style' declared_type='NSNumberFormatterStyle' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingCharacter:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingPosition:'>
<arg type='I' type64='Q' name='position' declared_type='NSNumberFormatterPadPosition' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPartialStringValidationEnabled:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPerMillSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPercentSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlusSign:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositiveFormat:'>
<arg type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositiveInfinitySymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositivePrefix:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositiveSuffix:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRoundingBehavior:'>
<arg type='@' name='newRoundingBehavior' declared_type='NSDecimalNumberHandler*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRoundingIncrement:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRoundingMode:'>
<arg type='I' type64='Q' name='mode' declared_type='NSNumberFormatterRoundingMode' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSecondaryGroupingSize:'>
<arg type='I' type64='Q' name='number' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNegativeInfinity:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNegativeValues:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNil:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNotANumber:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForPositiveInfinity:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForPositiveValues:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForZero:'>
<arg type='@' name='newAttributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setThousandSeparator:'>
<arg type='@' name='newSeparator' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesGroupingSeparator:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesSignificantDigits:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZeroSymbol:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringFromNumber:'>
<arg type='@' name='number' declared_type='NSNumber*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textAttributesForNegativeInfinity'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForNegativeValues'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForNil'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForNotANumber'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForPositiveInfinity'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForPositiveValues'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForZero'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='thousandSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='usesGroupingSeparator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='usesSignificantDigits'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='zeroSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSObject'>
<method selector='URL:resourceDataDidBecomeAvailable:'>
<arg type='@' name='sender' declared_type='NSURL*' index='0'/>
<arg type='@' name='newBytes' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URL:resourceDidFailLoadingWithReason:'>
<arg type='@' name='sender' declared_type='NSURL*' index='0'/>
<arg type='@' name='reason' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLHandle:resourceDataDidBecomeAvailable:'>
<arg type='@' name='sender' declared_type='NSURLHandle*' index='0'/>
<arg type='@' name='newBytes' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLHandle:resourceDidFailLoadingWithReason:'>
<arg type='@' name='sender' declared_type='NSURLHandle*' index='0'/>
<arg type='@' name='reason' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLHandleResourceDidBeginLoading:'>
<arg type='@' name='sender' declared_type='NSURLHandle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLHandleResourceDidCancelLoading:'>
<arg type='@' name='sender' declared_type='NSURLHandle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLHandleResourceDidFinishLoading:'>
<arg type='@' name='sender' declared_type='NSURLHandle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:cachedResponseIsValid:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didCancelAuthenticationChallenge:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didFailWithError:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didLoadData:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didReceiveAuthenticationChallenge:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didReceiveResponse:cacheStoragePolicy:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<arg type='I' type64='Q' name='policy' declared_type='NSURLCacheStoragePolicy' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:wasRedirectedToRequest:redirectResponse:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<arg type='@' name='redirectResponse' declared_type='NSURLResponse*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocolDidFinishLoading:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLResourceDidCancelLoading:'>
<arg type='@' name='sender' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLResourceDidFinishLoading:'>
<arg type='@' name='sender' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='accessInstanceVariablesDirectly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='accommodatePresentedItemDeletionWithCompletionHandler:'>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='accommodatePresentedSubitemDeletionAtURL:completionHandler:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='1'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserver:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='options' declared_type='NSKeyValueObservingOptions' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='alloc'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='allocWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='archiver:didEncodeObject:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiver:willEncodeObject:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='archiver:willReplaceObject:withObject:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='newObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiverDidFinish:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiverWillFinish:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:'>
<arg type='@' name='error' declared_type='NSError*' index='0'/>
<arg type='I' type64='Q' name='recoveryOptionIndex' declared_type='NSUInteger' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'>
<arg type='@' name='error' declared_type='NSError*' index='0'/>
<arg type='I' type64='Q' name='recoveryOptionIndex' declared_type='NSUInteger' index='1'/>
<arg type='@' name='delegate' declared_type='id' index='2'/>
<arg type=':' name='didRecoverSelector' declared_type='SEL' index='3'/>
<arg type='^v' name='contextInfo' declared_type='void*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='authenticateComponents:withData:'>
<arg type='@' name='components' declared_type='NSArray*' index='0'/>
<arg type='@' name='signature' declared_type='NSData*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='authenticationDataForComponents:'>
<arg type='@' name='components' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='autoContentAccessingProxy'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='automaticallyNotifiesObserversForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autorelease'>
<retval type='@' declared_type='id'/>
</method>
<method selector='awakeAfterUsingCoder:'>
<arg type='@' name='aDecoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='beginContentAccess'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cache:willEvictObject:'>
<arg type='@' name='cache' declared_type='NSCache*' index='0'/>
<arg type='@' name='obj' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelAuthenticationChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='cancelPreviousPerformRequestsWithTarget:'>
<arg type='@' name='aTarget' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='cancelPreviousPerformRequestsWithTarget:selector:object:'>
<arg type='@' name='aTarget' declared_type='id' index='0'/>
<arg type=':' name='aSelector' declared_type='SEL' index='1'/>
<arg type='@' name='anArgument' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='class'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='class'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classCode'>
<retval type='L' type64='I' declared_type='FourCharCode'/>
</method>
<method selector='classDescription'>
<retval type='@' declared_type='NSClassDescription*'/>
</method>
<method class_method='true' selector='classFallbacksForKeyedArchiver'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='classForArchiver'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForCoder'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForKeyedArchiver'>
<retval type='#' declared_type='Class'/>
</method>
<method class_method='true' selector='classForKeyedUnarchiver'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForPortCoder'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='className'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='coerceValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='conformsToProtocol:'>
<arg type='@' name='protocol' declared_type='Protocol*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='conformsToProtocol:'>
<arg type='@' name='aProtocol' declared_type='Protocol*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:canAuthenticateAgainstProtectionSpace:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='protectionSpace' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:didCancelAuthenticationChallenge:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didFailWithError:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveAuthenticationChallenge:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveData:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveResponse:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='i' type64='q' name='bytesWritten' declared_type='NSInteger' index='1'/>
<arg type='i' type64='q' name='totalBytesWritten' declared_type='NSInteger' index='2'/>
<arg type='i' type64='q' name='totalBytesExpectedToWrite' declared_type='NSInteger' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didWriteData:totalBytesWritten:expectedTotalBytes:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='q' name='bytesWritten' declared_type='long long' index='1'/>
<arg type='q' name='totalBytesWritten' declared_type='long long' index='2'/>
<arg type='q' name='expectedTotalBytes' declared_type='long long' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:handleRequest:'>
<arg type='@' name='connection' declared_type='NSConnection*' index='0'/>
<arg type='@' name='doreq' declared_type='NSDistantObjectRequest*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:needNewBodyStream:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='connection:shouldMakeNewConnection:'>
<arg type='@' name='ancestor' declared_type='NSConnection*' index='0'/>
<arg type='@' name='conn' declared_type='NSConnection*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:willCacheResponse:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='1'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method selector='connection:willSendRequest:redirectResponse:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='2'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='connection:willSendRequestForAuthenticationChallenge:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidFinishDownloading:destinationURL:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='destinationURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidFinishLoading:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='q' name='totalBytesWritten' declared_type='long long' index='1'/>
<arg type='q' name='expectedTotalBytes' declared_type='long long' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionShouldUseCredentialStorage:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='continueWithoutCredentialForAuthenticationChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='copy'>
<retval type='@' declared_type='id'/>
</method>
<method selector='copyScriptingValue:forKey:withProperties:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='@' name='properties' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='copyWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='copyWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='countByEnumeratingWithState:objects:count:'>
<arg type='^{_NSFastEnumerationState=L^@^L[5L]}' type64='^{_NSFastEnumerationState=Q^@^Q[5Q]}' name='state' declared_type='NSFastEnumerationState*' index='0'/>
<arg type='^@' name='buffer' declared_type='id*' index='1'/>
<arg type='I' type64='Q' name='len' declared_type='NSUInteger' index='2'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='createConversationForConnection:'>
<arg type='@' name='conn' declared_type='NSConnection*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dealloc'>
<retval type='v' declared_type='void'/>
</method>
<method selector='debugDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dictionaryWithValuesForKeys:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='didChange:valuesAtIndexes:forKey:'>
<arg type='I' type64='Q' name='changeKind' declared_type='NSKeyValueChange' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didChangeValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didChangeValueForKey:withSetMutation:usingObjects:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mutationKind' declared_type='NSKeyValueSetMutationKind' index='1'/>
<arg type='@' name='objects' declared_type='NSSet*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardContentIfPossible'>
<retval type='v' declared_type='void'/>
</method>
<method selector='doesContain:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='doesNotRecognizeSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:canAuthenticateAgainstProtectionSpace:'>
<arg type='@' name='connection' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='protectionSpace' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='download:decideDestinationWithSuggestedFilename:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='filename' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didCancelAuthenticationChallenge:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didCreateDestination:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didFailWithError:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didReceiveAuthenticationChallenge:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didReceiveDataOfLength:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didReceiveResponse:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:shouldDecodeSourceDataOfMIMEType:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='encodingType' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='download:willResumeWithResponse:fromByte:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<arg type='q' name='startingByte' declared_type='long long' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:willSendRequest:redirectResponse:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<arg type='@' name='redirectResponse' declared_type='NSURLResponse*' index='2'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='downloadDidBegin:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='downloadDidFinish:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='downloadShouldUseCredentialStorage:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='encodeWithCoder:'>
<arg type='@' name='aCoder' declared_type='NSCoder*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endContentAccess'>
<retval type='v' declared_type='void'/>
</method>
<method selector='exceptionDuringOperation:error:leftOperand:rightOperand:'>
<arg type=':' name='operation' declared_type='SEL' index='0'/>
<arg type='I' type64='Q' name='error' declared_type='NSCalculationError' index='1'/>
<arg type='@' name='leftOperand' declared_type='NSDecimalNumber*' index='2'/>
<arg type='@' name='rightOperand' declared_type='NSDecimalNumber*' index='3'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='fileManager:shouldCopyItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldCopyItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldLinkItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldLinkItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldMoveItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldMoveItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:'>
<arg type='@' name='fm' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='errorInfo' declared_type='NSDictionary*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='path' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='URL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldRemoveItemAtPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldRemoveItemAtURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='URL' declared_type='NSURL*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:willProcessPath:'>
<arg type='@' name='fm' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='finalize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='forwardInvocation:'>
<arg type='@' name='anInvocation' declared_type='NSInvocation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='forwardingTargetForSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='handleMachMessage:'>
<arg type='^v' name='msg' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='handlePortMessage:'>
<arg type='@' name='message' declared_type='NSPortMessage*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='handleQueryWithUnboundKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='handleTakeValue:forUnboundKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hash'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indicesOfObjectsByEvaluatingObjectSpecifier:'>
<arg type='@' name='specifier' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCoder:'>
<arg type='@' name='aDecoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='initialize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertValue:atIndex:inPropertyWithKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertValue:inPropertyWithKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='instanceMethodForSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='^?' function_pointer='true' declared_type='IMP'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</retval>
</method>
<method class_method='true' selector='instanceMethodSignatureForSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method class_method='true' selector='instancesRespondToSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='inverseForRelationshipKey:'>
<arg type='@' name='relationshipKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isCaseInsensitiveLike:'>
<arg type='@' name='object' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isContentDiscarded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqual:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isGreaterThan:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isGreaterThanOrEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isKindOfClass:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLessThan:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLessThanOrEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLike:'>
<arg type='@' name='object' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMemberOfClass:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNotEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isProxy'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='isSubclassOfClass:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='keyPathsForValuesAffectingValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='listener:shouldAcceptNewConnection:'>
<arg type='@' name='listener' declared_type='NSXPCListener*' index='0'/>
<arg type='@' name='newConnection' declared_type='NSXPCConnection*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='load'>
<retval type='v' declared_type='void'/>
</method>
<method selector='lock'>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeNewConnection:sender:'>
<arg type='@' name='conn' declared_type='NSConnection*' index='0'/>
<arg type='@' name='ancestor' declared_type='NSConnection*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='metadataQuery:replacementObjectForResultObject:'>
<arg type='@' name='query' declared_type='NSMetadataQuery*' index='0'/>
<arg type='@' name='result' declared_type='NSMetadataItem*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='metadataQuery:replacementValueForAttribute:value:'>
<arg type='@' name='query' declared_type='NSMetadataQuery*' index='0'/>
<arg type='@' name='attrName' declared_type='NSString*' index='1'/>
<arg type='@' name='attrValue' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='methodForSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='^?' function_pointer='true' declared_type='IMP'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</retval>
</method>
<method selector='methodSignatureForSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method selector='mutableArrayValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mutableArrayValueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mutableCopy'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mutableCopyWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableCopyWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableOrderedSetValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method selector='mutableOrderedSetValueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method selector='mutableSetValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='mutableSetValueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='netService:didNotPublish:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netService:didNotResolve:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netService:didUpdateTXTRecordData:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didFindDomain:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='domainString' declared_type='NSString*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didFindService:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='aNetService' declared_type='NSNetService*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didNotSearch:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didRemoveDomain:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='domainString' declared_type='NSString*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didRemoveService:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='aNetService' declared_type='NSNetService*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowserDidStopSearch:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowserWillSearch:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidPublish:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidResolveAddress:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidStop:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceWillPublish:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceWillResolve:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='new'>
<retval type='@' declared_type='id'/>
</method>
<method selector='newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:'>
<arg type='#' name='objectClass' declared_type='Class' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='@' name='contentsValue' declared_type='id' index='2'/>
<arg type='@' name='properties' declared_type='NSDictionary*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='observationInfo'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='observeValueForKeyPath:ofObject:change:context:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='change' declared_type='NSDictionary*' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didEndElement:namespaceURI:qualifiedName:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<arg type='@' name='qName' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didEndMappingPrefix:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='prefix' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<arg type='@' name='qName' declared_type='NSString*' index='3'/>
<arg type='@' name='attributeDict' declared_type='NSDictionary*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didStartMappingPrefix:toURI:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='prefix' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='attributeName' declared_type='NSString*' index='1'/>
<arg type='@' name='elementName' declared_type='NSString*' index='2'/>
<arg type='@' name='type' declared_type='NSString*' index='3'/>
<arg type='@' name='defaultValue' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundCDATA:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='CDATABlock' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundCharacters:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundComment:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='comment' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundElementDeclarationWithName:model:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='model' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundIgnorableWhitespace:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='whitespaceString' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundInternalEntityDeclarationWithName:value:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='value' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundNotationDeclarationWithName:publicID:systemID:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundProcessingInstructionWithTarget:data:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='target' declared_type='NSString*' index='1'/>
<arg type='@' name='data' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<arg type='@' name='notationName' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:parseErrorOccurred:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='parseError' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:resolveExternalEntityName:systemID:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='systemID' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='parser:validationErrorOccurred:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='validationError' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parserDidEndDocument:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parserDidStartDocument:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performDefaultHandlingForAuthenticationChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='thr' declared_type='NSThread*' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<arg type='B' name='wait' declared_type='BOOL' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:modes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='thr' declared_type='NSThread*' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<arg type='B' name='wait' declared_type='BOOL' index='3'/>
<arg type='@' name='array' declared_type='NSArray*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:withObject:afterDelay:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='anArgument' declared_type='id' index='1'/>
<arg type='d' name='delay' declared_type='NSTimeInterval' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:afterDelay:inModes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='anArgument' declared_type='id' index='1'/>
<arg type='d' name='delay' declared_type='NSTimeInterval' index='2'/>
<arg type='@' name='modes' declared_type='NSArray*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='object1' declared_type='id' index='1'/>
<arg type='@' name='object2' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelectorInBackground:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<arg type='B' name='wait' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<arg type='B' name='wait' declared_type='BOOL' index='2'/>
<arg type='@' name='array' declared_type='NSArray*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidChange'>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidGainVersion:'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidLoseVersion:'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidMoveToURL:'>
<arg type='@' name='newURL' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidResolveConflictVersion:'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemOperationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='presentedItemURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='presentedSubitemAtURL:didGainVersion:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didLoseVersion:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didMoveToURL:'>
<arg type='@' name='oldURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='newURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didResolveConflictVersion:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemDidAppearAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemDidChangeAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='primaryPresentedItemURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='rejectProtectionSpaceAndContinueWithChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='release'>
<retval type='v' declared_type='void'/>
</method>
<method selector='relinquishPresentedItemToReader:'>
<arg type='@?' name='reader' function_pointer='true' declared_type='void (^)(void (^)(void))' index='0'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='relinquishPresentedItemToWriter:'>
<arg type='@?' name='writer' function_pointer='true' declared_type='void (^)(void (^)(void))' index='0'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='remoteObjectProxy'>
<retval type='@' declared_type='id'/>
</method>
<method selector='remoteObjectProxyWithErrorHandler:'>
<arg type='@?' name='handler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='^v' name='context' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeValueAtIndex:fromPropertyWithKey:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceValueAtIndex:inPropertyWithKey:withValue:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='@' name='value' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replacementObjectForArchiver:'>
<arg type='@' name='archiver' declared_type='NSArchiver*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='replacementObjectForCoder:'>
<arg type='@' name='aCoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='replacementObjectForKeyedArchiver:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='replacementObjectForPortCoder:'>
<arg type='@' name='coder' declared_type='NSPortCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='resolveClassMethod:'>
<arg type=':' name='sel' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='resolveInstanceMethod:'>
<arg type=':' name='sel' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='respondsToSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='retain'>
<retval type='@' declared_type='id'/>
</method>
<method selector='retainCount'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='roundingMode'>
<retval type='I' type64='Q' declared_type='NSRoundingMode'/>
</method>
<method selector='savePresentedItemChangesWithCompletionHandler:'>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='scale'>
<retval type='s' declared_type='short'/>
</method>
<method selector='scriptingBeginsWith:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingContains:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingEndsWith:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingIsEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingIsGreaterThan:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingIsGreaterThanOrEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingIsLessThan:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingIsLessThanOrEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingProperties'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='scriptingValueForSpecifier:'>
<arg type='@' name='objectSpecifier' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='self'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setKeys:triggerChangeNotificationsForDependentKey:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<arg type='@' name='dependentKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNilValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObservationInfo:'>
<arg type='^v' name='observationInfo' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScriptingProperties:'>
<arg type='@' name='properties' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKeyPath:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forUndefinedKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValuesForKeysWithDictionary:'>
<arg type='@' name='keyedValues' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setVersion:'>
<arg type='i' type64='q' name='aVersion' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellServer:checkGrammarInString:language:details:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='stringToCheck' declared_type='NSString*' index='1'/>
<arg type='@' name='language' declared_type='NSString*' index='2'/>
<arg type='^@' name='details' declared_type='NSArray**' index='3'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='spellServer:checkString:offset:types:options:orthography:wordCount:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='stringToCheck' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='offset' declared_type='NSUInteger' index='2'/>
<arg type='Q' name='checkingTypes' declared_type='NSTextCheckingTypes' index='3'/>
<arg type='@' name='options' declared_type='NSDictionary*' index='4'/>
<arg type='@' name='orthography' declared_type='NSOrthography*' index='5'/>
<arg type='^i' type64='^q' name='wordCount' declared_type='NSInteger*' index='6'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='spellServer:didForgetWord:inLanguage:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='word' declared_type='NSString*' index='1'/>
<arg type='@' name='language' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellServer:didLearnWord:inLanguage:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='word' declared_type='NSString*' index='1'/>
<arg type='@' name='language' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellServer:findMisspelledWordInString:language:wordCount:countOnly:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='stringToCheck' declared_type='NSString*' index='1'/>
<arg type='@' name='language' declared_type='NSString*' index='2'/>
<arg type='^i' type64='^q' name='wordCount' declared_type='NSInteger*' index='3'/>
<arg type='B' name='countOnly' declared_type='BOOL' index='4'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='spellServer:recordResponse:toCorrection:forWord:language:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='I' type64='Q' name='response' declared_type='NSUInteger' index='1'/>
<arg type='@' name='correction' declared_type='NSString*' index='2'/>
<arg type='@' name='word' declared_type='NSString*' index='3'/>
<arg type='@' name='language' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellServer:suggestCompletionsForPartialWordRange:inString:language:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<arg type='@' name='string' declared_type='NSString*' index='2'/>
<arg type='@' name='language' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='spellServer:suggestGuessesForWord:inLanguage:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='word' declared_type='NSString*' index='1'/>
<arg type='@' name='language' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='storedValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stream:handleEvent:'>
<arg type='@' name='aStream' declared_type='NSStream*' index='0'/>
<arg type='I' type64='Q' name='eventCode' declared_type='NSStreamEvent' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='superclass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='superclass'>
<retval type='#' declared_type='Class'/>
</method>
<method class_method='true' selector='supportsSecureCoding'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='takeStoredValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeValue:forKeyPath:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeValuesFromDictionary:'>
<arg type='@' name='properties' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toManyRelationshipKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='toOneRelationshipKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='unableToSetNilForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='classNames' declared_type='NSArray*' index='2'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='unarchiver:didDecodeObject:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='unarchiver:willReplaceObject:withObject:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='newObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiverDidFinish:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiverWillFinish:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unlock'>
<retval type='v' declared_type='void'/>
</method>
<method selector='useCredential:forAuthenticationChallenge:'>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='useStoredAccessor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='userNotificationCenter:didActivateNotification:'>
<arg type='@' name='center' declared_type='NSUserNotificationCenter*' index='0'/>
<arg type='@' name='notification' declared_type='NSUserNotification*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userNotificationCenter:didDeliverNotification:'>
<arg type='@' name='center' declared_type='NSUserNotificationCenter*' index='0'/>
<arg type='@' name='notification' declared_type='NSUserNotification*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userNotificationCenter:shouldPresentNotification:'>
<arg type='@' name='center' declared_type='NSUserNotificationCenter*' index='0'/>
<arg type='@' name='notification' declared_type='NSUserNotification*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateValue:forKey:error:'>
<arg type='^@' type_modifier='N' name='ioValue' declared_type='id*' index='0'/>
<arg type='@' name='inKey' declared_type='NSString*' index='1'/>
<arg type='^@' type_modifier='o' name='outError' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateValue:forKeyPath:error:'>
<arg type='^@' type_modifier='N' name='ioValue' declared_type='id*' index='0'/>
<arg type='@' name='inKeyPath' declared_type='NSString*' index='1'/>
<arg type='^@' type_modifier='o' name='outError' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='valueAtIndex:inPropertyWithKey:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForUndefinedKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueWithName:inPropertyWithKey:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueWithUniqueID:inPropertyWithKey:'>
<arg type='@' name='uniqueID' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valuesForKeys:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='version'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='willChange:valuesAtIndexes:forKey:'>
<arg type='I' type64='Q' name='changeKind' declared_type='NSKeyValueChange' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willChangeValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willChangeValueForKey:withSetMutation:usingObjects:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mutationKind' declared_type='NSKeyValueSetMutationKind' index='1'/>
<arg type='@' name='objects' declared_type='NSSet*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='zone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
</class>
<class name='NSOperation'>
<method selector='addDependency:'>
<arg type='@' name='op' declared_type='NSOperation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='completionBlock'>
<retval type='@?' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='dependencies'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isCancelled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isConcurrent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExecuting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFinished'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReady'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='main'>
<retval type='v' declared_type='void'/>
</method>
<method selector='queuePriority'>
<retval type='i' type64='q' declared_type='NSOperationQueuePriority'/>
</method>
<method selector='removeDependency:'>
<arg type='@' name='op' declared_type='NSOperation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompletionBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQueuePriority:'>
<arg type='i' type64='q' name='p' declared_type='NSOperationQueuePriority' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setThreadPriority:'>
<arg type='d' name='p' declared_type='double' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='start'>
<retval type='v' declared_type='void'/>
</method>
<method selector='threadPriority'>
<retval type='d' declared_type='double'/>
</method>
<method selector='waitUntilFinished'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSOperationQueue'>
<method selector='addOperation:'>
<arg type='@' name='op' declared_type='NSOperation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addOperationWithBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addOperations:waitUntilFinished:'>
<arg type='@' name='ops' declared_type='NSArray*' index='0'/>
<arg type='B' name='wait' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelAllOperations'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='currentQueue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSuspended'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='mainQueue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='maxConcurrentOperationCount'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='operationCount'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='operations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setMaxConcurrentOperationCount:'>
<arg type='i' type64='q' name='cnt' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuspended:'>
<arg type='B' name='b' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitUntilAllOperationsAreFinished'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSOrderedSet'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='options' declared_type='NSKeyValueObservingOptions' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='array'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='containsObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='level' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumerateObjectsAtIndexes:options:usingBlock:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='getObjects:range:'>
<arg type='^@' name='objects' declared_type='id*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexOfObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObject:inSortedRange:options:usingComparator:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<arg type='I' type64='Q' name='opts' declared_type='NSBinarySearchingOptions' index='2'/>
<arg type='@?' name='cmp' function_pointer='true' declared_type='NSComparator' index='3'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectAtIndexes:options:passingTest:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectWithOptions:passingTest:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='indexesOfObjectsAtIndexes:options:passingTest:'>
<arg type='@' name='s' declared_type='NSIndexSet*' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='1'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='2'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsWithOptions:passingTest:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, NSUInteger, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='I' type64='Q' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='initWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:copyItems:'>
<arg type='@' name='set' declared_type='NSArray*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:range:copyItems:'>
<arg type='@' name='set' declared_type='NSArray*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:' variadic='true' sentinel='0'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:count:'>
<arg type='^@' const='true' name='objects' declared_type='id*' index='0'/>
<arg type='I' type64='Q' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOrderedSet:'>
<arg type='@' name='set' declared_type='NSOrderedSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOrderedSet:copyItems:'>
<arg type='@' name='set' declared_type='NSOrderedSet*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOrderedSet:range:copyItems:'>
<arg type='@' name='set' declared_type='NSOrderedSet*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:copyItems:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectsOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='intersectsSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfOrderedSet:'>
<arg type='@' name='other' declared_type='NSOrderedSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectAtIndex:'>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectsAtIndexes:'>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='orderedSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithArray:range:copyItems:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithObjects:' variadic='true' sentinel='0'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithObjects:count:'>
<arg type='^@' const='true' name='objects' declared_type='id*' index='0'/>
<arg type='I' type64='Q' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithOrderedSet:'>
<arg type='@' name='set' declared_type='NSOrderedSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithOrderedSet:range:copyItems:'>
<arg type='@' name='set' declared_type='NSOrderedSet*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<arg type='B' name='flag' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithSet:copyItems:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='^v' name='context' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverseObjectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='reversedOrderedSet'>
<retval type='@' declared_type='NSOrderedSet*'/>
</method>
<method selector='set'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortedArrayUsingComparator:'>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayWithOptions:usingComparator:'>
<arg type='I' type64='Q' name='opts' declared_type='NSSortOptions' index='0'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSOrthography'>
<method selector='allLanguages'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allScripts'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='dominantLanguage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dominantLanguageForScript:'>
<arg type='@' name='script' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dominantScript'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithDominantScript:languageMap:'>
<arg type='@' name='script' declared_type='NSString*' index='0'/>
<arg type='@' name='map' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='languageMap'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='languagesForScript:'>
<arg type='@' name='script' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='orthographyWithDominantScript:languageMap:'>
<arg type='@' name='script' declared_type='NSString*' index='0'/>
<arg type='@' name='map' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSOutputStream'>
<method selector='hasSpaceAvailable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initToBuffer:capacity:'>
<arg type='*' name='buffer' declared_type='uint8_t*' index='0'/>
<arg type='I' type64='Q' name='capacity' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initToFileAtPath:append:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='shouldAppend' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initToMemory'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:append:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='shouldAppend' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='outputStreamToBuffer:capacity:'>
<arg type='*' name='buffer' declared_type='uint8_t*' index='0'/>
<arg type='I' type64='Q' name='capacity' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='outputStreamToFileAtPath:append:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='shouldAppend' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='outputStreamToMemory'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='outputStreamWithURL:append:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='shouldAppend' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='write:maxLength:'>
<arg type='*' const='true' name='buffer' declared_type='uint8_t*' index='0'/>
<arg type='I' type64='Q' name='len' declared_type='NSUInteger' index='1'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</class>
<class name='NSPipe'>
<method selector='fileHandleForReading'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
<method selector='fileHandleForWriting'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='pipe'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSPointerArray'>
<method selector='addPointer:'>
<arg type='^v' name='pointer' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='compact'>
<retval type='v' declared_type='void'/>
</method>
<method selector='count'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='initWithOptions:'>
<arg type='I' type64='Q' name='options' declared_type='NSPointerFunctionsOptions' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPointerFunctions:'>
<arg type='@' name='functions' declared_type='NSPointerFunctions*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertPointer:atIndex:'>
<arg type='^v' name='item' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='pointerArrayWithOptions:'>
<arg type='I' type64='Q' name='options' declared_type='NSPointerFunctionsOptions' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='pointerArrayWithPointerFunctions:'>
<arg type='@' name='functions' declared_type='NSPointerFunctions*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='pointerArrayWithStrongObjects'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='pointerArrayWithWeakObjects'>
<retval type='@' declared_type='id'/>
</method>
<method selector='pointerAtIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='pointerFunctions'>
<retval type='@' declared_type='NSPointerFunctions*'/>
</method>
<method selector='removePointerAtIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replacePointerAtIndex:withPointer:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='^v' name='item' declared_type='void*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCount:'>
<arg type='I' type64='Q' name='count' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='strongObjectsPointerArray'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='weakObjectsPointerArray'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSPointerFunctions'>
<method selector='acquireFunction'>
<retval type='^?' function_pointer='true' declared_type='void *(*)(void *, NSUInteger (*)(void *), BOOL)'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<arg type='B' declared_type='BOOL'/>
<retval type='^v' declared_type='void*'/>
</retval>
</method>
<method selector='descriptionFunction'>
<retval type='^?' function_pointer='true' declared_type='NSString *(*)(void *)'>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='@' declared_type='NSString*'/>
</retval>
</method>
<method selector='hashFunction'>
<retval type='^?' function_pointer='true' declared_type='NSUInteger (*)(void *, NSUInteger (*)(void *))'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</retval>
</method>
<method selector='initWithOptions:'>
<arg type='I' type64='Q' name='options' declared_type='NSPointerFunctionsOptions' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualFunction'>
<retval type='^?' function_pointer='true' declared_type='BOOL (*)(void *, void *, NSUInteger (*)(void *))'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type='B' declared_type='BOOL'/>
</retval>
</method>
<method class_method='true' selector='pointerFunctionsWithOptions:'>
<arg type='I' type64='Q' name='options' declared_type='NSPointerFunctionsOptions' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='relinquishFunction'>
<retval type='^?' function_pointer='true' declared_type='void (*)(void *, NSUInteger (*)(void *))'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setAcquireFunction:'>
<arg type='^?' name='acquireFunction' function_pointer='true' declared_type='void *(*)(void *, NSUInteger (*)(void *), BOOL)' index='0'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<arg type='B' declared_type='BOOL'/>
<retval type='^v' declared_type='void*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDescriptionFunction:'>
<arg type='^?' name='descriptionFunction' function_pointer='true' declared_type='NSString *(*)(void *)' index='0'>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='@' declared_type='NSString*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHashFunction:'>
<arg type='^?' name='hashFunction' function_pointer='true' declared_type='NSUInteger (*)(void *, NSUInteger (*)(void *))' index='0'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsEqualFunction:'>
<arg type='^?' name='isEqualFunction' function_pointer='true' declared_type='BOOL (*)(void *, void *, NSUInteger (*)(void *))' index='0'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRelinquishFunction:'>
<arg type='^?' name='relinquishFunction' function_pointer='true' declared_type='void (*)(void *, NSUInteger (*)(void *))' index='0'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSizeFunction:'>
<arg type='^?' name='sizeFunction' function_pointer='true' declared_type='NSUInteger (*)(void *)' index='0'>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesStrongWriteBarrier:'>
<arg type='B' name='usesStrongWriteBarrier' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesWeakReadAndWriteBarriers:'>
<arg type='B' name='usesWeakReadAndWriteBarriers' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeFunction'>
<retval type='^?' function_pointer='true' declared_type='NSUInteger (*)(void *)'>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</retval>
</method>
<method selector='usesStrongWriteBarrier'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='usesWeakReadAndWriteBarriers'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSPort'>
<method selector='addConnection:toRunLoop:forMode:'>
<arg type='@' name='conn' declared_type='NSConnection*' index='0'/>
<arg type='@' name='runLoop' declared_type='NSRunLoop*' index='1'/>
<arg type='@' name='mode' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isValid'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='port'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='removeConnection:fromRunLoop:forMode:'>
<arg type='@' name='conn' declared_type='NSConnection*' index='0'/>
<arg type='@' name='runLoop' declared_type='NSRunLoop*' index='1'/>
<arg type='@' name='mode' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg type='@' name='runLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reservedSpaceLength'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='runLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendBeforeDate:components:from:reserved:'>
<arg type='@' name='limitDate' declared_type='NSDate*' index='0'/>
<arg type='@' name='components' declared_type='NSMutableArray*' index='1'/>
<arg type='@' name='receivePort' declared_type='NSPort*' index='2'/>
<arg type='I' type64='Q' name='headerSpaceReserved' declared_type='NSUInteger' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendBeforeDate:msgid:components:from:reserved:'>
<arg type='@' name='limitDate' declared_type='NSDate*' index='0'/>
<arg type='I' type64='Q' name='msgID' declared_type='NSUInteger' index='1'/>
<arg type='@' name='components' declared_type='NSMutableArray*' index='2'/>
<arg type='@' name='receivePort' declared_type='NSPort*' index='3'/>
<arg type='I' type64='Q' name='headerSpaceReserved' declared_type='NSUInteger' index='4'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPortCoder'>
<method selector='connection'>
<retval type='@' declared_type='NSConnection*'/>
</method>
<method selector='decodePortObject'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='dispatch'>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodePortObject:'>
<arg type='@' name='aport' declared_type='NSPort*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithReceivePort:sendPort:components:'>
<arg type='@' name='rcvPort' declared_type='NSPort*' index='0'/>
<arg type='@' name='sndPort' declared_type='NSPort*' index='1'/>
<arg type='@' name='comps' declared_type='NSArray*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isBycopy'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isByref'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='portCoderWithReceivePort:sendPort:components:'>
<arg type='@' name='rcvPort' declared_type='NSPort*' index='0'/>
<arg type='@' name='sndPort' declared_type='NSPort*' index='1'/>
<arg type='@' name='comps' declared_type='NSArray*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSPortMessage'>
<method selector='components'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithSendPort:receivePort:components:'>
<arg type='@' name='sendPort' declared_type='NSPort*' index='0'/>
<arg type='@' name='replyPort' declared_type='NSPort*' index='1'/>
<arg type='@' name='components' declared_type='NSArray*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='msgid'>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='receivePort'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='sendBeforeDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendPort'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='setMsgid:'>
<arg type='I' name='msgid' declared_type='uint32_t' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPortNameServer'>
<method selector='portForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portForName:host:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='host' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='registerPort:name:'>
<arg type='@' name='port' declared_type='NSPort*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removePortForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='systemDefaultPortNameServer'>
<retval type='@' declared_type='NSPortNameServer*'/>
</method>
</class>
<class name='NSPositionalSpecifier'>
<method selector='evaluate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithPosition:objectSpecifier:'>
<arg type='I' type64='Q' name='position' declared_type='NSInsertionPosition' index='0'/>
<arg type='@' name='specifier' declared_type='NSScriptObjectSpecifier*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertionContainer'>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertionIndex'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='insertionKey'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='insertionReplaces'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='position'>
<retval type='I' type64='Q' declared_type='NSInsertionPosition'/>
</method>
<method selector='setInsertionClassDescription:'>
<arg type='@' name='classDescription' declared_type='NSScriptClassDescription*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPredicate'>
<method selector='evaluateWithObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='evaluateWithObject:substitutionVariables:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='@' name='bindings' declared_type='NSDictionary*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='predicateFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='predicateWithBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='BOOL (^)(id, NSDictionary *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='predicateWithFormat:' variadic='true'>
<arg type='@' name='predicateFormat' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='predicateWithFormat:argumentArray:'>
<arg type='@' name='predicateFormat' declared_type='NSString*' index='0'/>
<arg type='@' name='arguments' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='predicateWithFormat:arguments:'>
<arg type='@' name='predicateFormat' declared_type='NSString*' index='0'/>
<arg type='*' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' name='argList' declared_type='va_list' index='1'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='predicateWithSubstitutionVariables:'>
<arg type='@' name='variables' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='predicateWithValue:'>
<arg type='B' name='value' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
</class>
<class name='NSProcessInfo'>
<method selector='activeProcessorCount'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='arguments'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='automaticTerminationSupportEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='disableAutomaticTermination:'>
<arg type='@' name='reason' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='disableSuddenTermination'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableAutomaticTermination:'>
<arg type='@' name='reason' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableSuddenTermination'>
<retval type='v' declared_type='void'/>
</method>
<method selector='environment'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='globallyUniqueString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hostName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='operatingSystem'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='operatingSystemName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='operatingSystemVersionString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='physicalMemory'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='processIdentifier'>
<retval type='i' declared_type='int'/>
</method>
<method class_method='true' selector='processInfo'>
<retval type='@' declared_type='NSProcessInfo*'/>
</method>
<method selector='processName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='processorCount'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='setAutomaticTerminationSupportEnabled:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProcessName:'>
<arg type='@' name='newName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemUptime'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
</class>
<class name='NSPropertyListSerialization'>
<method class_method='true' selector='dataFromPropertyList:format:errorDescription:'>
<arg type='@' name='plist' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='format' declared_type='NSPropertyListFormat' index='1'/>
<arg type='^@' type_modifier='o' name='errorString' declared_type='NSString**' index='2'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='dataWithPropertyList:format:options:error:'>
<arg type='@' name='plist' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='format' declared_type='NSPropertyListFormat' index='1'/>
<arg type='I' type64='Q' name='opt' declared_type='NSPropertyListWriteOptions' index='2'/>
<arg type='^@' type_modifier='o' name='error' declared_type='NSError**' index='3'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='propertyList:isValidForFormat:'>
<arg type='@' name='plist' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='format' declared_type='NSPropertyListFormat' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='propertyListFromData:mutabilityOption:format:errorDescription:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='I' type64='Q' name='opt' declared_type='NSPropertyListMutabilityOptions' index='1'/>
<arg type='^I' type64='^Q' name='format' declared_type='NSPropertyListFormat*' index='2'/>
<arg type='^@' type_modifier='o' name='errorString' declared_type='NSString**' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='propertyListWithData:options:format:error:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='I' type64='Q' name='opt' declared_type='NSPropertyListReadOptions' index='1'/>
<arg type='^I' type64='^Q' name='format' declared_type='NSPropertyListFormat*' index='2'/>
<arg type='^@' type_modifier='o' name='error' declared_type='NSError**' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='propertyListWithStream:options:format:error:'>
<arg type='@' name='stream' declared_type='NSInputStream*' index='0'/>
<arg type='I' type64='Q' name='opt' declared_type='NSPropertyListReadOptions' index='1'/>
<arg type='^I' type64='^Q' name='format' declared_type='NSPropertyListFormat*' index='2'/>
<arg type='^@' type_modifier='o' name='error' declared_type='NSError**' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='writePropertyList:toStream:format:options:error:'>
<arg type='@' name='plist' declared_type='id' index='0'/>
<arg type='@' name='stream' declared_type='NSOutputStream*' index='1'/>
<arg type='I' type64='Q' name='format' declared_type='NSPropertyListFormat' index='2'/>
<arg type='I' type64='Q' name='opt' declared_type='NSPropertyListWriteOptions' index='3'/>
<arg type='^@' type_modifier='o' name='error' declared_type='NSError**' index='4'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</class>
<class name='NSProtocolChecker'>
<method selector='initWithTarget:protocol:'>
<arg type='@' name='anObject' declared_type='NSObject*' index='0'/>
<arg type='@' name='aProtocol' declared_type='Protocol*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='protocol'>
<retval type='@' declared_type='Protocol*'/>
</method>
<method class_method='true' selector='protocolCheckerWithTarget:protocol:'>
<arg type='@' name='anObject' declared_type='NSObject*' index='0'/>
<arg type='@' name='aProtocol' declared_type='Protocol*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='target'>
<retval type='@' declared_type='NSObject*'/>
</method>
</class>
<class name='NSProxy'>
<method class_method='true' selector='alloc'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='allocWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='class'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='dealloc'>
<retval type='v' declared_type='void'/>
</method>
<method selector='debugDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='finalize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='forwardInvocation:'>
<arg type='@' name='invocation' declared_type='NSInvocation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='methodSignatureForSelector:'>
<arg type=':' name='sel' declared_type='SEL' index='0'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method class_method='true' selector='respondsToSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSQuitCommand'>
<method selector='saveOptions'>
<retval type='I' type64='Q' declared_type='NSSaveOptions'/>
</method>
</class>
<class name='NSRangeSpecifier'>
<method selector='endSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:'>
<arg type='@' name='classDesc' declared_type='NSScriptClassDescription*' index='0'/>
<arg type='@' name='container' declared_type='NSScriptObjectSpecifier*' index='1'/>
<arg type='@' name='property' declared_type='NSString*' index='2'/>
<arg type='@' name='startSpec' declared_type='NSScriptObjectSpecifier*' index='3'/>
<arg type='@' name='endSpec' declared_type='NSScriptObjectSpecifier*' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setEndSpecifier:'>
<arg type='@' name='endSpec' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSpecifier:'>
<arg type='@' name='startSpec' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
</class>
<class name='NSRecursiveLock'>
<method selector='lockBeforeDate:'>
<arg type='@' name='limit' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSRegularExpression'>
<method selector='enumerateMatchesInString:options:range:usingBlock:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='2'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSTextCheckingResult *, NSMatchingFlags, BOOL *)' index='3'>
<arg type='@' declared_type='NSTextCheckingResult*'/>
<arg type='I' type64='Q' declared_type='NSMatchingFlags'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='escapedPatternForString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='escapedTemplateForString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='firstMatchInString:options:range:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='2'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='initWithPattern:options:error:'>
<arg type='@' name='pattern' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSRegularExpressionOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='matchesInString:options:range:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='numberOfCaptureGroups'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='numberOfMatchesInString:options:range:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='2'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='options'>
<retval type='I' type64='Q' declared_type='NSRegularExpressionOptions'/>
</method>
<method selector='pattern'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rangeOfFirstMatchInString:options:range:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='2'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method class_method='true' selector='regularExpressionWithPattern:options:error:'>
<arg type='@' name='pattern' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSRegularExpressionOptions' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSRegularExpression*'/>
</method>
<method selector='replaceMatchesInString:options:range:withTemplate:'>
<arg type='@' name='string' declared_type='NSMutableString*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='2'/>
<arg type='@' name='templ' declared_type='NSString*' index='3'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='replacementStringForResult:inString:offset:template:'>
<arg type='@' name='result' declared_type='NSTextCheckingResult*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<arg type='i' type64='q' name='offset' declared_type='NSInteger' index='2'/>
<arg type='@' name='templ' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingMatchesInString:options:range:withTemplate:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSMatchingOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='2'/>
<arg type='@' name='templ' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSRelativeSpecifier'>
<method selector='baseSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:'>
<arg type='@' name='classDesc' declared_type='NSScriptClassDescription*' index='0'/>
<arg type='@' name='container' declared_type='NSScriptObjectSpecifier*' index='1'/>
<arg type='@' name='property' declared_type='NSString*' index='2'/>
<arg type='I' type64='Q' name='relPos' declared_type='NSRelativePosition' index='3'/>
<arg type='@' name='baseSpecifier' declared_type='NSScriptObjectSpecifier*' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='relativePosition'>
<retval type='I' type64='Q' declared_type='NSRelativePosition'/>
</method>
<method selector='setBaseSpecifier:'>
<arg type='@' name='baseSpecifier' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRelativePosition:'>
<arg type='I' type64='Q' name='relPos' declared_type='NSRelativePosition' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSRunLoop'>
<method selector='acceptInputForMode:beforeDate:'>
<arg type='@' name='mode' declared_type='NSString*' index='0'/>
<arg type='@' name='limitDate' declared_type='NSDate*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPort:forMode:'>
<arg type='@' name='aPort' declared_type='NSPort*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addTimer:forMode:'>
<arg type='@' name='timer' declared_type='NSTimer*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelPerformSelector:target:argument:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='target' declared_type='id' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelPerformSelectorsWithTarget:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='configureAsServer'>
<retval type='v' declared_type='void'/>
</method>
<method selector='currentMode'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='currentRunLoop'>
<retval type='@' declared_type='NSRunLoop*'/>
</method>
<method selector='getCFRunLoop'>
<retval type='^{__CFRunLoop=}' declared_type='CFRunLoopRef'/>
</method>
<method selector='limitDateForMode:'>
<arg type='@' name='mode' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='mainRunLoop'>
<retval type='@' declared_type='NSRunLoop*'/>
</method>
<method selector='performSelector:target:argument:order:modes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='target' declared_type='id' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<arg type='I' type64='Q' name='order' declared_type='NSUInteger' index='3'/>
<arg type='@' name='modes' declared_type='NSArray*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePort:forMode:'>
<arg type='@' name='aPort' declared_type='NSPort*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='run'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runMode:beforeDate:'>
<arg type='@' name='mode' declared_type='NSString*' index='0'/>
<arg type='@' name='limitDate' declared_type='NSDate*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='runUntilDate:'>
<arg type='@' name='limitDate' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSScanner'>
<method selector='caseSensitive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='charactersToBeSkipped'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAtEnd'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='localizedScannerWithString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='scanCharactersFromSet:intoString:'>
<arg type='@' name='set' declared_type='NSCharacterSet*' index='0'/>
<arg type='^@' name='value' declared_type='NSString**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanDecimal:'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='dcm' declared_type='NSDecimal*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanDouble:'>
<arg type='^d' name='value' declared_type='double*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanFloat:'>
<arg type='^f' name='value' declared_type='float*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexDouble:'>
<arg type='^d' name='result' declared_type='double*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexFloat:'>
<arg type='^f' name='result' declared_type='float*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexInt:'>
<arg type='^I' name='value' declared_type='unsigned int*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexLongLong:'>
<arg type='^Q' name='result' declared_type='unsigned long long*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanInt:'>
<arg type='^i' name='value' declared_type='int*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanInteger:'>
<arg type='^i' type64='^q' name='value' declared_type='NSInteger*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanLocation'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='scanLongLong:'>
<arg type='^q' name='value' declared_type='long long*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanString:intoString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='^@' name='value' declared_type='NSString**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanUpToCharactersFromSet:intoString:'>
<arg type='@' name='set' declared_type='NSCharacterSet*' index='0'/>
<arg type='^@' name='value' declared_type='NSString**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanUpToString:intoString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='^@' name='value' declared_type='NSString**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='scannerWithString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCaseSensitive:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCharactersToBeSkipped:'>
<arg type='@' name='set' declared_type='NSCharacterSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScanLocation:'>
<arg type='I' type64='Q' name='pos' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSScriptClassDescription'>
<method selector='appleEventCode'>
<retval type='L' type64='I' declared_type='FourCharCode'/>
</method>
<method selector='appleEventCodeForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='L' type64='I' declared_type='FourCharCode'/>
</method>
<method class_method='true' selector='classDescriptionForClass:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='classDescriptionForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='className'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='defaultSubcontainerAttributeKey'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hasOrderedToManyRelationshipForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasPropertyForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasReadablePropertyForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasWritablePropertyForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='implementationClassName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithSuiteName:className:dictionary:'>
<arg type='@' name='suiteName' declared_type='NSString*' index='0'/>
<arg type='@' name='className' declared_type='NSString*' index='1'/>
<arg type='@' name='classDeclaration' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLocationRequiredToCreateForKey:'>
<arg type='@' name='toManyRelationshipKey' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReadOnlyKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyWithAppleEventCode:'>
<arg type='L' type64='I' name='appleEventCode' declared_type='FourCharCode' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='matchesAppleEventCode:'>
<arg type='L' type64='I' name='appleEventCode' declared_type='FourCharCode' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectorForCommand:'>
<arg type='@' name='commandDescription' declared_type='NSScriptCommandDescription*' index='0'/>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='suiteName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='superclassDescription'>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='supportsCommand:'>
<arg type='@' name='commandDescription' declared_type='NSScriptCommandDescription*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='typeForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSScriptCoercionHandler'>
<method selector='coerceValue:toClass:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='#' name='toClass' declared_type='Class' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='registerCoercer:selector:toConvertFromClass:toClass:'>
<arg type='@' name='coercer' declared_type='id' index='0'/>
<arg type=':' name='selector' declared_type='SEL' index='1'/>
<arg type='#' name='fromClass' declared_type='Class' index='2'/>
<arg type='#' name='toClass' declared_type='Class' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedCoercionHandler'>
<retval type='@' declared_type='NSScriptCoercionHandler*'/>
</method>
</class>
<class name='NSScriptCommand'>
<method selector='appleEvent'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='arguments'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='commandDescription'>
<retval type='@' declared_type='NSScriptCommandDescription*'/>
</method>
<method class_method='true' selector='currentCommand'>
<retval type='@' declared_type='NSScriptCommand*'/>
</method>
<method selector='directParameter'>
<retval type='@' declared_type='id'/>
</method>
<method selector='evaluatedArguments'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='evaluatedReceivers'>
<retval type='@' declared_type='id'/>
</method>
<method selector='executeCommand'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCommandDescription:'>
<arg type='@' name='commandDef' declared_type='NSScriptCommandDescription*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isWellFormed'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='performDefaultImplementation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='receiversSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='resumeExecutionWithResult:'>
<arg type='@' name='result' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scriptErrorExpectedTypeDescriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='scriptErrorNumber'>
<retval type='i' declared_type='int'/>
</method>
<method selector='scriptErrorOffendingObjectDescriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='scriptErrorString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setArguments:'>
<arg type='@' name='args' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirectParameter:'>
<arg type='@' name='directParameter' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg type='@' name='receiversRef' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScriptErrorExpectedTypeDescriptor:'>
<arg type='@' name='errorExpectedTypeDescriptor' declared_type='NSAppleEventDescriptor*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScriptErrorNumber:'>
<arg type='i' name='errorNumber' declared_type='int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScriptErrorOffendingObjectDescriptor:'>
<arg type='@' name='errorOffendingObjectDescriptor' declared_type='NSAppleEventDescriptor*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScriptErrorString:'>
<arg type='@' name='errorString' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='suspendExecution'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSScriptCommandDescription'>
<method selector='appleEventClassCode'>
<retval type='L' type64='I' declared_type='FourCharCode'/>
</method>
<method selector='appleEventCode'>
<retval type='L' type64='I' declared_type='FourCharCode'/>
</method>
<method selector='appleEventCodeForArgumentWithName:'>
<arg type='@' name='argumentName' declared_type='NSString*' index='0'/>
<retval type='L' type64='I' declared_type='FourCharCode'/>
</method>
<method selector='appleEventCodeForReturnType'>
<retval type='L' type64='I' declared_type='FourCharCode'/>
</method>
<method selector='argumentNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='commandClassName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='commandName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='createCommandInstance'>
<retval type='@' declared_type='NSScriptCommand*'/>
</method>
<method selector='createCommandInstanceWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='NSScriptCommand*'/>
</method>
<method selector='initWithSuiteName:commandName:dictionary:'>
<arg type='@' name='suiteName' declared_type='NSString*' index='0'/>
<arg type='@' name='commandName' declared_type='NSString*' index='1'/>
<arg type='@' name='commandDeclaration' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isOptionalArgumentWithName:'>
<arg type='@' name='argumentName' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='returnType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='suiteName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='typeForArgumentWithName:'>
<arg type='@' name='argumentName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSScriptExecutionContext'>
<method selector='objectBeingTested'>
<retval type='@' declared_type='id'/>
</method>
<method selector='rangeContainerObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObjectBeingTested:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRangeContainerObject:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTopLevelObject:'>
<arg type='@' name='obj' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedScriptExecutionContext'>
<retval type='@' declared_type='NSScriptExecutionContext*'/>
</method>
<method selector='topLevelObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSScriptObjectSpecifier'>
<method selector='childSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='containerClassDescription'>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='containerIsObjectBeingTested'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containerIsRangeContainerObject'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containerSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='descriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='evaluationErrorNumber'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='evaluationErrorSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='indicesOfObjectsByEvaluatingWithContainer:count:'>
<arg type='@' name='container' declared_type='id' index='0'/>
<arg type='^i' type64='^q' name='count' declared_type='NSInteger*' index='1'/>
<retval type='^i' type64='^q' declared_type='NSInteger*'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:'>
<arg type='@' name='classDesc' declared_type='NSScriptClassDescription*' index='0'/>
<arg type='@' name='container' declared_type='NSScriptObjectSpecifier*' index='1'/>
<arg type='@' name='property' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContainerSpecifier:key:'>
<arg type='@' name='container' declared_type='NSScriptObjectSpecifier*' index='0'/>
<arg type='@' name='property' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='keyClassDescription'>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method class_method='true' selector='objectSpecifierWithDescriptor:'>
<arg type='@' name='descriptor' declared_type='NSAppleEventDescriptor*' index='0'/>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='objectsByEvaluatingSpecifier'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectsByEvaluatingWithContainers:'>
<arg type='@' name='containers' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setChildSpecifier:'>
<arg type='@' name='child' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContainerClassDescription:'>
<arg type='@' name='classDesc' declared_type='NSScriptClassDescription*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContainerIsObjectBeingTested:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContainerIsRangeContainerObject:'>
<arg type='B' name='flag' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContainerSpecifier:'>
<arg type='@' name='subRef' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEvaluationErrorNumber:'>
<arg type='i' type64='q' name='error' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSScriptSuiteRegistry'>
<method selector='aeteResource:'>
<arg type='@' name='languageName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='appleEventCodeForSuite:'>
<arg type='@' name='suiteName' declared_type='NSString*' index='0'/>
<retval type='L' type64='I' declared_type='FourCharCode'/>
</method>
<method selector='bundleForSuite:'>
<arg type='@' name='suiteName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='classDescriptionWithAppleEventCode:'>
<arg type='L' type64='I' name='appleEventCode' declared_type='FourCharCode' index='0'/>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='classDescriptionsInSuite:'>
<arg type='@' name='suiteName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='commandDescriptionWithAppleEventClass:andAppleEventCode:'>
<arg type='L' type64='I' name='appleEventClassCode' declared_type='FourCharCode' index='0'/>
<arg type='L' type64='I' name='appleEventIDCode' declared_type='FourCharCode' index='1'/>
<retval type='@' declared_type='NSScriptCommandDescription*'/>
</method>
<method selector='commandDescriptionsInSuite:'>
<arg type='@' name='suiteName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='loadSuiteWithDictionary:fromBundle:'>
<arg type='@' name='suiteDeclaration' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='bundle' declared_type='NSBundle*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadSuitesFromBundle:'>
<arg type='@' name='bundle' declared_type='NSBundle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerClassDescription:'>
<arg type='@' name='classDescription' declared_type='NSScriptClassDescription*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerCommandDescription:'>
<arg type='@' name='commandDescription' declared_type='NSScriptCommandDescription*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setSharedScriptSuiteRegistry:'>
<arg type='@' name='registry' declared_type='NSScriptSuiteRegistry*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedScriptSuiteRegistry'>
<retval type='@' declared_type='NSScriptSuiteRegistry*'/>
</method>
<method selector='suiteForAppleEventCode:'>
<arg type='L' type64='I' name='appleEventCode' declared_type='FourCharCode' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='suiteNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSScriptWhoseTest'>
<method selector='isTrue'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSSet'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='options' declared_type='NSKeyValueObservingOptions' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='anyObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='containsObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg type='@' name='locale' declared_type='id' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(id, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='filteredSetUsingPredicate:'>
<arg type='@' name='predicate' declared_type='NSPredicate*' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='initWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:' variadic='true' sentinel='0'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:count:'>
<arg type='^@' const='true' name='objects' declared_type='id*' index='0'/>
<arg type='I' type64='Q' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:copyItems:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectsSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfSet:'>
<arg type='@' name='otherSet' declared_type='NSSet*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='argument' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='member:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectsPassingTest:'>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, BOOL *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='objectsWithOptions:passingTest:'>
<arg type='I' type64='Q' name='opts' declared_type='NSEnumerationOptions' index='0'/>
<arg type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(id, BOOL *)' index='1'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='^v' name='context' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='set'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setByAddingObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setByAddingObjectsFromArray:'>
<arg type='@' name='other' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setByAddingObjectsFromSet:'>
<arg type='@' name='other' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setWithArray:'>
<arg type='@' name='array' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setWithObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setWithObjects:' variadic='true' sentinel='0'>
<arg type='@' name='firstObj' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setWithObjects:count:'>
<arg type='^@' const='true' name='objects' declared_type='id*' index='0'/>
<arg type='I' type64='Q' name='cnt' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setWithSet:'>
<arg type='@' name='set' declared_type='NSSet*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sortedArrayUsingDescriptors:'>
<arg type='@' name='sortDescriptors' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSSetCommand'>
<method selector='keySpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg type='@' name='receiversRef' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSSocketPort'>
<method selector='address'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRemoteWithProtocolFamily:socketType:protocol:address:'>
<arg type='i' name='family' declared_type='int' index='0'/>
<arg type='i' name='type' declared_type='int' index='1'/>
<arg type='i' name='protocol' declared_type='int' index='2'/>
<arg type='@' name='address' declared_type='NSData*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRemoteWithTCPPort:host:'>
<arg type='S' name='port' declared_type='unsigned short' index='0'/>
<arg type='@' name='hostName' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProtocolFamily:socketType:protocol:address:'>
<arg type='i' name='family' declared_type='int' index='0'/>
<arg type='i' name='type' declared_type='int' index='1'/>
<arg type='i' name='protocol' declared_type='int' index='2'/>
<arg type='@' name='address' declared_type='NSData*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProtocolFamily:socketType:protocol:socket:'>
<arg type='i' name='family' declared_type='int' index='0'/>
<arg type='i' name='type' declared_type='int' index='1'/>
<arg type='i' name='protocol' declared_type='int' index='2'/>
<arg type='i' name='sock' declared_type='NSSocketNativeHandle' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTCPPort:'>
<arg type='S' name='port' declared_type='unsigned short' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='protocol'>
<retval type='i' declared_type='int'/>
</method>
<method selector='protocolFamily'>
<retval type='i' declared_type='int'/>
</method>
<method selector='socket'>
<retval type='i' declared_type='NSSocketNativeHandle'/>
</method>
<method selector='socketType'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='NSSocketPortNameServer'>
<method selector='defaultNameServerPortNumber'>
<retval type='S' declared_type='uint16_t'/>
</method>
<method selector='portForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portForName:host:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='host' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portForName:host:nameServerPortNumber:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='host' declared_type='NSString*' index='1'/>
<arg type='S' name='portNumber' declared_type='uint16_t' index='2'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='registerPort:name:'>
<arg type='@' name='port' declared_type='NSPort*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='registerPort:name:nameServerPortNumber:'>
<arg type='@' name='port' declared_type='NSPort*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='S' name='portNumber' declared_type='uint16_t' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removePortForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDefaultNameServerPortNumber:'>
<arg type='S' name='portNumber' declared_type='uint16_t' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSSortDescriptor'>
<method selector='ascending'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='comparator'>
<retval type='@?' function_pointer='true' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</retval>
</method>
<method selector='compareObject:toObject:'>
<arg type='@' name='object1' declared_type='id' index='0'/>
<arg type='@' name='object2' declared_type='id' index='1'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method selector='initWithKey:ascending:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKey:ascending:comparator:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='2'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKey:ascending:selector:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<arg type=':' name='selector' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='reversedSortDescriptor'>
<retval type='@' declared_type='id'/>
</method>
<method selector='selector'>
<retval type=':' declared_type='SEL'/>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:comparator:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<arg type='@?' name='cmptr' function_pointer='true' declared_type='NSComparator' index='2'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:selector:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='B' name='ascending' declared_type='BOOL' index='1'/>
<arg type=':' name='selector' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSSpecifierTest'>
<method selector='initWithObjectSpecifier:comparisonOperator:testObject:'>
<arg type='@' name='obj1' declared_type='NSScriptObjectSpecifier*' index='0'/>
<arg type='I' type64='Q' name='compOp' declared_type='NSTestComparisonOperation' index='1'/>
<arg type='@' name='obj2' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSSpellServer'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isWordInUserDictionaries:caseSensitive:'>
<arg type='@' name='word' declared_type='NSString*' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='registerLanguage:byVendor:'>
<arg type='@' name='language' declared_type='NSString*' index='0'/>
<arg type='@' name='vendor' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='run'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSStream'>
<method selector='close'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='getStreamsToHost:port:inputStream:outputStream:'>
<arg type='@' name='host' declared_type='NSHost*' index='0'/>
<arg type='i' type64='q' name='port' declared_type='NSInteger' index='1'/>
<arg type='^@' name='inputStream' declared_type='NSInputStream**' index='2'/>
<arg type='^@' name='outputStream' declared_type='NSOutputStream**' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='open'>
<retval type='v' declared_type='void'/>
</method>
<method selector='propertyForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperty:forKey:'>
<arg type='@' name='property' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='streamError'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='streamStatus'>
<retval type='I' type64='Q' declared_type='NSStreamStatus'/>
</method>
</class>
<class name='NSString'>
<method selector='UTF8String'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method class_method='true' selector='availableStringEncodings'>
<retval type='^I' const='true' type64='^Q' declared_type='NSStringEncoding*'/>
</method>
<method selector='boolValue'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cString'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='cStringLength'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='cStringUsingEncoding:'>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='0'/>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='canBeConvertedToEncoding:'>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='capitalizedString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='capitalizedStringWithLocale:'>
<arg type='@' name='locale' declared_type='NSLocale*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='caseInsensitiveCompare:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method selector='characterAtIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='S' declared_type='unichar'/>
</method>
<method selector='commonPrefixWithString:options:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='compare:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method selector='compare:options:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method selector='compare:options:range:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='compareRange' declared_type='NSRange' index='2'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method selector='compare:options:range:locale:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='compareRange' declared_type='NSRange' index='2'/>
<arg type='@' name='locale' declared_type='id' index='3'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method selector='completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:'>
<arg type='^@' name='outputName' declared_type='NSString**' index='0'/>
<arg type='B' name='flag' declared_type='BOOL' index='1'/>
<arg type='^@' name='outputArray' declared_type='NSArray**' index='2'/>
<arg type='@' name='filterTypes' declared_type='NSArray*' index='3'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='componentsSeparatedByCharactersInSet:'>
<arg type='@' name='separator' declared_type='NSCharacterSet*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='componentsSeparatedByString:'>
<arg type='@' name='separator' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='dataUsingEncoding:'>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dataUsingEncoding:allowLossyConversion:'>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='0'/>
<arg type='B' name='lossy' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='decomposedStringWithCanonicalMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='decomposedStringWithCompatibilityMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='defaultCStringEncoding'>
<retval type='I' type64='Q' declared_type='NSStringEncoding'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='enumerateLinesUsingBlock:'>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSString *, BOOL *)' index='0'>
<arg type='@' declared_type='NSString*'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='opts' declared_type='NSLinguisticTaggerOptions' index='2'/>
<arg type='@' name='orthography' declared_type='NSOrthography*' index='3'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSString *, NSRange, NSRange, BOOL *)' index='4'>
<arg type='@' declared_type='NSString*'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateSubstringsInRange:options:usingBlock:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='I' type64='Q' name='opts' declared_type='NSStringEnumerationOptions' index='1'/>
<arg type='@?' name='block' function_pointer='true' declared_type='void (^)(NSString *, NSRange, NSRange, BOOL *)' index='2'>
<arg type='@' declared_type='NSString*'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='fastestEncoding'>
<retval type='I' type64='Q' declared_type='NSStringEncoding'/>
</method>
<method selector='fileSystemRepresentation'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='floatValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='getBytes:maxLength:usedLength:encoding:options:range:remainingRange:'>
<arg type='^v' name='buffer' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='maxBufferCount' declared_type='NSUInteger' index='1'/>
<arg type='^I' type64='^Q' name='usedBufferCount' declared_type='NSUInteger*' index='2'/>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='3'/>
<arg type='I' type64='Q' name='options' declared_type='NSStringEncodingConversionOptions' index='4'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='5'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='leftover' declared_type='NSRangePointer' index='6'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getCString:'>
<arg type='*' name='bytes' declared_type='char*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCString:maxLength:'>
<arg type='*' name='bytes' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='maxLength' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCString:maxLength:encoding:'>
<arg type='*' name='buffer' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='maxBufferCount' declared_type='NSUInteger' index='1'/>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getCString:maxLength:range:remainingRange:'>
<arg type='*' name='bytes' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='maxLength' declared_type='NSUInteger' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='aRange' declared_type='NSRange' index='2'/>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='leftoverRange' declared_type='NSRangePointer' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCharacters:'>
<arg type='^S' name='buffer' declared_type='unichar*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCharacters:range:'>
<arg type='^S' name='buffer' declared_type='unichar*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='aRange' declared_type='NSRange' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getFileSystemRepresentation:maxLength:'>
<arg type='*' name='cname' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='max' declared_type='NSUInteger' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getLineStart:end:contentsEnd:forRange:'>
<arg type='^I' type64='^Q' name='startPtr' declared_type='NSUInteger*' index='0'/>
<arg type='^I' type64='^Q' name='lineEndPtr' declared_type='NSUInteger*' index='1'/>
<arg type='^I' type64='^Q' name='contentsEndPtr' declared_type='NSUInteger*' index='2'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getParagraphStart:end:contentsEnd:forRange:'>
<arg type='^I' type64='^Q' name='startPtr' declared_type='NSUInteger*' index='0'/>
<arg type='^I' type64='^Q' name='parEndPtr' declared_type='NSUInteger*' index='1'/>
<arg type='^I' type64='^Q' name='contentsEndPtr' declared_type='NSUInteger*' index='2'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasPrefix:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasSuffix:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hash'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytes:length:encoding:'>
<arg type='^v' const='true' name='bytes' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='len' declared_type='NSUInteger' index='1'/>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytesNoCopy:length:encoding:freeWhenDone:'>
<arg type='^v' name='bytes' declared_type='void*' index='0'/>
<arg type='I' type64='Q' name='len' declared_type='NSUInteger' index='1'/>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='2'/>
<arg type='B' name='freeBuffer' declared_type='BOOL' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCString:'>
<arg type='*' const='true' name='bytes' declared_type='char*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCString:encoding:'>
<arg type='*' const='true' name='nullTerminatedCString' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCString:length:'>
<arg type='*' const='true' name='bytes' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCStringNoCopy:length:freeWhenDone:'>
<arg type='*' name='bytes' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<arg type='B' name='freeBuffer' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCharacters:length:'>
<arg type='^S' const='true' name='characters' declared_type='unichar*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCharactersNoCopy:length:freeWhenDone:'>
<arg type='^S' name='characters' declared_type='unichar*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<arg type='B' name='freeBuffer' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:encoding:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:usedEncoding:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^I' type64='^Q' name='enc' declared_type='NSStringEncoding*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:encoding:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:usedEncoding:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^I' type64='^Q' name='enc' declared_type='NSStringEncoding*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:encoding:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:' variadic='true'>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:arguments:'>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='0'/>
<arg type='*' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' name='argList' declared_type='va_list' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:locale:' variadic='true'>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='0'/>
<arg type='@' name='locale' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:locale:arguments:'>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='0'/>
<arg type='@' name='locale' declared_type='id' index='1'/>
<arg type='*' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' name='argList' declared_type='va_list' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUTF8String:'>
<arg type='*' const='true' name='nullTerminatedCString' declared_type='char*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intValue'>
<retval type='i' declared_type='int'/>
</method>
<method selector='integerValue'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='isAbsolutePath'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastPathComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='length'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='lengthOfBytesUsingEncoding:'>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='lineRangeForRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='linguisticTagsInRange:scheme:options:orthography:tokenRanges:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='tagScheme' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='opts' declared_type='NSLinguisticTaggerOptions' index='2'/>
<arg type='@' name='orthography' declared_type='NSOrthography*' index='3'/>
<arg type='^@' name='tokenRanges' declared_type='NSArray**' index='4'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedCaseInsensitiveCompare:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method selector='localizedCompare:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method class_method='true' selector='localizedNameOfStringEncoding:'>
<arg type='I' type64='Q' name='encoding' declared_type='NSStringEncoding' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedStandardCompare:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='i' type64='q' declared_type='NSComparisonResult'/>
</method>
<method class_method='true' selector='localizedStringWithFormat:' variadic='true'>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='longLongValue'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='lossyCString'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='lowercaseString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='lowercaseStringWithLocale:'>
<arg type='@' name='locale' declared_type='NSLocale*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='maximumLengthOfBytesUsingEncoding:'>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='0'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='paragraphRangeForRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='pathComponents'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathExtension'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='pathWithComponents:'>
<arg type='@' name='components' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='precomposedStringWithCanonicalMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='precomposedStringWithCompatibilityMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='propertyList'>
<retval type='@' declared_type='id'/>
</method>
<method selector='propertyListFromStringsFileFormat'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='rangeOfCharacterFromSet:'>
<arg type='@' name='aSet' declared_type='NSCharacterSet*' index='0'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rangeOfCharacterFromSet:options:'>
<arg type='@' name='aSet' declared_type='NSCharacterSet*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rangeOfCharacterFromSet:options:range:'>
<arg type='@' name='aSet' declared_type='NSCharacterSet*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='searchRange' declared_type='NSRange' index='2'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rangeOfComposedCharacterSequenceAtIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rangeOfComposedCharacterSequencesForRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:options:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:options:range:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='searchRange' declared_type='NSRange' index='2'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:options:range:locale:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSStringCompareOptions' index='1'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='searchRange' declared_type='NSRange' index='2'/>
<arg type='@' name='locale' declared_type='NSLocale*' index='3'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='smallestEncoding'>
<retval type='I' type64='Q' declared_type='NSStringEncoding'/>
</method>
<method class_method='true' selector='string'>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringByAbbreviatingWithTildeInPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAddingPercentEscapesUsingEncoding:'>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingFormat:' variadic='true'>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingPathComponent:'>
<arg type='@' name='str' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingPathExtension:'>
<arg type='@' name='str' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingString:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByDeletingLastPathComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByDeletingPathExtension'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByExpandingTildeInPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByFoldingWithOptions:locale:'>
<arg type='I' type64='Q' name='options' declared_type='NSStringCompareOptions' index='0'/>
<arg type='@' name='locale' declared_type='NSLocale*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByPaddingToLength:withString:startingAtIndex:'>
<arg type='I' type64='Q' name='newLength' declared_type='NSUInteger' index='0'/>
<arg type='@' name='padString' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='padIndex' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingCharactersInRange:withString:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='replacement' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingOccurrencesOfString:withString:'>
<arg type='@' name='target' declared_type='NSString*' index='0'/>
<arg type='@' name='replacement' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingOccurrencesOfString:withString:options:range:'>
<arg type='@' name='target' declared_type='NSString*' index='0'/>
<arg type='@' name='replacement' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='options' declared_type='NSStringCompareOptions' index='2'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='searchRange' declared_type='NSRange' index='3'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingPercentEscapesUsingEncoding:'>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByResolvingSymlinksInPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByStandardizingPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByTrimmingCharactersInSet:'>
<arg type='@' name='set' declared_type='NSCharacterSet*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='stringWithCString:'>
<arg type='*' const='true' name='bytes' declared_type='char*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithCString:encoding:'>
<arg type='*' const='true' name='cString' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithCString:length:'>
<arg type='*' const='true' name='bytes' declared_type='char*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithCharacters:length:'>
<arg type='^S' const='true' name='characters' declared_type='unichar*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:encoding:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:usedEncoding:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='^I' type64='^Q' name='enc' declared_type='NSStringEncoding*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:encoding:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:usedEncoding:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^I' type64='^Q' name='enc' declared_type='NSStringEncoding*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithFormat:' variadic='true'>
<arg printf_format='true' type='@' name='format' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithUTF8String:'>
<arg type='*' const='true' name='nullTerminatedCString' declared_type='char*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringsByAppendingPaths:'>
<arg type='@' name='paths' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='substringFromIndex:'>
<arg type='I' type64='Q' name='from' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='substringToIndex:'>
<arg type='I' type64='Q' name='to' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='substringWithRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='uppercaseString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='uppercaseStringWithLocale:'>
<arg type='@' name='locale' declared_type='NSLocale*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='writeToFile:atomically:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToFile:atomically:encoding:error:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='atomically' declared_type='BOOL' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:encoding:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='B' name='useAuxiliaryFile' declared_type='BOOL' index='1'/>
<arg type='I' type64='Q' name='enc' declared_type='NSStringEncoding' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSTask'>
<method selector='arguments'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='currentDirectoryPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='environment'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='interrupt'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isRunning'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='launch'>
<retval type='v' declared_type='void'/>
</method>
<method selector='launchPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='launchedTaskWithLaunchPath:arguments:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='@' name='arguments' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSTask*'/>
</method>
<method selector='processIdentifier'>
<retval type='i' declared_type='int'/>
</method>
<method selector='resume'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setArguments:'>
<arg type='@' name='arguments' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrentDirectoryPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnvironment:'>
<arg type='@' name='dict' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLaunchPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardError:'>
<arg type='@' name='error' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardInput:'>
<arg type='@' name='input' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardOutput:'>
<arg type='@' name='output' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTerminationHandler:'>
<arg type='@?' name='terminationHandler' function_pointer='true' declared_type='void (^)(NSTask *)' index='0'>
<arg type='@' declared_type='NSTask*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='standardError'>
<retval type='@' declared_type='id'/>
</method>
<method selector='standardInput'>
<retval type='@' declared_type='id'/>
</method>
<method selector='standardOutput'>
<retval type='@' declared_type='id'/>
</method>
<method selector='suspend'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='terminate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='terminationHandler'>
<retval type='@?' function_pointer='true' declared_type='void (^)(NSTask *)'>
<arg type='@' declared_type='NSTask*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='terminationReason'>
<retval type='i' type64='q' declared_type='NSTaskTerminationReason'/>
</method>
<method selector='terminationStatus'>
<retval type='i' declared_type='int'/>
</method>
<method selector='waitUntilExit'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSTextCheckingResult'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='addressCheckingResultWithRange:components:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='components' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='addressComponents'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='components'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='correctionCheckingResultWithRange:replacementString:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='replacementString' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method class_method='true' selector='dashCheckingResultWithRange:replacementString:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='replacementString' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='date'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='dateCheckingResultWithRange:date:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='date' declared_type='NSDate*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method class_method='true' selector='dateCheckingResultWithRange:date:timeZone:duration:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='date' declared_type='NSDate*' index='1'/>
<arg type='@' name='timeZone' declared_type='NSTimeZone*' index='2'/>
<arg type='d' name='duration' declared_type='NSTimeInterval' index='3'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='duration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method class_method='true' selector='grammarCheckingResultWithRange:details:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='details' declared_type='NSArray*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='grammarDetails'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='linkCheckingResultWithRange:URL:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='url' declared_type='NSURL*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='numberOfRanges'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='orthography'>
<retval type='@' declared_type='NSOrthography*'/>
</method>
<method class_method='true' selector='orthographyCheckingResultWithRange:orthography:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='orthography' declared_type='NSOrthography*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='phoneNumber'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='phoneNumberCheckingResultWithRange:phoneNumber:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='phoneNumber' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method class_method='true' selector='quoteCheckingResultWithRange:replacementString:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='replacementString' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='range'>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rangeAtIndex:'>
<arg type='I' type64='Q' name='idx' declared_type='NSUInteger' index='0'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='regularExpression'>
<retval type='@' declared_type='NSRegularExpression*'/>
</method>
<method class_method='true' selector='regularExpressionCheckingResultWithRanges:count:regularExpression:'>
<arg type='^{_NSRange=II}' type64='^{_NSRange=QQ}' name='ranges' declared_type='NSRangePointer' index='0'/>
<arg type='I' type64='Q' name='count' declared_type='NSUInteger' index='1'/>
<arg type='@' name='regularExpression' declared_type='NSRegularExpression*' index='2'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method class_method='true' selector='replacementCheckingResultWithRange:replacementString:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='replacementString' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='replacementString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resultByAdjustingRangesWithOffset:'>
<arg type='i' type64='q' name='offset' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='resultType'>
<retval type='Q' declared_type='NSTextCheckingType'/>
</method>
<method class_method='true' selector='spellCheckingResultWithRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method class_method='true' selector='transitInformationCheckingResultWithRange:components:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<arg type='@' name='components' declared_type='NSDictionary*' index='1'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
</class>
<class name='NSThread'>
<method class_method='true' selector='callStackReturnAddresses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='callStackSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='currentThread'>
<retval type='@' declared_type='NSThread*'/>
</method>
<method class_method='true' selector='detachNewThreadSelector:toTarget:withObject:'>
<arg type=':' name='selector' declared_type='SEL' index='0'/>
<arg type='@' name='target' declared_type='id' index='1'/>
<arg type='@' name='argument' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='exit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<arg type=':' name='selector' declared_type='SEL' index='1'/>
<arg type='@' name='argument' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isCancelled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExecuting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFinished'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='isMainThread'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMainThread'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='isMultiThreaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='main'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='mainThread'>
<retval type='@' declared_type='NSThread*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg type='@' name='n' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStackSize:'>
<arg type='I' type64='Q' name='s' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setThreadPriority:'>
<arg type='d' name='p' declared_type='double' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setThreadPriority:'>
<arg type='d' name='p' declared_type='double' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sleepForTimeInterval:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sleepUntilDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stackSize'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='start'>
<retval type='v' declared_type='void'/>
</method>
<method selector='threadDictionary'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method class_method='true' selector='threadPriority'>
<retval type='d' declared_type='double'/>
</method>
<method selector='threadPriority'>
<retval type='d' declared_type='double'/>
</method>
</class>
<class name='NSTimeZone'>
<method selector='abbreviation'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='abbreviationDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='abbreviationForDate:'>
<arg type='@' name='aDate' declared_type='NSDate*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='daylightSavingTimeOffset'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='daylightSavingTimeOffsetForDate:'>
<arg type='@' name='aDate' declared_type='NSDate*' index='0'/>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method class_method='true' selector='defaultTimeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithName:'>
<arg type='@' name='tzName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithName:data:'>
<arg type='@' name='tzName' declared_type='NSString*' index='0'/>
<arg type='@' name='aData' declared_type='NSData*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDaylightSavingTime'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDaylightSavingTimeForDate:'>
<arg type='@' name='aDate' declared_type='NSDate*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToTimeZone:'>
<arg type='@' name='aTimeZone' declared_type='NSTimeZone*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='knownTimeZoneNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='localTimeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='localizedName:locale:'>
<arg type='i' type64='q' name='style' declared_type='NSTimeZoneNameStyle' index='0'/>
<arg type='@' name='locale' declared_type='NSLocale*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='nextDaylightSavingTimeTransition'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='nextDaylightSavingTimeTransitionAfterDate:'>
<arg type='@' name='aDate' declared_type='NSDate*' index='0'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='resetSystemTimeZone'>
<retval type='v' declared_type='void'/>
</method>
<method selector='secondsFromGMT'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='secondsFromGMTForDate:'>
<arg type='@' name='aDate' declared_type='NSDate*' index='0'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method class_method='true' selector='setAbbreviationDictionary:'>
<arg type='@' name='dict' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setDefaultTimeZone:'>
<arg type='@' name='aTimeZone' declared_type='NSTimeZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='systemTimeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method class_method='true' selector='timeZoneDataVersion'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='timeZoneForSecondsFromGMT:'>
<arg type='i' type64='q' name='seconds' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='timeZoneWithAbbreviation:'>
<arg type='@' name='abbreviation' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='timeZoneWithName:'>
<arg type='@' name='tzName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='timeZoneWithName:data:'>
<arg type='@' name='tzName' declared_type='NSString*' index='0'/>
<arg type='@' name='aData' declared_type='NSData*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSTimer'>
<method selector='fire'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fireDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='initWithFireDate:interval:target:selector:userInfo:repeats:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='1'/>
<arg type='@' name='t' declared_type='id' index='2'/>
<arg type=':' name='s' declared_type='SEL' index='3'/>
<arg type='@' name='ui' declared_type='id' index='4'/>
<arg type='B' name='rep' declared_type='BOOL' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isValid'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:invocation:repeats:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='invocation' declared_type='NSInvocation*' index='1'/>
<arg type='B' name='yesOrNo' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='aTarget' declared_type='id' index='1'/>
<arg type=':' name='aSelector' declared_type='SEL' index='2'/>
<arg type='@' name='userInfo' declared_type='id' index='3'/>
<arg type='B' name='yesOrNo' declared_type='BOOL' index='4'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method selector='setFireDate:'>
<arg type='@' name='date' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method class_method='true' selector='timerWithTimeInterval:invocation:repeats:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='invocation' declared_type='NSInvocation*' index='1'/>
<arg type='B' name='yesOrNo' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method class_method='true' selector='timerWithTimeInterval:target:selector:userInfo:repeats:'>
<arg type='d' name='ti' declared_type='NSTimeInterval' index='0'/>
<arg type='@' name='aTarget' declared_type='id' index='1'/>
<arg type=':' name='aSelector' declared_type='SEL' index='2'/>
<arg type='@' name='userInfo' declared_type='id' index='3'/>
<arg type='B' name='yesOrNo' declared_type='BOOL' index='4'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSURL'>
<method selector='URLByAppendingPathComponent:'>
<arg type='@' name='pathComponent' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByAppendingPathComponent:isDirectory:'>
<arg type='@' name='pathComponent' declared_type='NSString*' index='0'/>
<arg type='B' name='isDirectory' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByAppendingPathExtension:'>
<arg type='@' name='pathExtension' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByDeletingLastPathComponent'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByDeletingPathExtension'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'>
<arg type='@' name='bookmarkData' declared_type='NSData*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSURLBookmarkResolutionOptions' index='1'/>
<arg type='@' name='relativeURL' declared_type='NSURL*' index='2'/>
<arg type='^B' name='isStale' declared_type='BOOL*' index='3'/>
<arg type='^@' name='error' declared_type='NSError**' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='URLByResolvingSymlinksInPath'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByStandardizingPath'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLHandleUsingCache:'>
<arg type='B' name='shouldUseCache' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='NSURLHandle*'/>
</method>
<method class_method='true' selector='URLWithString:'>
<arg type='@' name='URLString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='URLWithString:relativeToURL:'>
<arg type='@' name='URLString' declared_type='NSString*' index='0'/>
<arg type='@' name='baseURL' declared_type='NSURL*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='absoluteString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='absoluteURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='bookmarkDataWithContentsOfURL:error:'>
<arg type='@' name='bookmarkFileURL' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:'>
<arg type='I' type64='Q' name='options' declared_type='NSURLBookmarkCreationOptions' index='0'/>
<arg type='@' name='keys' declared_type='NSArray*' index='1'/>
<arg type='@' name='relativeURL' declared_type='NSURL*' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='checkResourceIsReachableAndReturnError:'>
<arg type='^@' name='error' declared_type='NSError**' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='filePathURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='fileReferenceURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='fileURLWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileURLWithPath:isDirectory:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='isDir' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileURLWithPathComponents:'>
<arg type='@' name='components' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='fragment'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getResourceValue:forKey:error:'>
<arg type='^@' type_modifier='o' name='value' declared_type='id*' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='^@' type_modifier='o' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='host'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'>
<arg type='@' name='bookmarkData' declared_type='NSData*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSURLBookmarkResolutionOptions' index='1'/>
<arg type='@' name='relativeURL' declared_type='NSURL*' index='2'/>
<arg type='^B' name='isStale' declared_type='BOOL*' index='3'/>
<arg type='^@' name='error' declared_type='NSError**' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFileURLWithPath:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFileURLWithPath:isDirectory:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='isDir' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithScheme:host:path:'>
<arg type='@' name='scheme' declared_type='NSString*' index='0'/>
<arg type='@' name='host' declared_type='NSString*' index='1'/>
<arg type='@' name='path' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg type='@' name='URLString' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:relativeToURL:'>
<arg type='@' name='URLString' declared_type='NSString*' index='0'/>
<arg type='@' name='baseURL' declared_type='NSURL*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFileReferenceURL'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFileURL'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastPathComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='loadResourceDataNotifyingClient:usingCache:'>
<arg type='@' name='client' declared_type='id' index='0'/>
<arg type='B' name='shouldUseCache' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parameterString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='password'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='path'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathComponents'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathExtension'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='port'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='propertyForKey:'>
<arg type='@' name='propertyKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='query'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='relativePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='relativeString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resourceDataUsingCache:'>
<arg type='B' name='shouldUseCache' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='resourceSpecifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resourceValuesForKeys:error:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='resourceValuesForKeys:fromBookmarkData:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<arg type='@' name='bookmarkData' declared_type='NSData*' index='1'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='scheme'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setProperty:forKey:'>
<arg type='@' name='property' declared_type='id' index='0'/>
<arg type='@' name='propertyKey' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setResourceData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setResourceValue:forKey:error:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setResourceValues:error:'>
<arg type='@' name='keyedValues' declared_type='NSDictionary*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='standardizedURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='startAccessingSecurityScopedResource'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stopAccessingSecurityScopedResource'>
<retval type='v' declared_type='void'/>
</method>
<method selector='user'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='writeBookmarkData:toURL:options:error:'>
<arg type='@' name='bookmarkData' declared_type='NSData*' index='0'/>
<arg type='@' name='bookmarkFileURL' declared_type='NSURL*' index='1'/>
<arg type='I' type64='Q' name='options' declared_type='NSURLBookmarkFileCreationOptions' index='2'/>
<arg type='^@' name='error' declared_type='NSError**' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSURLAuthenticationChallenge'>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='failureResponse'>
<retval type='@' declared_type='NSURLResponse*'/>
</method>
<method selector='initWithAuthenticationChallenge:sender:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<arg type='@' name='sender' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:'>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='0'/>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='1'/>
<arg type='i' type64='q' name='previousFailureCount' declared_type='NSInteger' index='2'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='3'/>
<arg type='@' name='error' declared_type='NSError*' index='4'/>
<arg type='@' name='sender' declared_type='id' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='previousFailureCount'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='proposedCredential'>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='protectionSpace'>
<retval type='@' declared_type='NSURLProtectionSpace*'/>
</method>
<method selector='sender'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSURLCache'>
<method selector='cachedResponseForRequest:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method selector='currentDiskUsage'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='currentMemoryUsage'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='diskCapacity'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='initWithMemoryCapacity:diskCapacity:diskPath:'>
<arg type='I' type64='Q' name='memoryCapacity' declared_type='NSUInteger' index='0'/>
<arg type='I' type64='Q' name='diskCapacity' declared_type='NSUInteger' index='1'/>
<arg type='@' name='path' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='memoryCapacity'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='removeAllCachedResponses'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCachedResponseForRequest:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDiskCapacity:'>
<arg type='I' type64='Q' name='diskCapacity' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMemoryCapacity:'>
<arg type='I' type64='Q' name='memoryCapacity' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setSharedURLCache:'>
<arg type='@' name='cache' declared_type='NSURLCache*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedURLCache'>
<retval type='@' declared_type='NSURLCache*'/>
</method>
<method selector='storeCachedResponse:forRequest:'>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLConnection'>
<method class_method='true' selector='canHandleRequest:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='connectionWithRequest:delegate:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='delegate' declared_type='id' index='1'/>
<retval type='@' declared_type='NSURLConnection*'/>
</method>
<method selector='initWithRequest:delegate:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='delegate' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRequest:delegate:startImmediately:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='delegate' declared_type='id' index='1'/>
<arg type='B' name='startImmediately' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sendAsynchronousRequest:queue:completionHandler:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='queue' declared_type='NSOperationQueue*' index='1'/>
<arg type='@?' name='handler' function_pointer='true' declared_type='void (^)(NSURLResponse *, NSData *, NSError *)' index='2'>
<arg type='@' declared_type='NSURLResponse*'/>
<arg type='@' declared_type='NSData*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sendSynchronousRequest:returningResponse:error:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='^@' name='response' declared_type='NSURLResponse**' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='setDelegateQueue:'>
<arg type='@' name='queue' declared_type='NSOperationQueue*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='start'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleFromRunLoop:forMode:'>
<arg type='@' name='aRunLoop' declared_type='NSRunLoop*' index='0'/>
<arg type='@' name='mode' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLCredential'>
<method selector='certificates'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='credentialForTrust:'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef' index='0'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method class_method='true' selector='credentialWithIdentity:certificates:persistence:'>
<arg type='^{OpaqueSecIdentityRef=}' name='identity' declared_type='SecIdentityRef' index='0'/>
<arg type='@' name='certArray' declared_type='NSArray*' index='1'/>
<arg type='I' type64='Q' name='persistence' declared_type='NSURLCredentialPersistence' index='2'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method class_method='true' selector='credentialWithUser:password:persistence:'>
<arg type='@' name='user' declared_type='NSString*' index='0'/>
<arg type='@' name='password' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='persistence' declared_type='NSURLCredentialPersistence' index='2'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='hasPassword'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='identity'>
<retval type='^{OpaqueSecIdentityRef=}' declared_type='SecIdentityRef'/>
</method>
<method selector='initWithIdentity:certificates:persistence:'>
<arg type='^{OpaqueSecIdentityRef=}' name='identity' declared_type='SecIdentityRef' index='0'/>
<arg type='@' name='certArray' declared_type='NSArray*' index='1'/>
<arg type='I' type64='Q' name='persistence' declared_type='NSURLCredentialPersistence' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTrust:'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUser:password:persistence:'>
<arg type='@' name='user' declared_type='NSString*' index='0'/>
<arg type='@' name='password' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='persistence' declared_type='NSURLCredentialPersistence' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='password'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='persistence'>
<retval type='I' type64='Q' declared_type='NSURLCredentialPersistence'/>
</method>
<method selector='user'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSURLCredentialStorage'>
<method selector='allCredentials'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='credentialsForProtectionSpace:'>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='defaultCredentialForProtectionSpace:'>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='0'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='removeCredential:forProtectionSpace:'>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='0'/>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCredential:forProtectionSpace:'>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='0'/>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultCredential:forProtectionSpace:'>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='0'/>
<arg type='@' name='space' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedCredentialStorage'>
<retval type='@' declared_type='NSURLCredentialStorage*'/>
</method>
</class>
<class name='NSURLDownload'>
<method class_method='true' selector='canResumeDownloadDecodedWithEncodingMIMEType:'>
<arg type='@' name='MIMEType' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='deletesFileUponFailure'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithRequest:delegate:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='delegate' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithResumeData:delegate:path:'>
<arg type='@' name='resumeData' declared_type='NSData*' index='0'/>
<arg type='@' name='delegate' declared_type='id' index='1'/>
<arg type='@' name='path' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='resumeData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='setDeletesFileUponFailure:'>
<arg type='B' name='deletesFileUponFailure' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDestination:allowOverwrite:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<arg type='B' name='allowOverwrite' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLHandle'>
<method class_method='true' selector='URLHandleClassForURL:'>
<arg type='@' name='anURL' declared_type='NSURL*' index='0'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='addClient:'>
<arg type='@' name='client' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='availableResourceData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='backgroundLoadDidFailWithReason:'>
<arg type='@' name='reason' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginLoadInBackground'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='cachedHandleForURL:'>
<arg type='@' name='anURL' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='NSURLHandle*'/>
</method>
<method class_method='true' selector='canInitWithURL:'>
<arg type='@' name='anURL' declared_type='NSURL*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancelLoadInBackground'>
<retval type='v' declared_type='void'/>
</method>
<method selector='didLoadBytes:loadComplete:'>
<arg type='@' name='newBytes' declared_type='NSData*' index='0'/>
<arg type='B' name='yorn' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endLoadInBackground'>
<retval type='v' declared_type='void'/>
</method>
<method selector='expectedResourceDataSize'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='failureReason'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='flushCachedData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithURL:cached:'>
<arg type='@' name='anURL' declared_type='NSURL*' index='0'/>
<arg type='B' name='willCache' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='loadInBackground'>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadInForeground'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='propertyForKey:'>
<arg type='@' name='propertyKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='propertyForKeyIfAvailable:'>
<arg type='@' name='propertyKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='registerURLHandleClass:'>
<arg type='#' name='anURLHandleSubclass' declared_type='Class' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeClient:'>
<arg type='@' name='client' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resourceData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='status'>
<retval type='I' type64='Q' declared_type='NSURLHandleStatus'/>
</method>
<method selector='writeData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeProperty:forKey:'>
<arg type='@' name='propertyValue' declared_type='id' index='0'/>
<arg type='@' name='propertyKey' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSURLProtectionSpace'>
<method selector='authenticationMethod'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='distinguishedNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='host'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithHost:port:protocol:realm:authenticationMethod:'>
<arg type='@' name='host' declared_type='NSString*' index='0'/>
<arg type='i' type64='q' name='port' declared_type='NSInteger' index='1'/>
<arg type='@' name='protocol' declared_type='NSString*' index='2'/>
<arg type='@' name='realm' declared_type='NSString*' index='3'/>
<arg type='@' name='authenticationMethod' declared_type='NSString*' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProxyHost:port:type:realm:authenticationMethod:'>
<arg type='@' name='host' declared_type='NSString*' index='0'/>
<arg type='i' type64='q' name='port' declared_type='NSInteger' index='1'/>
<arg type='@' name='type' declared_type='NSString*' index='2'/>
<arg type='@' name='realm' declared_type='NSString*' index='3'/>
<arg type='@' name='authenticationMethod' declared_type='NSString*' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isProxy'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='port'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='protocol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='proxyType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='realm'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='receivesCredentialSecurely'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='serverTrust'>
<retval type='^{OpaqueSecTrustRef=}' declared_type='SecTrustRef'/>
</method>
</class>
<class name='NSURLProtocol'>
<method selector='cachedResponse'>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method class_method='true' selector='canInitWithRequest:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='canonicalRequestForRequest:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='client'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRequest:cachedResponse:client:'>
<arg type='@' name='request' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='1'/>
<arg type='@' name='client' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='propertyForKey:inRequest:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='registerClass:'>
<arg type='#' name='protocolClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='removePropertyForKey:inRequest:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='@' name='request' declared_type='NSMutableURLRequest*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method class_method='true' selector='requestIsCacheEquivalent:toRequest:'>
<arg type='@' name='a' declared_type='NSURLRequest*' index='0'/>
<arg type='@' name='b' declared_type='NSURLRequest*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='setProperty:forKey:inRequest:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='@' name='request' declared_type='NSMutableURLRequest*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startLoading'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopLoading'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='unregisterClass:'>
<arg type='#' name='protocolClass' declared_type='Class' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLRequest'>
<method selector='HTTPBody'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='HTTPBodyStream'>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='HTTPMethod'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='HTTPShouldHandleCookies'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='HTTPShouldUsePipelining'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='allHTTPHeaderFields'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='allowsCellularAccess'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cachePolicy'>
<retval type='I' type64='Q' declared_type='NSURLRequestCachePolicy'/>
</method>
<method selector='initWithURL:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:cachePolicy:timeoutInterval:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='cachePolicy' declared_type='NSURLRequestCachePolicy' index='1'/>
<arg type='d' name='timeoutInterval' declared_type='NSTimeInterval' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mainDocumentURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='networkServiceType'>
<retval type='I' type64='Q' declared_type='NSURLRequestNetworkServiceType'/>
</method>
<method class_method='true' selector='requestWithURL:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='requestWithURL:cachePolicy:timeoutInterval:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='cachePolicy' declared_type='NSURLRequestCachePolicy' index='1'/>
<arg type='d' name='timeoutInterval' declared_type='NSTimeInterval' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='timeoutInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='valueForHTTPHeaderField:'>
<arg type='@' name='field' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSURLResponse'>
<method selector='MIMEType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='expectedContentLength'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='initWithURL:MIMEType:expectedContentLength:textEncodingName:'>
<arg type='@' name='URL' declared_type='NSURL*' index='0'/>
<arg type='@' name='MIMEType' declared_type='NSString*' index='1'/>
<arg type='i' type64='q' name='length' declared_type='NSInteger' index='2'/>
<arg type='@' name='name' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='suggestedFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textEncodingName'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSUUID'>
<method class_method='true' selector='UUID'>
<retval type='@' declared_type='id'/>
</method>
<method selector='UUIDString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getUUIDBytes:'>
<arg type='*' name='uuid' declared_type='unsigned char*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUUIDBytes:'>
<arg type='*' const='true' name='bytes' declared_type='unsigned char*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUUIDString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSUbiquitousKeyValueStore'>
<method selector='arrayForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='boolForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='defaultStore'>
<retval type='@' declared_type='NSUbiquitousKeyValueStore*'/>
</method>
<method selector='dictionaryForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='doubleForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='longLongForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='q' declared_type='long long'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeObjectForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setArray:forKey:'>
<arg type='@' name='anArray' declared_type='NSArray*' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBool:forKey:'>
<arg type='B' name='value' declared_type='BOOL' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setData:forKey:'>
<arg type='@' name='aData' declared_type='NSData*' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDictionary:forKey:'>
<arg type='@' name='aDictionary' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDouble:forKey:'>
<arg type='d' name='value' declared_type='double' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLongLong:forKey:'>
<arg type='q' name='value' declared_type='long long' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:forKey:'>
<arg type='@' name='aString' declared_type='NSString*' index='0'/>
<arg type='@' name='aKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringForKey:'>
<arg type='@' name='aKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='synchronize'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSUnarchiver'>
<method class_method='true' selector='classNameDecodedForArchiveClassName:'>
<arg type='@' name='inArchiveName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='classNameDecodedForArchiveClassName:'>
<arg type='@' name='inArchiveName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='decodeClassName:asClassName:'>
<arg type='@' name='inArchiveName' declared_type='NSString*' index='0'/>
<arg type='@' name='trueName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='decodeClassName:asClassName:'>
<arg type='@' name='inArchiveName' declared_type='NSString*' index='0'/>
<arg type='@' name='trueName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initForReadingWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAtEnd'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectZone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
<method selector='replaceObject:withObject:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<arg type='@' name='newObject' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemVersion'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method class_method='true' selector='unarchiveObjectWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='unarchiveObjectWithFile:'>
<arg type='@' name='path' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSUndoManager'>
<method selector='beginUndoGrouping'>
<retval type='v' declared_type='void'/>
</method>
<method selector='canRedo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canUndo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='disableUndoRegistration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableUndoRegistration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='endUndoGrouping'>
<retval type='v' declared_type='void'/>
</method>
<method selector='groupingLevel'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='groupsByEvent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRedoing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUndoRegistrationEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUndoing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='levelsOfUndo'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='prepareWithInvocationTarget:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='redo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='redoActionIsDiscardable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='redoActionName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='redoMenuItemTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='redoMenuTitleForUndoActionName:'>
<arg type='@' name='actionName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='registerUndoWithTarget:selector:object:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<arg type=':' name='selector' declared_type='SEL' index='1'/>
<arg type='@' name='anObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActionsWithTarget:'>
<arg type='@' name='target' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runLoopModes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setActionIsDiscardable:'>
<arg type='B' name='discardable' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setActionName:'>
<arg type='@' name='actionName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupsByEvent:'>
<arg type='B' name='groupsByEvent' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLevelsOfUndo:'>
<arg type='I' type64='Q' name='levels' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRunLoopModes:'>
<arg type='@' name='runLoopModes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='undo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='undoActionIsDiscardable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='undoActionName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='undoMenuItemTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='undoMenuTitleForUndoActionName:'>
<arg type='@' name='actionName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='undoNestedGroup'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSUniqueIDSpecifier'>
<method selector='initWithContainerClassDescription:containerSpecifier:key:uniqueID:'>
<arg type='@' name='classDesc' declared_type='NSScriptClassDescription*' index='0'/>
<arg type='@' name='container' declared_type='NSScriptObjectSpecifier*' index='1'/>
<arg type='@' name='property' declared_type='NSString*' index='2'/>
<arg type='@' name='uniqueID' declared_type='id' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setUniqueID:'>
<arg type='@' name='uniqueID' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='uniqueID'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSUserAppleScriptTask'>
<method selector='executeWithAppleEvent:completionHandler:'>
<arg type='@' name='event' declared_type='NSAppleEventDescriptor*' index='0'/>
<arg type='@?' name='handler' function_pointer='true' declared_type='NSUserAppleScriptTaskCompletionHandler' index='1'>
<arg type='@' declared_type='NSAppleEventDescriptor*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSUserAutomatorTask'>
<method selector='executeWithInput:completionHandler:'>
<arg type='@' name='input' declared_type='id' index='0'/>
<arg type='@?' name='handler' function_pointer='true' declared_type='NSUserAutomatorTaskCompletionHandler' index='1'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVariables:'>
<arg type='@' name='variables' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='variables'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSUserDefaults'>
<method selector='URLForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='addSuiteNamed:'>
<arg type='@' name='suiteName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='arrayForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='boolForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dictionaryForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='doubleForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='floatForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUser:'>
<arg type='@' name='username' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='integerForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='objectForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectIsForcedForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectIsForcedForKey:inDomain:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='@' name='domain' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='persistentDomainForName:'>
<arg type='@' name='domainName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='persistentDomainNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='registerDefaults:'>
<arg type='@' name='registrationDictionary' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePersistentDomainForName:'>
<arg type='@' name='domainName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSuiteNamed:'>
<arg type='@' name='suiteName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeVolatileDomainForName:'>
<arg type='@' name='domainName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='resetStandardUserDefaults'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBool:forKey:'>
<arg type='B' name='value' declared_type='BOOL' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDouble:forKey:'>
<arg type='d' name='value' declared_type='double' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloat:forKey:'>
<arg type='f' name='value' declared_type='float' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInteger:forKey:'>
<arg type='i' type64='q' name='value' declared_type='NSInteger' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentDomain:forName:'>
<arg type='@' name='domain' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='domainName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:forKey:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='defaultName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVolatileDomain:forName:'>
<arg type='@' name='domain' declared_type='NSDictionary*' index='0'/>
<arg type='@' name='domainName' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='standardUserDefaults'>
<retval type='@' declared_type='NSUserDefaults*'/>
</method>
<method selector='stringArrayForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='stringForKey:'>
<arg type='@' name='defaultName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='synchronize'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='volatileDomainForName:'>
<arg type='@' name='domainName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='volatileDomainNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSUserNotification'>
<method selector='actionButtonTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='activationType'>
<retval type='i' type64='q' declared_type='NSUserNotificationActivationType'/>
</method>
<method selector='actualDeliveryDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='deliveryDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='deliveryRepeatInterval'>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='deliveryTimeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='hasActionButton'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='informativeText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isPresented'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRemote'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='otherButtonTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setActionButtonTitle:'>
<arg type='@' name='actionButtonTitle' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDeliveryDate:'>
<arg type='@' name='deliveryDate' declared_type='NSDate*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDeliveryRepeatInterval:'>
<arg type='@' name='deliveryRepeatInterval' declared_type='NSDateComponents*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDeliveryTimeZone:'>
<arg type='@' name='deliveryTimeZone' declared_type='NSTimeZone*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasActionButton:'>
<arg type='B' name='hasActionButton' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInformativeText:'>
<arg type='@' name='informativeText' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOtherButtonTitle:'>
<arg type='@' name='otherButtonTitle' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSoundName:'>
<arg type='@' name='soundName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitle:'>
<arg type='@' name='subtitle' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg type='@' name='title' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg type='@' name='userInfo' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='soundName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='subtitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSUserNotificationCenter'>
<method class_method='true' selector='defaultUserNotificationCenter'>
<retval type='@' declared_type='NSUserNotificationCenter*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deliverNotification:'>
<arg type='@' name='notification' declared_type='NSUserNotification*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deliveredNotifications'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeAllDeliveredNotifications'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeDeliveredNotification:'>
<arg type='@' name='notification' declared_type='NSUserNotification*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeScheduledNotification:'>
<arg type='@' name='notification' declared_type='NSUserNotification*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleNotification:'>
<arg type='@' name='notification' declared_type='NSUserNotification*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduledNotifications'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduledNotifications:'>
<arg type='@' name='scheduledNotifications' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSUserScriptTask'>
<method selector='executeWithCompletionHandler:'>
<arg type='@?' name='handler' function_pointer='true' declared_type='NSUserScriptTaskCompletionHandler' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithURL:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='scriptURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
</class>
<class name='NSUserUnixTask'>
<method selector='executeWithArguments:completionHandler:'>
<arg type='@' name='arguments' declared_type='NSArray*' index='0'/>
<arg type='@?' name='handler' function_pointer='true' declared_type='NSUserUnixTaskCompletionHandler' index='1'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardError:'>
<arg type='@' name='standardError' declared_type='NSFileHandle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardInput:'>
<arg type='@' name='standardInput' declared_type='NSFileHandle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardOutput:'>
<arg type='@' name='standardOutput' declared_type='NSFileHandle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='standardError'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
<method selector='standardInput'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
<method selector='standardOutput'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
</class>
<class name='NSValue'>
<method selector='getValue:'>
<arg type='^v' name='value' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBytes:objCType:'>
<arg type='^v' const='true' name='value' declared_type='void*' index='0'/>
<arg type='*' const='true' name='type' declared_type='char*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToValue:'>
<arg type='@' name='value' declared_type='NSValue*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nonretainedObjectValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objCType'>
<retval type='*' const='true' declared_type='char*'/>
</method>
<method selector='pointValue'>
<retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' declared_type='NSPoint'/>
</method>
<method selector='pointerValue'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='rangeValue'>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method selector='rectValue'>
<retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect'/>
</method>
<method selector='sizeValue'>
<retval type='{_NSSize=ff}' type64='{CGSize=dd}' declared_type='NSSize'/>
</method>
<method class_method='true' selector='value:withObjCType:'>
<arg type='^v' const='true' name='value' declared_type='void*' index='0'/>
<arg type='*' const='true' name='type' declared_type='char*' index='1'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithBytes:objCType:'>
<arg type='^v' const='true' name='value' declared_type='void*' index='0'/>
<arg type='*' const='true' name='type' declared_type='char*' index='1'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithNonretainedObject:'>
<arg type='@' name='anObject' declared_type='id' index='0'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithPoint:'>
<arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' name='point' declared_type='NSPoint' index='0'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithPointer:'>
<arg type='^v' const='true' name='pointer' declared_type='void*' index='0'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithRange:'>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='0'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithRect:'>
<arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='rect' declared_type='NSRect' index='0'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithSize:'>
<arg type='{_NSSize=ff}' type64='{CGSize=dd}' name='size' declared_type='NSSize' index='0'/>
<retval type='@' declared_type='NSValue*'/>
</method>
</class>
<class name='NSValueTransformer'>
<method class_method='true' selector='allowsReverseTransformation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reverseTransformedValue:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setValueTransformer:forName:'>
<arg type='@' name='transformer' declared_type='NSValueTransformer*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformedValue:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='transformedValueClass'>
<retval type='#' declared_type='Class'/>
</method>
<method class_method='true' selector='valueTransformerForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSValueTransformer*'/>
</method>
<method class_method='true' selector='valueTransformerNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSWhoseSpecifier'>
<method selector='endSubelementIdentifier'>
<retval type='I' type64='Q' declared_type='NSWhoseSubelementIdentifier'/>
</method>
<method selector='endSubelementIndex'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:test:'>
<arg type='@' name='classDesc' declared_type='NSScriptClassDescription*' index='0'/>
<arg type='@' name='container' declared_type='NSScriptObjectSpecifier*' index='1'/>
<arg type='@' name='property' declared_type='NSString*' index='2'/>
<arg type='@' name='test' declared_type='NSScriptWhoseTest*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setEndSubelementIdentifier:'>
<arg type='I' type64='Q' name='subelement' declared_type='NSWhoseSubelementIdentifier' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSubelementIndex:'>
<arg type='i' type64='q' name='index' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSubelementIdentifier:'>
<arg type='I' type64='Q' name='subelement' declared_type='NSWhoseSubelementIdentifier' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSubelementIndex:'>
<arg type='i' type64='q' name='index' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTest:'>
<arg type='@' name='test' declared_type='NSScriptWhoseTest*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startSubelementIdentifier'>
<retval type='I' type64='Q' declared_type='NSWhoseSubelementIdentifier'/>
</method>
<method selector='startSubelementIndex'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='test'>
<retval type='@' declared_type='NSScriptWhoseTest*'/>
</method>
</class>
<class name='NSXMLDTD'>
<method selector='addChild:'>
<arg type='@' name='child' declared_type='NSXMLNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeDeclarationForName:elementName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSXMLDTDNode*'/>
</method>
<method selector='elementDeclarationForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSXMLDTDNode*'/>
</method>
<method selector='entityDeclarationForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSXMLDTDNode*'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSUInteger' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:options:error:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSUInteger' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:atIndex:'>
<arg type='@' name='child' declared_type='NSXMLNode*' index='0'/>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertChildren:atIndex:'>
<arg type='@' name='children' declared_type='NSArray*' index='0'/>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='notationDeclarationForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSXMLDTDNode*'/>
</method>
<method class_method='true' selector='predefinedEntityDeclarationForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSXMLDTDNode*'/>
</method>
<method selector='publicID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='removeChildAtIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceChildAtIndex:withNode:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='node' declared_type='NSXMLNode*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setChildren:'>
<arg type='@' name='children' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPublicID:'>
<arg type='@' name='publicID' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSystemID:'>
<arg type='@' name='systemID' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemID'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSXMLDTDNode'>
<method selector='DTDKind'>
<retval type='I' type64='Q' declared_type='NSXMLDTDNodeKind'/>
</method>
<method selector='initWithXMLString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isExternal'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='notationName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='publicID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDTDKind:'>
<arg type='I' type64='Q' name='kind' declared_type='NSXMLDTDNodeKind' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotationName:'>
<arg type='@' name='notationName' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPublicID:'>
<arg type='@' name='publicID' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSystemID:'>
<arg type='@' name='systemID' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemID'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSXMLDocument'>
<method selector='DTD'>
<retval type='@' declared_type='NSXMLDTD*'/>
</method>
<method selector='MIMEType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='XMLData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='XMLDataWithOptions:'>
<arg type='I' type64='Q' name='options' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='addChild:'>
<arg type='@' name='child' declared_type='NSXMLNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='characterEncoding'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='documentContentKind'>
<retval type='I' type64='Q' declared_type='NSXMLDocumentContentKind'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSUInteger' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:options:error:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSUInteger' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRootElement:'>
<arg type='@' name='element' declared_type='NSXMLElement*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXMLString:options:error:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mask' declared_type='NSUInteger' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:atIndex:'>
<arg type='@' name='child' declared_type='NSXMLNode*' index='0'/>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertChildren:atIndex:'>
<arg type='@' name='children' declared_type='NSArray*' index='0'/>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isStandalone'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectByApplyingXSLT:arguments:error:'>
<arg type='@' name='xslt' declared_type='NSData*' index='0'/>
<arg type='@' name='arguments' declared_type='NSDictionary*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectByApplyingXSLTAtURL:arguments:error:'>
<arg type='@' name='xsltURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='argument' declared_type='NSDictionary*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectByApplyingXSLTString:arguments:error:'>
<arg type='@' name='xslt' declared_type='NSString*' index='0'/>
<arg type='@' name='arguments' declared_type='NSDictionary*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeChildAtIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceChildAtIndex:withNode:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='node' declared_type='NSXMLNode*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='replacementClassForClass:'>
<arg type='#' name='cls' declared_type='Class' index='0'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='rootElement'>
<retval type='@' declared_type='NSXMLElement*'/>
</method>
<method selector='setCharacterEncoding:'>
<arg type='@' name='encoding' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setChildren:'>
<arg type='@' name='children' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDTD:'>
<arg type='@' name='documentTypeDeclaration' declared_type='NSXMLDTD*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDocumentContentKind:'>
<arg type='I' type64='Q' name='kind' declared_type='NSXMLDocumentContentKind' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMIMEType:'>
<arg type='@' name='MIMEType' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRootElement:'>
<arg type='@' name='root' declared_type='NSXMLNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandalone:'>
<arg type='B' name='standalone' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVersion:'>
<arg type='@' name='version' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='validateAndReturnError:'>
<arg type='^@' name='error' declared_type='NSError**' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='version'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSXMLElement'>
<method selector='addAttribute:'>
<arg type='@' name='attribute' declared_type='NSXMLNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:'>
<arg type='@' name='child' declared_type='NSXMLNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addNamespace:'>
<arg type='@' name='aNamespace' declared_type='NSXMLNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeForLocalName:URI:'>
<arg type='@' name='localName' declared_type='NSString*' index='0'/>
<arg type='@' name='URI' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='attributeForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='attributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='elementsForLocalName:URI:'>
<arg type='@' name='localName' declared_type='NSString*' index='0'/>
<arg type='@' name='URI' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='elementsForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithName:URI:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='URI' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithName:stringValue:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXMLString:error:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:atIndex:'>
<arg type='@' name='child' declared_type='NSXMLNode*' index='0'/>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertChildren:atIndex:'>
<arg type='@' name='children' declared_type='NSArray*' index='0'/>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='namespaceForPrefix:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='namespaces'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='normalizeAdjacentTextNodesPreservingCDATA:'>
<arg type='B' name='preserve' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAttributeForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildAtIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeNamespaceForPrefix:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceChildAtIndex:withNode:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='node' declared_type='NSXMLNode*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolveNamespaceForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='resolvePrefixForNamespaceURI:'>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setAttributes:'>
<arg type='@' name='attributes' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributesAsDictionary:'>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributesWithDictionary:'>
<arg type='@' name='attributes' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setChildren:'>
<arg type='@' name='children' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNamespaces:'>
<arg type='@' name='namespaces' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSXMLNode'>
<method class_method='true' selector='DTDNodeWithXMLString:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='URI'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='XMLString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='XMLStringWithOptions:'>
<arg type='I' type64='Q' name='options' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='XPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='attributeWithName:URI:stringValue:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='URI' declared_type='NSString*' index='1'/>
<arg type='@' name='stringValue' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='attributeWithName:stringValue:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='stringValue' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='canonicalXMLStringPreservingComments:'>
<arg type='B' name='comments' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='childAtIndex:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='childCount'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='children'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='commentWithStringValue:'>
<arg type='@' name='stringValue' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='detach'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='document'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='documentWithRootElement:'>
<arg type='@' name='element' declared_type='NSXMLElement*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='elementWithName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='elementWithName:URI:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='URI' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='elementWithName:children:attributes:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='children' declared_type='NSArray*' index='1'/>
<arg type='@' name='attributes' declared_type='NSArray*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='elementWithName:stringValue:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='index'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='initWithKind:'>
<arg type='I' type64='Q' name='kind' declared_type='NSXMLNodeKind' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKind:options:'>
<arg type='I' type64='Q' name='kind' declared_type='NSXMLNodeKind' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='kind'>
<retval type='I' type64='Q' declared_type='NSXMLNodeKind'/>
</method>
<method selector='level'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method selector='localName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='localNameForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='namespaceWithName:stringValue:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='stringValue' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='nextNode'>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='nextSibling'>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='nodesForXPath:error:'>
<arg type='@' name='xpath' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectsForXQuery:constants:error:'>
<arg type='@' name='xquery' declared_type='NSString*' index='0'/>
<arg type='@' name='constants' declared_type='NSDictionary*' index='1'/>
<arg type='^@' name='error' declared_type='NSError**' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectsForXQuery:error:'>
<arg type='@' name='xquery' declared_type='NSString*' index='0'/>
<arg type='^@' name='error' declared_type='NSError**' index='1'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='parent'>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method class_method='true' selector='predefinedNamespaceForPrefix:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='prefix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='prefixForName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='previousNode'>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='previousSibling'>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method class_method='true' selector='processingInstructionWithName:stringValue:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='stringValue' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rootDocument'>
<retval type='@' declared_type='NSXMLDocument*'/>
</method>
<method selector='setName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectValue:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStringValue:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStringValue:resolvingEntities:'>
<arg type='@' name='string' declared_type='NSString*' index='0'/>
<arg type='B' name='resolve' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURI:'>
<arg type='@' name='URI' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='textWithStringValue:'>
<arg type='@' name='stringValue' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSXMLParser'>
<method selector='abortParsing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='columnNumber'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg type='@' name='data' declared_type='NSData*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithStream:'>
<arg type='@' name='stream' declared_type='NSInputStream*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lineNumber'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='parse'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='parserError'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='publicID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldProcessNamespaces:'>
<arg type='B' name='shouldProcessNamespaces' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldReportNamespacePrefixes:'>
<arg type='B' name='shouldReportNamespacePrefixes' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldResolveExternalEntities:'>
<arg type='B' name='shouldResolveExternalEntities' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldProcessNamespaces'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldReportNamespacePrefixes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldResolveExternalEntities'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='systemID'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSXPCConnection'>
<method selector='auditSessionIdentifier'>
<retval type='i' declared_type='au_asid_t'/>
</method>
<method selector='effectiveGroupIdentifier'>
<retval type='I' declared_type='gid_t'/>
</method>
<method selector='effectiveUserIdentifier'>
<retval type='I' declared_type='uid_t'/>
</method>
<method selector='endpoint'>
<retval type='@' declared_type='NSXPCListenerEndpoint*'/>
</method>
<method selector='exportedInterface'>
<retval type='@' declared_type='NSXPCInterface*'/>
</method>
<method selector='exportedObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithListenerEndpoint:'>
<arg type='@' name='endpoint' declared_type='NSXPCListenerEndpoint*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMachServiceName:options:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='options' declared_type='NSXPCConnectionOptions' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithServiceName:'>
<arg type='@' name='serviceName' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interruptionHandler'>
<retval type='@?' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='invalidationHandler'>
<retval type='@?' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='processIdentifier'>
<retval type='i' declared_type='pid_t'/>
</method>
<method selector='remoteObjectInterface'>
<retval type='@' declared_type='NSXPCInterface*'/>
</method>
<method selector='remoteObjectProxy'>
<retval type='@' declared_type='id'/>
</method>
<method selector='remoteObjectProxyWithErrorHandler:'>
<arg type='@?' name='handler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='serviceName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setExportedInterface:'>
<arg type='@' name='exportedInterface' declared_type='NSXPCInterface*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExportedObject:'>
<arg type='@' name='exportedObject' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterruptionHandler:'>
<arg type='@?' name='interruptionHandler' function_pointer='true' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInvalidationHandler:'>
<arg type='@?' name='invalidationHandler' function_pointer='true' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRemoteObjectInterface:'>
<arg type='@' name='remoteObjectInterface' declared_type='NSXPCInterface*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='suspend'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSXPCInterface'>
<method selector='classesForSelector:argumentIndex:ofReply:'>
<arg type=':' name='sel' declared_type='SEL' index='0'/>
<arg type='I' type64='Q' name='arg' declared_type='NSUInteger' index='1'/>
<arg type='B' name='ofReply' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='interfaceForSelector:argumentIndex:ofReply:'>
<arg type=':' name='sel' declared_type='SEL' index='0'/>
<arg type='I' type64='Q' name='arg' declared_type='NSUInteger' index='1'/>
<arg type='B' name='ofReply' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='NSXPCInterface*'/>
</method>
<method class_method='true' selector='interfaceWithProtocol:'>
<arg type='@' name='protocol' declared_type='Protocol*' index='0'/>
<retval type='@' declared_type='NSXPCInterface*'/>
</method>
<method selector='protocol'>
<retval type='@' declared_type='Protocol*'/>
</method>
<method selector='setClasses:forSelector:argumentIndex:ofReply:'>
<arg type='@' name='classes' declared_type='NSSet*' index='0'/>
<arg type=':' name='sel' declared_type='SEL' index='1'/>
<arg type='I' type64='Q' name='arg' declared_type='NSUInteger' index='2'/>
<arg type='B' name='ofReply' declared_type='BOOL' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterface:forSelector:argumentIndex:ofReply:'>
<arg type='@' name='ifc' declared_type='NSXPCInterface*' index='0'/>
<arg type=':' name='sel' declared_type='SEL' index='1'/>
<arg type='I' type64='Q' name='arg' declared_type='NSUInteger' index='2'/>
<arg type='B' name='ofReply' declared_type='BOOL' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProtocol:'>
<arg type='@' name='protocol' declared_type='Protocol*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSXPCListener'>
<method class_method='true' selector='anonymousListener'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='endpoint'>
<retval type='@' declared_type='NSXPCListenerEndpoint*'/>
</method>
<method selector='initWithMachServiceName:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='serviceListener'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='suspend'>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='NSArchiverCallback'>
<method type='#8@0:4' type64='#16@0:8' selector='classForArchiver'>
<retval type='#' declared_type='Class'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='replacementObjectForArchiver:'>
<arg type='@' name='archiver' declared_type='NSArchiver*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSCacheDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='cache:willEvictObject:'>
<arg type='@' name='cache' declared_type='NSCache*' index='0'/>
<arg type='@' name='obj' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSClassDescriptionPrimitives'>
<method type='@8@0:4' type64='@16@0:8' selector='attributeKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='classDescription'>
<retval type='@' declared_type='NSClassDescription*'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='inverseForRelationshipKey:'>
<arg type='@' name='relationshipKey' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='toManyRelationshipKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='toOneRelationshipKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='NSCoderMethods'>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='awakeAfterUsingCoder:'>
<arg type='@' name='aDecoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method type='#8@0:4' type64='#16@0:8' selector='classForCoder'>
<retval type='#' declared_type='Class'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='replacementObjectForCoder:'>
<arg type='@' name='aCoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' type='v12@0:4i8' type64='v24@0:8q16' selector='setVersion:'>
<arg type='i' type64='q' name='aVersion' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' type='i8@0:4' type64='q16@0:8' selector='version'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSCoding'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='encodeWithCoder:'>
<arg type='@' name='aCoder' declared_type='NSCoder*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='initWithCoder:'>
<arg type='@' name='aDecoder' declared_type='NSCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSComparisonMethods'>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='doesContain:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isCaseInsensitiveLike:'>
<arg type='@' name='object' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isGreaterThan:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isGreaterThanOrEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isLessThan:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isLessThanOrEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isLike:'>
<arg type='@' name='object' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isNotEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSConnectionDelegate'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='authenticateComponents:withData:'>
<arg type='@' name='components' declared_type='NSArray*' index='0'/>
<arg type='@' name='signature' declared_type='NSData*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='authenticationDataForComponents:'>
<arg type='@' name='components' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='connection:handleRequest:'>
<arg type='@' name='connection' declared_type='NSConnection*' index='0'/>
<arg type='@' name='doreq' declared_type='NSDistantObjectRequest*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='connection:shouldMakeNewConnection:'>
<arg type='@' name='ancestor' declared_type='NSConnection*' index='0'/>
<arg type='@' name='conn' declared_type='NSConnection*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='createConversationForConnection:'>
<arg type='@' name='conn' declared_type='NSConnection*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='makeNewConnection:sender:'>
<arg type='@' name='conn' declared_type='NSConnection*' index='0'/>
<arg type='@' name='ancestor' declared_type='NSConnection*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSCopyLinkMoveHandler'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='fileManager:shouldProceedAfterError:'>
<arg type='@' name='fm' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='errorInfo' declared_type='NSDictionary*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='fileManager:willProcessPath:'>
<arg type='@' name='fm' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSCopying'>
<method type='@12@0:4^{_NSZone=}8' type64='@24@0:8^{_NSZone=}16' selector='copyWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSDecimalNumberBehaviors'>
<method type='@24@0:4:8I12@16@20' type64='@48@0:8:16Q24@32@40' selector='exceptionDuringOperation:error:leftOperand:rightOperand:'>
<arg type=':' name='operation' declared_type='SEL' index='0'/>
<arg type='I' type64='Q' name='error' declared_type='NSCalculationError' index='1'/>
<arg type='@' name='leftOperand' declared_type='NSDecimalNumber*' index='2'/>
<arg type='@' name='rightOperand' declared_type='NSDecimalNumber*' index='3'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method type='I8@0:4' type64='Q16@0:8' selector='roundingMode'>
<retval type='I' type64='Q' declared_type='NSRoundingMode'/>
</method>
<method type='s8@0:4' type64='s16@0:8' selector='scale'>
<retval type='s' declared_type='short'/>
</method>
</informal_protocol>
<informal_protocol name='NSDelayedPerforming'>
<method class_method='true' type='v12@0:4@8' type64='v24@0:8@16' selector='cancelPreviousPerformRequestsWithTarget:'>
<arg type='@' name='aTarget' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' type='v20@0:4@8:12@16' type64='v40@0:8@16:24@32' selector='cancelPreviousPerformRequestsWithTarget:selector:object:'>
<arg type='@' name='aTarget' declared_type='id' index='0'/>
<arg type=':' name='aSelector' declared_type='SEL' index='1'/>
<arg type='@' name='anArgument' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4:8@12d16' type64='v40@0:8:16@24d32' selector='performSelector:withObject:afterDelay:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='anArgument' declared_type='id' index='1'/>
<arg type='d' name='delay' declared_type='NSTimeInterval' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v28@0:4:8@12d16@24' type64='v48@0:8:16@24d32@40' selector='performSelector:withObject:afterDelay:inModes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='anArgument' declared_type='id' index='1'/>
<arg type='d' name='delay' declared_type='NSTimeInterval' index='2'/>
<arg type='@' name='modes' declared_type='NSArray*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSDeprecatedKeyValueCoding'>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='handleQueryWithUnboundKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='handleTakeValue:forUnboundKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='storedValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='takeStoredValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='takeValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='takeValue:forKeyPath:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='takeValuesFromDictionary:'>
<arg type='@' name='properties' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='unableToSetNilForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' type='B8@0:4' type64='B16@0:8' selector='useStoredAccessor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valuesForKeys:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</informal_protocol>
<informal_protocol name='NSDeprecatedKeyValueObservingCustomization'>
<method class_method='true' type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setKeys:triggerChangeNotificationsForDependentKey:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<arg type='@' name='dependentKey' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSDiscardableContent'>
<method type='B8@0:4' type64='B16@0:8' selector='beginContentAccess'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='discardContentIfPossible'>
<retval type='v' declared_type='void'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='endContentAccess'>
<retval type='v' declared_type='void'/>
</method>
<method type='B8@0:4' type64='B16@0:8' selector='isContentDiscarded'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSDiscardableContentProxy'>
<method type='@8@0:4' type64='@16@0:8' selector='autoContentAccessingProxy'>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSDistributedObjects'>
<method type='#8@0:4' type64='#16@0:8' selector='classForPortCoder'>
<retval type='#' declared_type='Class'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='replacementObjectForPortCoder:'>
<arg type='@' name='coder' declared_type='NSPortCoder*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSErrorRecoveryAttempting'>
<method type='B16@0:4@8I12' type64='B32@0:8@16Q24' selector='attemptRecoveryFromError:optionIndex:'>
<arg type='@' name='error' declared_type='NSError*' index='0'/>
<arg type='I' type64='Q' name='recoveryOptionIndex' declared_type='NSUInteger' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v28@0:4@8I12@16:20^v24' type64='v56@0:8@16Q24@32:40^v48' selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'>
<arg type='@' name='error' declared_type='NSError*' index='0'/>
<arg type='I' type64='Q' name='recoveryOptionIndex' declared_type='NSUInteger' index='1'/>
<arg type='@' name='delegate' declared_type='id' index='2'/>
<arg type=':' name='didRecoverSelector' declared_type='SEL' index='3'/>
<arg type='^v' name='contextInfo' declared_type='void*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSFastEnumeration'>
<method type='I20@0:4^{?=L^@^L[5L]}8^@12I16' type64='Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32' selector='countByEnumeratingWithState:objects:count:'>
<arg type='^{_NSFastEnumerationState=L^@^L[5L]}' type64='^{_NSFastEnumerationState=Q^@^Q[5Q]}' name='state' declared_type='NSFastEnumerationState*' index='0'/>
<arg type='^@' name='buffer' declared_type='id*' index='1'/>
<arg type='I' type64='Q' name='len' declared_type='NSUInteger' index='2'/>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSFileManagerDelegate'>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldCopyItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldCopyItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldLinkItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldLinkItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldMoveItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='1'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldMoveItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='1'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcPath' declared_type='NSString*' index='2'/>
<arg type='@' name='dstPath' declared_type='NSString*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:movingItemAtURL:toURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='srcURL' declared_type='NSURL*' index='2'/>
<arg type='@' name='dstURL' declared_type='NSURL*' index='3'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldProceedAfterError:removingItemAtPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='path' declared_type='NSString*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32' selector='fileManager:shouldProceedAfterError:removingItemAtURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<arg type='@' name='URL' declared_type='NSURL*' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='fileManager:shouldRemoveItemAtPath:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='fileManager:shouldRemoveItemAtURL:'>
<arg type='@' name='fileManager' declared_type='NSFileManager*' index='0'/>
<arg type='@' name='URL' declared_type='NSURL*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSFilePresenter'>
<method type='v12@0:4@?8' type64='v24@0:8@?16' selector='accommodatePresentedItemDeletionWithCompletionHandler:'>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@?12' type64='v32@0:8@16@?24' selector='accommodatePresentedSubitemDeletionAtURL:completionHandler:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='1'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='presentedItemDidChange'>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedItemDidGainVersion:'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedItemDidLoseVersion:'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedItemDidMoveToURL:'>
<arg type='@' name='newURL' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedItemDidResolveConflictVersion:'>
<arg type='@' name='version' declared_type='NSFileVersion*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='presentedItemOperationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='presentedItemURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didGainVersion:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didLoseVersion:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didMoveToURL:'>
<arg type='@' name='oldURL' declared_type='NSURL*' index='0'/>
<arg type='@' name='newURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didResolveConflictVersion:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<arg type='@' name='version' declared_type='NSFileVersion*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedSubitemDidAppearAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='presentedSubitemDidChangeAtURL:'>
<arg type='@' name='url' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='primaryPresentedItemURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method type='v12@0:4@?8' type64='v24@0:8@?16' selector='relinquishPresentedItemToReader:'>
<arg type='@?' name='reader' function_pointer='true' declared_type='void (^)(void (^)(void))' index='0'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@?8' type64='v24@0:8@?16' selector='relinquishPresentedItemToWriter:'>
<arg type='@?' name='writer' function_pointer='true' declared_type='void (^)(void (^)(void))' index='0'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@?8' type64='v24@0:8@?16' selector='savePresentedItemChangesWithCompletionHandler:'>
<arg type='@?' name='completionHandler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueCoding'>
<method class_method='true' type='B8@0:4' type64='B16@0:8' selector='accessInstanceVariablesDirectly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='dictionaryWithValuesForKeys:'>
<arg type='@' name='keys' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableArrayValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableArrayValueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableOrderedSetValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableOrderedSetValueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableSetValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='mutableSetValueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setNilValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setValue:forKeyPath:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='setValue:forUndefinedKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setValuesForKeysWithDictionary:'>
<arg type='@' name='keyedValues' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B20@0:4N^@8@12o^@16' type64='B40@0:8N^@16@24o^@32' selector='validateValue:forKey:error:'>
<arg type='^@' type_modifier='N' name='ioValue' declared_type='id*' index='0'/>
<arg type='@' name='inKey' declared_type='NSString*' index='1'/>
<arg type='^@' type_modifier='o' name='outError' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4N^@8@12o^@16' type64='B40@0:8N^@16@24o^@32' selector='validateValue:forKeyPath:error:'>
<arg type='^@' type_modifier='N' name='ioValue' declared_type='id*' index='0'/>
<arg type='@' name='inKeyPath' declared_type='NSString*' index='1'/>
<arg type='^@' type_modifier='o' name='outError' declared_type='NSError**' index='2'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valueForKeyPath:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='valueForUndefinedKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserverNotification'>
<method type='v20@0:4I8@12@16' type64='v40@0:8Q16@24@32' selector='didChange:valuesAtIndexes:forKey:'>
<arg type='I' type64='Q' name='changeKind' declared_type='NSKeyValueChange' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='didChangeValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8I12@16' type64='v40@0:8@16Q24@32' selector='didChangeValueForKey:withSetMutation:usingObjects:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mutationKind' declared_type='NSKeyValueSetMutationKind' index='1'/>
<arg type='@' name='objects' declared_type='NSSet*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4I8@12@16' type64='v40@0:8Q16@24@32' selector='willChange:valuesAtIndexes:forKey:'>
<arg type='I' type64='Q' name='changeKind' declared_type='NSKeyValueChange' index='0'/>
<arg type='@' name='indexes' declared_type='NSIndexSet*' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='willChangeValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8I12@16' type64='v40@0:8@16Q24@32' selector='willChangeValueForKey:withSetMutation:usingObjects:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<arg type='I' type64='Q' name='mutationKind' declared_type='NSKeyValueSetMutationKind' index='1'/>
<arg type='@' name='objects' declared_type='NSSet*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserverRegistration'>
<method type='v24@0:4@8@12I16^v20' type64='v48@0:8@16@24Q32^v40' selector='addObserver:forKeyPath:options:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='options' declared_type='NSKeyValueObservingOptions' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='removeObserver:forKeyPath:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12^v16' type64='v40@0:8@16@24^v32' selector='removeObserver:forKeyPath:context:'>
<arg type='@' name='observer' declared_type='NSObject*' index='0'/>
<arg type='@' name='keyPath' declared_type='NSString*' index='1'/>
<arg type='^v' name='context' declared_type='void*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserving'>
<method type='v24@0:4@8@12@16^v20' type64='v48@0:8@16@24@32^v40' selector='observeValueForKeyPath:ofObject:change:context:'>
<arg type='@' name='keyPath' declared_type='NSString*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='change' declared_type='NSDictionary*' index='2'/>
<arg type='^v' name='context' declared_type='void*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObservingCustomization'>
<method class_method='true' type='B12@0:4@8' type64='B24@0:8@16' selector='automaticallyNotifiesObserversForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' type='@12@0:4@8' type64='@24@0:8@16' selector='keyPathsForValuesAffectingValueForKey:'>
<arg type='@' name='key' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method type='^v8@0:4' type64='^v16@0:8' selector='observationInfo'>
<retval type='^v' declared_type='void*'/>
</method>
<method type='v12@0:4^v8' type64='v24@0:8^v16' selector='setObservationInfo:'>
<arg type='^v' name='observationInfo' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedArchiverDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='archiver:didEncodeObject:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='archiver:willEncodeObject:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='archiver:willReplaceObject:withObject:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='newObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='archiverDidFinish:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='archiverWillFinish:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedArchiverObjectSubstitution'>
<method class_method='true' type='@8@0:4' type64='@16@0:8' selector='classFallbacksForKeyedArchiver'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type='#8@0:4' type64='#16@0:8' selector='classForKeyedArchiver'>
<retval type='#' declared_type='Class'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='replacementObjectForKeyedArchiver:'>
<arg type='@' name='archiver' declared_type='NSKeyedArchiver*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedUnarchiverDelegate'>
<method type='#20@0:4@8@12@16' type64='#40@0:8@16@24@32' selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='classNames' declared_type='NSArray*' index='2'/>
<retval type='#' declared_type='Class'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='unarchiver:didDecodeObject:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='unarchiver:willReplaceObject:withObject:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<arg type='@' name='newObject' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='unarchiverDidFinish:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='unarchiverWillFinish:'>
<arg type='@' name='unarchiver' declared_type='NSKeyedUnarchiver*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedUnarchiverObjectSubstitution'>
<method class_method='true' type='#8@0:4' type64='#16@0:8' selector='classForKeyedUnarchiver'>
<retval type='#' declared_type='Class'/>
</method>
</informal_protocol>
<informal_protocol name='NSLocking'>
<method type='v8@0:4' type64='v16@0:8' selector='lock'>
<retval type='v' declared_type='void'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='unlock'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSMachPortDelegate'>
<method type='v12@0:4^v8' type64='v24@0:8^v16' selector='handleMachMessage:'>
<arg type='^v' name='msg' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSMetadataQueryDelegate'>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='metadataQuery:replacementObjectForResultObject:'>
<arg type='@' name='query' declared_type='NSMetadataQuery*' index='0'/>
<arg type='@' name='result' declared_type='NSMetadataItem*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='metadataQuery:replacementValueForAttribute:value:'>
<arg type='@' name='query' declared_type='NSMetadataQuery*' index='0'/>
<arg type='@' name='attrName' declared_type='NSString*' index='1'/>
<arg type='@' name='attrValue' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSMutableCopying'>
<method type='@12@0:4^{_NSZone=}8' type64='@24@0:8^{_NSZone=}16' selector='mutableCopyWithZone:'>
<arg type='^{_NSZone=}' name='zone' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSNetServiceBrowserDelegate'>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didFindDomain:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='domainString' declared_type='NSString*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didFindService:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='aNetService' declared_type='NSNetService*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netServiceBrowser:didNotSearch:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didRemoveDomain:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='domainString' declared_type='NSString*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32' selector='netServiceBrowser:didRemoveService:moreComing:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<arg type='@' name='aNetService' declared_type='NSNetService*' index='1'/>
<arg type='B' name='moreComing' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceBrowserDidStopSearch:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceBrowserWillSearch:'>
<arg type='@' name='aNetServiceBrowser' declared_type='NSNetServiceBrowser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSNetServiceDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netService:didNotPublish:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netService:didNotResolve:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='errorDict' declared_type='NSDictionary*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='netService:didUpdateTXTRecordData:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceDidPublish:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceDidResolveAddress:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceDidStop:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceWillPublish:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='netServiceWillResolve:'>
<arg type='@' name='sender' declared_type='NSNetService*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSObject'>
<method type='@8@0:4' type64='@16@0:8' selector='autorelease'>
<retval type='@' declared_type='id'/>
</method>
<method type='#8@0:4' type64='#16@0:8' selector='class'>
<retval type='#' declared_type='Class'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='conformsToProtocol:'>
<arg type='@' name='aProtocol' declared_type='Protocol*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='debugDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='I8@0:4' type64='Q16@0:8' selector='hash'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='isEqual:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4#8' type64='B24@0:8#16' selector='isKindOfClass:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4#8' type64='B24@0:8#16' selector='isMemberOfClass:'>
<arg type='#' name='aClass' declared_type='Class' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B8@0:4' type64='B16@0:8' selector='isProxy'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@12@0:4:8' type64='@24@0:8:16' selector='performSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@16@0:4:8@12' type64='@32@0:8:16@24' selector='performSelector:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='object' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@20@0:4:8@12@16' type64='@40@0:8:16@24@32' selector='performSelector:withObject:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='object1' declared_type='id' index='1'/>
<arg type='@' name='object2' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method type='Vv8@0:4' type64='Vv16@0:8' selector='release'>
<retval type='v' declared_type='void'/>
</method>
<method type='B12@0:4:8' type64='B24@0:8:16' selector='respondsToSelector:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='retain'>
<retval type='@' declared_type='id'/>
</method>
<method type='I8@0:4' type64='Q16@0:8' selector='retainCount'>
<retval type='I' type64='Q' declared_type='NSUInteger'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='self'>
<retval type='@' declared_type='id'/>
</method>
<method type='#8@0:4' type64='#16@0:8' selector='superclass'>
<retval type='#' declared_type='Class'/>
</method>
<method type='^{_NSZone=}8@0:4' type64='^{_NSZone=}16@0:8' selector='zone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
</informal_protocol>
<informal_protocol name='NSPortDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='handlePortMessage:'>
<arg type='@' name='message' declared_type='NSPortMessage*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptClassDescription'>
<method type='L8@0:4' type64='I16@0:8' selector='classCode'>
<retval type='L' type64='I' declared_type='FourCharCode'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='className'>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptKeyValueCoding'>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='coerceValue:forKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method type='v20@0:4@8I12@16' type64='v40@0:8@16Q24@32' selector='insertValue:atIndex:inPropertyWithKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='1'/>
<arg type='@' name='key' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='insertValue:inPropertyWithKey:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4I8@12' type64='v32@0:8Q16@24' selector='removeValueAtIndex:fromPropertyWithKey:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4I8@12@16' type64='v40@0:8Q16@24@32' selector='replaceValueAtIndex:inPropertyWithKey:withValue:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='@' name='value' declared_type='id' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@16@0:4I8@12' type64='@32@0:8Q16@24' selector='valueAtIndex:inPropertyWithKey:'>
<arg type='I' type64='Q' name='index' declared_type='NSUInteger' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='valueWithName:inPropertyWithKey:'>
<arg type='@' name='name' declared_type='NSString*' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='valueWithUniqueID:inPropertyWithKey:'>
<arg type='@' name='uniqueID' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptObjectSpecifiers'>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='indicesOfObjectsByEvaluatingObjectSpecifier:'>
<arg type='@' name='specifier' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='objectSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
</informal_protocol>
<informal_protocol name='NSScripting'>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='copyScriptingValue:forKey:withProperties:'>
<arg type='@' name='value' declared_type='id' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='@' name='properties' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@24@0:4#8@12@16@20' type64='@48@0:8#16@24@32@40' selector='newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:'>
<arg type='#' name='objectClass' declared_type='Class' index='0'/>
<arg type='@' name='key' declared_type='NSString*' index='1'/>
<arg type='@' name='contentsValue' declared_type='id' index='2'/>
<arg type='@' name='properties' declared_type='NSDictionary*' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='scriptingProperties'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='scriptingValueForSpecifier:'>
<arg type='@' name='objectSpecifier' declared_type='NSScriptObjectSpecifier*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setScriptingProperties:'>
<arg type='@' name='properties' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptingComparisonMethods'>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingBeginsWith:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingContains:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingEndsWith:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingIsEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingIsGreaterThan:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingIsGreaterThanOrEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingIsLessThan:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='scriptingIsLessThanOrEqualTo:'>
<arg type='@' name='object' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSSecureCoding'>
<method class_method='true' type='B8@0:4' type64='B16@0:8' selector='supportsSecureCoding'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpellServerDelegate'>
<method type='{_NSRange=II}24@0:4@8@12@16^@20' type64='{_NSRange=QQ}48@0:8@16@24@32^@40' selector='spellServer:checkGrammarInString:language:details:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='stringToCheck' declared_type='NSString*' index='1'/>
<arg type='@' name='language' declared_type='NSString*' index='2'/>
<arg type='^@' name='details' declared_type='NSArray**' index='3'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method type='@40@0:4@8@12I16Q20@28@32^i36' type64='@72@0:8@16@24Q32Q40@48@56^q64' selector='spellServer:checkString:offset:types:options:orthography:wordCount:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='stringToCheck' declared_type='NSString*' index='1'/>
<arg type='I' type64='Q' name='offset' declared_type='NSUInteger' index='2'/>
<arg type='Q' name='checkingTypes' declared_type='NSTextCheckingTypes' index='3'/>
<arg type='@' name='options' declared_type='NSDictionary*' index='4'/>
<arg type='@' name='orthography' declared_type='NSOrthography*' index='5'/>
<arg type='^i' type64='^q' name='wordCount' declared_type='NSInteger*' index='6'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='spellServer:didForgetWord:inLanguage:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='word' declared_type='NSString*' index='1'/>
<arg type='@' name='language' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='spellServer:didLearnWord:inLanguage:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='word' declared_type='NSString*' index='1'/>
<arg type='@' name='language' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='{_NSRange=II}28@0:4@8@12@16^i20B24' type64='{_NSRange=QQ}52@0:8@16@24@32^q40B48' selector='spellServer:findMisspelledWordInString:language:wordCount:countOnly:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='stringToCheck' declared_type='NSString*' index='1'/>
<arg type='@' name='language' declared_type='NSString*' index='2'/>
<arg type='^i' type64='^q' name='wordCount' declared_type='NSInteger*' index='3'/>
<arg type='B' name='countOnly' declared_type='BOOL' index='4'/>
<retval type='{_NSRange=II}' type64='{_NSRange=QQ}' declared_type='NSRange'/>
</method>
<method type='v28@0:4@8I12@16@20@24' type64='v56@0:8@16Q24@32@40@48' selector='spellServer:recordResponse:toCorrection:forWord:language:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='I' type64='Q' name='response' declared_type='NSUInteger' index='1'/>
<arg type='@' name='correction' declared_type='NSString*' index='2'/>
<arg type='@' name='word' declared_type='NSString*' index='3'/>
<arg type='@' name='language' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@28@0:4@8{_NSRange=II}12@20@24' type64='@56@0:8@16{_NSRange=QQ}24@40@48' selector='spellServer:suggestCompletionsForPartialWordRange:inString:language:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='{_NSRange=II}' type64='{_NSRange=QQ}' name='range' declared_type='NSRange' index='1'/>
<arg type='@' name='string' declared_type='NSString*' index='2'/>
<arg type='@' name='language' declared_type='NSString*' index='3'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='spellServer:suggestGuessesForWord:inLanguage:'>
<arg type='@' name='sender' declared_type='NSSpellServer*' index='0'/>
<arg type='@' name='word' declared_type='NSString*' index='1'/>
<arg type='@' name='language' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='NSStreamDelegate'>
<method type='v16@0:4@8I12' type64='v32@0:8@16Q24' selector='stream:handleEvent:'>
<arg type='@' name='aStream' declared_type='NSStream*' index='0'/>
<arg type='I' type64='Q' name='eventCode' declared_type='NSStreamEvent' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSThreadPerformAdditions'>
<method type='v24@0:4:8@12@16B20' type64='v44@0:8:16@24@32B40' selector='performSelector:onThread:withObject:waitUntilDone:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='thr' declared_type='NSThread*' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<arg type='B' name='wait' declared_type='BOOL' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v28@0:4:8@12@16B20@24' type64='v52@0:8:16@24@32B40@44' selector='performSelector:onThread:withObject:waitUntilDone:modes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='thr' declared_type='NSThread*' index='1'/>
<arg type='@' name='arg' declared_type='id' index='2'/>
<arg type='B' name='wait' declared_type='BOOL' index='3'/>
<arg type='@' name='array' declared_type='NSArray*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4:8@12' type64='v32@0:8:16@24' selector='performSelectorInBackground:withObject:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4:8@12B16' type64='v36@0:8:16@24B32' selector='performSelectorOnMainThread:withObject:waitUntilDone:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<arg type='B' name='wait' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4:8@12B16@20' type64='v44@0:8:16@24B32@36' selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:'>
<arg type=':' name='aSelector' declared_type='SEL' index='0'/>
<arg type='@' name='arg' declared_type='id' index='1'/>
<arg type='B' name='wait' declared_type='BOOL' index='2'/>
<arg type='@' name='array' declared_type='NSArray*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLAuthenticationChallengeSender'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='cancelAuthenticationChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='continueWithoutCredentialForAuthenticationChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='performDefaultHandlingForAuthenticationChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='rejectProtectionSpaceAndContinueWithChallenge:'>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='useCredential:forAuthenticationChallenge:'>
<arg type='@' name='credential' declared_type='NSURLCredential*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLClient'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URL:resourceDataDidBecomeAvailable:'>
<arg type='@' name='sender' declared_type='NSURL*' index='0'/>
<arg type='@' name='newBytes' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URL:resourceDidFailLoadingWithReason:'>
<arg type='@' name='sender' declared_type='NSURL*' index='0'/>
<arg type='@' name='reason' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLResourceDidCancelLoading:'>
<arg type='@' name='sender' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLResourceDidFinishLoading:'>
<arg type='@' name='sender' declared_type='NSURL*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLConnectionDataDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didReceiveData:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didReceiveResponse:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8i12i16i20' type64='v48@0:8@16q24q32q40' selector='connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='i' type64='q' name='bytesWritten' declared_type='NSInteger' index='1'/>
<arg type='i' type64='q' name='totalBytesWritten' declared_type='NSInteger' index='2'/>
<arg type='i' type64='q' name='totalBytesExpectedToWrite' declared_type='NSInteger' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='connection:needNewBodyStream:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method type='@16@0:4@8@12' type64='@32@0:8@16@24' selector='connection:willCacheResponse:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='1'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='connection:willSendRequest:redirectResponse:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='2'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='connectionDidFinishLoading:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLConnectionDelegate'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='connection:canAuthenticateAgainstProtectionSpace:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='protectionSpace' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didCancelAuthenticationChallenge:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didFailWithError:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:didReceiveAuthenticationChallenge:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connection:willSendRequestForAuthenticationChallenge:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='connectionShouldUseCredentialStorage:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLConnectionDownloadDelegate'>
<method type='v36@0:4@8q12q20q28' type64='v48@0:8@16q24q32q40' selector='connection:didWriteData:totalBytesWritten:expectedTotalBytes:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='q' name='bytesWritten' declared_type='long long' index='1'/>
<arg type='q' name='totalBytesWritten' declared_type='long long' index='2'/>
<arg type='q' name='expectedTotalBytes' declared_type='long long' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='connectionDidFinishDownloading:destinationURL:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='@' name='destinationURL' declared_type='NSURL*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v28@0:4@8q12q20' type64='v40@0:8@16q24q32' selector='connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:'>
<arg type='@' name='connection' declared_type='NSURLConnection*' index='0'/>
<arg type='q' name='totalBytesWritten' declared_type='long long' index='1'/>
<arg type='q' name='expectedTotalBytes' declared_type='long long' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLDownloadDelegate'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='download:canAuthenticateAgainstProtectionSpace:'>
<arg type='@' name='connection' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='protectionSpace' declared_type='NSURLProtectionSpace*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:decideDestinationWithSuggestedFilename:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='filename' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:didCancelAuthenticationChallenge:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:didCreateDestination:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='path' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:didFailWithError:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:didReceiveAuthenticationChallenge:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8I12' type64='v32@0:8@16Q24' selector='download:didReceiveDataOfLength:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='I' type64='Q' name='length' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='download:didReceiveResponse:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='download:shouldDecodeSourceDataOfMIMEType:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='encodingType' declared_type='NSString*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v24@0:4@8@12q16' type64='v40@0:8@16@24q32' selector='download:willResumeWithResponse:fromByte:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<arg type='q' name='startingByte' declared_type='long long' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='download:willSendRequest:redirectResponse:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<arg type='@' name='redirectResponse' declared_type='NSURLResponse*' index='2'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='downloadDidBegin:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='downloadDidFinish:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B12@0:4@8' type64='B24@0:8@16' selector='downloadShouldUseCredentialStorage:'>
<arg type='@' name='download' declared_type='NSURLDownload*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLHandleClient'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLHandle:resourceDataDidBecomeAvailable:'>
<arg type='@' name='sender' declared_type='NSURLHandle*' index='0'/>
<arg type='@' name='newBytes' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLHandle:resourceDidFailLoadingWithReason:'>
<arg type='@' name='sender' declared_type='NSURLHandle*' index='0'/>
<arg type='@' name='reason' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLHandleResourceDidBeginLoading:'>
<arg type='@' name='sender' declared_type='NSURLHandle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLHandleResourceDidCancelLoading:'>
<arg type='@' name='sender' declared_type='NSURLHandle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLHandleResourceDidFinishLoading:'>
<arg type='@' name='sender' declared_type='NSURLHandle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLProtocolClient'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLProtocol:cachedResponseIsValid:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='cachedResponse' declared_type='NSCachedURLResponse*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLProtocol:didCancelAuthenticationChallenge:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLProtocol:didFailWithError:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='error' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLProtocol:didLoadData:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='data' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='URLProtocol:didReceiveAuthenticationChallenge:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='challenge' declared_type='NSURLAuthenticationChallenge*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12I16' type64='v40@0:8@16@24Q32' selector='URLProtocol:didReceiveResponse:cacheStoragePolicy:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='response' declared_type='NSURLResponse*' index='1'/>
<arg type='I' type64='Q' name='policy' declared_type='NSURLCacheStoragePolicy' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='URLProtocol:wasRedirectedToRequest:redirectResponse:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<arg type='@' name='request' declared_type='NSURLRequest*' index='1'/>
<arg type='@' name='redirectResponse' declared_type='NSURLResponse*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='URLProtocolDidFinishLoading:'>
<arg type='@' name='protocol' declared_type='NSURLProtocol*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserNotificationCenterDelegate'>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='userNotificationCenter:didActivateNotification:'>
<arg type='@' name='center' declared_type='NSUserNotificationCenter*' index='0'/>
<arg type='@' name='notification' declared_type='NSUserNotification*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='userNotificationCenter:didDeliverNotification:'>
<arg type='@' name='center' declared_type='NSUserNotificationCenter*' index='0'/>
<arg type='@' name='notification' declared_type='NSUserNotification*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='userNotificationCenter:shouldPresentNotification:'>
<arg type='@' name='center' declared_type='NSUserNotificationCenter*' index='0'/>
<arg type='@' name='notification' declared_type='NSUserNotification*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSXMLParserDelegate'>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='parser:didEndElement:namespaceURI:qualifiedName:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<arg type='@' name='qName' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:didEndMappingPrefix:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='prefix' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v28@0:4@8@12@16@20@24' type64='v56@0:8@16@24@32@40@48' selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<arg type='@' name='qName' declared_type='NSString*' index='3'/>
<arg type='@' name='attributeDict' declared_type='NSDictionary*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:didStartMappingPrefix:toURI:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='prefix' declared_type='NSString*' index='1'/>
<arg type='@' name='namespaceURI' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v28@0:4@8@12@16@20@24' type64='v56@0:8@16@24@32@40@48' selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='attributeName' declared_type='NSString*' index='1'/>
<arg type='@' name='elementName' declared_type='NSString*' index='2'/>
<arg type='@' name='type' declared_type='NSString*' index='3'/>
<arg type='@' name='defaultValue' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundCDATA:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='CDATABlock' declared_type='NSData*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundCharacters:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='string' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundComment:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='comment' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:foundElementDeclarationWithName:model:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='elementName' declared_type='NSString*' index='1'/>
<arg type='@' name='model' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:foundIgnorableWhitespace:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='whitespaceString' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:foundInternalEntityDeclarationWithName:value:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='value' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='parser:foundNotationDeclarationWithName:publicID:systemID:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32' selector='parser:foundProcessingInstructionWithTarget:data:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='target' declared_type='NSString*' index='1'/>
<arg type='@' name='data' declared_type='NSString*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v28@0:4@8@12@16@20@24' type64='v56@0:8@16@24@32@40@48' selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='publicID' declared_type='NSString*' index='2'/>
<arg type='@' name='systemID' declared_type='NSString*' index='3'/>
<arg type='@' name='notationName' declared_type='NSString*' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:parseErrorOccurred:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='parseError' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='parser:resolveExternalEntityName:systemID:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='name' declared_type='NSString*' index='1'/>
<arg type='@' name='systemID' declared_type='NSString*' index='2'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='parser:validationErrorOccurred:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<arg type='@' name='validationError' declared_type='NSError*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='parserDidEndDocument:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='parserDidStartDocument:'>
<arg type='@' name='parser' declared_type='NSXMLParser*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSXPCListenerDelegate'>
<method type='B16@0:4@8@12' type64='B32@0:8@16@24' selector='listener:shouldAcceptNewConnection:'>
<arg type='@' name='listener' declared_type='NSXPCListener*' index='0'/>
<arg type='@' name='newConnection' declared_type='NSXPCConnection*' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSXPCProxyCreating'>
<method type='@8@0:4' type64='@16@0:8' selector='remoteObjectProxy'>
<retval type='@' declared_type='id'/>
</method>
<method type='@12@0:4@?8' type64='@24@0:8@?16' selector='remoteObjectProxyWithErrorHandler:'>
<arg type='@?' name='handler' function_pointer='true' declared_type='void (^)(NSError *)' index='0'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
</signatures>
