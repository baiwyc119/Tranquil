<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<struct type64='{CTParagraphStyleSetting=&quot;spec&quot;I&quot;valueSize&quot;Q&quot;value&quot;^v}' type='{CTParagraphStyleSetting=&quot;spec&quot;I&quot;valueSize&quot;I&quot;value&quot;^v}' name='CTParagraphStyleSetting'>
<field type='I' declared_type='CTParagraphStyleSpecifier' name='spec'/>
<field type64='Q' type='L' declared_type='size_t' name='valueSize'/>
<field const='true' type='^v' declared_type='void*' name='value'/>
</struct>
<cftype type='^{__CTFontCollection=}' gettypeid_func='CTFontCollectionGetTypeID' name='CTFontCollectionRef' tollfree='NSCTFontCollection'/>
<cftype type='^{__CTFontDescriptor=}' gettypeid_func='CTFontDescriptorGetTypeID' name='CTFontDescriptorRef' tollfree='__NSCFType'/>
<cftype type='^{__CTFont=}' gettypeid_func='CTFontGetTypeID' name='CTFontRef' tollfree='__NSCFType'/>
<cftype type='^{__CTFrame=}' gettypeid_func='CTFrameGetTypeID' name='CTFrameRef' tollfree='__NSCFType'/>
<cftype type='^{__CTFramesetter=}' gettypeid_func='CTFramesetterGetTypeID' name='CTFramesetterRef' tollfree='__NSCFType'/>
<cftype type='^{__CTGlyphInfo=}' gettypeid_func='CTGlyphInfoGetTypeID' name='CTGlyphInfoRef' tollfree='__NSCFType'/>
<cftype type='^{__CTLine=}' gettypeid_func='CTLineGetTypeID' name='CTLineRef' tollfree='__NSCFType'/>
<cftype type='^{__CTFontCollection=}' gettypeid_func='CTFontCollectionGetTypeID' name='CTMutableFontCollectionRef' tollfree='NSCTFontCollection'/>
<cftype type='^{__CTParagraphStyle=}' gettypeid_func='CTParagraphStyleGetTypeID' name='CTParagraphStyleRef' tollfree='__NSCFType'/>
<cftype type='^{__CTRun=}' gettypeid_func='CTRunGetTypeID' name='CTRunRef' tollfree='__NSCFType'/>
<cftype type='^{__CTTextTab=}' gettypeid_func='CTTextTabGetTypeID' name='CTTextTabRef' tollfree='__NSCFType'/>
<cftype type='^{__CTTypesetter=}' gettypeid_func='CTTypesetterGetTypeID' name='CTTypesetterRef' tollfree='__NSCFType'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineClassAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineClassHanging'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineClassIdeographicCentered'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineClassIdeographicHigh'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineClassIdeographicLow'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineClassMath'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineClassRoman'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineInfoAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineOriginalFont'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineReferenceFont'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTBaselineReferenceInfoAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTCharacterShapeAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontBaselineAdjustAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontCascadeListAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontCharacterSetAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontCollectionDisallowAutoActivationOption'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontCollectionIncludeDisabledFontsOption'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontCollectionRemoveDuplicatesOption'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontCopyrightNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontDescriptionNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontDesignerNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontDesignerURLNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontDisplayNameAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontEnabledAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFamilyNameAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFamilyNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFeatureSelectorDefaultKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFeatureSelectorIdentifierKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFeatureSelectorNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFeatureSelectorSettingKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFeatureSettingsAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFeatureTypeExclusiveKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFeatureTypeIdentifierKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFeatureTypeNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFeatureTypeSelectorsKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFeaturesAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFixedAdvanceAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFormatAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontFullNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontLanguagesAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontLicenseNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontLicenseURLNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontMacintoshEncodingsAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontManagerBundleIdentifier'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontManagerErrorDomain'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontManagerErrorFontURLsKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontManagerRegisteredFontsChangedNotification'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontManufacturerNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontMatrixAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontNameAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontOrientationAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontPostScriptCIDNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontPostScriptNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontPriorityAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontRegistrationScopeAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontSampleTextNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontSizeAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontSlantTrait'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontStyleNameAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontStyleNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontSubFamilyNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontSymbolicTrait'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontTrademarkNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontTraitsAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontURLAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontUniqueNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontVariationAttribute'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontVariationAxisDefaultValueKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontVariationAxisIdentifierKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontVariationAxisMaximumValueKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontVariationAxisMinimumValueKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontVariationAxisNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontVendorURLNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontVersionNameKey'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontWeightTrait'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFontWidthTrait'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTForegroundColorAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTForegroundColorFromContextAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFrameClippingPathsAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFramePathClippingPathAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFramePathFillRuleAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFramePathWidthAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTFrameProgressionAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTGlyphInfoAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTKernAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTLigatureAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTParagraphStyleAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTRunDelegateAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTStrokeColorAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTStrokeWidthAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTSuperscriptAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTTabColumnTerminatorsAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTTypesetterOptionDisableBidiProcessing'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTTypesetterOptionForcedEmbeddingLevel'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTUnderlineColorAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTUnderlineStyleAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTVerticalFormsAttributeName'/>
<constant const='true' type='^{__CFString=}' declared_type='CFStringRef' name='kCTWritingDirectionAttributeName'/>
<enum value='1' name='kCTAdobeCNS1CharacterCollection'/>
<enum value='2' name='kCTAdobeGB1CharacterCollection'/>
<enum value='3' name='kCTAdobeJapan1CharacterCollection'/>
<enum value='4' name='kCTAdobeJapan2CharacterCollection'/>
<enum value='5' name='kCTAdobeKorea1CharacterCollection'/>
<enum value='2' name='kCTCenterTextAlignment'/>
<enum value='1' name='kCTCharacterCollectionAdobeCNS1'/>
<enum value='2' name='kCTCharacterCollectionAdobeGB1'/>
<enum value='3' name='kCTCharacterCollectionAdobeJapan1'/>
<enum value='4' name='kCTCharacterCollectionAdobeJapan2'/>
<enum value='5' name='kCTCharacterCollectionAdobeKorea1'/>
<enum value='0' name='kCTCharacterCollectionIdentityMapping'/>
<enum value='18' name='kCTFontAlertHeaderFontType'/>
<enum value='9' name='kCTFontApplicationFontType'/>
<enum value='2' name='kCTFontBoldTrait'/>
<enum value='1073741824' name='kCTFontClarendonSerifsClass'/>
<enum value='1073741824' name='kCTFontClassClarendonSerifs'/>
<enum value='1879048192' name='kCTFontClassFreeformSerifs'/>
<enum value='28' name='kCTFontClassMaskShift'/>
<enum value='4026531840' name='kCTFontClassMaskTrait'/>
<enum value='805306368' name='kCTFontClassModernSerifs'/>
<enum value='268435456' name='kCTFontClassOldStyleSerifs'/>
<enum value='2415919104' name='kCTFontClassOrnamentals'/>
<enum value='2147483648' name='kCTFontClassSansSerif'/>
<enum value='2684354560' name='kCTFontClassScripts'/>
<enum value='1342177280' name='kCTFontClassSlabSerifs'/>
<enum value='3221225472' name='kCTFontClassSymbolic'/>
<enum value='536870912' name='kCTFontClassTransitionalSerifs'/>
<enum value='0' name='kCTFontClassUnknown'/>
<enum value='0' name='kCTFontCollectionCopyDefaultOptions'/>
<enum value='2' name='kCTFontCollectionCopyStandardSort'/>
<enum value='1' name='kCTFontCollectionCopyUnique'/>
<enum value='8192' name='kCTFontColorGlyphsTrait'/>
<enum value='16384' name='kCTFontCompositeTrait'/>
<enum value='64' name='kCTFontCondensedTrait'/>
<enum value='26' name='kCTFontControlContentFontType'/>
<enum value='0' name='kCTFontDefaultOrientation'/>
<enum value='20' name='kCTFontEmphasizedSystemDetailFontType'/>
<enum value='3' name='kCTFontEmphasizedSystemFontType'/>
<enum value='32' name='kCTFontExpandedTrait'/>
<enum value='5' name='kCTFontFormatBitmap'/>
<enum value='1' name='kCTFontFormatOpenTypePostScript'/>
<enum value='2' name='kCTFontFormatOpenTypeTrueType'/>
<enum value='4' name='kCTFontFormatPostScript'/>
<enum value='3' name='kCTFontFormatTrueType'/>
<enum value='0' name='kCTFontFormatUnrecognized'/>
<enum value='1879048192' name='kCTFontFreeformSerifsClass'/>
<enum value='1' name='kCTFontHorizontalOrientation'/>
<enum value='1' name='kCTFontItalicTrait'/>
<enum value='10' name='kCTFontLabelFontType'/>
<enum value='0' name='kCTFontManagerAutoActivationDefault'/>
<enum value='1' name='kCTFontManagerAutoActivationDisabled'/>
<enum value='2' name='kCTFontManagerAutoActivationEnabled'/>
<enum value='3' name='kCTFontManagerAutoActivationPromptUser'/>
<enum value='105' name='kCTFontManagerErrorAlreadyRegistered'/>
<enum value='101' name='kCTFontManagerErrorFileNotFound'/>
<enum value='202' name='kCTFontManagerErrorInUse'/>
<enum value='102' name='kCTFontManagerErrorInsufficientPermissions'/>
<enum value='104' name='kCTFontManagerErrorInvalidFontData'/>
<enum value='201' name='kCTFontManagerErrorNotRegistered'/>
<enum value='202' name='kCTFontManagerErrorSystemRequired'/>
<enum value='103' name='kCTFontManagerErrorUnrecognizedFormat'/>
<enum value='0' name='kCTFontManagerScopeNone'/>
<enum value='1' name='kCTFontManagerScopeProcess'/>
<enum value='3' name='kCTFontManagerScopeSession'/>
<enum value='2' name='kCTFontManagerScopeUser'/>
<enum value='14' name='kCTFontMenuItemCmdKeyFontType'/>
<enum value='12' name='kCTFontMenuItemFontType'/>
<enum value='13' name='kCTFontMenuItemMarkFontType'/>
<enum value='11' name='kCTFontMenuTitleFontType'/>
<enum value='23' name='kCTFontMessageFontType'/>
<enum value='7' name='kCTFontMiniEmphasizedSystemFontType'/>
<enum value='6' name='kCTFontMiniSystemFontType'/>
<enum value='805306368' name='kCTFontModernSerifsClass'/>
<enum value='1024' name='kCTFontMonoSpaceTrait'/>
<enum value='4294967295' name='kCTFontNoFontType'/>
<enum value='268435456' name='kCTFontOldStyleSerifsClass'/>
<enum value='0' name='kCTFontOptionsDefault'/>
<enum value='4' name='kCTFontOptionsPreferSystemFont'/>
<enum value='1' name='kCTFontOptionsPreventAutoActivation'/>
<enum value='0' name='kCTFontOrientationDefault'/>
<enum value='1' name='kCTFontOrientationHorizontal'/>
<enum value='2' name='kCTFontOrientationVertical'/>
<enum value='2415919104' name='kCTFontOrnamentalsClass'/>
<enum value='24' name='kCTFontPaletteFontType'/>
<enum value='30000' name='kCTFontPriorityComputer'/>
<enum value='50000' name='kCTFontPriorityDynamic'/>
<enum value='20000' name='kCTFontPriorityNetwork'/>
<enum value='60000' name='kCTFontPriorityProcess'/>
<enum value='10000' name='kCTFontPrioritySystem'/>
<enum value='40000' name='kCTFontPriorityUser'/>
<enum value='16' name='kCTFontPushButtonFontType'/>
<enum value='2147483648' name='kCTFontSansSerifClass'/>
<enum value='2684354560' name='kCTFontScriptsClass'/>
<enum value='1342177280' name='kCTFontSlabSerifsClass'/>
<enum value='5' name='kCTFontSmallEmphasizedSystemFontType'/>
<enum value='4' name='kCTFontSmallSystemFontType'/>
<enum value='22' name='kCTFontSmallToolbarFontType'/>
<enum value='3221225472' name='kCTFontSymbolicClass'/>
<enum value='19' name='kCTFontSystemDetailFontType'/>
<enum value='2' name='kCTFontSystemFontType'/>
<enum value='1633906292' name='kCTFontTableAcnt'/>
<enum value='1634626418' name='kCTFontTableAnkr'/>
<enum value='1635148146' name='kCTFontTableAvar'/>
<enum value='1111577413' name='kCTFontTableBASE'/>
<enum value='1650745716' name='kCTFontTableBdat'/>
<enum value='1651008868' name='kCTFontTableBhed'/>
<enum value='1651273571' name='kCTFontTableBloc'/>
<enum value='1651731566' name='kCTFontTableBsln'/>
<enum value='1128678944' name='kCTFontTableCFF'/>
<enum value='1668112752' name='kCTFontTableCmap'/>
<enum value='1668702578' name='kCTFontTableCvar'/>
<enum value='1668707360' name='kCTFontTableCvt'/>
<enum value='1146308935' name='kCTFontTableDSIG'/>
<enum value='1161970772' name='kCTFontTableEBDT'/>
<enum value='1161972803' name='kCTFontTableEBLC'/>
<enum value='1161974595' name='kCTFontTableEBSC'/>
<enum value='1717859171' name='kCTFontTableFdsc'/>
<enum value='1717920116' name='kCTFontTableFeat'/>
<enum value='1718449272' name='kCTFontTableFmtx'/>
<enum value='1718642541' name='kCTFontTableFpgm'/>
<enum value='1719034226' name='kCTFontTableFvar'/>
<enum value='1195656518' name='kCTFontTableGDEF'/>
<enum value='1196445523' name='kCTFontTableGPOS'/>
<enum value='1196643650' name='kCTFontTableGSUB'/>
<enum value='1734439792' name='kCTFontTableGasp'/>
<enum value='1735162214' name='kCTFontTableGlyf'/>
<enum value='1735811442' name='kCTFontTableGvar'/>
<enum value='1751412088' name='kCTFontTableHdmx'/>
<enum value='1751474532' name='kCTFontTableHead'/>
<enum value='1751672161' name='kCTFontTableHhea'/>
<enum value='1752003704' name='kCTFontTableHmtx'/>
<enum value='1752396921' name='kCTFontTableHsty'/>
<enum value='1246975046' name='kCTFontTableJSTF'/>
<enum value='1786082164' name='kCTFontTableJust'/>
<enum value='1801810542' name='kCTFontTableKern'/>
<enum value='1801810552' name='kCTFontTableKerx'/>
<enum value='1280594760' name='kCTFontTableLTSH'/>
<enum value='1818452338' name='kCTFontTableLcar'/>
<enum value='1819239265' name='kCTFontTableLoca'/>
<enum value='1835104368' name='kCTFontTableMaxp'/>
<enum value='1836020340' name='kCTFontTableMort'/>
<enum value='1836020344' name='kCTFontTableMorx'/>
<enum value='1851878757' name='kCTFontTableName'/>
<enum value='1330851634' name='kCTFontTableOS2'/>
<enum value='1869636196' name='kCTFontTableOpbd'/>
<enum value='1' name='kCTFontTableOptionExcludeSynthetic'/>
<enum value='0' name='kCTFontTableOptionNoOptions'/>
<enum value='1346587732' name='kCTFontTablePCLT'/>
<enum value='1886352244' name='kCTFontTablePost'/>
<enum value='1886545264' name='kCTFontTablePrep'/>
<enum value='1886547824' name='kCTFontTableProp'/>
<enum value='1935829364' name='kCTFontTableSbit'/>
<enum value='1935829368' name='kCTFontTableSbix'/>
<enum value='1953653099' name='kCTFontTableTrak'/>
<enum value='1447316824' name='kCTFontTableVDMX'/>
<enum value='1448038983' name='kCTFontTableVORG'/>
<enum value='1986553185' name='kCTFontTableVhea'/>
<enum value='1986884728' name='kCTFontTableVmtx'/>
<enum value='1516335206' name='kCTFontTableZapf'/>
<enum value='25' name='kCTFontToolTipFontType'/>
<enum value='21' name='kCTFontToolbarFontType'/>
<enum value='2' name='kCTFontTraitBold'/>
<enum value='4026531840' name='kCTFontTraitClassMask'/>
<enum value='8192' name='kCTFontTraitColorGlyphs'/>
<enum value='16384' name='kCTFontTraitComposite'/>
<enum value='64' name='kCTFontTraitCondensed'/>
<enum value='32' name='kCTFontTraitExpanded'/>
<enum value='1' name='kCTFontTraitItalic'/>
<enum value='1024' name='kCTFontTraitMonoSpace'/>
<enum value='4096' name='kCTFontTraitUIOptimized'/>
<enum value='2048' name='kCTFontTraitVertical'/>
<enum value='536870912' name='kCTFontTransitionalSerifsClass'/>
<enum value='18' name='kCTFontUIFontAlertHeader'/>
<enum value='9' name='kCTFontUIFontApplication'/>
<enum value='26' name='kCTFontUIFontControlContent'/>
<enum value='3' name='kCTFontUIFontEmphasizedSystem'/>
<enum value='20' name='kCTFontUIFontEmphasizedSystemDetail'/>
<enum value='10' name='kCTFontUIFontLabel'/>
<enum value='12' name='kCTFontUIFontMenuItem'/>
<enum value='14' name='kCTFontUIFontMenuItemCmdKey'/>
<enum value='13' name='kCTFontUIFontMenuItemMark'/>
<enum value='11' name='kCTFontUIFontMenuTitle'/>
<enum value='23' name='kCTFontUIFontMessage'/>
<enum value='7' name='kCTFontUIFontMiniEmphasizedSystem'/>
<enum value='6' name='kCTFontUIFontMiniSystem'/>
<enum value='4294967295' name='kCTFontUIFontNone'/>
<enum value='24' name='kCTFontUIFontPalette'/>
<enum value='16' name='kCTFontUIFontPushButton'/>
<enum value='5' name='kCTFontUIFontSmallEmphasizedSystem'/>
<enum value='4' name='kCTFontUIFontSmallSystem'/>
<enum value='22' name='kCTFontUIFontSmallToolbar'/>
<enum value='2' name='kCTFontUIFontSystem'/>
<enum value='19' name='kCTFontUIFontSystemDetail'/>
<enum value='25' name='kCTFontUIFontToolTip'/>
<enum value='21' name='kCTFontUIFontToolbar'/>
<enum value='0' name='kCTFontUIFontUser'/>
<enum value='1' name='kCTFontUIFontUserFixedPitch'/>
<enum value='17' name='kCTFontUIFontUtilityWindowTitle'/>
<enum value='8' name='kCTFontUIFontViews'/>
<enum value='15' name='kCTFontUIFontWindowTitle'/>
<enum value='4096' name='kCTFontUIOptimizedTrait'/>
<enum value='0' name='kCTFontUnknownClass'/>
<enum value='1' name='kCTFontUserFixedPitchFontType'/>
<enum value='0' name='kCTFontUserFontType'/>
<enum value='17' name='kCTFontUtilityWindowTitleFontType'/>
<enum value='2' name='kCTFontVerticalOrientation'/>
<enum value='2048' name='kCTFontVerticalTrait'/>
<enum value='8' name='kCTFontViewsFontType'/>
<enum value='15' name='kCTFontWindowTitleFontType'/>
<enum value='0' name='kCTFramePathFillEvenOdd'/>
<enum value='1' name='kCTFramePathFillWindingNumber'/>
<enum value='1' name='kCTFrameProgressionRightToLeft'/>
<enum value='0' name='kCTFrameProgressionTopToBottom'/>
<enum value='0' name='kCTIdentityMappingCharacterCollection'/>
<enum value='3' name='kCTJustifiedTextAlignment'/>
<enum value='0' name='kCTLeftTextAlignment'/>
<enum value='1' name='kCTLineBoundsExcludeTypographicLeading'/>
<enum value='2' name='kCTLineBoundsExcludeTypographicShifts'/>
<enum value='8' name='kCTLineBoundsUseGlyphPathBounds'/>
<enum value='4' name='kCTLineBoundsUseHangingPunctuation'/>
<enum value='16' name='kCTLineBoundsUseOpticalBounds'/>
<enum value='1' name='kCTLineBreakByCharWrapping'/>
<enum value='2' name='kCTLineBreakByClipping'/>
<enum value='3' name='kCTLineBreakByTruncatingHead'/>
<enum value='5' name='kCTLineBreakByTruncatingMiddle'/>
<enum value='4' name='kCTLineBreakByTruncatingTail'/>
<enum value='0' name='kCTLineBreakByWordWrapping'/>
<enum value='1' name='kCTLineTruncationEnd'/>
<enum value='2' name='kCTLineTruncationMiddle'/>
<enum value='0' name='kCTLineTruncationStart'/>
<enum value='4' name='kCTNaturalTextAlignment'/>
<enum value='0' name='kCTParagraphStyleSpecifierAlignment'/>
<enum value='13' name='kCTParagraphStyleSpecifierBaseWritingDirection'/>
<enum value='18' name='kCTParagraphStyleSpecifierCount'/>
<enum value='5' name='kCTParagraphStyleSpecifierDefaultTabInterval'/>
<enum value='1' name='kCTParagraphStyleSpecifierFirstLineHeadIndent'/>
<enum value='2' name='kCTParagraphStyleSpecifierHeadIndent'/>
<enum value='17' name='kCTParagraphStyleSpecifierLineBoundsOptions'/>
<enum value='6' name='kCTParagraphStyleSpecifierLineBreakMode'/>
<enum value='7' name='kCTParagraphStyleSpecifierLineHeightMultiple'/>
<enum value='10' name='kCTParagraphStyleSpecifierLineSpacing'/>
<enum value='16' name='kCTParagraphStyleSpecifierLineSpacingAdjustment'/>
<enum value='8' name='kCTParagraphStyleSpecifierMaximumLineHeight'/>
<enum value='14' name='kCTParagraphStyleSpecifierMaximumLineSpacing'/>
<enum value='9' name='kCTParagraphStyleSpecifierMinimumLineHeight'/>
<enum value='15' name='kCTParagraphStyleSpecifierMinimumLineSpacing'/>
<enum value='11' name='kCTParagraphStyleSpecifierParagraphSpacing'/>
<enum value='12' name='kCTParagraphStyleSpecifierParagraphSpacingBefore'/>
<enum value='4' name='kCTParagraphStyleSpecifierTabStops'/>
<enum value='3' name='kCTParagraphStyleSpecifierTailIndent'/>
<enum value='1' name='kCTRightTextAlignment'/>
<enum value='4' name='kCTRunStatusHasNonIdentityMatrix'/>
<enum value='0' name='kCTRunStatusNoStatus'/>
<enum value='2' name='kCTRunStatusNonMonotonic'/>
<enum value='1' name='kCTRunStatusRightToLeft'/>
<enum value='2' name='kCTTextAlignmentCenter'/>
<enum value='3' name='kCTTextAlignmentJustified'/>
<enum value='0' name='kCTTextAlignmentLeft'/>
<enum value='4' name='kCTTextAlignmentNatural'/>
<enum value='1' name='kCTTextAlignmentRight'/>
<enum value='512' name='kCTUnderlinePatternDash'/>
<enum value='768' name='kCTUnderlinePatternDashDot'/>
<enum value='1024' name='kCTUnderlinePatternDashDotDot'/>
<enum value='256' name='kCTUnderlinePatternDot'/>
<enum value='0' name='kCTUnderlinePatternSolid'/>
<enum value='9' name='kCTUnderlineStyleDouble'/>
<enum value='0' name='kCTUnderlineStyleNone'/>
<enum value='1' name='kCTUnderlineStyleSingle'/>
<enum value='2' name='kCTUnderlineStyleThick'/>
<enum value='131072' name='kCTVersionNumber10_5'/>
<enum value='131073' name='kCTVersionNumber10_5_2'/>
<enum value='131074' name='kCTVersionNumber10_5_3'/>
<enum value='131075' name='kCTVersionNumber10_5_5'/>
<enum value='196608' name='kCTVersionNumber10_6'/>
<enum value='262144' name='kCTVersionNumber10_7'/>
<enum value='327680' name='kCTVersionNumber10_8'/>
<enum value='0' name='kCTWritingDirectionEmbedding'/>
<enum value='0' name='kCTWritingDirectionLeftToRight'/>
<enum value='-1' name='kCTWritingDirectionNatural'/>
<enum value='2' name='kCTWritingDirectionOverride'/>
<enum value='1' name='kCTWritingDirectionRightToLeft'/>
<function name='CTFontCollectionCopyExclusionDescriptors'>
<arg type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef' name='collection'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCollectionCopyFontAttribute'>
<arg type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef' name='collection'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='attributeName'/>
<arg type='I' declared_type='CTFontCollectionCopyOptions' name='options'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCollectionCopyFontAttributes'>
<arg type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef' name='collection'/>
<arg type='^{__CFSet=}' declared_type='CFSetRef' name='attributeNames'/>
<arg type='I' declared_type='CTFontCollectionCopyOptions' name='options'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCollectionCopyQueryDescriptors'>
<arg type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef' name='collection'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCollectionCreateCopyWithFontDescriptors'>
<arg type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef' name='original'/>
<arg type='^{__CFArray=}' declared_type='CFArrayRef' name='queryDescriptors'/>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='options'/>
<retval already_retained='true' type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef'/>
</function>
<function name='CTFontCollectionCreateFromAvailableFonts'>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='options'/>
<retval already_retained='true' type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef'/>
</function>
<function name='CTFontCollectionCreateMatchingFontDescriptors'>
<arg type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef' name='collection'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCollectionCreateMatchingFontDescriptorsForFamily'>
<arg type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef' name='collection'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='familyName'/>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='options'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCollectionCreateMatchingFontDescriptorsSortedWithCallback'>
<arg type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef' name='collection'/>
<arg function_pointer='true' type='^?' declared_type='CTFontCollectionSortDescriptorsCallback' name='sortCallback'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef'/>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef'/>
<arg type='^v' declared_type='void*'/>
<retval type64='q' type='l' declared_type='CFComparisonResult'/>
</arg>
<arg type='^v' declared_type='void*' name='refCon'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCollectionCreateMatchingFontDescriptorsWithOptions'>
<arg type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef' name='collection'/>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='options'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCollectionCreateMutableCopy'>
<arg type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef' name='original'/>
<retval already_retained='true' type='^{__CTFontCollection=}' declared_type='CTMutableFontCollectionRef'/>
</function>
<function name='CTFontCollectionCreateWithFontDescriptors'>
<arg type='^{__CFArray=}' declared_type='CFArrayRef' name='queryDescriptors'/>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='options'/>
<retval already_retained='true' type='^{__CTFontCollection=}' declared_type='CTFontCollectionRef'/>
</function>
<function name='CTFontCollectionGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTFontCollectionSetExclusionDescriptors'>
<arg type='^{__CTFontCollection=}' declared_type='CTMutableFontCollectionRef' name='collection'/>
<arg type='^{__CFArray=}' declared_type='CFArrayRef' name='descriptors'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTFontCollectionSetQueryDescriptors'>
<arg type='^{__CTFontCollection=}' declared_type='CTMutableFontCollectionRef' name='collection'/>
<arg type='^{__CFArray=}' declared_type='CFArrayRef' name='descriptors'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTFontCopyAttribute'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='attribute'/>
<retval already_retained='true' type='@' declared_type='CFTypeRef'/>
</function>
<function name='CTFontCopyAvailableTables'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='I' declared_type='CTFontTableOptions' name='options'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCopyCharacterSet'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFCharacterSet=}' declared_type='CFCharacterSetRef'/>
</function>
<function name='CTFontCopyDisplayName'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='CTFontCopyFamilyName'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='CTFontCopyFeatureSettings'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCopyFeatures'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCopyFontDescriptor'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef'/>
</function>
<function name='CTFontCopyFullName'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='CTFontCopyGraphicsFont'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='^^{__CTFontDescriptor}' declared_type='CTFontDescriptorRef*' name='attributes'/>
<retval already_retained='true' type='^{CGFont=}' declared_type='CGFontRef'/>
</function>
<function name='CTFontCopyLocalizedName'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='nameKey'/>
<arg type='^^{__CFString}' declared_type='CFStringRef*' name='language'/>
<retval already_retained='true' type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='CTFontCopyName'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='nameKey'/>
<retval already_retained='true' type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='CTFontCopyPostScriptName'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='CTFontCopySupportedLanguages'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCopyTable'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type64='I' type='L' declared_type='CTFontTableTag' name='table'/>
<arg type='I' declared_type='CTFontTableOptions' name='options'/>
<retval already_retained='true' type='^{__CFData=}' declared_type='CFDataRef'/>
</function>
<function name='CTFontCopyTraits'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
</function>
<function name='CTFontCopyVariation'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
</function>
<function name='CTFontCopyVariationAxes'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontCreateCopyWithAttributes'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<arg const='true' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='matrix'/>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='attributes'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreateCopyWithFamily'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<arg const='true' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='matrix'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='family'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreateCopyWithSymbolicTraits'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<arg const='true' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='matrix'/>
<arg type='I' declared_type='CTFontSymbolicTraits' name='symTraitValue'/>
<arg type='I' declared_type='CTFontSymbolicTraits' name='symTraitMask'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreateForString'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='currentFont'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='string'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='range'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreatePathForGlyph'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='S' declared_type='CGGlyph' name='glyph'/>
<arg const='true' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='transform'/>
<retval already_retained='true' type='^{CGPath=}' declared_type='CGPathRef'/>
</function>
<function name='CTFontCreateUIFontForLanguage'>
<arg type='I' declared_type='CTFontUIFontType' name='uiType'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='language'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreateWithFontDescriptor'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='descriptor'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<arg const='true' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='matrix'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreateWithFontDescriptorAndOptions'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='descriptor'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<arg const='true' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='matrix'/>
<arg type64='Q' type='L' declared_type='CTFontOptions' name='options'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreateWithGraphicsFont'>
<arg type='^{CGFont=}' declared_type='CGFontRef' name='graphicsFont'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<arg const='true' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='matrix'/>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='attributes'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreateWithName'>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='name'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<arg const='true' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='matrix'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreateWithNameAndOptions'>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='name'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<arg const='true' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='matrix'/>
<arg type64='Q' type='L' declared_type='CTFontOptions' name='options'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreateWithPlatformFont'>
<arg type64='I' type='L' declared_type='ATSFontRef' name='platformFont'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<arg const='true' type64='^{CGAffineTransform=dddddd}' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*' name='matrix'/>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='attributes'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontCreateWithQuickdrawInstance'>
<arg type='*' declared_type='ConstStr255Param' name='name'/>
<arg type='s' declared_type='int16_t' name='identifier'/>
<arg type='C' declared_type='uint8_t' name='style'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<retval already_retained='true' type='^{__CTFont=}' declared_type='CTFontRef'/>
</function>
<function name='CTFontDescriptorCopyAttribute'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='descriptor'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='attribute'/>
<retval already_retained='true' type='@' declared_type='CFTypeRef'/>
</function>
<function name='CTFontDescriptorCopyAttributes'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='descriptor'/>
<retval already_retained='true' type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
</function>
<function name='CTFontDescriptorCopyLocalizedAttribute'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='descriptor'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='attribute'/>
<arg type='^^{__CFString}' declared_type='CFStringRef*' name='language'/>
<retval already_retained='true' type='@' declared_type='CFTypeRef'/>
</function>
<function name='CTFontDescriptorCreateCopyWithAttributes'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='original'/>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='attributes'/>
<retval already_retained='true' type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef'/>
</function>
<function name='CTFontDescriptorCreateCopyWithFeature'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='original'/>
<arg type='^{__CFNumber=}' declared_type='CFNumberRef' name='featureTypeIdentifier'/>
<arg type='^{__CFNumber=}' declared_type='CFNumberRef' name='featureSelectorIdentifier'/>
<retval already_retained='true' type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef'/>
</function>
<function name='CTFontDescriptorCreateCopyWithVariation'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='original'/>
<arg type='^{__CFNumber=}' declared_type='CFNumberRef' name='variationIdentifier'/>
<arg type64='d' type='f' declared_type='CGFloat' name='variationValue'/>
<retval already_retained='true' type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef'/>
</function>
<function name='CTFontDescriptorCreateMatchingFontDescriptor'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='descriptor'/>
<arg type='^{__CFSet=}' declared_type='CFSetRef' name='mandatoryAttributes'/>
<retval already_retained='true' type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef'/>
</function>
<function name='CTFontDescriptorCreateMatchingFontDescriptors'>
<arg type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef' name='descriptor'/>
<arg type='^{__CFSet=}' declared_type='CFSetRef' name='mandatoryAttributes'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontDescriptorCreateWithAttributes'>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='attributes'/>
<retval already_retained='true' type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef'/>
</function>
<function name='CTFontDescriptorCreateWithNameAndSize'>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='name'/>
<arg type64='d' type='f' declared_type='CGFloat' name='size'/>
<retval already_retained='true' type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef'/>
</function>
<function name='CTFontDescriptorGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTFontDrawGlyphs'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg const='true' type='^S' declared_type='CGGlyph*' name='glyphs'/>
<arg const='true' type64='^{CGPoint=dd}' type='^{CGPoint=ff}' declared_type='CGPoint*' name='positions'/>
<arg type64='Q' type='L' declared_type='size_t' name='count'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTFontGetAdvancesForGlyphs'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='I' declared_type='CTFontOrientation' name='orientation'/>
<arg const='true' type='^S' declared_type='CGGlyph*' name='glyphs'/>
<arg type64='^{CGSize=dd}' type='^{CGSize=ff}' declared_type='CGSize*' name='advances'/>
<arg type64='q' type='l' declared_type='CFIndex' name='count'/>
<retval type='d' declared_type='double'/>
</function>
<function name='CTFontGetAscent'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='CTFontGetBoundingBox'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='CTFontGetBoundingRectsForGlyphs'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='I' declared_type='CTFontOrientation' name='orientation'/>
<arg const='true' type='^S' declared_type='CGGlyph*' name='glyphs'/>
<arg type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect*' name='boundingRects'/>
<arg type64='q' type='l' declared_type='CFIndex' name='count'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='CTFontGetCapHeight'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='CTFontGetDescent'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='CTFontGetGlyphCount'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='q' type='l' declared_type='CFIndex'/>
</function>
<function name='CTFontGetGlyphWithName'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='glyphName'/>
<retval type='S' declared_type='CGGlyph'/>
</function>
<function name='CTFontGetGlyphsForCharacters'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg const='true' type='^S' declared_type='UniChar*' name='characters'/>
<arg type='^S' declared_type='CGGlyph*' name='glyphs'/>
<arg type64='q' type='l' declared_type='CFIndex' name='count'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='CTFontGetLeading'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='CTFontGetLigatureCaretPositions'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='S' declared_type='CGGlyph' name='glyph'/>
<arg type64='^d' type='^f' declared_type='CGFloat*' name='positions'/>
<arg type64='q' type='l' declared_type='CFIndex' name='maxPositions'/>
<retval type64='q' type='l' declared_type='CFIndex'/>
</function>
<function name='CTFontGetMatrix'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='{CGAffineTransform=dddddd}' type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</function>
<function name='CTFontGetOpticalBoundsForGlyphs'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg const='true' type='^S' declared_type='CGGlyph*' name='glyphs'/>
<arg type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect*' name='boundingRects'/>
<arg type64='q' type='l' declared_type='CFIndex' name='count'/>
<arg type64='Q' type='L' declared_type='CFOptionFlags' name='options'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='CTFontGetPlatformFont'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='^^{__CTFontDescriptor}' declared_type='CTFontDescriptorRef*' name='attributes'/>
<retval type64='I' type='L' declared_type='ATSFontRef'/>
</function>
<function name='CTFontGetSize'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='CTFontGetSlantAngle'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='CTFontGetStringEncoding'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='I' type='L' declared_type='CFStringEncoding'/>
</function>
<function name='CTFontGetSymbolicTraits'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type='I' declared_type='CTFontSymbolicTraits'/>
</function>
<function name='CTFontGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTFontGetUnderlinePosition'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='CTFontGetUnderlineThickness'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='CTFontGetUnitsPerEm'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function name='CTFontGetVerticalTranslationsForGlyphs'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg const='true' type='^S' declared_type='CGGlyph*' name='glyphs'/>
<arg type64='^{CGSize=dd}' type='^{CGSize=ff}' declared_type='CGSize*' name='translations'/>
<arg type64='q' type='l' declared_type='CFIndex' name='count'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTFontGetXHeight'>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='CTFontManagerCompareFontFamilyNames'>
<arg const='true' type='^v' declared_type='void*' name='family1'/>
<arg const='true' type='^v' declared_type='void*' name='family2'/>
<arg type='^v' declared_type='void*' name='context'/>
<retval type64='q' type='l' declared_type='CFComparisonResult'/>
</function>
<function name='CTFontManagerCopyAvailableFontFamilyNames'>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontManagerCopyAvailableFontURLs'>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontManagerCopyAvailablePostScriptNames'>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontManagerCreateFontDescriptorFromData'>
<arg type='^{__CFData=}' declared_type='CFDataRef' name='data'/>
<retval already_retained='true' type='^{__CTFontDescriptor=}' declared_type='CTFontDescriptorRef'/>
</function>
<function name='CTFontManagerCreateFontDescriptorsFromURL'>
<arg type='^{__CFURL=}' declared_type='CFURLRef' name='fileURL'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFontManagerCreateFontRequestRunLoopSource'>
<arg type64='q' type='l' declared_type='CFIndex' name='sourceOrder'/>
<arg function_pointer='true' type='@?' declared_type='CFArrayRef (^)(CFDictionaryRef, pid_t)' name='createMatchesCallback'>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
<arg type='i' declared_type='pid_t'/>
<retval type='^{__CFArray=}' declared_type='CFArrayRef'/>
</arg>
<retval already_retained='true' type='^{__CFRunLoopSource=}' declared_type='CFRunLoopSourceRef'/>
</function>
<function name='CTFontManagerEnableFontDescriptors'>
<arg type='^{__CFArray=}' declared_type='CFArrayRef' name='descriptors'/>
<arg type='B' declared_type='_Bool' name='enable'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTFontManagerGetAutoActivationSetting'>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='bundleIdentifier'/>
<retval type='I' declared_type='CTFontManagerAutoActivationSetting'/>
</function>
<function name='CTFontManagerGetScopeForURL'>
<arg type='^{__CFURL=}' declared_type='CFURLRef' name='fontURL'/>
<retval type='I' declared_type='CTFontManagerScope'/>
</function>
<function name='CTFontManagerIsSupportedFont'>
<arg type='^{__CFURL=}' declared_type='CFURLRef' name='fontURL'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='CTFontManagerRegisterFontsForURL'>
<arg type='^{__CFURL=}' declared_type='CFURLRef' name='fontURL'/>
<arg type='I' declared_type='CTFontManagerScope' name='scope'/>
<arg type='^^{__CFError}' declared_type='CFErrorRef*' name='error'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='CTFontManagerRegisterFontsForURLs'>
<arg type='^{__CFArray=}' declared_type='CFArrayRef' name='fontURLs'/>
<arg type='I' declared_type='CTFontManagerScope' name='scope'/>
<arg type='^^{__CFArray}' declared_type='CFArrayRef*' name='errors'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='CTFontManagerRegisterGraphicsFont'>
<arg type='^{CGFont=}' declared_type='CGFontRef' name='font'/>
<arg type='^^{__CFError}' declared_type='CFErrorRef*' name='error'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='CTFontManagerSetAutoActivationSetting'>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='bundleIdentifier'/>
<arg type='I' declared_type='CTFontManagerAutoActivationSetting' name='setting'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTFontManagerUnregisterFontsForURL'>
<arg type='^{__CFURL=}' declared_type='CFURLRef' name='fontURL'/>
<arg type='I' declared_type='CTFontManagerScope' name='scope'/>
<arg type='^^{__CFError}' declared_type='CFErrorRef*' name='error'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='CTFontManagerUnregisterFontsForURLs'>
<arg type='^{__CFArray=}' declared_type='CFArrayRef' name='fontURLs'/>
<arg type='I' declared_type='CTFontManagerScope' name='scope'/>
<arg type='^^{__CFArray}' declared_type='CFArrayRef*' name='errors'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='CTFontManagerUnregisterGraphicsFont'>
<arg type='^{CGFont=}' declared_type='CGFontRef' name='font'/>
<arg type='^^{__CFError}' declared_type='CFErrorRef*' name='error'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='CTFrameDraw'>
<arg type='^{__CTFrame=}' declared_type='CTFrameRef' name='frame'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTFrameGetFrameAttributes'>
<arg type='^{__CTFrame=}' declared_type='CTFrameRef' name='frame'/>
<retval type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
</function>
<function name='CTFrameGetLineOrigins'>
<arg type='^{__CTFrame=}' declared_type='CTFrameRef' name='frame'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='range'/>
<arg type64='^{CGPoint=dd}' type='^{CGPoint=ff}' declared_type='CGPoint*' name='origins'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTFrameGetLines'>
<arg type='^{__CTFrame=}' declared_type='CTFrameRef' name='frame'/>
<retval type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTFrameGetPath'>
<arg type='^{__CTFrame=}' declared_type='CTFrameRef' name='frame'/>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</function>
<function name='CTFrameGetStringRange'>
<arg type='^{__CTFrame=}' declared_type='CTFrameRef' name='frame'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange'/>
</function>
<function name='CTFrameGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTFrameGetVisibleStringRange'>
<arg type='^{__CTFrame=}' declared_type='CTFrameRef' name='frame'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange'/>
</function>
<function name='CTFramesetterCreateFrame'>
<arg type='^{__CTFramesetter=}' declared_type='CTFramesetterRef' name='framesetter'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='stringRange'/>
<arg type='^{CGPath=}' declared_type='CGPathRef' name='path'/>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='frameAttributes'/>
<retval already_retained='true' type='^{__CTFrame=}' declared_type='CTFrameRef'/>
</function>
<function name='CTFramesetterCreateWithAttributedString'>
<arg type='^{__CFAttributedString=}' declared_type='CFAttributedStringRef' name='string'/>
<retval already_retained='true' type='^{__CTFramesetter=}' declared_type='CTFramesetterRef'/>
</function>
<function name='CTFramesetterGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTFramesetterGetTypesetter'>
<arg type='^{__CTFramesetter=}' declared_type='CTFramesetterRef' name='framesetter'/>
<retval type='^{__CTTypesetter=}' declared_type='CTTypesetterRef'/>
</function>
<function name='CTFramesetterSuggestFrameSizeWithConstraints'>
<arg type='^{__CTFramesetter=}' declared_type='CTFramesetterRef' name='framesetter'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='stringRange'/>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='frameAttributes'/>
<arg type64='{CGSize=dd}' type='{CGSize=ff}' declared_type='CGSize' name='constraints'/>
<arg type64='^{_CFRange=qq}' type='^{_CFRange=ii}' declared_type='CFRange*' name='fitRange'/>
<retval type64='{CGSize=dd}' type='{CGSize=ff}' declared_type='CGSize'/>
</function>
<function name='CTGetCoreTextVersion'>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='CTGlyphInfoCreateWithCharacterIdentifier'>
<arg type='S' declared_type='CGFontIndex' name='cid'/>
<arg type='S' declared_type='CTCharacterCollection' name='collection'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='baseString'/>
<retval already_retained='true' type='^{__CTGlyphInfo=}' declared_type='CTGlyphInfoRef'/>
</function>
<function name='CTGlyphInfoCreateWithGlyph'>
<arg type='S' declared_type='CGGlyph' name='glyph'/>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='baseString'/>
<retval already_retained='true' type='^{__CTGlyphInfo=}' declared_type='CTGlyphInfoRef'/>
</function>
<function name='CTGlyphInfoCreateWithGlyphName'>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='glyphName'/>
<arg type='^{__CTFont=}' declared_type='CTFontRef' name='font'/>
<arg type='^{__CFString=}' declared_type='CFStringRef' name='baseString'/>
<retval already_retained='true' type='^{__CTGlyphInfo=}' declared_type='CTGlyphInfoRef'/>
</function>
<function name='CTGlyphInfoGetCharacterCollection'>
<arg type='^{__CTGlyphInfo=}' declared_type='CTGlyphInfoRef' name='glyphInfo'/>
<retval type='S' declared_type='CTCharacterCollection'/>
</function>
<function name='CTGlyphInfoGetCharacterIdentifier'>
<arg type='^{__CTGlyphInfo=}' declared_type='CTGlyphInfoRef' name='glyphInfo'/>
<retval type='S' declared_type='CGFontIndex'/>
</function>
<function name='CTGlyphInfoGetGlyphName'>
<arg type='^{__CTGlyphInfo=}' declared_type='CTGlyphInfoRef' name='glyphInfo'/>
<retval type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='CTGlyphInfoGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTLineCreateJustifiedLine'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<arg type64='d' type='f' declared_type='CGFloat' name='justificationFactor'/>
<arg type='d' declared_type='double' name='justificationWidth'/>
<retval already_retained='true' type='^{__CTLine=}' declared_type='CTLineRef'/>
</function>
<function name='CTLineCreateTruncatedLine'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<arg type='d' declared_type='double' name='width'/>
<arg type='I' declared_type='CTLineTruncationType' name='truncationType'/>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='truncationToken'/>
<retval already_retained='true' type='^{__CTLine=}' declared_type='CTLineRef'/>
</function>
<function name='CTLineCreateWithAttributedString'>
<arg type='^{__CFAttributedString=}' declared_type='CFAttributedStringRef' name='string'/>
<retval already_retained='true' type='^{__CTLine=}' declared_type='CTLineRef'/>
</function>
<function name='CTLineDraw'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTLineGetBoundsWithOptions'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<arg type64='Q' type='L' declared_type='CTLineBoundsOptions' name='options'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='CTLineGetGlyphCount'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<retval type64='q' type='l' declared_type='CFIndex'/>
</function>
<function name='CTLineGetGlyphRuns'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<retval type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='CTLineGetImageBounds'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='CTLineGetOffsetForStringIndex'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<arg type64='q' type='l' declared_type='CFIndex' name='charIndex'/>
<arg type64='^d' type='^f' declared_type='CGFloat*' name='secondaryOffset'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='CTLineGetPenOffsetForFlush'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<arg type64='d' type='f' declared_type='CGFloat' name='flushFactor'/>
<arg type='d' declared_type='double' name='flushWidth'/>
<retval type='d' declared_type='double'/>
</function>
<function name='CTLineGetStringIndexForPosition'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<arg type64='{CGPoint=dd}' type='{CGPoint=ff}' declared_type='CGPoint' name='position'/>
<retval type64='q' type='l' declared_type='CFIndex'/>
</function>
<function name='CTLineGetStringRange'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange'/>
</function>
<function name='CTLineGetTrailingWhitespaceWidth'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<retval type='d' declared_type='double'/>
</function>
<function name='CTLineGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTLineGetTypographicBounds'>
<arg type='^{__CTLine=}' declared_type='CTLineRef' name='line'/>
<arg type64='^d' type='^f' declared_type='CGFloat*' name='ascent'/>
<arg type64='^d' type='^f' declared_type='CGFloat*' name='descent'/>
<arg type64='^d' type='^f' declared_type='CGFloat*' name='leading'/>
<retval type='d' declared_type='double'/>
</function>
<function name='CTParagraphStyleCreate'>
<arg const='true' type64='^{CTParagraphStyleSetting=IQ^v}' type='^{CTParagraphStyleSetting=II^v}' declared_type='CTParagraphStyleSetting*' name='settings'/>
<arg type64='Q' type='L' declared_type='size_t' name='settingCount'/>
<retval already_retained='true' type='^{__CTParagraphStyle=}' declared_type='CTParagraphStyleRef'/>
</function>
<function name='CTParagraphStyleCreateCopy'>
<arg type='^{__CTParagraphStyle=}' declared_type='CTParagraphStyleRef' name='paragraphStyle'/>
<retval already_retained='true' type='^{__CTParagraphStyle=}' declared_type='CTParagraphStyleRef'/>
</function>
<function name='CTParagraphStyleGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTParagraphStyleGetValueForSpecifier'>
<arg type='^{__CTParagraphStyle=}' declared_type='CTParagraphStyleRef' name='paragraphStyle'/>
<arg type='I' declared_type='CTParagraphStyleSpecifier' name='spec'/>
<arg type64='Q' type='L' declared_type='size_t' name='valueBufferSize'/>
<arg type='^v' declared_type='void*' name='valueBuffer'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='CTRunDraw'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='range'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTRunGetAdvances'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='range'/>
<arg type64='^{CGSize=dd}' type='^{CGSize=ff}' declared_type='CGSize*' name='buffer'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTRunGetAdvancesPtr'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<retval const='true' type64='^{CGSize=dd}' type='^{CGSize=ff}' declared_type='CGSize*'/>
</function>
<function name='CTRunGetAttributes'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<retval type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
</function>
<function name='CTRunGetGlyphCount'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<retval type64='q' type='l' declared_type='CFIndex'/>
</function>
<function name='CTRunGetGlyphs'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='range'/>
<arg type='^S' declared_type='CGGlyph*' name='buffer'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTRunGetGlyphsPtr'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<retval const='true' type='^S' declared_type='CGGlyph*'/>
</function>
<function name='CTRunGetImageBounds'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='range'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='CTRunGetPositions'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='range'/>
<arg type64='^{CGPoint=dd}' type='^{CGPoint=ff}' declared_type='CGPoint*' name='buffer'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTRunGetPositionsPtr'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<retval const='true' type64='^{CGPoint=dd}' type='^{CGPoint=ff}' declared_type='CGPoint*'/>
</function>
<function name='CTRunGetStatus'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<retval type='I' declared_type='CTRunStatus'/>
</function>
<function name='CTRunGetStringIndices'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='range'/>
<arg type64='^q' type='^i' declared_type='CFIndex*' name='buffer'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CTRunGetStringIndicesPtr'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<retval const='true' type64='^q' type='^i' declared_type='CFIndex*'/>
</function>
<function name='CTRunGetStringRange'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<retval type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange'/>
</function>
<function name='CTRunGetTextMatrix'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<retval type64='{CGAffineTransform=dddddd}' type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</function>
<function name='CTRunGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTRunGetTypographicBounds'>
<arg type='^{__CTRun=}' declared_type='CTRunRef' name='run'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='range'/>
<arg type64='^d' type='^f' declared_type='CGFloat*' name='ascent'/>
<arg type64='^d' type='^f' declared_type='CGFloat*' name='descent'/>
<arg type64='^d' type='^f' declared_type='CGFloat*' name='leading'/>
<retval type='d' declared_type='double'/>
</function>
<function name='CTTextTabCreate'>
<arg type='C' declared_type='CTTextAlignment' name='alignment'/>
<arg type='d' declared_type='double' name='location'/>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='options'/>
<retval already_retained='true' type='^{__CTTextTab=}' declared_type='CTTextTabRef'/>
</function>
<function name='CTTextTabGetAlignment'>
<arg type='^{__CTTextTab=}' declared_type='CTTextTabRef' name='tab'/>
<retval type='C' declared_type='CTTextAlignment'/>
</function>
<function name='CTTextTabGetLocation'>
<arg type='^{__CTTextTab=}' declared_type='CTTextTabRef' name='tab'/>
<retval type='d' declared_type='double'/>
</function>
<function name='CTTextTabGetOptions'>
<arg type='^{__CTTextTab=}' declared_type='CTTextTabRef' name='tab'/>
<retval type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
</function>
<function name='CTTextTabGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTTypesetterCreateLine'>
<arg type='^{__CTTypesetter=}' declared_type='CTTypesetterRef' name='typesetter'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='stringRange'/>
<retval already_retained='true' type='^{__CTLine=}' declared_type='CTLineRef'/>
</function>
<function name='CTTypesetterCreateLineWithOffset'>
<arg type='^{__CTTypesetter=}' declared_type='CTTypesetterRef' name='typesetter'/>
<arg type64='{_CFRange=qq}' type='{_CFRange=ii}' declared_type='CFRange' name='stringRange'/>
<arg type='d' declared_type='double' name='offset'/>
<retval already_retained='true' type='^{__CTLine=}' declared_type='CTLineRef'/>
</function>
<function name='CTTypesetterCreateWithAttributedString'>
<arg type='^{__CFAttributedString=}' declared_type='CFAttributedStringRef' name='string'/>
<retval already_retained='true' type='^{__CTTypesetter=}' declared_type='CTTypesetterRef'/>
</function>
<function name='CTTypesetterCreateWithAttributedStringAndOptions'>
<arg type='^{__CFAttributedString=}' declared_type='CFAttributedStringRef' name='string'/>
<arg type='^{__CFDictionary=}' declared_type='CFDictionaryRef' name='options'/>
<retval already_retained='true' type='^{__CTTypesetter=}' declared_type='CTTypesetterRef'/>
</function>
<function name='CTTypesetterGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CTTypesetterSuggestClusterBreak'>
<arg type='^{__CTTypesetter=}' declared_type='CTTypesetterRef' name='typesetter'/>
<arg type64='q' type='l' declared_type='CFIndex' name='startIndex'/>
<arg type='d' declared_type='double' name='width'/>
<retval type64='q' type='l' declared_type='CFIndex'/>
</function>
<function name='CTTypesetterSuggestClusterBreakWithOffset'>
<arg type='^{__CTTypesetter=}' declared_type='CTTypesetterRef' name='typesetter'/>
<arg type64='q' type='l' declared_type='CFIndex' name='startIndex'/>
<arg type='d' declared_type='double' name='width'/>
<arg type='d' declared_type='double' name='offset'/>
<retval type64='q' type='l' declared_type='CFIndex'/>
</function>
<function name='CTTypesetterSuggestLineBreak'>
<arg type='^{__CTTypesetter=}' declared_type='CTTypesetterRef' name='typesetter'/>
<arg type64='q' type='l' declared_type='CFIndex' name='startIndex'/>
<arg type='d' declared_type='double' name='width'/>
<retval type64='q' type='l' declared_type='CFIndex'/>
</function>
<function name='CTTypesetterSuggestLineBreakWithOffset'>
<arg type='^{__CTTypesetter=}' declared_type='CTTypesetterRef' name='typesetter'/>
<arg type64='q' type='l' declared_type='CFIndex' name='startIndex'/>
<arg type='d' declared_type='double' name='width'/>
<arg type='d' declared_type='double' name='offset'/>
<retval type64='q' type='l' declared_type='CFIndex'/>
</function>
</signatures>
