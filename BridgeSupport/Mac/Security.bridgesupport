<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct type='{AuthorizationCallbacks=&quot;version&quot;I&quot;SetResult&quot;^?&quot;RequestInterrupt&quot;^?&quot;DidDeactivate&quot;^?&quot;GetContextValue&quot;^?&quot;SetContextValue&quot;^?&quot;GetHintValue&quot;^?&quot;SetHintValue&quot;^?&quot;GetArguments&quot;^?&quot;GetSessionId&quot;^?}' name='AuthorizationCallbacks'>
<field type64='I' type='L' name='version' declared_type='UInt32'/>
<field function_pointer='true' type='^?' name='SetResult' declared_type='OSStatus (*)(AuthorizationEngineRef, AuthorizationResult)'>
<arg type='^{__OpaqueAuthorizationEngine=}' declared_type='AuthorizationEngineRef'/>
<arg type64='I' type='L' declared_type='AuthorizationResult'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='RequestInterrupt' declared_type='OSStatus (*)(AuthorizationEngineRef)'>
<arg type='^{__OpaqueAuthorizationEngine=}' declared_type='AuthorizationEngineRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='DidDeactivate' declared_type='OSStatus (*)(AuthorizationEngineRef)'>
<arg type='^{__OpaqueAuthorizationEngine=}' declared_type='AuthorizationEngineRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='GetContextValue' declared_type='OSStatus (*)(AuthorizationEngineRef, AuthorizationString, AuthorizationContextFlags *, AuthorizationValue **)'>
<arg type='^{__OpaqueAuthorizationEngine=}' declared_type='AuthorizationEngineRef'/>
<arg type='*' declared_type='AuthorizationString'/>
<arg type='^I' declared_type='AuthorizationContextFlags*'/>
<arg type='^^{AuthorizationValue}' const='true' declared_type='AuthorizationValue**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='SetContextValue' declared_type='OSStatus (*)(AuthorizationEngineRef, AuthorizationString, AuthorizationContextFlags, AuthorizationValue *)'>
<arg type='^{__OpaqueAuthorizationEngine=}' declared_type='AuthorizationEngineRef'/>
<arg type='*' declared_type='AuthorizationString'/>
<arg type64='I' type='L' declared_type='AuthorizationContextFlags'/>
<arg type64='^{AuthorizationValue=Q^v}' type='^{AuthorizationValue=I^v}' const='true' declared_type='AuthorizationValue*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='GetHintValue' declared_type='OSStatus (*)(AuthorizationEngineRef, AuthorizationString, AuthorizationValue **)'>
<arg type='^{__OpaqueAuthorizationEngine=}' declared_type='AuthorizationEngineRef'/>
<arg type='*' declared_type='AuthorizationString'/>
<arg type='^^{AuthorizationValue}' const='true' declared_type='AuthorizationValue**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='SetHintValue' declared_type='OSStatus (*)(AuthorizationEngineRef, AuthorizationString, AuthorizationValue *)'>
<arg type='^{__OpaqueAuthorizationEngine=}' declared_type='AuthorizationEngineRef'/>
<arg type='*' declared_type='AuthorizationString'/>
<arg type64='^{AuthorizationValue=Q^v}' type='^{AuthorizationValue=I^v}' const='true' declared_type='AuthorizationValue*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='GetArguments' declared_type='OSStatus (*)(AuthorizationEngineRef, AuthorizationValueVector **)'>
<arg type='^{__OpaqueAuthorizationEngine=}' declared_type='AuthorizationEngineRef'/>
<arg type='^^{AuthorizationValueVector}' const='true' declared_type='AuthorizationValueVector**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='GetSessionId' declared_type='OSStatus (*)(AuthorizationEngineRef, AuthorizationSessionId *)'>
<arg type='^{__OpaqueAuthorizationEngine=}' declared_type='AuthorizationEngineRef'/>
<arg type='^^v' declared_type='AuthorizationSessionId*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
</struct>
<struct type64='{_AuthorizationEnvironment=&quot;count&quot;I&quot;items&quot;^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;Q&quot;value&quot;^v&quot;flags&quot;I}}' type='{_AuthorizationEnvironment=&quot;count&quot;I&quot;items&quot;^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;I&quot;value&quot;^v&quot;flags&quot;I}}' name='AuthorizationEnvironment'>
<field type64='I' type='L' name='count' declared_type='UInt32'/>
<field type64='^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;Q&quot;value&quot;^v&quot;flags&quot;I}' type='^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;I&quot;value&quot;^v&quot;flags&quot;I}' name='items' declared_type='AuthorizationItem*'/>
</struct>
<struct type='{_AuthorizationExternalForm=&quot;bytes&quot;[32c]}' name='AuthorizationExternalForm'>
<field type='[32c]' name='bytes' declared_type='char*'/>
</struct>
<struct type64='{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;Q&quot;value&quot;^v&quot;flags&quot;I}' type='{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;I&quot;value&quot;^v&quot;flags&quot;I}' name='AuthorizationItem'>
<field type='*' name='name' declared_type='AuthorizationString'/>
<field type64='Q' type='L' name='valueLength' declared_type='size_t'/>
<field type='^v' name='value' declared_type='void*'/>
<field type64='I' type='L' name='flags' declared_type='UInt32'/>
</struct>
<struct type64='{_AuthorizationItemSet=&quot;count&quot;I&quot;items&quot;^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;Q&quot;value&quot;^v&quot;flags&quot;I}}' type='{_AuthorizationItemSet=&quot;count&quot;I&quot;items&quot;^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;I&quot;value&quot;^v&quot;flags&quot;I}}' name='AuthorizationItemSet'>
<field type64='I' type='L' name='count' declared_type='UInt32'/>
<field type64='^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;Q&quot;value&quot;^v&quot;flags&quot;I}' type='^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;I&quot;value&quot;^v&quot;flags&quot;I}' name='items' declared_type='AuthorizationItem*'/>
</struct>
<struct type='{AuthorizationPluginInterface=&quot;version&quot;I&quot;PluginDestroy&quot;^?&quot;MechanismCreate&quot;^?&quot;MechanismInvoke&quot;^?&quot;MechanismDeactivate&quot;^?&quot;MechanismDestroy&quot;^?}' name='AuthorizationPluginInterface'>
<field type64='I' type='L' name='version' declared_type='UInt32'/>
<field function_pointer='true' type='^?' name='PluginDestroy' declared_type='OSStatus (*)(AuthorizationPluginRef)'>
<arg type='@' declared_type='AuthorizationPluginRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='MechanismCreate' declared_type='OSStatus (*)(AuthorizationPluginRef, AuthorizationEngineRef, AuthorizationMechanismId, AuthorizationMechanismRef *)'>
<arg type='@' declared_type='AuthorizationPluginRef'/>
<arg type='^{__OpaqueAuthorizationEngine=}' declared_type='AuthorizationEngineRef'/>
<arg type='*' declared_type='AuthorizationMechanismId'/>
<arg type='^^v' declared_type='AuthorizationMechanismRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='MechanismInvoke' declared_type='OSStatus (*)(AuthorizationMechanismRef)'>
<arg type='@' declared_type='AuthorizationMechanismRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='MechanismDeactivate' declared_type='OSStatus (*)(AuthorizationMechanismRef)'>
<arg type='@' declared_type='AuthorizationMechanismRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field function_pointer='true' type='^?' name='MechanismDestroy' declared_type='OSStatus (*)(AuthorizationMechanismRef)'>
<arg type='@' declared_type='AuthorizationMechanismRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
</struct>
<struct type64='{_AuthorizationRights=&quot;count&quot;I&quot;items&quot;^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;Q&quot;value&quot;^v&quot;flags&quot;I}}' type='{_AuthorizationRights=&quot;count&quot;I&quot;items&quot;^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;I&quot;value&quot;^v&quot;flags&quot;I}}' name='AuthorizationRights'>
<field type64='I' type='L' name='count' declared_type='UInt32'/>
<field type64='^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;Q&quot;value&quot;^v&quot;flags&quot;I}' type='^{_AuthorizationItem=&quot;name&quot;*&quot;valueLength&quot;I&quot;value&quot;^v&quot;flags&quot;I}' name='items' declared_type='AuthorizationItem*'/>
</struct>
<struct type64='{AuthorizationValue=&quot;length&quot;Q&quot;data&quot;^v}' type='{AuthorizationValue=&quot;length&quot;I&quot;data&quot;^v}' name='AuthorizationValue'>
<field type64='Q' type='L' name='length' declared_type='size_t'/>
<field type='^v' name='data' declared_type='void*'/>
</struct>
<struct type='{AuthorizationValueVector=&quot;count&quot;I&quot;values&quot;^{AuthorizationValue}}' name='AuthorizationValueVector'>
<field type64='I' type='L' name='count' declared_type='UInt32'/>
<field type64='^{AuthorizationValue=Q^v}' type='^{AuthorizationValue=I^v}' name='values' declared_type='AuthorizationValue*'/>
</struct>
<struct type64='{__CE_AccessDescription=&quot;accessMethod&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;accessLocation&quot;{__CE_GeneralName=&quot;nameType&quot;i&quot;berEncoded&quot;i&quot;name&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{__CE_AccessDescription=&quot;accessMethod&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;accessLocation&quot;{__CE_GeneralName=&quot;nameType&quot;i&quot;berEncoded&quot;i&quot;name&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='CE_AccessDescription'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='accessMethod' declared_type='CSSM_OID'/>
<field type64='{__CE_GeneralName=&quot;nameType&quot;i&quot;berEncoded&quot;i&quot;name&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{__CE_GeneralName=&quot;nameType&quot;i&quot;berEncoded&quot;i&quot;name&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='accessLocation' declared_type='CE_GeneralName'/>
</struct>
<struct type='{__CE_AuthorityInfoAccess=&quot;numAccessDescriptions&quot;I&quot;accessDescriptions&quot;^{__CE_AccessDescription}}' name='CE_AuthorityInfoAccess'>
<field type='I' name='numAccessDescriptions' declared_type='uint32'/>
<field type64='^{__CE_AccessDescription={cssm_data=Q*}{__CE_GeneralName=ii{cssm_data=Q*}}}' type='^{__CE_AccessDescription={cssm_data=I*}{__CE_GeneralName=ii{cssm_data=I*}}}' name='accessDescriptions' declared_type='CE_AccessDescription*'/>
</struct>
<struct type64='{__CE_AuthorityKeyID=&quot;keyIdentifierPresent&quot;i&quot;keyIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;generalNamesPresent&quot;i&quot;generalNames&quot;^{__CE_GeneralNames}&quot;serialNumberPresent&quot;i&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{__CE_AuthorityKeyID=&quot;keyIdentifierPresent&quot;i&quot;keyIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;generalNamesPresent&quot;i&quot;generalNames&quot;^{__CE_GeneralNames}&quot;serialNumberPresent&quot;i&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CE_AuthorityKeyID'>
<field type='i' name='keyIdentifierPresent' declared_type='CSSM_BOOL'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='keyIdentifier' declared_type='CSSM_DATA'/>
<field type='i' name='generalNamesPresent' declared_type='CSSM_BOOL'/>
<field type='^{__CE_GeneralNames=I^{__CE_GeneralName}}' name='generalNames' declared_type='CE_GeneralNames*'/>
<field type='i' name='serialNumberPresent' declared_type='CSSM_BOOL'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='serialNumber' declared_type='CSSM_DATA'/>
</struct>
<struct type='{__CE_BasicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}' name='CE_BasicConstraints'>
<field type='i' name='cA' declared_type='CSSM_BOOL'/>
<field type='i' name='pathLenConstraintPresent' declared_type='CSSM_BOOL'/>
<field type='I' name='pathLenConstraint' declared_type='uint32'/>
</struct>
<struct type='{__CE_CRLDistPointsSyntax=&quot;numDistPoints&quot;I&quot;distPoints&quot;^{__CE_CRLDistributionPoint}}' name='CE_CRLDistPointsSyntax'>
<field type='I' name='numDistPoints' declared_type='uint32'/>
<field type='^{__CE_CRLDistributionPoint=^{__CE_DistributionPointName}iC^{__CE_GeneralNames}}' name='distPoints' declared_type='CE_CRLDistributionPoint*'/>
</struct>
<struct type='{__CE_CRLDistributionPoint=&quot;distPointName&quot;^{__CE_DistributionPointName}&quot;reasonsPresent&quot;i&quot;reasons&quot;C&quot;crlIssuer&quot;^{__CE_GeneralNames}}' name='CE_CRLDistributionPoint'>
<field type='^{__CE_DistributionPointName=i(?=^{__CE_GeneralNames}^{cssm_x509_rdn})}' name='distPointName' declared_type='CE_DistributionPointName*'/>
<field type='i' name='reasonsPresent' declared_type='CSSM_BOOL'/>
<field type='C' name='reasons' declared_type='CE_CrlDistReasonFlags'/>
<field type='^{__CE_GeneralNames=I^{__CE_GeneralName}}' name='crlIssuer' declared_type='CE_GeneralNames*'/>
</struct>
<struct type='{__CE_CertPolicies=&quot;numPolicies&quot;I&quot;policies&quot;^{__CE_PolicyInformation}}' name='CE_CertPolicies'>
<field type='I' name='numPolicies' declared_type='uint32'/>
<field type64='^{__CE_PolicyInformation={cssm_data=Q*}I^{__CE_PolicyQualifierInfo}}' type='^{__CE_PolicyInformation={cssm_data=I*}I^{__CE_PolicyQualifierInfo}}' name='policies' declared_type='CE_PolicyInformation*'/>
</struct>
<struct type64='{__CE_DataAndType=&quot;type&quot;i&quot;extension&quot;(?=&quot;authorityKeyID&quot;{__CE_AuthorityKeyID=&quot;keyIdentifierPresent&quot;i&quot;keyIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;generalNamesPresent&quot;i&quot;generalNames&quot;^{__CE_GeneralNames}&quot;serialNumberPresent&quot;i&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectKeyID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;keyUsage&quot;S&quot;subjectAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;issuerAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;extendedKeyUsage&quot;{__CE_ExtendedKeyUsage=&quot;numPurposes&quot;I&quot;purposes&quot;^{cssm_data}}&quot;basicConstraints&quot;{__CE_BasicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}&quot;certPolicies&quot;{__CE_CertPolicies=&quot;numPolicies&quot;I&quot;policies&quot;^{__CE_PolicyInformation}}&quot;netscapeCertType&quot;S&quot;crlNumber&quot;I&quot;deltaCrl&quot;I&quot;crlReason&quot;I&quot;crlDistPoints&quot;{__CE_CRLDistPointsSyntax=&quot;numDistPoints&quot;I&quot;distPoints&quot;^{__CE_CRLDistributionPoint}}&quot;issuingDistPoint&quot;{__CE_IssuingDistributionPoint=&quot;distPointName&quot;^{__CE_DistributionPointName}&quot;onlyUserCertsPresent&quot;i&quot;onlyUserCerts&quot;i&quot;onlyCACertsPresent&quot;i&quot;onlyCACerts&quot;i&quot;onlySomeReasonsPresent&quot;i&quot;onlySomeReasons&quot;C&quot;indirectCrlPresent&quot;i&quot;indirectCrl&quot;i}&quot;authorityInfoAccess&quot;{__CE_AuthorityInfoAccess=&quot;numAccessDescriptions&quot;I&quot;accessDescriptions&quot;^{__CE_AccessDescription}}&quot;qualifiedCertStatements&quot;{__CE_QC_Statements=&quot;numQCStatements&quot;I&quot;qcStatements&quot;^{__CE_QC_Statement}}&quot;nameConstraints&quot;{__CE_NameConstraints=&quot;permitted&quot;^{__CE_GeneralSubtrees}&quot;excluded&quot;^{__CE_GeneralSubtrees}}&quot;policyMappings&quot;{__CE_PolicyMappings=&quot;numPolicyMappings&quot;I&quot;policyMappings&quot;^{__CE_PolicyMapping}}&quot;policyConstraints&quot;{__CE_PolicyConstraints=&quot;requireExplicitPolicyPresent&quot;i&quot;requireExplicitPolicy&quot;I&quot;inhibitPolicyMappingPresent&quot;i&quot;inhibitPolicyMapping&quot;I}&quot;inhibitAnyPolicy&quot;I&quot;rawData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*})&quot;critical&quot;i}' type='{__CE_DataAndType=&quot;type&quot;i&quot;extension&quot;(?=&quot;authorityKeyID&quot;{__CE_AuthorityKeyID=&quot;keyIdentifierPresent&quot;i&quot;keyIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;generalNamesPresent&quot;i&quot;generalNames&quot;^{__CE_GeneralNames}&quot;serialNumberPresent&quot;i&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectKeyID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;keyUsage&quot;S&quot;subjectAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;issuerAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;extendedKeyUsage&quot;{__CE_ExtendedKeyUsage=&quot;numPurposes&quot;I&quot;purposes&quot;^{cssm_data}}&quot;basicConstraints&quot;{__CE_BasicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}&quot;certPolicies&quot;{__CE_CertPolicies=&quot;numPolicies&quot;I&quot;policies&quot;^{__CE_PolicyInformation}}&quot;netscapeCertType&quot;S&quot;crlNumber&quot;I&quot;deltaCrl&quot;I&quot;crlReason&quot;I&quot;crlDistPoints&quot;{__CE_CRLDistPointsSyntax=&quot;numDistPoints&quot;I&quot;distPoints&quot;^{__CE_CRLDistributionPoint}}&quot;issuingDistPoint&quot;{__CE_IssuingDistributionPoint=&quot;distPointName&quot;^{__CE_DistributionPointName}&quot;onlyUserCertsPresent&quot;i&quot;onlyUserCerts&quot;i&quot;onlyCACertsPresent&quot;i&quot;onlyCACerts&quot;i&quot;onlySomeReasonsPresent&quot;i&quot;onlySomeReasons&quot;C&quot;indirectCrlPresent&quot;i&quot;indirectCrl&quot;i}&quot;authorityInfoAccess&quot;{__CE_AuthorityInfoAccess=&quot;numAccessDescriptions&quot;I&quot;accessDescriptions&quot;^{__CE_AccessDescription}}&quot;qualifiedCertStatements&quot;{__CE_QC_Statements=&quot;numQCStatements&quot;I&quot;qcStatements&quot;^{__CE_QC_Statement}}&quot;nameConstraints&quot;{__CE_NameConstraints=&quot;permitted&quot;^{__CE_GeneralSubtrees}&quot;excluded&quot;^{__CE_GeneralSubtrees}}&quot;policyMappings&quot;{__CE_PolicyMappings=&quot;numPolicyMappings&quot;I&quot;policyMappings&quot;^{__CE_PolicyMapping}}&quot;policyConstraints&quot;{__CE_PolicyConstraints=&quot;requireExplicitPolicyPresent&quot;i&quot;requireExplicitPolicy&quot;I&quot;inhibitPolicyMappingPresent&quot;i&quot;inhibitPolicyMapping&quot;I}&quot;inhibitAnyPolicy&quot;I&quot;rawData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*})&quot;critical&quot;i}' name='CE_DataAndType'>
<field type='i' name='type' declared_type='CE_DataType'/>
<field type64='(?=&quot;authorityKeyID&quot;{__CE_AuthorityKeyID=&quot;keyIdentifierPresent&quot;i&quot;keyIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;generalNamesPresent&quot;i&quot;generalNames&quot;^{__CE_GeneralNames}&quot;serialNumberPresent&quot;i&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectKeyID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;keyUsage&quot;S&quot;subjectAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;issuerAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;extendedKeyUsage&quot;{__CE_ExtendedKeyUsage=&quot;numPurposes&quot;I&quot;purposes&quot;^{cssm_data}}&quot;basicConstraints&quot;{__CE_BasicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}&quot;certPolicies&quot;{__CE_CertPolicies=&quot;numPolicies&quot;I&quot;policies&quot;^{__CE_PolicyInformation}}&quot;netscapeCertType&quot;S&quot;crlNumber&quot;I&quot;deltaCrl&quot;I&quot;crlReason&quot;I&quot;crlDistPoints&quot;{__CE_CRLDistPointsSyntax=&quot;numDistPoints&quot;I&quot;distPoints&quot;^{__CE_CRLDistributionPoint}}&quot;issuingDistPoint&quot;{__CE_IssuingDistributionPoint=&quot;distPointName&quot;^{__CE_DistributionPointName}&quot;onlyUserCertsPresent&quot;i&quot;onlyUserCerts&quot;i&quot;onlyCACertsPresent&quot;i&quot;onlyCACerts&quot;i&quot;onlySomeReasonsPresent&quot;i&quot;onlySomeReasons&quot;C&quot;indirectCrlPresent&quot;i&quot;indirectCrl&quot;i}&quot;authorityInfoAccess&quot;{__CE_AuthorityInfoAccess=&quot;numAccessDescriptions&quot;I&quot;accessDescriptions&quot;^{__CE_AccessDescription}}&quot;qualifiedCertStatements&quot;{__CE_QC_Statements=&quot;numQCStatements&quot;I&quot;qcStatements&quot;^{__CE_QC_Statement}}&quot;nameConstraints&quot;{__CE_NameConstraints=&quot;permitted&quot;^{__CE_GeneralSubtrees}&quot;excluded&quot;^{__CE_GeneralSubtrees}}&quot;policyMappings&quot;{__CE_PolicyMappings=&quot;numPolicyMappings&quot;I&quot;policyMappings&quot;^{__CE_PolicyMapping}}&quot;policyConstraints&quot;{__CE_PolicyConstraints=&quot;requireExplicitPolicyPresent&quot;i&quot;requireExplicitPolicy&quot;I&quot;inhibitPolicyMappingPresent&quot;i&quot;inhibitPolicyMapping&quot;I}&quot;inhibitAnyPolicy&quot;I&quot;rawData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*})' type='(?=&quot;authorityKeyID&quot;{__CE_AuthorityKeyID=&quot;keyIdentifierPresent&quot;i&quot;keyIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;generalNamesPresent&quot;i&quot;generalNames&quot;^{__CE_GeneralNames}&quot;serialNumberPresent&quot;i&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectKeyID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;keyUsage&quot;S&quot;subjectAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;issuerAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;extendedKeyUsage&quot;{__CE_ExtendedKeyUsage=&quot;numPurposes&quot;I&quot;purposes&quot;^{cssm_data}}&quot;basicConstraints&quot;{__CE_BasicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}&quot;certPolicies&quot;{__CE_CertPolicies=&quot;numPolicies&quot;I&quot;policies&quot;^{__CE_PolicyInformation}}&quot;netscapeCertType&quot;S&quot;crlNumber&quot;I&quot;deltaCrl&quot;I&quot;crlReason&quot;I&quot;crlDistPoints&quot;{__CE_CRLDistPointsSyntax=&quot;numDistPoints&quot;I&quot;distPoints&quot;^{__CE_CRLDistributionPoint}}&quot;issuingDistPoint&quot;{__CE_IssuingDistributionPoint=&quot;distPointName&quot;^{__CE_DistributionPointName}&quot;onlyUserCertsPresent&quot;i&quot;onlyUserCerts&quot;i&quot;onlyCACertsPresent&quot;i&quot;onlyCACerts&quot;i&quot;onlySomeReasonsPresent&quot;i&quot;onlySomeReasons&quot;C&quot;indirectCrlPresent&quot;i&quot;indirectCrl&quot;i}&quot;authorityInfoAccess&quot;{__CE_AuthorityInfoAccess=&quot;numAccessDescriptions&quot;I&quot;accessDescriptions&quot;^{__CE_AccessDescription}}&quot;qualifiedCertStatements&quot;{__CE_QC_Statements=&quot;numQCStatements&quot;I&quot;qcStatements&quot;^{__CE_QC_Statement}}&quot;nameConstraints&quot;{__CE_NameConstraints=&quot;permitted&quot;^{__CE_GeneralSubtrees}&quot;excluded&quot;^{__CE_GeneralSubtrees}}&quot;policyMappings&quot;{__CE_PolicyMappings=&quot;numPolicyMappings&quot;I&quot;policyMappings&quot;^{__CE_PolicyMapping}}&quot;policyConstraints&quot;{__CE_PolicyConstraints=&quot;requireExplicitPolicyPresent&quot;i&quot;requireExplicitPolicy&quot;I&quot;inhibitPolicyMappingPresent&quot;i&quot;inhibitPolicyMapping&quot;I}&quot;inhibitAnyPolicy&quot;I&quot;rawData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*})' name='extension' declared_type='CE_Data'/>
<field type='i' name='critical' declared_type='CSSM_BOOL'/>
</struct>
<struct type='{__CE_DistributionPointName=&quot;nameType&quot;i&quot;dpn&quot;(?=&quot;fullName&quot;^{__CE_GeneralNames}&quot;rdn&quot;^{cssm_x509_rdn})}' name='CE_DistributionPointName'>
<field type='i' name='nameType' declared_type='CE_CrlDistributionPointNameType'/>
<field type='(?=&quot;fullName&quot;^{__CE_GeneralNames}&quot;rdn&quot;^{cssm_x509_rdn})' name='dpn' declared_type='union __CE_DistributionPointName::'/>
</struct>
<struct type='{__CE_ExtendedKeyUsage=&quot;numPurposes&quot;I&quot;purposes&quot;^{cssm_data}}' name='CE_ExtendedKeyUsage'>
<field type='I' name='numPurposes' declared_type='uint32'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='purposes' declared_type='CSSM_OID_PTR'/>
</struct>
<struct type64='{__CE_GeneralName=&quot;nameType&quot;i&quot;berEncoded&quot;i&quot;name&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{__CE_GeneralName=&quot;nameType&quot;i&quot;berEncoded&quot;i&quot;name&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CE_GeneralName'>
<field type='i' name='nameType' declared_type='CE_GeneralNameType'/>
<field type='i' name='berEncoded' declared_type='CSSM_BOOL'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='name' declared_type='CSSM_DATA'/>
</struct>
<struct type='{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}' name='CE_GeneralNames'>
<field type='I' name='numNames' declared_type='uint32'/>
<field type64='^{__CE_GeneralName=ii{cssm_data=Q*}}' type='^{__CE_GeneralName=ii{cssm_data=I*}}' name='generalName' declared_type='CE_GeneralName*'/>
</struct>
<struct type='{__CE_GeneralSubtree=&quot;base&quot;^{__CE_GeneralNames}&quot;minimum&quot;I&quot;maximumPresent&quot;i&quot;maximum&quot;I}' name='CE_GeneralSubtree'>
<field type='^{__CE_GeneralNames=I^{__CE_GeneralName}}' name='base' declared_type='CE_GeneralNames*'/>
<field type='I' name='minimum' declared_type='uint32'/>
<field type='i' name='maximumPresent' declared_type='CSSM_BOOL'/>
<field type='I' name='maximum' declared_type='uint32'/>
</struct>
<struct type='{__CE_GeneralSubtrees=&quot;numSubtrees&quot;I&quot;subtrees&quot;^{__CE_GeneralSubtree}}' name='CE_GeneralSubtrees'>
<field type='I' name='numSubtrees' declared_type='uint32'/>
<field type='^{__CE_GeneralSubtree=^{__CE_GeneralNames}IiI}' name='subtrees' declared_type='CE_GeneralSubtree*'/>
</struct>
<struct type='{__CE_IssuingDistributionPoint=&quot;distPointName&quot;^{__CE_DistributionPointName}&quot;onlyUserCertsPresent&quot;i&quot;onlyUserCerts&quot;i&quot;onlyCACertsPresent&quot;i&quot;onlyCACerts&quot;i&quot;onlySomeReasonsPresent&quot;i&quot;onlySomeReasons&quot;C&quot;indirectCrlPresent&quot;i&quot;indirectCrl&quot;i}' name='CE_IssuingDistributionPoint'>
<field type='^{__CE_DistributionPointName=i(?=^{__CE_GeneralNames}^{cssm_x509_rdn})}' name='distPointName' declared_type='CE_DistributionPointName*'/>
<field type='i' name='onlyUserCertsPresent' declared_type='CSSM_BOOL'/>
<field type='i' name='onlyUserCerts' declared_type='CSSM_BOOL'/>
<field type='i' name='onlyCACertsPresent' declared_type='CSSM_BOOL'/>
<field type='i' name='onlyCACerts' declared_type='CSSM_BOOL'/>
<field type='i' name='onlySomeReasonsPresent' declared_type='CSSM_BOOL'/>
<field type='C' name='onlySomeReasons' declared_type='CE_CrlDistReasonFlags'/>
<field type='i' name='indirectCrlPresent' declared_type='CSSM_BOOL'/>
<field type='i' name='indirectCrl' declared_type='CSSM_BOOL'/>
</struct>
<struct type='{__CE_NameConstraints=&quot;permitted&quot;^{__CE_GeneralSubtrees}&quot;excluded&quot;^{__CE_GeneralSubtrees}}' name='CE_NameConstraints'>
<field type='^{__CE_GeneralSubtrees=I^{__CE_GeneralSubtree}}' name='permitted' declared_type='CE_GeneralSubtrees*'/>
<field type='^{__CE_GeneralSubtrees=I^{__CE_GeneralSubtree}}' name='excluded' declared_type='CE_GeneralSubtrees*'/>
</struct>
<struct type='{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}' name='CE_NameRegistrationAuthorities'>
<field type='I' name='numNames' declared_type='uint32'/>
<field type64='^{__CE_GeneralName=ii{cssm_data=Q*}}' type='^{__CE_GeneralName=ii{cssm_data=I*}}' name='generalName' declared_type='CE_GeneralName*'/>
</struct>
<struct type64='{__CE_OtherName=&quot;typeId&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{__CE_OtherName=&quot;typeId&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CE_OtherName'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='typeId' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='value' declared_type='CSSM_DATA'/>
</struct>
<struct type='{__CE_PolicyConstraints=&quot;requireExplicitPolicyPresent&quot;i&quot;requireExplicitPolicy&quot;I&quot;inhibitPolicyMappingPresent&quot;i&quot;inhibitPolicyMapping&quot;I}' name='CE_PolicyConstraints'>
<field type='i' name='requireExplicitPolicyPresent' declared_type='CSSM_BOOL'/>
<field type='I' name='requireExplicitPolicy' declared_type='uint32'/>
<field type='i' name='inhibitPolicyMappingPresent' declared_type='CSSM_BOOL'/>
<field type='I' name='inhibitPolicyMapping' declared_type='uint32'/>
</struct>
<struct type64='{__CE_PolicyInformation=&quot;certPolicyId&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;numPolicyQualifiers&quot;I&quot;policyQualifiers&quot;^{__CE_PolicyQualifierInfo}}' type='{__CE_PolicyInformation=&quot;certPolicyId&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;numPolicyQualifiers&quot;I&quot;policyQualifiers&quot;^{__CE_PolicyQualifierInfo}}' name='CE_PolicyInformation'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='certPolicyId' declared_type='CSSM_OID'/>
<field type='I' name='numPolicyQualifiers' declared_type='uint32'/>
<field type64='^{__CE_PolicyQualifierInfo={cssm_data=Q*}{cssm_data=Q*}}' type='^{__CE_PolicyQualifierInfo={cssm_data=I*}{cssm_data=I*}}' name='policyQualifiers' declared_type='CE_PolicyQualifierInfo*'/>
</struct>
<struct type64='{__CE_PolicyMapping=&quot;issuerDomainPolicy&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;subjectDomainPolicy&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{__CE_PolicyMapping=&quot;issuerDomainPolicy&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;subjectDomainPolicy&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CE_PolicyMapping'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='issuerDomainPolicy' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='subjectDomainPolicy' declared_type='CSSM_OID'/>
</struct>
<struct type='{__CE_PolicyMappings=&quot;numPolicyMappings&quot;I&quot;policyMappings&quot;^{__CE_PolicyMapping}}' name='CE_PolicyMappings'>
<field type='I' name='numPolicyMappings' declared_type='uint32'/>
<field type64='^{__CE_PolicyMapping={cssm_data=Q*}{cssm_data=Q*}}' type='^{__CE_PolicyMapping={cssm_data=I*}{cssm_data=I*}}' name='policyMappings' declared_type='CE_PolicyMapping*'/>
</struct>
<struct type64='{__CE_PolicyQualifierInfo=&quot;policyQualifierId&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;qualifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{__CE_PolicyQualifierInfo=&quot;policyQualifierId&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;qualifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CE_PolicyQualifierInfo'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='policyQualifierId' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='qualifier' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{__CE_QC_Statement=&quot;statementId&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;semanticsInfo&quot;^{__CE_SemanticsInformation}&quot;otherInfo&quot;^{cssm_data}}' type='{__CE_QC_Statement=&quot;statementId&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;semanticsInfo&quot;^{__CE_SemanticsInformation}&quot;otherInfo&quot;^{cssm_data}}' name='CE_QC_Statement'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='statementId' declared_type='CSSM_OID'/>
<field type='^{__CE_SemanticsInformation=^{cssm_data}^{__CE_GeneralNames}}' name='semanticsInfo' declared_type='CE_SemanticsInformation*'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='otherInfo' declared_type='CSSM_DATA*'/>
</struct>
<struct type='{__CE_QC_Statements=&quot;numQCStatements&quot;I&quot;qcStatements&quot;^{__CE_QC_Statement}}' name='CE_QC_Statements'>
<field type='I' name='numQCStatements' declared_type='uint32'/>
<field type64='^{__CE_QC_Statement={cssm_data=Q*}^{__CE_SemanticsInformation}^{cssm_data}}' type='^{__CE_QC_Statement={cssm_data=I*}^{__CE_SemanticsInformation}^{cssm_data}}' name='qcStatements' declared_type='CE_QC_Statement*'/>
</struct>
<struct type='{__CE_SemanticsInformation=&quot;semanticsIdentifier&quot;^{cssm_data}&quot;nameRegistrationAuthorities&quot;^{__CE_GeneralNames}}' name='CE_SemanticsInformation'>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='semanticsIdentifier' declared_type='CSSM_OID*'/>
<field type='^{__CE_GeneralNames=I^{__CE_GeneralName}}' name='nameRegistrationAuthorities' declared_type='CE_NameRegistrationAuthorities*'/>
</struct>
<struct type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='CE_SubjectKeyID'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' declared_type='uint8*'/>
</struct>
<struct type64='{cssm_access_credentials=&quot;EntryTag&quot;[68c]&quot;BaseCerts&quot;{cssm_base_certs=&quot;TPHandle&quot;q&quot;CLHandle&quot;q&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}&quot;Samples&quot;{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' type='{cssm_access_credentials=&quot;EntryTag&quot;[68c]&quot;BaseCerts&quot;{cssm_base_certs=&quot;TPHandle&quot;i&quot;CLHandle&quot;i&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}&quot;Samples&quot;{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' name='CSSM_ACCESS_CREDENTIALS'>
<field type='[68c]' name='EntryTag' declared_type='CSSM_STRING'/>
<field type64='{cssm_base_certs=&quot;TPHandle&quot;q&quot;CLHandle&quot;q&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' type='{cssm_base_certs=&quot;TPHandle&quot;i&quot;CLHandle&quot;i&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' name='BaseCerts' declared_type='CSSM_BASE_CERTS'/>
<field type='{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}' name='Samples' declared_type='CSSM_SAMPLEGROUP'/>
<field function_pointer='true' type='^?' name='Callback' declared_type='CSSM_CHALLENGE_CALLBACK'>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_samplegroup=I^{cssm_sample}}' declared_type='CSSM_SAMPLEGROUP_PTR'/>
<arg type='^v' declared_type='void*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' const='true' declared_type='CSSM_MEMORY_FUNCS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='^v' name='CallerCtx' declared_type='void*'/>
</struct>
<struct type64='{cssm_access_credentials=&quot;EntryTag&quot;[68c]&quot;BaseCerts&quot;{cssm_base_certs=&quot;TPHandle&quot;q&quot;CLHandle&quot;q&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}&quot;Samples&quot;{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' type='{cssm_access_credentials=&quot;EntryTag&quot;[68c]&quot;BaseCerts&quot;{cssm_base_certs=&quot;TPHandle&quot;i&quot;CLHandle&quot;i&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}&quot;Samples&quot;{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' name='CSSM_ACCESS_CREDENTIALS_PTR'>
<field type='[68c]' name='EntryTag' declared_type='CSSM_STRING'/>
<field type64='{cssm_base_certs=&quot;TPHandle&quot;q&quot;CLHandle&quot;q&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' type='{cssm_base_certs=&quot;TPHandle&quot;i&quot;CLHandle&quot;i&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' name='BaseCerts' declared_type='CSSM_BASE_CERTS'/>
<field type='{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}' name='Samples' declared_type='CSSM_SAMPLEGROUP'/>
<field function_pointer='true' type='^?' name='Callback' declared_type='CSSM_CHALLENGE_CALLBACK'>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_samplegroup=I^{cssm_sample}}' declared_type='CSSM_SAMPLEGROUP_PTR'/>
<arg type='^v' declared_type='void*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' const='true' declared_type='CSSM_MEMORY_FUNCS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='^v' name='CallerCtx' declared_type='void*'/>
</struct>
<struct type64='{cssm_acl_edit=&quot;EditMode&quot;I&quot;OldEntryHandle&quot;q&quot;NewEntry&quot;^{cssm_acl_entry_input}}' type='{cssm_acl_edit=&quot;EditMode&quot;I&quot;OldEntryHandle&quot;i&quot;NewEntry&quot;^{cssm_acl_entry_input}}' name='CSSM_ACL_EDIT'>
<field type='I' name='EditMode' declared_type='CSSM_ACL_EDIT_MODE'/>
<field type64='q' type='l' name='OldEntryHandle' declared_type='CSSM_ACL_HANDLE'/>
<field type64='^{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}' type='^{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}' name='NewEntry' const='true' declared_type='CSSM_ACL_ENTRY_INPUT*'/>
</struct>
<struct type64='{cssm_acl_edit=&quot;EditMode&quot;I&quot;OldEntryHandle&quot;q&quot;NewEntry&quot;^{cssm_acl_entry_input}}' type='{cssm_acl_edit=&quot;EditMode&quot;I&quot;OldEntryHandle&quot;i&quot;NewEntry&quot;^{cssm_acl_entry_input}}' name='CSSM_ACL_EDIT_PTR'>
<field type='I' name='EditMode' declared_type='CSSM_ACL_EDIT_MODE'/>
<field type64='q' type='l' name='OldEntryHandle' declared_type='CSSM_ACL_HANDLE'/>
<field type64='^{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}' type='^{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}' name='NewEntry' const='true' declared_type='CSSM_ACL_ENTRY_INPUT*'/>
</struct>
<struct type64='{cssm_acl_entry_info=&quot;EntryPublicInfo&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;EntryHandle&quot;q}' type='{cssm_acl_entry_info=&quot;EntryPublicInfo&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;EntryHandle&quot;i}' name='CSSM_ACL_ENTRY_INFO'>
<field type64='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' type='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' name='EntryPublicInfo' declared_type='CSSM_ACL_ENTRY_PROTOTYPE'/>
<field type64='q' type='l' name='EntryHandle' declared_type='CSSM_ACL_HANDLE'/>
</struct>
<struct type64='{cssm_acl_entry_info=&quot;EntryPublicInfo&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;EntryHandle&quot;q}' type='{cssm_acl_entry_info=&quot;EntryPublicInfo&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;EntryHandle&quot;i}' name='CSSM_ACL_ENTRY_INFO_PTR'>
<field type64='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' type='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' name='EntryPublicInfo' declared_type='CSSM_ACL_ENTRY_PROTOTYPE'/>
<field type64='q' type='l' name='EntryHandle' declared_type='CSSM_ACL_HANDLE'/>
</struct>
<struct type64='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' type='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' name='CSSM_ACL_ENTRY_INPUT'>
<field type64='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' type='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' name='Prototype' declared_type='CSSM_ACL_ENTRY_PROTOTYPE'/>
<field function_pointer='true' type='^?' name='Callback' declared_type='CSSM_ACL_SUBJECT_CALLBACK'>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' declared_type='CSSM_LIST_PTR'/>
<arg type='^v' declared_type='void*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' const='true' declared_type='CSSM_MEMORY_FUNCS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='^v' name='CallerContext' declared_type='void*'/>
</struct>
<struct type64='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' type='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' name='CSSM_ACL_ENTRY_INPUT_PTR'>
<field type64='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' type='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' name='Prototype' declared_type='CSSM_ACL_ENTRY_PROTOTYPE'/>
<field function_pointer='true' type='^?' name='Callback' declared_type='CSSM_ACL_SUBJECT_CALLBACK'>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' declared_type='CSSM_LIST_PTR'/>
<arg type='^v' declared_type='void*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' const='true' declared_type='CSSM_MEMORY_FUNCS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='^v' name='CallerContext' declared_type='void*'/>
</struct>
<struct type64='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' type='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' name='CSSM_ACL_ENTRY_PROTOTYPE'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='TypedSubject' declared_type='CSSM_LIST'/>
<field type='i' name='Delegate' declared_type='CSSM_BOOL'/>
<field type='{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}' name='Authorization' declared_type='CSSM_AUTHORIZATIONGROUP'/>
<field type64='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='TimeRange' declared_type='CSSM_ACL_VALIDITY_PERIOD'/>
<field type='[68c]' name='EntryTag' declared_type='CSSM_STRING'/>
</struct>
<struct type64='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' type='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' name='CSSM_ACL_ENTRY_PROTOTYPE_PTR'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='TypedSubject' declared_type='CSSM_LIST'/>
<field type='i' name='Delegate' declared_type='CSSM_BOOL'/>
<field type='{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}' name='Authorization' declared_type='CSSM_AUTHORIZATIONGROUP'/>
<field type64='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='TimeRange' declared_type='CSSM_ACL_VALIDITY_PERIOD'/>
<field type='[68c]' name='EntryTag' declared_type='CSSM_STRING'/>
</struct>
<struct type='{cssm_acl_keychain_prompt_selector=&quot;version&quot;S&quot;flags&quot;S}' name='CSSM_ACL_KEYCHAIN_PROMPT_SELECTOR'>
<field type='S' name='version' declared_type='uint16'/>
<field type='S' name='flags' declared_type='uint16'/>
</struct>
<struct type='{cssm_acl_owner_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i}' name='CSSM_ACL_OWNER_PROTOTYPE'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='TypedSubject' declared_type='CSSM_LIST'/>
<field type='i' name='Delegate' declared_type='CSSM_BOOL'/>
</struct>
<struct type='{cssm_acl_owner_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i}' name='CSSM_ACL_OWNER_PROTOTYPE_PTR'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='TypedSubject' declared_type='CSSM_LIST'/>
<field type='i' name='Delegate' declared_type='CSSM_BOOL'/>
</struct>
<struct type='{cssm_acl_process_subject_selector=&quot;version&quot;S&quot;mask&quot;S&quot;uid&quot;I&quot;gid&quot;I}' name='CSSM_ACL_PROCESS_SUBJECT_SELECTOR'>
<field type='S' name='version' declared_type='uint16'/>
<field type='S' name='mask' declared_type='uint16'/>
<field type='I' name='uid' declared_type='uint32'/>
<field type='I' name='gid' declared_type='uint32'/>
</struct>
<struct type64='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_ACL_VALIDITY_PERIOD'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='StartDate' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='EndDate' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_ACL_VALIDITY_PERIOD_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='StartDate' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='EndDate' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_memory_funcs=&quot;malloc_func&quot;^?&quot;free_func&quot;^?&quot;realloc_func&quot;^?&quot;calloc_func&quot;^?&quot;AllocRef&quot;^v}' name='CSSM_API_MEMORY_FUNCS'>
<field function_pointer='true' type='^?' name='malloc_func' declared_type='CSSM_MALLOC'>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='free_func' declared_type='CSSM_FREE'>
<arg type='^v' declared_type='void*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' type='^?' name='realloc_func' declared_type='CSSM_REALLOC'>
<arg type='^v' declared_type='void*'/>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='calloc_func' declared_type='CSSM_CALLOC'>
<arg type='I' declared_type='uint32'/>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field type='^v' name='AllocRef' declared_type='void*'/>
</struct>
<struct type='{cssm_applecspdl_db_change_password_parameters=&quot;accessCredentials&quot;^{cssm_access_credentials}}' name='CSSM_APPLECSPDL_DB_CHANGE_PASSWORD_PARAMETERS'>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='accessCredentials' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
</struct>
<struct type='{cssm_applecspdl_db_change_password_parameters=&quot;accessCredentials&quot;^{cssm_access_credentials}}' name='CSSM_APPLECSPDL_DB_CHANGE_PASSWORD_PARAMETERS_PTR'>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='accessCredentials' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
</struct>
<struct type='{cssm_applecspdl_db_is_locked_parameters=&quot;isLocked&quot;C}' name='CSSM_APPLECSPDL_DB_IS_LOCKED_PARAMETERS'>
<field type='C' name='isLocked' declared_type='uint8'/>
</struct>
<struct type='{cssm_applecspdl_db_is_locked_parameters=&quot;isLocked&quot;C}' name='CSSM_APPLECSPDL_DB_IS_LOCKED_PARAMETERS_PTR'>
<field type='C' name='isLocked' declared_type='uint8'/>
</struct>
<struct type='{cssm_applecspdl_db_settings_parameters=&quot;idleTimeout&quot;I&quot;lockOnSleep&quot;C}' name='CSSM_APPLECSPDL_DB_SETTINGS_PARAMETERS'>
<field type='I' name='idleTimeout' declared_type='uint32'/>
<field type='C' name='lockOnSleep' declared_type='uint8'/>
</struct>
<struct type='{cssm_applecspdl_db_settings_parameters=&quot;idleTimeout&quot;I&quot;lockOnSleep&quot;C}' name='CSSM_APPLECSPDL_DB_SETTINGS_PARAMETERS_PTR'>
<field type='I' name='idleTimeout' declared_type='uint32'/>
<field type='C' name='lockOnSleep' declared_type='uint8'/>
</struct>
<struct type='{cssm_appledl_open_parameters=&quot;length&quot;I&quot;version&quot;I&quot;autoCommit&quot;i&quot;mask&quot;I&quot;mode&quot;S}' name='CSSM_APPLEDL_OPEN_PARAMETERS'>
<field type='I' name='length' declared_type='uint32'/>
<field type='I' name='version' declared_type='uint32'/>
<field type='i' name='autoCommit' declared_type='CSSM_BOOL'/>
<field type='I' name='mask' declared_type='uint32'/>
<field type='S' name='mode' declared_type='mode_t'/>
</struct>
<struct type='{cssm_appledl_open_parameters=&quot;length&quot;I&quot;version&quot;I&quot;autoCommit&quot;i&quot;mask&quot;I&quot;mode&quot;S}' name='CSSM_APPLEDL_OPEN_PARAMETERS_PTR'>
<field type='I' name='length' declared_type='uint32'/>
<field type='I' name='version' declared_type='uint32'/>
<field type='i' name='autoCommit' declared_type='CSSM_BOOL'/>
<field type='I' name='mask' declared_type='uint32'/>
<field type='S' name='mode' declared_type='mode_t'/>
</struct>
<struct type64='{_CSSM_APPLE_CL_CSR_REQUEST=&quot;subjectNameX509&quot;^{cssm_x509_name}&quot;signatureAlg&quot;I&quot;signatureOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;cspHand&quot;q&quot;subjectPublicKey&quot;^{cssm_key}&quot;subjectPrivateKey&quot;^{cssm_key}&quot;challengeString&quot;*}' type='{_CSSM_APPLE_CL_CSR_REQUEST=&quot;subjectNameX509&quot;^{cssm_x509_name}&quot;signatureAlg&quot;I&quot;signatureOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;cspHand&quot;i&quot;subjectPublicKey&quot;^{cssm_key}&quot;subjectPrivateKey&quot;^{cssm_key}&quot;challengeString&quot;*}' name='CSSM_APPLE_CL_CSR_REQUEST'>
<field type='^{cssm_x509_name=I^{cssm_x509_rdn}}' name='subjectNameX509' declared_type='CSSM_X509_NAME_PTR'/>
<field type='I' name='signatureAlg' declared_type='CSSM_ALGORITHMS'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='signatureOid' declared_type='CSSM_OID'/>
<field type64='q' type='l' name='cspHand' declared_type='CSSM_CSP_HANDLE'/>
<field type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='subjectPublicKey' const='true' declared_type='CSSM_KEY*'/>
<field type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='subjectPrivateKey' const='true' declared_type='CSSM_KEY*'/>
<field type='*' name='challengeString' const='true' declared_type='char*'/>
</struct>
<struct type='{_CSSM_APPLE_TP_ACTION_DATA=&quot;Version&quot;I&quot;ActionFlags&quot;I}' name='CSSM_APPLE_TP_ACTION_DATA'>
<field type='I' name='Version' declared_type='uint32'/>
<field type='I' name='ActionFlags' declared_type='CSSM_APPLE_TP_ACTION_FLAGS'/>
</struct>
<struct type64='{_CSSM_APPLE_TP_CERT_REQUEST=&quot;cspHand&quot;q&quot;clHand&quot;q&quot;serialNumber&quot;I&quot;numSubjectNames&quot;I&quot;subjectNames&quot;^{_CSSM_APPLE_TP_NAME_OID=&quot;string&quot;*&quot;oid&quot;^{cssm_data}}&quot;numIssuerNames&quot;I&quot;issuerNames&quot;^{_CSSM_APPLE_TP_NAME_OID=&quot;string&quot;*&quot;oid&quot;^{cssm_data}}&quot;issuerNameX509&quot;^{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;certPublicKey&quot;^{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuerPrivateKey&quot;^{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;signatureAlg&quot;I&quot;signatureOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;notBefore&quot;I&quot;notAfter&quot;I&quot;numExtensions&quot;I&quot;extensions&quot;^{__CE_DataAndType=&quot;type&quot;i&quot;extension&quot;(?=&quot;authorityKeyID&quot;{__CE_AuthorityKeyID=&quot;keyIdentifierPresent&quot;i&quot;keyIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;generalNamesPresent&quot;i&quot;generalNames&quot;^{__CE_GeneralNames}&quot;serialNumberPresent&quot;i&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectKeyID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;keyUsage&quot;S&quot;subjectAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;issuerAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;extendedKeyUsage&quot;{__CE_ExtendedKeyUsage=&quot;numPurposes&quot;I&quot;purposes&quot;^{cssm_data}}&quot;basicConstraints&quot;{__CE_BasicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}&quot;certPolicies&quot;{__CE_CertPolicies=&quot;numPolicies&quot;I&quot;policies&quot;^{__CE_PolicyInformation}}&quot;netscapeCertType&quot;S&quot;crlNumber&quot;I&quot;deltaCrl&quot;I&quot;crlReason&quot;I&quot;crlDistPoints&quot;{__CE_CRLDistPointsSyntax=&quot;numDistPoints&quot;I&quot;distPoints&quot;^{__CE_CRLDistributionPoint}}&quot;issuingDistPoint&quot;{__CE_IssuingDistributionPoint=&quot;distPointName&quot;^{__CE_DistributionPointName}&quot;onlyUserCertsPresent&quot;i&quot;onlyUserCerts&quot;i&quot;onlyCACertsPresent&quot;i&quot;onlyCACerts&quot;i&quot;onlySomeReasonsPresent&quot;i&quot;onlySomeReasons&quot;C&quot;indirectCrlPresent&quot;i&quot;indirectCrl&quot;i}&quot;authorityInfoAccess&quot;{__CE_AuthorityInfoAccess=&quot;numAccessDescriptions&quot;I&quot;accessDescriptions&quot;^{__CE_AccessDescription}}&quot;qualifiedCertStatements&quot;{__CE_QC_Statements=&quot;numQCStatements&quot;I&quot;qcStatements&quot;^{__CE_QC_Statement}}&quot;nameConstraints&quot;{__CE_NameConstraints=&quot;permitted&quot;^{__CE_GeneralSubtrees}&quot;excluded&quot;^{__CE_GeneralSubtrees}}&quot;policyMappings&quot;{__CE_PolicyMappings=&quot;numPolicyMappings&quot;I&quot;policyMappings&quot;^{__CE_PolicyMapping}}&quot;policyConstraints&quot;{__CE_PolicyConstraints=&quot;requireExplicitPolicyPresent&quot;i&quot;requireExplicitPolicy&quot;I&quot;inhibitPolicyMappingPresent&quot;i&quot;inhibitPolicyMapping&quot;I}&quot;inhibitAnyPolicy&quot;I&quot;rawData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*})&quot;critical&quot;i}&quot;challengeString&quot;*}' type='{_CSSM_APPLE_TP_CERT_REQUEST=&quot;cspHand&quot;i&quot;clHand&quot;i&quot;serialNumber&quot;I&quot;numSubjectNames&quot;I&quot;subjectNames&quot;^{_CSSM_APPLE_TP_NAME_OID=&quot;string&quot;*&quot;oid&quot;^{cssm_data}}&quot;numIssuerNames&quot;I&quot;issuerNames&quot;^{_CSSM_APPLE_TP_NAME_OID=&quot;string&quot;*&quot;oid&quot;^{cssm_data}}&quot;issuerNameX509&quot;^{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;certPublicKey&quot;^{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuerPrivateKey&quot;^{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;signatureAlg&quot;I&quot;signatureOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;notBefore&quot;I&quot;notAfter&quot;I&quot;numExtensions&quot;I&quot;extensions&quot;^{__CE_DataAndType=&quot;type&quot;i&quot;extension&quot;(?=&quot;authorityKeyID&quot;{__CE_AuthorityKeyID=&quot;keyIdentifierPresent&quot;i&quot;keyIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;generalNamesPresent&quot;i&quot;generalNames&quot;^{__CE_GeneralNames}&quot;serialNumberPresent&quot;i&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectKeyID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;keyUsage&quot;S&quot;subjectAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;issuerAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;extendedKeyUsage&quot;{__CE_ExtendedKeyUsage=&quot;numPurposes&quot;I&quot;purposes&quot;^{cssm_data}}&quot;basicConstraints&quot;{__CE_BasicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}&quot;certPolicies&quot;{__CE_CertPolicies=&quot;numPolicies&quot;I&quot;policies&quot;^{__CE_PolicyInformation}}&quot;netscapeCertType&quot;S&quot;crlNumber&quot;I&quot;deltaCrl&quot;I&quot;crlReason&quot;I&quot;crlDistPoints&quot;{__CE_CRLDistPointsSyntax=&quot;numDistPoints&quot;I&quot;distPoints&quot;^{__CE_CRLDistributionPoint}}&quot;issuingDistPoint&quot;{__CE_IssuingDistributionPoint=&quot;distPointName&quot;^{__CE_DistributionPointName}&quot;onlyUserCertsPresent&quot;i&quot;onlyUserCerts&quot;i&quot;onlyCACertsPresent&quot;i&quot;onlyCACerts&quot;i&quot;onlySomeReasonsPresent&quot;i&quot;onlySomeReasons&quot;C&quot;indirectCrlPresent&quot;i&quot;indirectCrl&quot;i}&quot;authorityInfoAccess&quot;{__CE_AuthorityInfoAccess=&quot;numAccessDescriptions&quot;I&quot;accessDescriptions&quot;^{__CE_AccessDescription}}&quot;qualifiedCertStatements&quot;{__CE_QC_Statements=&quot;numQCStatements&quot;I&quot;qcStatements&quot;^{__CE_QC_Statement}}&quot;nameConstraints&quot;{__CE_NameConstraints=&quot;permitted&quot;^{__CE_GeneralSubtrees}&quot;excluded&quot;^{__CE_GeneralSubtrees}}&quot;policyMappings&quot;{__CE_PolicyMappings=&quot;numPolicyMappings&quot;I&quot;policyMappings&quot;^{__CE_PolicyMapping}}&quot;policyConstraints&quot;{__CE_PolicyConstraints=&quot;requireExplicitPolicyPresent&quot;i&quot;requireExplicitPolicy&quot;I&quot;inhibitPolicyMappingPresent&quot;i&quot;inhibitPolicyMapping&quot;I}&quot;inhibitAnyPolicy&quot;I&quot;rawData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*})&quot;critical&quot;i}&quot;challengeString&quot;*}' name='CSSM_APPLE_TP_CERT_REQUEST'>
<field type64='q' type='l' name='cspHand' declared_type='CSSM_CSP_HANDLE'/>
<field type64='q' type='l' name='clHand' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='serialNumber' declared_type='uint32'/>
<field type='I' name='numSubjectNames' declared_type='uint32'/>
<field type='^{_CSSM_APPLE_TP_NAME_OID=&quot;string&quot;*&quot;oid&quot;^{cssm_data}}' name='subjectNames' declared_type='CSSM_APPLE_TP_NAME_OID*'/>
<field type='I' name='numIssuerNames' declared_type='uint32'/>
<field type='^{_CSSM_APPLE_TP_NAME_OID=&quot;string&quot;*&quot;oid&quot;^{cssm_data}}' name='issuerNames' declared_type='CSSM_APPLE_TP_NAME_OID*'/>
<field type='^{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='issuerNameX509' declared_type='CSSM_X509_NAME_PTR'/>
<field type64='^{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='^{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='certPublicKey' const='true' declared_type='CSSM_KEY*'/>
<field type64='^{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='^{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='issuerPrivateKey' const='true' declared_type='CSSM_KEY*'/>
<field type='I' name='signatureAlg' declared_type='CSSM_ALGORITHMS'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='signatureOid' declared_type='CSSM_OID'/>
<field type='I' name='notBefore' declared_type='uint32'/>
<field type='I' name='notAfter' declared_type='uint32'/>
<field type='I' name='numExtensions' declared_type='uint32'/>
<field type64='^{__CE_DataAndType=&quot;type&quot;i&quot;extension&quot;(?=&quot;authorityKeyID&quot;{__CE_AuthorityKeyID=&quot;keyIdentifierPresent&quot;i&quot;keyIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;generalNamesPresent&quot;i&quot;generalNames&quot;^{__CE_GeneralNames}&quot;serialNumberPresent&quot;i&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectKeyID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;keyUsage&quot;S&quot;subjectAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;issuerAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;extendedKeyUsage&quot;{__CE_ExtendedKeyUsage=&quot;numPurposes&quot;I&quot;purposes&quot;^{cssm_data}}&quot;basicConstraints&quot;{__CE_BasicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}&quot;certPolicies&quot;{__CE_CertPolicies=&quot;numPolicies&quot;I&quot;policies&quot;^{__CE_PolicyInformation}}&quot;netscapeCertType&quot;S&quot;crlNumber&quot;I&quot;deltaCrl&quot;I&quot;crlReason&quot;I&quot;crlDistPoints&quot;{__CE_CRLDistPointsSyntax=&quot;numDistPoints&quot;I&quot;distPoints&quot;^{__CE_CRLDistributionPoint}}&quot;issuingDistPoint&quot;{__CE_IssuingDistributionPoint=&quot;distPointName&quot;^{__CE_DistributionPointName}&quot;onlyUserCertsPresent&quot;i&quot;onlyUserCerts&quot;i&quot;onlyCACertsPresent&quot;i&quot;onlyCACerts&quot;i&quot;onlySomeReasonsPresent&quot;i&quot;onlySomeReasons&quot;C&quot;indirectCrlPresent&quot;i&quot;indirectCrl&quot;i}&quot;authorityInfoAccess&quot;{__CE_AuthorityInfoAccess=&quot;numAccessDescriptions&quot;I&quot;accessDescriptions&quot;^{__CE_AccessDescription}}&quot;qualifiedCertStatements&quot;{__CE_QC_Statements=&quot;numQCStatements&quot;I&quot;qcStatements&quot;^{__CE_QC_Statement}}&quot;nameConstraints&quot;{__CE_NameConstraints=&quot;permitted&quot;^{__CE_GeneralSubtrees}&quot;excluded&quot;^{__CE_GeneralSubtrees}}&quot;policyMappings&quot;{__CE_PolicyMappings=&quot;numPolicyMappings&quot;I&quot;policyMappings&quot;^{__CE_PolicyMapping}}&quot;policyConstraints&quot;{__CE_PolicyConstraints=&quot;requireExplicitPolicyPresent&quot;i&quot;requireExplicitPolicy&quot;I&quot;inhibitPolicyMappingPresent&quot;i&quot;inhibitPolicyMapping&quot;I}&quot;inhibitAnyPolicy&quot;I&quot;rawData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*})&quot;critical&quot;i}' type='^{__CE_DataAndType=&quot;type&quot;i&quot;extension&quot;(?=&quot;authorityKeyID&quot;{__CE_AuthorityKeyID=&quot;keyIdentifierPresent&quot;i&quot;keyIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;generalNamesPresent&quot;i&quot;generalNames&quot;^{__CE_GeneralNames}&quot;serialNumberPresent&quot;i&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectKeyID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;keyUsage&quot;S&quot;subjectAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;issuerAltName&quot;{__CE_GeneralNames=&quot;numNames&quot;I&quot;generalName&quot;^{__CE_GeneralName}}&quot;extendedKeyUsage&quot;{__CE_ExtendedKeyUsage=&quot;numPurposes&quot;I&quot;purposes&quot;^{cssm_data}}&quot;basicConstraints&quot;{__CE_BasicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}&quot;certPolicies&quot;{__CE_CertPolicies=&quot;numPolicies&quot;I&quot;policies&quot;^{__CE_PolicyInformation}}&quot;netscapeCertType&quot;S&quot;crlNumber&quot;I&quot;deltaCrl&quot;I&quot;crlReason&quot;I&quot;crlDistPoints&quot;{__CE_CRLDistPointsSyntax=&quot;numDistPoints&quot;I&quot;distPoints&quot;^{__CE_CRLDistributionPoint}}&quot;issuingDistPoint&quot;{__CE_IssuingDistributionPoint=&quot;distPointName&quot;^{__CE_DistributionPointName}&quot;onlyUserCertsPresent&quot;i&quot;onlyUserCerts&quot;i&quot;onlyCACertsPresent&quot;i&quot;onlyCACerts&quot;i&quot;onlySomeReasonsPresent&quot;i&quot;onlySomeReasons&quot;C&quot;indirectCrlPresent&quot;i&quot;indirectCrl&quot;i}&quot;authorityInfoAccess&quot;{__CE_AuthorityInfoAccess=&quot;numAccessDescriptions&quot;I&quot;accessDescriptions&quot;^{__CE_AccessDescription}}&quot;qualifiedCertStatements&quot;{__CE_QC_Statements=&quot;numQCStatements&quot;I&quot;qcStatements&quot;^{__CE_QC_Statement}}&quot;nameConstraints&quot;{__CE_NameConstraints=&quot;permitted&quot;^{__CE_GeneralSubtrees}&quot;excluded&quot;^{__CE_GeneralSubtrees}}&quot;policyMappings&quot;{__CE_PolicyMappings=&quot;numPolicyMappings&quot;I&quot;policyMappings&quot;^{__CE_PolicyMapping}}&quot;policyConstraints&quot;{__CE_PolicyConstraints=&quot;requireExplicitPolicyPresent&quot;i&quot;requireExplicitPolicy&quot;I&quot;inhibitPolicyMappingPresent&quot;i&quot;inhibitPolicyMapping&quot;I}&quot;inhibitAnyPolicy&quot;I&quot;rawData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*})&quot;critical&quot;i}' name='extensions' declared_type='CE_DataAndType*'/>
<field type='*' name='challengeString' const='true' declared_type='char*'/>
</struct>
<struct type='{_CSSM_APPLE_TP_CRL_OPTIONS=&quot;Version&quot;I&quot;CrlFlags&quot;I&quot;crlStore&quot;^{cssm_dl_db_handle}}' name='CSSM_APPLE_TP_CRL_OPTIONS'>
<field type='I' name='Version' declared_type='uint32'/>
<field type='I' name='CrlFlags' declared_type='CSSM_APPLE_TP_CRL_OPT_FLAGS'/>
<field type64='^{cssm_dl_db_handle=qq}' type='^{cssm_dl_db_handle=ii}' name='crlStore' declared_type='CSSM_DL_DB_HANDLE_PTR'/>
</struct>
<struct type='{_CSSM_APPLE_TP_NAME_OID=&quot;string&quot;*&quot;oid&quot;^{cssm_data}}' name='CSSM_APPLE_TP_NAME_OID'>
<field type='*' name='string' const='true' declared_type='char*'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='oid' const='true' declared_type='CSSM_OID*'/>
</struct>
<struct type='{_CSSM_APPLE_TP_SMIME_OPTIONS=&quot;Version&quot;I&quot;IntendedUsage&quot;S&quot;SenderEmailLen&quot;I&quot;SenderEmail&quot;*}' name='CSSM_APPLE_TP_SMIME_OPTIONS'>
<field type='I' name='Version' declared_type='uint32'/>
<field type='S' name='IntendedUsage' declared_type='CE_KeyUsage'/>
<field type='I' name='SenderEmailLen' declared_type='uint32'/>
<field type='*' name='SenderEmail' const='true' declared_type='char*'/>
</struct>
<struct type='{_CSSM_APPLE_TP_SSL_OPTIONS=&quot;Version&quot;I&quot;ServerNameLen&quot;I&quot;ServerName&quot;*&quot;Flags&quot;I}' name='CSSM_APPLE_TP_SSL_OPTIONS'>
<field type='I' name='Version' declared_type='uint32'/>
<field type='I' name='ServerNameLen' declared_type='uint32'/>
<field type='*' name='ServerName' const='true' declared_type='char*'/>
<field type='I' name='Flags' declared_type='uint32'/>
</struct>
<struct type='{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}' name='CSSM_AUTHORIZATIONGROUP'>
<field type='I' name='NumberOfAuthTags' declared_type='uint32'/>
<field type='^i' name='AuthTags' declared_type='CSSM_ACL_AUTHORIZATION_TAG*'/>
</struct>
<struct type='{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}' name='CSSM_AUTHORIZATIONGROUP_PTR'>
<field type='I' name='NumberOfAuthTags' declared_type='uint32'/>
<field type='^i' name='AuthTags' declared_type='CSSM_ACL_AUTHORIZATION_TAG*'/>
</struct>
<struct type64='{cssm_base_certs=&quot;TPHandle&quot;q&quot;CLHandle&quot;q&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' type='{cssm_base_certs=&quot;TPHandle&quot;i&quot;CLHandle&quot;i&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' name='CSSM_BASE_CERTS'>
<field type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}' name='Certs' declared_type='CSSM_CERTGROUP'/>
</struct>
<struct type64='{cssm_base_certs=&quot;TPHandle&quot;q&quot;CLHandle&quot;q&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' type='{cssm_base_certs=&quot;TPHandle&quot;i&quot;CLHandle&quot;i&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' name='CSSM_BASE_CERTS_PTR'>
<field type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}' name='Certs' declared_type='CSSM_CERTGROUP'/>
</struct>
<struct type='{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}' name='CSSM_CERTGROUP'>
<field type='I' name='CertType' declared_type='CSSM_CERT_TYPE'/>
<field type='I' name='CertEncoding' declared_type='CSSM_CERT_ENCODING'/>
<field type='I' name='NumCerts' declared_type='uint32'/>
<field type='(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})' name='GroupList' declared_type='union cssm_certgroup::'/>
<field type='I' name='CertGroupType' declared_type='CSSM_CERTGROUP_TYPE'/>
<field type='^v' name='Reserved' declared_type='void*'/>
</struct>
<struct type='{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}' name='CSSM_CERTGROUP_PTR'>
<field type='I' name='CertType' declared_type='CSSM_CERT_TYPE'/>
<field type='I' name='CertEncoding' declared_type='CSSM_CERT_ENCODING'/>
<field type='I' name='NumCerts' declared_type='uint32'/>
<field type='(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})' name='GroupList' declared_type='union cssm_certgroup::'/>
<field type='I' name='CertGroupType' declared_type='CSSM_CERTGROUP_TYPE'/>
<field type='^v' name='Reserved' declared_type='void*'/>
</struct>
<struct type64='{cssm_cert_bundle=&quot;BundleHeader&quot;{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}&quot;Bundle&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_cert_bundle=&quot;BundleHeader&quot;{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}&quot;Bundle&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_CERT_BUNDLE'>
<field type='{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}' name='BundleHeader' declared_type='CSSM_CERT_BUNDLE_HEADER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Bundle' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}' name='CSSM_CERT_BUNDLE_HEADER'>
<field type='I' name='BundleType' declared_type='CSSM_CERT_BUNDLE_TYPE'/>
<field type='I' name='BundleEncoding' declared_type='CSSM_CERT_BUNDLE_ENCODING'/>
</struct>
<struct type='{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}' name='CSSM_CERT_BUNDLE_HEADER_PTR'>
<field type='I' name='BundleType' declared_type='CSSM_CERT_BUNDLE_TYPE'/>
<field type='I' name='BundleEncoding' declared_type='CSSM_CERT_BUNDLE_ENCODING'/>
</struct>
<struct type64='{cssm_cert_bundle=&quot;BundleHeader&quot;{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}&quot;Bundle&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_cert_bundle=&quot;BundleHeader&quot;{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}&quot;Bundle&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_CERT_BUNDLE_PTR'>
<field type='{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}' name='BundleHeader' declared_type='CSSM_CERT_BUNDLE_HEADER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Bundle' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_cert_pair=&quot;EncodedCert&quot;{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;ParsedCert&quot;{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}}' type='{cssm_cert_pair=&quot;EncodedCert&quot;{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;ParsedCert&quot;{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}}' name='CSSM_CERT_PAIR'>
<field type64='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='EncodedCert' declared_type='CSSM_ENCODED_CERT'/>
<field type='{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}' name='ParsedCert' declared_type='CSSM_PARSED_CERT'/>
</struct>
<struct type64='{cssm_cert_pair=&quot;EncodedCert&quot;{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;ParsedCert&quot;{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}}' type='{cssm_cert_pair=&quot;EncodedCert&quot;{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;ParsedCert&quot;{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}}' name='CSSM_CERT_PAIR_PTR'>
<field type64='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='EncodedCert' declared_type='CSSM_ENCODED_CERT'/>
<field type='{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}' name='ParsedCert' declared_type='CSSM_PARSED_CERT'/>
</struct>
<struct type64='{cssm_context=&quot;ContextType&quot;I&quot;AlgorithmType&quot;I&quot;NumberOfAttributes&quot;I&quot;ContextAttributes&quot;^{cssm_context_attribute}&quot;CSPHandle&quot;q&quot;Privileged&quot;i&quot;EncryptionProhibited&quot;I&quot;WorkFactor&quot;I&quot;Reserved&quot;I}' type='{cssm_context=&quot;ContextType&quot;I&quot;AlgorithmType&quot;I&quot;NumberOfAttributes&quot;I&quot;ContextAttributes&quot;^{cssm_context_attribute}&quot;CSPHandle&quot;i&quot;Privileged&quot;i&quot;EncryptionProhibited&quot;I&quot;WorkFactor&quot;I&quot;Reserved&quot;I}' name='CSSM_CONTEXT'>
<field type='I' name='ContextType' declared_type='CSSM_CONTEXT_TYPE'/>
<field type='I' name='AlgorithmType' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='NumberOfAttributes' declared_type='uint32'/>
<field type='^{cssm_context_attribute=II(cssm_context_attribute_value=*I^{cssm_access_credentials}^{cssm_key}^{cssm_data}I^{cssm_date}^{cssm_range}^{cssm_crypto_data}^{cssm_version}^{cssm_dl_db_handle}^{cssm_kr_profile})}' name='ContextAttributes' declared_type='CSSM_CONTEXT_ATTRIBUTE_PTR'/>
<field type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<field type='i' name='Privileged' declared_type='CSSM_BOOL'/>
<field type='I' name='EncryptionProhibited' declared_type='uint32'/>
<field type='I' name='WorkFactor' declared_type='uint32'/>
<field type='I' name='Reserved' declared_type='uint32'/>
</struct>
<struct type='{cssm_context_attribute=&quot;AttributeType&quot;I&quot;AttributeLength&quot;I&quot;Attribute&quot;(cssm_context_attribute_value=&quot;String&quot;*&quot;Uint32&quot;I&quot;AccessCredentials&quot;^{cssm_access_credentials}&quot;Key&quot;^{cssm_key}&quot;Data&quot;^{cssm_data}&quot;Padding&quot;I&quot;Date&quot;^{cssm_date}&quot;Range&quot;^{cssm_range}&quot;CryptoData&quot;^{cssm_crypto_data}&quot;Version&quot;^{cssm_version}&quot;DLDBHandle&quot;^{cssm_dl_db_handle}&quot;KRProfile&quot;^{cssm_kr_profile})}' name='CSSM_CONTEXT_ATTRIBUTE'>
<field type='I' name='AttributeType' declared_type='CSSM_ATTRIBUTE_TYPE'/>
<field type='I' name='AttributeLength' declared_type='uint32'/>
<field type='(cssm_context_attribute_value=&quot;String&quot;*&quot;Uint32&quot;I&quot;AccessCredentials&quot;^{cssm_access_credentials}&quot;Key&quot;^{cssm_key}&quot;Data&quot;^{cssm_data}&quot;Padding&quot;I&quot;Date&quot;^{cssm_date}&quot;Range&quot;^{cssm_range}&quot;CryptoData&quot;^{cssm_crypto_data}&quot;Version&quot;^{cssm_version}&quot;DLDBHandle&quot;^{cssm_dl_db_handle}&quot;KRProfile&quot;^{cssm_kr_profile})' name='Attribute' declared_type='union cssm_context_attribute_value'/>
</struct>
<struct type='{cssm_context_attribute=&quot;AttributeType&quot;I&quot;AttributeLength&quot;I&quot;Attribute&quot;(cssm_context_attribute_value=&quot;String&quot;*&quot;Uint32&quot;I&quot;AccessCredentials&quot;^{cssm_access_credentials}&quot;Key&quot;^{cssm_key}&quot;Data&quot;^{cssm_data}&quot;Padding&quot;I&quot;Date&quot;^{cssm_date}&quot;Range&quot;^{cssm_range}&quot;CryptoData&quot;^{cssm_crypto_data}&quot;Version&quot;^{cssm_version}&quot;DLDBHandle&quot;^{cssm_dl_db_handle}&quot;KRProfile&quot;^{cssm_kr_profile})}' name='CSSM_CONTEXT_ATTRIBUTE_PTR'>
<field type='I' name='AttributeType' declared_type='CSSM_ATTRIBUTE_TYPE'/>
<field type='I' name='AttributeLength' declared_type='uint32'/>
<field type='(cssm_context_attribute_value=&quot;String&quot;*&quot;Uint32&quot;I&quot;AccessCredentials&quot;^{cssm_access_credentials}&quot;Key&quot;^{cssm_key}&quot;Data&quot;^{cssm_data}&quot;Padding&quot;I&quot;Date&quot;^{cssm_date}&quot;Range&quot;^{cssm_range}&quot;CryptoData&quot;^{cssm_crypto_data}&quot;Version&quot;^{cssm_version}&quot;DLDBHandle&quot;^{cssm_dl_db_handle}&quot;KRProfile&quot;^{cssm_kr_profile})' name='Attribute' declared_type='union cssm_context_attribute_value'/>
</struct>
<struct type64='{cssm_context=&quot;ContextType&quot;I&quot;AlgorithmType&quot;I&quot;NumberOfAttributes&quot;I&quot;ContextAttributes&quot;^{cssm_context_attribute}&quot;CSPHandle&quot;q&quot;Privileged&quot;i&quot;EncryptionProhibited&quot;I&quot;WorkFactor&quot;I&quot;Reserved&quot;I}' type='{cssm_context=&quot;ContextType&quot;I&quot;AlgorithmType&quot;I&quot;NumberOfAttributes&quot;I&quot;ContextAttributes&quot;^{cssm_context_attribute}&quot;CSPHandle&quot;i&quot;Privileged&quot;i&quot;EncryptionProhibited&quot;I&quot;WorkFactor&quot;I&quot;Reserved&quot;I}' name='CSSM_CONTEXT_PTR'>
<field type='I' name='ContextType' declared_type='CSSM_CONTEXT_TYPE'/>
<field type='I' name='AlgorithmType' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='NumberOfAttributes' declared_type='uint32'/>
<field type='^{cssm_context_attribute=II(cssm_context_attribute_value=*I^{cssm_access_credentials}^{cssm_key}^{cssm_data}I^{cssm_date}^{cssm_range}^{cssm_crypto_data}^{cssm_version}^{cssm_dl_db_handle}^{cssm_kr_profile})}' name='ContextAttributes' declared_type='CSSM_CONTEXT_ATTRIBUTE_PTR'/>
<field type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<field type='i' name='Privileged' declared_type='CSSM_BOOL'/>
<field type='I' name='EncryptionProhibited' declared_type='uint32'/>
<field type='I' name='WorkFactor' declared_type='uint32'/>
<field type='I' name='Reserved' declared_type='uint32'/>
</struct>
<struct type='{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}' name='CSSM_CRLGROUP'>
<field type='I' name='CrlType' declared_type='CSSM_CRL_TYPE'/>
<field type='I' name='CrlEncoding' declared_type='CSSM_CRL_ENCODING'/>
<field type='I' name='NumberOfCrls' declared_type='uint32'/>
<field type='(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})' name='GroupCrlList' declared_type='union cssm_crlgroup::'/>
<field type='I' name='CrlGroupType' declared_type='CSSM_CRLGROUP_TYPE'/>
</struct>
<struct type='{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}' name='CSSM_CRLGROUP_PTR'>
<field type='I' name='CrlType' declared_type='CSSM_CRL_TYPE'/>
<field type='I' name='CrlEncoding' declared_type='CSSM_CRL_ENCODING'/>
<field type='I' name='NumberOfCrls' declared_type='uint32'/>
<field type='(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})' name='GroupCrlList' declared_type='union cssm_crlgroup::'/>
<field type='I' name='CrlGroupType' declared_type='CSSM_CRLGROUP_TYPE'/>
</struct>
<struct type64='{cssm_crl_pair=&quot;EncodedCrl&quot;{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;ParsedCrl&quot;{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}}' type='{cssm_crl_pair=&quot;EncodedCrl&quot;{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;ParsedCrl&quot;{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}}' name='CSSM_CRL_PAIR'>
<field type64='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='EncodedCrl' declared_type='CSSM_ENCODED_CRL'/>
<field type='{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}' name='ParsedCrl' declared_type='CSSM_PARSED_CRL'/>
</struct>
<struct type64='{cssm_crl_pair=&quot;EncodedCrl&quot;{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;ParsedCrl&quot;{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}}' type='{cssm_crl_pair=&quot;EncodedCrl&quot;{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;ParsedCrl&quot;{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}}' name='CSSM_CRL_PAIR_PTR'>
<field type64='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='EncodedCrl' declared_type='CSSM_ENCODED_CRL'/>
<field type='{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}' name='ParsedCrl' declared_type='CSSM_PARSED_CRL'/>
</struct>
<struct type64='{cssm_crypto_data=&quot;Param&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' type='{cssm_crypto_data=&quot;Param&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' name='CSSM_CRYPTO_DATA'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Param' declared_type='CSSM_DATA'/>
<field function_pointer='true' type='^?' name='Callback' declared_type='CSSM_CALLBACK'>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='^v' name='CallerCtx' declared_type='void*'/>
</struct>
<struct type64='{cssm_crypto_data=&quot;Param&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' type='{cssm_crypto_data=&quot;Param&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' name='CSSM_CRYPTO_DATA_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Param' declared_type='CSSM_DATA'/>
<field function_pointer='true' type='^?' name='Callback' declared_type='CSSM_CALLBACK'>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='^v' name='CallerCtx' declared_type='void*'/>
</struct>
<struct type='{cssm_csp_operational_statistics=&quot;UserAuthenticated&quot;i&quot;DeviceFlags&quot;I&quot;TokenMaxSessionCount&quot;I&quot;TokenOpenedSessionCount&quot;I&quot;TokenMaxRWSessionCount&quot;I&quot;TokenOpenedRWSessionCount&quot;I&quot;TokenTotalPublicMem&quot;I&quot;TokenFreePublicMem&quot;I&quot;TokenTotalPrivateMem&quot;I&quot;TokenFreePrivateMem&quot;I}' name='CSSM_CSP_OPERATIONAL_STATISTICS'>
<field type='i' name='UserAuthenticated' declared_type='CSSM_BOOL'/>
<field type='I' name='DeviceFlags' declared_type='CSSM_CSP_FLAGS'/>
<field type='I' name='TokenMaxSessionCount' declared_type='uint32'/>
<field type='I' name='TokenOpenedSessionCount' declared_type='uint32'/>
<field type='I' name='TokenMaxRWSessionCount' declared_type='uint32'/>
<field type='I' name='TokenOpenedRWSessionCount' declared_type='uint32'/>
<field type='I' name='TokenTotalPublicMem' declared_type='uint32'/>
<field type='I' name='TokenFreePublicMem' declared_type='uint32'/>
<field type='I' name='TokenTotalPrivateMem' declared_type='uint32'/>
<field type='I' name='TokenFreePrivateMem' declared_type='uint32'/>
</struct>
<struct type='{cssm_csp_operational_statistics=&quot;UserAuthenticated&quot;i&quot;DeviceFlags&quot;I&quot;TokenMaxSessionCount&quot;I&quot;TokenOpenedSessionCount&quot;I&quot;TokenMaxRWSessionCount&quot;I&quot;TokenOpenedRWSessionCount&quot;I&quot;TokenTotalPublicMem&quot;I&quot;TokenFreePublicMem&quot;I&quot;TokenTotalPrivateMem&quot;I&quot;TokenFreePrivateMem&quot;I}' name='CSSM_CSP_OPERATIONAL_STATISTICS_PTR'>
<field type='i' name='UserAuthenticated' declared_type='CSSM_BOOL'/>
<field type='I' name='DeviceFlags' declared_type='CSSM_CSP_FLAGS'/>
<field type='I' name='TokenMaxSessionCount' declared_type='uint32'/>
<field type='I' name='TokenOpenedSessionCount' declared_type='uint32'/>
<field type='I' name='TokenMaxRWSessionCount' declared_type='uint32'/>
<field type='I' name='TokenOpenedRWSessionCount' declared_type='uint32'/>
<field type='I' name='TokenTotalPublicMem' declared_type='uint32'/>
<field type='I' name='TokenFreePublicMem' declared_type='uint32'/>
<field type='I' name='TokenTotalPrivateMem' declared_type='uint32'/>
<field type='I' name='TokenFreePrivateMem' declared_type='uint32'/>
</struct>
<struct type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='CSSM_DATA'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' declared_type='uint8*'/>
</struct>
<struct type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='CSSM_DATA_PTR'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' declared_type='uint8*'/>
</struct>
<struct type='{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}' name='CSSM_DATE'>
<field type='[4C]' name='Year' declared_type='uint8*'/>
<field type='[2C]' name='Month' declared_type='uint8*'/>
<field type='[2C]' name='Day' declared_type='uint8*'/>
</struct>
<struct type='{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}' name='CSSM_DATE_PTR'>
<field type='[4C]' name='Year' declared_type='uint8*'/>
<field type='[2C]' name='Month' declared_type='uint8*'/>
<field type='[2C]' name='Day' declared_type='uint8*'/>
</struct>
<struct type='{cssm_dbinfo=&quot;NumberOfRecordTypes&quot;I&quot;DefaultParsingModules&quot;^{cssm_db_parsing_module_info}&quot;RecordAttributeNames&quot;^{cssm_db_record_attribute_info}&quot;RecordIndexes&quot;^{cssm_db_record_index_info}&quot;IsLocal&quot;i&quot;AccessPath&quot;*&quot;Reserved&quot;^v}' name='CSSM_DBINFO'>
<field type='I' name='NumberOfRecordTypes' declared_type='uint32'/>
<field type='^{cssm_db_parsing_module_info=I{cssm_subservice_uid={cssm_guid=ISS[8C]}{cssm_version=II}II}}' name='DefaultParsingModules' declared_type='CSSM_DB_PARSING_MODULE_INFO_PTR'/>
<field type='^{cssm_db_record_attribute_info=II^{cssm_db_attribute_info}}' name='RecordAttributeNames' declared_type='CSSM_DB_RECORD_ATTRIBUTE_INFO_PTR'/>
<field type='^{cssm_db_record_index_info=II^{cssm_db_index_info}}' name='RecordIndexes' declared_type='CSSM_DB_RECORD_INDEX_INFO_PTR'/>
<field type='i' name='IsLocal' declared_type='CSSM_BOOL'/>
<field type='*' name='AccessPath' declared_type='char*'/>
<field type='^v' name='Reserved' declared_type='void*'/>
</struct>
<struct type='{cssm_dbinfo=&quot;NumberOfRecordTypes&quot;I&quot;DefaultParsingModules&quot;^{cssm_db_parsing_module_info}&quot;RecordAttributeNames&quot;^{cssm_db_record_attribute_info}&quot;RecordIndexes&quot;^{cssm_db_record_index_info}&quot;IsLocal&quot;i&quot;AccessPath&quot;*&quot;Reserved&quot;^v}' name='CSSM_DBINFO_PTR'>
<field type='I' name='NumberOfRecordTypes' declared_type='uint32'/>
<field type='^{cssm_db_parsing_module_info=I{cssm_subservice_uid={cssm_guid=ISS[8C]}{cssm_version=II}II}}' name='DefaultParsingModules' declared_type='CSSM_DB_PARSING_MODULE_INFO_PTR'/>
<field type='^{cssm_db_record_attribute_info=II^{cssm_db_attribute_info}}' name='RecordAttributeNames' declared_type='CSSM_DB_RECORD_ATTRIBUTE_INFO_PTR'/>
<field type='^{cssm_db_record_index_info=II^{cssm_db_index_info}}' name='RecordIndexes' declared_type='CSSM_DB_RECORD_INDEX_INFO_PTR'/>
<field type='i' name='IsLocal' declared_type='CSSM_BOOL'/>
<field type='*' name='AccessPath' declared_type='char*'/>
<field type='^v' name='Reserved' declared_type='void*'/>
</struct>
<struct type64='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' type='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' name='CSSM_DB_ATTRIBUTE_DATA'>
<field type64='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' type='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' name='Info' declared_type='CSSM_DB_ATTRIBUTE_INFO'/>
<field type='I' name='NumberOfValues' declared_type='uint32'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Value' declared_type='CSSM_DATA_PTR'/>
</struct>
<struct type64='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' type='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' name='CSSM_DB_ATTRIBUTE_DATA_PTR'>
<field type64='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' type='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' name='Info' declared_type='CSSM_DB_ATTRIBUTE_INFO'/>
<field type='I' name='NumberOfValues' declared_type='uint32'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Value' declared_type='CSSM_DATA_PTR'/>
</struct>
<struct type64='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' type='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' name='CSSM_DB_ATTRIBUTE_INFO'>
<field type='I' name='AttributeNameFormat' declared_type='CSSM_DB_ATTRIBUTE_NAME_FORMAT'/>
<field type64='(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)' type='(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)' name='Label' declared_type='union cssm_db_attribute_label'/>
<field type='I' name='AttributeFormat' declared_type='CSSM_DB_ATTRIBUTE_FORMAT'/>
</struct>
<struct type64='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' type='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' name='CSSM_DB_ATTRIBUTE_INFO_PTR'>
<field type='I' name='AttributeNameFormat' declared_type='CSSM_DB_ATTRIBUTE_NAME_FORMAT'/>
<field type64='(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)' type='(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)' name='Label' declared_type='union cssm_db_attribute_label'/>
<field type='I' name='AttributeFormat' declared_type='CSSM_DB_ATTRIBUTE_FORMAT'/>
</struct>
<struct type64='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' type='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' name='CSSM_DB_INDEX_INFO'>
<field type='I' name='IndexType' declared_type='CSSM_DB_INDEX_TYPE'/>
<field type='I' name='IndexedDataLocation' declared_type='CSSM_DB_INDEXED_DATA_LOCATION'/>
<field type64='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' type='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' name='Info' declared_type='CSSM_DB_ATTRIBUTE_INFO'/>
</struct>
<struct type64='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' type='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' name='CSSM_DB_INDEX_INFO_PTR'>
<field type='I' name='IndexType' declared_type='CSSM_DB_INDEX_TYPE'/>
<field type='I' name='IndexedDataLocation' declared_type='CSSM_DB_INDEXED_DATA_LOCATION'/>
<field type64='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' type='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' name='Info' declared_type='CSSM_DB_ATTRIBUTE_INFO'/>
</struct>
<struct type='{cssm_db_parsing_module_info=&quot;RecordType&quot;I&quot;ModuleSubserviceUid&quot;{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}}' name='CSSM_DB_PARSING_MODULE_INFO'>
<field type='I' name='RecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}' name='ModuleSubserviceUid' declared_type='CSSM_SUBSERVICE_UID'/>
</struct>
<struct type='{cssm_db_parsing_module_info=&quot;RecordType&quot;I&quot;ModuleSubserviceUid&quot;{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}}' name='CSSM_DB_PARSING_MODULE_INFO_PTR'>
<field type='I' name='RecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}' name='ModuleSubserviceUid' declared_type='CSSM_SUBSERVICE_UID'/>
</struct>
<struct type='{cssm_db_record_attribute_data=&quot;DataRecordType&quot;I&quot;SemanticInformation&quot;I&quot;NumberOfAttributes&quot;I&quot;AttributeData&quot;^{cssm_db_attribute_data}}' name='CSSM_DB_RECORD_ATTRIBUTE_DATA'>
<field type='I' name='DataRecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='SemanticInformation' declared_type='uint32'/>
<field type='I' name='NumberOfAttributes' declared_type='uint32'/>
<field type64='^{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}I^{cssm_data}}' type='^{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}I^{cssm_data}}' name='AttributeData' declared_type='CSSM_DB_ATTRIBUTE_DATA_PTR'/>
</struct>
<struct type='{cssm_db_record_attribute_data=&quot;DataRecordType&quot;I&quot;SemanticInformation&quot;I&quot;NumberOfAttributes&quot;I&quot;AttributeData&quot;^{cssm_db_attribute_data}}' name='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'>
<field type='I' name='DataRecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='SemanticInformation' declared_type='uint32'/>
<field type='I' name='NumberOfAttributes' declared_type='uint32'/>
<field type64='^{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}I^{cssm_data}}' type='^{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}I^{cssm_data}}' name='AttributeData' declared_type='CSSM_DB_ATTRIBUTE_DATA_PTR'/>
</struct>
<struct type='{cssm_db_record_attribute_info=&quot;DataRecordType&quot;I&quot;NumberOfAttributes&quot;I&quot;AttributeInfo&quot;^{cssm_db_attribute_info}}' name='CSSM_DB_RECORD_ATTRIBUTE_INFO'>
<field type='I' name='DataRecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='NumberOfAttributes' declared_type='uint32'/>
<field type64='^{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}' type='^{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}' name='AttributeInfo' declared_type='CSSM_DB_ATTRIBUTE_INFO_PTR'/>
</struct>
<struct type='{cssm_db_record_attribute_info=&quot;DataRecordType&quot;I&quot;NumberOfAttributes&quot;I&quot;AttributeInfo&quot;^{cssm_db_attribute_info}}' name='CSSM_DB_RECORD_ATTRIBUTE_INFO_PTR'>
<field type='I' name='DataRecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='NumberOfAttributes' declared_type='uint32'/>
<field type64='^{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}' type='^{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}' name='AttributeInfo' declared_type='CSSM_DB_ATTRIBUTE_INFO_PTR'/>
</struct>
<struct type='{cssm_db_record_index_info=&quot;DataRecordType&quot;I&quot;NumberOfIndexes&quot;I&quot;IndexInfo&quot;^{cssm_db_index_info}}' name='CSSM_DB_RECORD_INDEX_INFO'>
<field type='I' name='DataRecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='NumberOfIndexes' declared_type='uint32'/>
<field type64='^{cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}' type='^{cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}' name='IndexInfo' declared_type='CSSM_DB_INDEX_INFO_PTR'/>
</struct>
<struct type='{cssm_db_record_index_info=&quot;DataRecordType&quot;I&quot;NumberOfIndexes&quot;I&quot;IndexInfo&quot;^{cssm_db_index_info}}' name='CSSM_DB_RECORD_INDEX_INFO_PTR'>
<field type='I' name='DataRecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='NumberOfIndexes' declared_type='uint32'/>
<field type64='^{cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}' type='^{cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}' name='IndexInfo' declared_type='CSSM_DB_INDEX_INFO_PTR'/>
</struct>
<struct type64='{cssm_db_schema_attribute_info=&quot;AttributeId&quot;I&quot;AttributeName&quot;*&quot;AttributeNameID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;DataType&quot;I}' type='{cssm_db_schema_attribute_info=&quot;AttributeId&quot;I&quot;AttributeName&quot;*&quot;AttributeNameID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;DataType&quot;I}' name='CSSM_DB_SCHEMA_ATTRIBUTE_INFO'>
<field type='I' name='AttributeId' declared_type='uint32'/>
<field type='*' name='AttributeName' declared_type='char*'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='AttributeNameID' declared_type='CSSM_OID'/>
<field type='I' name='DataType' declared_type='CSSM_DB_ATTRIBUTE_FORMAT'/>
</struct>
<struct type64='{cssm_db_schema_attribute_info=&quot;AttributeId&quot;I&quot;AttributeName&quot;*&quot;AttributeNameID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;DataType&quot;I}' type='{cssm_db_schema_attribute_info=&quot;AttributeId&quot;I&quot;AttributeName&quot;*&quot;AttributeNameID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;DataType&quot;I}' name='CSSM_DB_SCHEMA_ATTRIBUTE_INFO_PTR'>
<field type='I' name='AttributeId' declared_type='uint32'/>
<field type='*' name='AttributeName' declared_type='char*'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='AttributeNameID' declared_type='CSSM_OID'/>
<field type='I' name='DataType' declared_type='CSSM_DB_ATTRIBUTE_FORMAT'/>
</struct>
<struct type='{cssm_db_schema_index_info=&quot;AttributeId&quot;I&quot;IndexId&quot;I&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I}' name='CSSM_DB_SCHEMA_INDEX_INFO'>
<field type='I' name='AttributeId' declared_type='uint32'/>
<field type='I' name='IndexId' declared_type='uint32'/>
<field type='I' name='IndexType' declared_type='CSSM_DB_INDEX_TYPE'/>
<field type='I' name='IndexedDataLocation' declared_type='CSSM_DB_INDEXED_DATA_LOCATION'/>
</struct>
<struct type='{cssm_db_schema_index_info=&quot;AttributeId&quot;I&quot;IndexId&quot;I&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I}' name='CSSM_DB_SCHEMA_INDEX_INFO_PTR'>
<field type='I' name='AttributeId' declared_type='uint32'/>
<field type='I' name='IndexId' declared_type='uint32'/>
<field type='I' name='IndexType' declared_type='CSSM_DB_INDEX_TYPE'/>
<field type='I' name='IndexedDataLocation' declared_type='CSSM_DB_INDEXED_DATA_LOCATION'/>
</struct>
<struct type64='{cssm_db_unique_record=&quot;RecordLocator&quot;{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}&quot;RecordIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_db_unique_record=&quot;RecordLocator&quot;{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}&quot;RecordIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_DB_UNIQUE_RECORD'>
<field type64='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' type='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' name='RecordLocator' declared_type='CSSM_DB_INDEX_INFO'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='RecordIdentifier' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_db_unique_record=&quot;RecordLocator&quot;{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}&quot;RecordIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_db_unique_record=&quot;RecordLocator&quot;{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}&quot;RecordIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_DB_UNIQUE_RECORD_PTR'>
<field type64='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' type='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' name='RecordLocator' declared_type='CSSM_DB_INDEX_INFO'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='RecordIdentifier' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_dl_db_handle=&quot;DLHandle&quot;q&quot;DBHandle&quot;q}' type='{cssm_dl_db_handle=&quot;DLHandle&quot;i&quot;DBHandle&quot;i}' name='CSSM_DL_DB_HANDLE'>
<field type64='q' type='l' name='DLHandle' declared_type='CSSM_DL_HANDLE'/>
<field type64='q' type='l' name='DBHandle' declared_type='CSSM_DB_HANDLE'/>
</struct>
<struct type64='{cssm_dl_db_handle=&quot;DLHandle&quot;q&quot;DBHandle&quot;q}' type='{cssm_dl_db_handle=&quot;DLHandle&quot;i&quot;DBHandle&quot;i}' name='CSSM_DL_DB_HANDLE_PTR'>
<field type64='q' type='l' name='DLHandle' declared_type='CSSM_DL_HANDLE'/>
<field type64='q' type='l' name='DBHandle' declared_type='CSSM_DB_HANDLE'/>
</struct>
<struct type='{cssm_dl_db_list=&quot;NumHandles&quot;I&quot;DLDBHandle&quot;^{cssm_dl_db_handle}}' name='CSSM_DL_DB_LIST'>
<field type='I' name='NumHandles' declared_type='uint32'/>
<field type64='^{cssm_dl_db_handle=qq}' type='^{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE_PTR'/>
</struct>
<struct type='{cssm_dl_db_list=&quot;NumHandles&quot;I&quot;DLDBHandle&quot;^{cssm_dl_db_handle}}' name='CSSM_DL_DB_LIST_PTR'>
<field type='I' name='NumHandles' declared_type='uint32'/>
<field type64='^{cssm_dl_db_handle=qq}' type='^{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE_PTR'/>
</struct>
<struct type='{cssm_dl_pkcs11_attributes=&quot;DeviceAccessFlags&quot;I}' name='CSSM_DL_PKCS11_ATTRIBUTE'>
<field type='I' name='DeviceAccessFlags' declared_type='uint32'/>
</struct>
<struct type='{cssm_dl_pkcs11_attributes=&quot;DeviceAccessFlags&quot;I}' name='CSSM_DL_PKCS11_ATTRIBUTE_PTR'>
<field type='I' name='DeviceAccessFlags' declared_type='uint32'/>
</struct>
<struct type64='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_ENCODED_CERT'>
<field type='I' name='CertType' declared_type='CSSM_CERT_TYPE'/>
<field type='I' name='CertEncoding' declared_type='CSSM_CERT_ENCODING'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='CertBlob' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_ENCODED_CERT_PTR'>
<field type='I' name='CertType' declared_type='CSSM_CERT_TYPE'/>
<field type='I' name='CertEncoding' declared_type='CSSM_CERT_ENCODING'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='CertBlob' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_ENCODED_CRL'>
<field type='I' name='CrlType' declared_type='CSSM_CRL_TYPE'/>
<field type='I' name='CrlEncoding' declared_type='CSSM_CRL_ENCODING'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='CrlBlob' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_ENCODED_CRL_PTR'>
<field type='I' name='CrlType' declared_type='CSSM_CRL_TYPE'/>
<field type='I' name='CrlEncoding' declared_type='CSSM_CRL_ENCODING'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='CrlBlob' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_evidence=&quot;EvidenceForm&quot;I&quot;Evidence&quot;^v}' name='CSSM_EVIDENCE'>
<field type='I' name='EvidenceForm' declared_type='CSSM_EVIDENCE_FORM'/>
<field type='^v' name='Evidence' declared_type='void*'/>
</struct>
<struct type='{cssm_evidence=&quot;EvidenceForm&quot;I&quot;Evidence&quot;^v}' name='CSSM_EVIDENCE_PTR'>
<field type='I' name='EvidenceForm' declared_type='CSSM_EVIDENCE_FORM'/>
<field type='^v' name='Evidence' declared_type='void*'/>
</struct>
<struct type64='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_FIELD'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='FieldOid' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='FieldValue' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_fieldgroup=&quot;NumberOfFields&quot;i&quot;Fields&quot;^{cssm_field}}' name='CSSM_FIELDGROUP'>
<field type='i' name='NumberOfFields' declared_type='int'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='Fields' declared_type='CSSM_FIELD_PTR'/>
</struct>
<struct type='{cssm_fieldgroup=&quot;NumberOfFields&quot;i&quot;Fields&quot;^{cssm_field}}' name='CSSM_FIELDGROUP_PTR'>
<field type='i' name='NumberOfFields' declared_type='int'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='Fields' declared_type='CSSM_FIELD_PTR'/>
</struct>
<struct type64='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_FIELD_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='FieldOid' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='FieldValue' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_func_name_addr=&quot;Name&quot;[68c]&quot;Address&quot;^?}' name='CSSM_FUNC_NAME_ADDR'>
<field type='[68c]' name='Name' declared_type='CSSM_STRING'/>
<field function_pointer='true' type='^?' name='Address' declared_type='CSSM_PROC_ADDR'>
<retval type='v' declared_type='void'/>
</field>
</struct>
<struct type='{cssm_func_name_addr=&quot;Name&quot;[68c]&quot;Address&quot;^?}' name='CSSM_FUNC_NAME_ADDR_PTR'>
<field type='[68c]' name='Name' declared_type='CSSM_STRING'/>
<field function_pointer='true' type='^?' name='Address' declared_type='CSSM_PROC_ADDR'>
<retval type='v' declared_type='void'/>
</field>
</struct>
<struct type='{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}' name='CSSM_GUID'>
<field type='I' name='Data1' declared_type='uint32'/>
<field type='S' name='Data2' declared_type='uint16'/>
<field type='S' name='Data3' declared_type='uint16'/>
<field type='[8C]' name='Data4' declared_type='uint8*'/>
</struct>
<struct type='{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}' name='CSSM_GUID_PTR'>
<field type='I' name='Data1' declared_type='uint32'/>
<field type='S' name='Data2' declared_type='uint16'/>
<field type='S' name='Data3' declared_type='uint16'/>
<field type='[8C]' name='Data4' declared_type='uint8*'/>
</struct>
<struct type64='{cssm_kea_derive_params=&quot;Rb&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;Yb&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_kea_derive_params=&quot;Rb&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;Yb&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_KEA_DERIVE_PARAMS'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Rb' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Yb' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_kea_derive_params=&quot;Rb&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;Yb&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_kea_derive_params=&quot;Rb&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;Yb&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_KEA_DERIVE_PARAMS_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Rb' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Yb' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_KEY'>
<field type='{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}' name='KeyHeader' declared_type='CSSM_KEYHEADER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='KeyData' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}' name='CSSM_KEYHEADER'>
<field type='I' name='HeaderVersion' declared_type='CSSM_HEADERVERSION'/>
<field type='{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}' name='CspId' declared_type='CSSM_GUID'/>
<field type='I' name='BlobType' declared_type='CSSM_KEYBLOB_TYPE'/>
<field type='I' name='Format' declared_type='CSSM_KEYBLOB_FORMAT'/>
<field type='I' name='AlgorithmId' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='KeyClass' declared_type='CSSM_KEYCLASS'/>
<field type='I' name='LogicalKeySizeInBits' declared_type='uint32'/>
<field type='I' name='KeyAttr' declared_type='CSSM_KEYATTR_FLAGS'/>
<field type='I' name='KeyUsage' declared_type='CSSM_KEYUSE'/>
<field type='{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}' name='StartDate' declared_type='CSSM_DATE'/>
<field type='{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}' name='EndDate' declared_type='CSSM_DATE'/>
<field type='I' name='WrapAlgorithmId' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='WrapMode' declared_type='CSSM_ENCRYPT_MODE'/>
<field type='I' name='Reserved' declared_type='uint32'/>
</struct>
<struct type='{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}' name='CSSM_KEYHEADER_PTR'>
<field type='I' name='HeaderVersion' declared_type='CSSM_HEADERVERSION'/>
<field type='{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}' name='CspId' declared_type='CSSM_GUID'/>
<field type='I' name='BlobType' declared_type='CSSM_KEYBLOB_TYPE'/>
<field type='I' name='Format' declared_type='CSSM_KEYBLOB_FORMAT'/>
<field type='I' name='AlgorithmId' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='KeyClass' declared_type='CSSM_KEYCLASS'/>
<field type='I' name='LogicalKeySizeInBits' declared_type='uint32'/>
<field type='I' name='KeyAttr' declared_type='CSSM_KEYATTR_FLAGS'/>
<field type='I' name='KeyUsage' declared_type='CSSM_KEYUSE'/>
<field type='{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}' name='StartDate' declared_type='CSSM_DATE'/>
<field type='{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}' name='EndDate' declared_type='CSSM_DATE'/>
<field type='I' name='WrapAlgorithmId' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='WrapMode' declared_type='CSSM_ENCRYPT_MODE'/>
<field type='I' name='Reserved' declared_type='uint32'/>
</struct>
<struct type64='{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_KEY_PTR'>
<field type='{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}' name='KeyHeader' declared_type='CSSM_KEYHEADER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='KeyData' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_key_size=&quot;LogicalKeySizeInBits&quot;I&quot;EffectiveKeySizeInBits&quot;I}' name='CSSM_KEY_SIZE'>
<field type='I' name='LogicalKeySizeInBits' declared_type='uint32'/>
<field type='I' name='EffectiveKeySizeInBits' declared_type='uint32'/>
</struct>
<struct type='{cssm_key_size=&quot;LogicalKeySizeInBits&quot;I&quot;EffectiveKeySizeInBits&quot;I}' name='CSSM_KEY_SIZE_PTR'>
<field type='I' name='LogicalKeySizeInBits' declared_type='uint32'/>
<field type='I' name='EffectiveKeySizeInBits' declared_type='uint32'/>
</struct>
<struct type='{cssm_krsubservice=&quot;SubServiceId&quot;I&quot;Description&quot;*&quot;WrappedProduct&quot;{cssm_kr_wrappedproductinfo=&quot;StandardVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;StandardDescription&quot;[68c]&quot;ProductVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;ProductDescription&quot;[68c]&quot;ProductVendor&quot;[68c]&quot;ProductFlags&quot;I}}' name='CSSM_KRSUBSERVICE'>
<field type='I' name='SubServiceId' declared_type='uint32'/>
<field type='*' name='Description' declared_type='char*'/>
<field type='{cssm_kr_wrappedproductinfo=&quot;StandardVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;StandardDescription&quot;[68c]&quot;ProductVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;ProductDescription&quot;[68c]&quot;ProductVendor&quot;[68c]&quot;ProductFlags&quot;I}' name='WrappedProduct' declared_type='CSSM_KR_WRAPPEDPRODUCT_INFO'/>
</struct>
<struct type='{cssm_krsubservice=&quot;SubServiceId&quot;I&quot;Description&quot;*&quot;WrappedProduct&quot;{cssm_kr_wrappedproductinfo=&quot;StandardVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;StandardDescription&quot;[68c]&quot;ProductVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;ProductDescription&quot;[68c]&quot;ProductVendor&quot;[68c]&quot;ProductFlags&quot;I}}' name='CSSM_KRSUBSERVICE_PTR'>
<field type='I' name='SubServiceId' declared_type='uint32'/>
<field type='*' name='Description' declared_type='char*'/>
<field type='{cssm_kr_wrappedproductinfo=&quot;StandardVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;StandardDescription&quot;[68c]&quot;ProductVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;ProductDescription&quot;[68c]&quot;ProductVendor&quot;[68c]&quot;ProductFlags&quot;I}' name='WrappedProduct' declared_type='CSSM_KR_WRAPPEDPRODUCT_INFO'/>
</struct>
<struct type='{cssm_kr_name=&quot;Type&quot;C&quot;Length&quot;C&quot;Name&quot;*}' name='CSSM_KR_NAME'>
<field type='C' name='Type' declared_type='uint8'/>
<field type='C' name='Length' declared_type='uint8'/>
<field type='*' name='Name' declared_type='char*'/>
</struct>
<struct type='{cssm_kr_policy_info=&quot;krbNotAllowed&quot;i&quot;numberOfEntries&quot;I&quot;policyEntry&quot;^{cssm_kr_policy_list_item}}' name='CSSM_KR_POLICY_INFO'>
<field type='i' name='krbNotAllowed' declared_type='CSSM_BOOL'/>
<field type='I' name='numberOfEntries' declared_type='uint32'/>
<field type='^{cssm_kr_policy_list_item=^{kr_policy_list_item}IIIICII}' name='policyEntry' declared_type='CSSM_KR_POLICY_LIST_ITEM*'/>
</struct>
<struct type='{cssm_kr_policy_info=&quot;krbNotAllowed&quot;i&quot;numberOfEntries&quot;I&quot;policyEntry&quot;^{cssm_kr_policy_list_item}}' name='CSSM_KR_POLICY_INFO_PTR'>
<field type='i' name='krbNotAllowed' declared_type='CSSM_BOOL'/>
<field type='I' name='numberOfEntries' declared_type='uint32'/>
<field type='^{cssm_kr_policy_list_item=^{kr_policy_list_item}IIIICII}' name='policyEntry' declared_type='CSSM_KR_POLICY_LIST_ITEM*'/>
</struct>
<struct type='{cssm_kr_policy_list_item=&quot;next&quot;^{kr_policy_list_item}&quot;AlgorithmId&quot;I&quot;Mode&quot;I&quot;MaxKeyLength&quot;I&quot;MaxRounds&quot;I&quot;WorkFactor&quot;C&quot;PolicyFlags&quot;I&quot;AlgClass&quot;I}' name='CSSM_KR_POLICY_LIST_ITEM'>
<field type='^{kr_policy_list_item=}' name='next' declared_type='struct kr_policy_list_item*'/>
<field type='I' name='AlgorithmId' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='Mode' declared_type='CSSM_ENCRYPT_MODE'/>
<field type='I' name='MaxKeyLength' declared_type='uint32'/>
<field type='I' name='MaxRounds' declared_type='uint32'/>
<field type='C' name='WorkFactor' declared_type='uint8'/>
<field type='I' name='PolicyFlags' declared_type='CSSM_KR_POLICY_FLAGS'/>
<field type='I' name='AlgClass' declared_type='CSSM_CONTEXT_TYPE'/>
</struct>
<struct type='{cssm_kr_policy_list_item=&quot;next&quot;^{kr_policy_list_item}&quot;AlgorithmId&quot;I&quot;Mode&quot;I&quot;MaxKeyLength&quot;I&quot;MaxRounds&quot;I&quot;WorkFactor&quot;C&quot;PolicyFlags&quot;I&quot;AlgClass&quot;I}' name='CSSM_KR_POLICY_LIST_ITEM_PTR'>
<field type='^{kr_policy_list_item=}' name='next' declared_type='struct kr_policy_list_item*'/>
<field type='I' name='AlgorithmId' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='Mode' declared_type='CSSM_ENCRYPT_MODE'/>
<field type='I' name='MaxKeyLength' declared_type='uint32'/>
<field type='I' name='MaxRounds' declared_type='uint32'/>
<field type='C' name='WorkFactor' declared_type='uint8'/>
<field type='I' name='PolicyFlags' declared_type='CSSM_KR_POLICY_FLAGS'/>
<field type='I' name='AlgClass' declared_type='CSSM_CONTEXT_TYPE'/>
</struct>
<struct type='{cssm_kr_profile=&quot;UserName&quot;{cssm_kr_name=&quot;Type&quot;C&quot;Length&quot;C&quot;Name&quot;*}&quot;UserCertificate&quot;^{cssm_certgroup}&quot;KRSCertChain&quot;^{cssm_certgroup}&quot;LE_KRANum&quot;C&quot;LE_KRACertChainList&quot;^{cssm_certgroup}&quot;ENT_KRANum&quot;C&quot;ENT_KRACertChainList&quot;^{cssm_certgroup}&quot;INDIV_KRANum&quot;C&quot;INDIV_KRACertChainList&quot;^{cssm_certgroup}&quot;INDIV_AuthenticationInfo&quot;^{cssm_data}&quot;KRSPFlags&quot;I&quot;KRSPExtensions&quot;^{cssm_data}}' name='CSSM_KR_PROFILE'>
<field type='{cssm_kr_name=&quot;Type&quot;C&quot;Length&quot;C&quot;Name&quot;*}' name='UserName' declared_type='CSSM_KR_NAME'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='UserCertificate' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='KRSCertChain' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='C' name='LE_KRANum' declared_type='uint8'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='LE_KRACertChainList' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='C' name='ENT_KRANum' declared_type='uint8'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='ENT_KRACertChainList' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='C' name='INDIV_KRANum' declared_type='uint8'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='INDIV_KRACertChainList' declared_type='CSSM_CERTGROUP_PTR'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='INDIV_AuthenticationInfo' declared_type='CSSM_DATA_PTR'/>
<field type='I' name='KRSPFlags' declared_type='uint32'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KRSPExtensions' declared_type='CSSM_DATA_PTR'/>
</struct>
<struct type='{cssm_kr_profile=&quot;UserName&quot;{cssm_kr_name=&quot;Type&quot;C&quot;Length&quot;C&quot;Name&quot;*}&quot;UserCertificate&quot;^{cssm_certgroup}&quot;KRSCertChain&quot;^{cssm_certgroup}&quot;LE_KRANum&quot;C&quot;LE_KRACertChainList&quot;^{cssm_certgroup}&quot;ENT_KRANum&quot;C&quot;ENT_KRACertChainList&quot;^{cssm_certgroup}&quot;INDIV_KRANum&quot;C&quot;INDIV_KRACertChainList&quot;^{cssm_certgroup}&quot;INDIV_AuthenticationInfo&quot;^{cssm_data}&quot;KRSPFlags&quot;I&quot;KRSPExtensions&quot;^{cssm_data}}' name='CSSM_KR_PROFILE_PTR'>
<field type='{cssm_kr_name=&quot;Type&quot;C&quot;Length&quot;C&quot;Name&quot;*}' name='UserName' declared_type='CSSM_KR_NAME'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='UserCertificate' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='KRSCertChain' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='C' name='LE_KRANum' declared_type='uint8'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='LE_KRACertChainList' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='C' name='ENT_KRANum' declared_type='uint8'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='ENT_KRACertChainList' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='C' name='INDIV_KRANum' declared_type='uint8'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='INDIV_KRACertChainList' declared_type='CSSM_CERTGROUP_PTR'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='INDIV_AuthenticationInfo' declared_type='CSSM_DATA_PTR'/>
<field type='I' name='KRSPFlags' declared_type='uint32'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KRSPExtensions' declared_type='CSSM_DATA_PTR'/>
</struct>
<struct type='{cssm_kr_wrappedproductinfo=&quot;StandardVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;StandardDescription&quot;[68c]&quot;ProductVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;ProductDescription&quot;[68c]&quot;ProductVendor&quot;[68c]&quot;ProductFlags&quot;I}' name='CSSM_KR_WRAPPEDPRODUCT_INFO'>
<field type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='StandardVersion' declared_type='CSSM_VERSION'/>
<field type='[68c]' name='StandardDescription' declared_type='CSSM_STRING'/>
<field type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='ProductVersion' declared_type='CSSM_VERSION'/>
<field type='[68c]' name='ProductDescription' declared_type='CSSM_STRING'/>
<field type='[68c]' name='ProductVendor' declared_type='CSSM_STRING'/>
<field type='I' name='ProductFlags' declared_type='uint32'/>
</struct>
<struct type='{cssm_kr_wrappedproductinfo=&quot;StandardVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;StandardDescription&quot;[68c]&quot;ProductVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;ProductDescription&quot;[68c]&quot;ProductVendor&quot;[68c]&quot;ProductFlags&quot;I}' name='CSSM_KR_WRAPPEDPRODUCT_INFO_PTR'>
<field type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='StandardVersion' declared_type='CSSM_VERSION'/>
<field type='[68c]' name='StandardDescription' declared_type='CSSM_STRING'/>
<field type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='ProductVersion' declared_type='CSSM_VERSION'/>
<field type='[68c]' name='ProductDescription' declared_type='CSSM_STRING'/>
<field type='[68c]' name='ProductVendor' declared_type='CSSM_STRING'/>
<field type='I' name='ProductFlags' declared_type='uint32'/>
</struct>
<struct type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='CSSM_LIST'>
<field type='I' name='ListType' declared_type='CSSM_LIST_TYPE'/>
<field type64='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=Q*})}' type='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=I*})}' name='Head' declared_type='CSSM_LIST_ELEMENT_PTR'/>
<field type64='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=Q*})}' type='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=I*})}' name='Tail' declared_type='CSSM_LIST_ELEMENT_PTR'/>
</struct>
<struct type64='{cssm_list_element=&quot;NextElement&quot;^{cssm_list_element}&quot;WordID&quot;i&quot;ElementType&quot;I&quot;Element&quot;(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*})}' type='{cssm_list_element=&quot;NextElement&quot;^{cssm_list_element}&quot;WordID&quot;i&quot;ElementType&quot;I&quot;Element&quot;(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*})}' name='CSSM_LIST_ELEMENT'>
<field type64='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=Q*})}' type='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=I*})}' name='NextElement' declared_type='struct cssm_list_element*'/>
<field type='i' name='WordID' declared_type='CSSM_WORDID_TYPE'/>
<field type='I' name='ElementType' declared_type='CSSM_LIST_ELEMENT_TYPE'/>
<field type64='(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*})' type='(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*})' name='Element' declared_type='union cssm_list_element::'/>
</struct>
<struct type64='{cssm_list_element=&quot;NextElement&quot;^{cssm_list_element}&quot;WordID&quot;i&quot;ElementType&quot;I&quot;Element&quot;(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*})}' type='{cssm_list_element=&quot;NextElement&quot;^{cssm_list_element}&quot;WordID&quot;i&quot;ElementType&quot;I&quot;Element&quot;(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*})}' name='CSSM_LIST_ELEMENT_PTR'>
<field type64='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=Q*})}' type='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=I*})}' name='NextElement' declared_type='struct cssm_list_element*'/>
<field type='i' name='WordID' declared_type='CSSM_WORDID_TYPE'/>
<field type='I' name='ElementType' declared_type='CSSM_LIST_ELEMENT_TYPE'/>
<field type64='(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*})' type='(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*})' name='Element' declared_type='union cssm_list_element::'/>
</struct>
<struct type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='CSSM_LIST_PTR'>
<field type='I' name='ListType' declared_type='CSSM_LIST_TYPE'/>
<field type64='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=Q*})}' type='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=I*})}' name='Head' declared_type='CSSM_LIST_ELEMENT_PTR'/>
<field type64='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=Q*})}' type='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=I*})}' name='Tail' declared_type='CSSM_LIST_ELEMENT_PTR'/>
</struct>
<struct type64='{cssm_manager_event_notification=&quot;DestinationModuleManagerType&quot;I&quot;SourceModuleManagerType&quot;I&quot;Event&quot;I&quot;EventId&quot;I&quot;EventData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_manager_event_notification=&quot;DestinationModuleManagerType&quot;I&quot;SourceModuleManagerType&quot;I&quot;Event&quot;I&quot;EventId&quot;I&quot;EventData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_MANAGER_EVENT_NOTIFICATION'>
<field type='I' name='DestinationModuleManagerType' declared_type='CSSM_SERVICE_MASK'/>
<field type='I' name='SourceModuleManagerType' declared_type='CSSM_SERVICE_MASK'/>
<field type='I' name='Event' declared_type='CSSM_MANAGER_EVENT_TYPES'/>
<field type='I' name='EventId' declared_type='uint32'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='EventData' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_manager_event_notification=&quot;DestinationModuleManagerType&quot;I&quot;SourceModuleManagerType&quot;I&quot;Event&quot;I&quot;EventId&quot;I&quot;EventData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_manager_event_notification=&quot;DestinationModuleManagerType&quot;I&quot;SourceModuleManagerType&quot;I&quot;Event&quot;I&quot;EventId&quot;I&quot;EventData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_MANAGER_EVENT_NOTIFICATION_PTR'>
<field type='I' name='DestinationModuleManagerType' declared_type='CSSM_SERVICE_MASK'/>
<field type='I' name='SourceModuleManagerType' declared_type='CSSM_SERVICE_MASK'/>
<field type='I' name='Event' declared_type='CSSM_MANAGER_EVENT_TYPES'/>
<field type='I' name='EventId' declared_type='uint32'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='EventData' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_manager_registration_info=&quot;Initialize&quot;^?&quot;Terminate&quot;^?&quot;RegisterDispatchTable&quot;^?&quot;DeregisterDispatchTable&quot;^?&quot;EventNotifyManager&quot;^?&quot;RefreshFunctionTable&quot;^?}' name='CSSM_MANAGER_REGISTRATION_INFO'>
<field function_pointer='true' type='^?' name='Initialize' declared_type='CSSM_RETURN (*)(uint32, uint32)'>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Terminate' declared_type='CSSM_RETURN (*)(void)'>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RegisterDispatchTable' declared_type='CSSM_RETURN (*)(CSSM_STATE_FUNCS_PTR)'>
<arg type='^{cssm_state_funcs=^?^?^?^?^?^?}' declared_type='CSSM_STATE_FUNCS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DeregisterDispatchTable' declared_type='CSSM_RETURN (*)(void)'>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EventNotifyManager' declared_type='CSSM_RETURN (*)(CSSM_MANAGER_EVENT_NOTIFICATION *)'>
<arg type64='^{cssm_manager_event_notification=IIII{cssm_data=Q*}}' type='^{cssm_manager_event_notification=IIII{cssm_data=I*}}' const='true' declared_type='CSSM_MANAGER_EVENT_NOTIFICATION*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RefreshFunctionTable' declared_type='CSSM_RETURN (*)(CSSM_FUNC_NAME_ADDR_PTR, uint32)'>
<arg type='^{cssm_func_name_addr=[68c]^?}' declared_type='CSSM_FUNC_NAME_ADDR_PTR'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_manager_registration_info=&quot;Initialize&quot;^?&quot;Terminate&quot;^?&quot;RegisterDispatchTable&quot;^?&quot;DeregisterDispatchTable&quot;^?&quot;EventNotifyManager&quot;^?&quot;RefreshFunctionTable&quot;^?}' name='CSSM_MANAGER_REGISTRATION_INFO_PTR'>
<field function_pointer='true' type='^?' name='Initialize' declared_type='CSSM_RETURN (*)(uint32, uint32)'>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Terminate' declared_type='CSSM_RETURN (*)(void)'>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RegisterDispatchTable' declared_type='CSSM_RETURN (*)(CSSM_STATE_FUNCS_PTR)'>
<arg type='^{cssm_state_funcs=^?^?^?^?^?^?}' declared_type='CSSM_STATE_FUNCS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DeregisterDispatchTable' declared_type='CSSM_RETURN (*)(void)'>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EventNotifyManager' declared_type='CSSM_RETURN (*)(CSSM_MANAGER_EVENT_NOTIFICATION *)'>
<arg type64='^{cssm_manager_event_notification=IIII{cssm_data=Q*}}' type='^{cssm_manager_event_notification=IIII{cssm_data=I*}}' const='true' declared_type='CSSM_MANAGER_EVENT_NOTIFICATION*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RefreshFunctionTable' declared_type='CSSM_RETURN (*)(CSSM_FUNC_NAME_ADDR_PTR, uint32)'>
<arg type='^{cssm_func_name_addr=[68c]^?}' declared_type='CSSM_FUNC_NAME_ADDR_PTR'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_memory_funcs=&quot;malloc_func&quot;^?&quot;free_func&quot;^?&quot;realloc_func&quot;^?&quot;calloc_func&quot;^?&quot;AllocRef&quot;^v}' name='CSSM_MEMORY_FUNCS'>
<field function_pointer='true' type='^?' name='malloc_func' declared_type='CSSM_MALLOC'>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='free_func' declared_type='CSSM_FREE'>
<arg type='^v' declared_type='void*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' type='^?' name='realloc_func' declared_type='CSSM_REALLOC'>
<arg type='^v' declared_type='void*'/>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='calloc_func' declared_type='CSSM_CALLOC'>
<arg type='I' declared_type='uint32'/>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field type='^v' name='AllocRef' declared_type='void*'/>
</struct>
<struct type='{cssm_memory_funcs=&quot;malloc_func&quot;^?&quot;free_func&quot;^?&quot;realloc_func&quot;^?&quot;calloc_func&quot;^?&quot;AllocRef&quot;^v}' name='CSSM_MEMORY_FUNCS_PTR'>
<field function_pointer='true' type='^?' name='malloc_func' declared_type='CSSM_MALLOC'>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='free_func' declared_type='CSSM_FREE'>
<arg type='^v' declared_type='void*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' type='^?' name='realloc_func' declared_type='CSSM_REALLOC'>
<arg type='^v' declared_type='void*'/>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='calloc_func' declared_type='CSSM_CALLOC'>
<arg type='I' declared_type='uint32'/>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field type='^v' name='AllocRef' declared_type='void*'/>
</struct>
<struct type='{cssm_module_funcs=&quot;ServiceType&quot;I&quot;NumberOfServiceFuncs&quot;I&quot;ServiceFuncs&quot;^^?}' name='CSSM_MODULE_FUNCS'>
<field type='I' name='ServiceType' declared_type='CSSM_SERVICE_TYPE'/>
<field type='I' name='NumberOfServiceFuncs' declared_type='uint32'/>
<field type='^^?' name='ServiceFuncs' const='true' declared_type='CSSM_PROC_ADDR*'/>
</struct>
<struct type='{cssm_module_funcs=&quot;ServiceType&quot;I&quot;NumberOfServiceFuncs&quot;I&quot;ServiceFuncs&quot;^^?}' name='CSSM_MODULE_FUNCS_PTR'>
<field type='I' name='ServiceType' declared_type='CSSM_SERVICE_TYPE'/>
<field type='I' name='NumberOfServiceFuncs' declared_type='uint32'/>
<field type='^^?' name='ServiceFuncs' const='true' declared_type='CSSM_PROC_ADDR*'/>
</struct>
<struct type='{cssm_name_list=&quot;NumStrings&quot;I&quot;String&quot;^*}' name='CSSM_NAME_LIST'>
<field type='I' name='NumStrings' declared_type='uint32'/>
<field type='^*' name='String' declared_type='char**'/>
</struct>
<struct type='{cssm_name_list=&quot;NumStrings&quot;I&quot;String&quot;^*}' name='CSSM_NAME_LIST_PTR'>
<field type='I' name='NumStrings' declared_type='uint32'/>
<field type='^*' name='String' declared_type='char**'/>
</struct>
<struct type64='{cssm_net_address=&quot;AddressType&quot;I&quot;Address&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_net_address=&quot;AddressType&quot;I&quot;Address&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_NET_ADDRESS'>
<field type='I' name='AddressType' declared_type='CSSM_NET_ADDRESS_TYPE'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Address' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_net_address=&quot;AddressType&quot;I&quot;Address&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_net_address=&quot;AddressType&quot;I&quot;Address&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_NET_ADDRESS_PTR'>
<field type='I' name='AddressType' declared_type='CSSM_NET_ADDRESS_TYPE'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Address' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='CSSM_OID'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' declared_type='uint8*'/>
</struct>
<struct type='{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}' name='CSSM_PARSED_CERT'>
<field type='I' name='CertType' declared_type='CSSM_CERT_TYPE'/>
<field type='I' name='ParsedCertFormat' declared_type='CSSM_CERT_PARSE_FORMAT'/>
<field type='^v' name='ParsedCert' declared_type='void*'/>
</struct>
<struct type='{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}' name='CSSM_PARSED_CERT_PTR'>
<field type='I' name='CertType' declared_type='CSSM_CERT_TYPE'/>
<field type='I' name='ParsedCertFormat' declared_type='CSSM_CERT_PARSE_FORMAT'/>
<field type='^v' name='ParsedCert' declared_type='void*'/>
</struct>
<struct type='{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}' name='CSSM_PARSED_CRL'>
<field type='I' name='CrlType' declared_type='CSSM_CRL_TYPE'/>
<field type='I' name='ParsedCrlFormat' declared_type='CSSM_CRL_PARSE_FORMAT'/>
<field type='^v' name='ParsedCrl' declared_type='void*'/>
</struct>
<struct type='{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}' name='CSSM_PARSED_CRL_PTR'>
<field type='I' name='CrlType' declared_type='CSSM_CRL_TYPE'/>
<field type='I' name='ParsedCrlFormat' declared_type='CSSM_CRL_PARSE_FORMAT'/>
<field type='^v' name='ParsedCrl' declared_type='void*'/>
</struct>
<struct type64='{cssm_pkcs1_oaep_params=&quot;HashAlgorithm&quot;I&quot;HashParams&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;MGF&quot;I&quot;MGFParams&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;PSource&quot;I&quot;PSourceParams&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_pkcs1_oaep_params=&quot;HashAlgorithm&quot;I&quot;HashParams&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;MGF&quot;I&quot;MGFParams&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;PSource&quot;I&quot;PSourceParams&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_PKCS1_OAEP_PARAMS'>
<field type='I' name='HashAlgorithm' declared_type='uint32'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='HashParams' declared_type='CSSM_DATA'/>
<field type='I' name='MGF' declared_type='CSSM_PKCS_OAEP_MGF'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='MGFParams' declared_type='CSSM_DATA'/>
<field type='I' name='PSource' declared_type='CSSM_PKCS_OAEP_PSOURCE'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='PSourceParams' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_pkcs1_oaep_params=&quot;HashAlgorithm&quot;I&quot;HashParams&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;MGF&quot;I&quot;MGFParams&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;PSource&quot;I&quot;PSourceParams&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_pkcs1_oaep_params=&quot;HashAlgorithm&quot;I&quot;HashParams&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;MGF&quot;I&quot;MGFParams&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;PSource&quot;I&quot;PSourceParams&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_PKCS1_OAEP_PARAMS_PTR'>
<field type='I' name='HashAlgorithm' declared_type='uint32'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='HashParams' declared_type='CSSM_DATA'/>
<field type='I' name='MGF' declared_type='CSSM_PKCS_OAEP_MGF'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='MGFParams' declared_type='CSSM_DATA'/>
<field type='I' name='PSource' declared_type='CSSM_PKCS_OAEP_PSOURCE'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='PSourceParams' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_pkcs5_pbkdf1_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;InitVector&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_pkcs5_pbkdf1_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;InitVector&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_PKCS5_PBKDF1_PARAMS'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Passphrase' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='InitVector' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_pkcs5_pbkdf1_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;InitVector&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_pkcs5_pbkdf1_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;InitVector&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_PKCS5_PBKDF1_PARAMS_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Passphrase' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='InitVector' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_pkcs5_pbkdf2_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;PseudoRandomFunction&quot;I}' type='{cssm_pkcs5_pbkdf2_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;PseudoRandomFunction&quot;I}' name='CSSM_PKCS5_PBKDF2_PARAMS'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Passphrase' declared_type='CSSM_DATA'/>
<field type='I' name='PseudoRandomFunction' declared_type='CSSM_PKCS5_PBKDF2_PRF'/>
</struct>
<struct type64='{cssm_pkcs5_pbkdf2_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;PseudoRandomFunction&quot;I}' type='{cssm_pkcs5_pbkdf2_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;PseudoRandomFunction&quot;I}' name='CSSM_PKCS5_PBKDF2_PARAMS_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Passphrase' declared_type='CSSM_DATA'/>
<field type='I' name='PseudoRandomFunction' declared_type='CSSM_PKCS5_PBKDF2_PRF'/>
</struct>
<struct type='{cssm_query=&quot;RecordType&quot;I&quot;Conjunctive&quot;I&quot;NumSelectionPredicates&quot;I&quot;SelectionPredicate&quot;^{cssm_selection_predicate}&quot;QueryLimits&quot;{cssm_query_limits=&quot;TimeLimit&quot;I&quot;SizeLimit&quot;I}&quot;QueryFlags&quot;I}' name='CSSM_QUERY'>
<field type='I' name='RecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='Conjunctive' declared_type='CSSM_DB_CONJUNCTIVE'/>
<field type='I' name='NumSelectionPredicates' declared_type='uint32'/>
<field type64='^{cssm_selection_predicate=I{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}I^{cssm_data}}}' type='^{cssm_selection_predicate=I{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}I^{cssm_data}}}' name='SelectionPredicate' declared_type='CSSM_SELECTION_PREDICATE_PTR'/>
<field type='{cssm_query_limits=&quot;TimeLimit&quot;I&quot;SizeLimit&quot;I}' name='QueryLimits' declared_type='CSSM_QUERY_LIMITS'/>
<field type='I' name='QueryFlags' declared_type='CSSM_QUERY_FLAGS'/>
</struct>
<struct type='{cssm_query_limits=&quot;TimeLimit&quot;I&quot;SizeLimit&quot;I}' name='CSSM_QUERY_LIMITS'>
<field type='I' name='TimeLimit' declared_type='uint32'/>
<field type='I' name='SizeLimit' declared_type='uint32'/>
</struct>
<struct type='{cssm_query_limits=&quot;TimeLimit&quot;I&quot;SizeLimit&quot;I}' name='CSSM_QUERY_LIMITS_PTR'>
<field type='I' name='TimeLimit' declared_type='uint32'/>
<field type='I' name='SizeLimit' declared_type='uint32'/>
</struct>
<struct type='{cssm_query=&quot;RecordType&quot;I&quot;Conjunctive&quot;I&quot;NumSelectionPredicates&quot;I&quot;SelectionPredicate&quot;^{cssm_selection_predicate}&quot;QueryLimits&quot;{cssm_query_limits=&quot;TimeLimit&quot;I&quot;SizeLimit&quot;I}&quot;QueryFlags&quot;I}' name='CSSM_QUERY_PTR'>
<field type='I' name='RecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='Conjunctive' declared_type='CSSM_DB_CONJUNCTIVE'/>
<field type='I' name='NumSelectionPredicates' declared_type='uint32'/>
<field type64='^{cssm_selection_predicate=I{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}I^{cssm_data}}}' type='^{cssm_selection_predicate=I{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}I^{cssm_data}}}' name='SelectionPredicate' declared_type='CSSM_SELECTION_PREDICATE_PTR'/>
<field type='{cssm_query_limits=&quot;TimeLimit&quot;I&quot;SizeLimit&quot;I}' name='QueryLimits' declared_type='CSSM_QUERY_LIMITS'/>
<field type='I' name='QueryFlags' declared_type='CSSM_QUERY_FLAGS'/>
</struct>
<struct type='{cssm_query_size_data=&quot;SizeInputBlock&quot;I&quot;SizeOutputBlock&quot;I}' name='CSSM_QUERY_SIZE_DATA'>
<field type='I' name='SizeInputBlock' declared_type='uint32'/>
<field type='I' name='SizeOutputBlock' declared_type='uint32'/>
</struct>
<struct type='{cssm_query_size_data=&quot;SizeInputBlock&quot;I&quot;SizeOutputBlock&quot;I}' name='CSSM_QUERY_SIZE_DATA_PTR'>
<field type='I' name='SizeInputBlock' declared_type='uint32'/>
<field type='I' name='SizeOutputBlock' declared_type='uint32'/>
</struct>
<struct type='{cssm_range=&quot;Min&quot;I&quot;Max&quot;I}' name='CSSM_RANGE'>
<field type='I' name='Min' declared_type='uint32'/>
<field type='I' name='Max' declared_type='uint32'/>
</struct>
<struct type='{cssm_range=&quot;Min&quot;I&quot;Max&quot;I}' name='CSSM_RANGE_PTR'>
<field type='I' name='Min' declared_type='uint32'/>
<field type='I' name='Max' declared_type='uint32'/>
</struct>
<struct type64='{cssm_resource_control_context=&quot;AccessCred&quot;^{cssm_access_credentials}&quot;InitialAclEntry&quot;{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}}' type='{cssm_resource_control_context=&quot;AccessCred&quot;^{cssm_access_credentials}&quot;InitialAclEntry&quot;{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}}' name='CSSM_RESOURCE_CONTROL_CONTEXT'>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
<field type64='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' type='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' name='InitialAclEntry' declared_type='CSSM_ACL_ENTRY_INPUT'/>
</struct>
<struct type64='{cssm_resource_control_context=&quot;AccessCred&quot;^{cssm_access_credentials}&quot;InitialAclEntry&quot;{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}}' type='{cssm_resource_control_context=&quot;AccessCred&quot;^{cssm_access_credentials}&quot;InitialAclEntry&quot;{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}}' name='CSSM_RESOURCE_CONTROL_CONTEXT_PTR'>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
<field type64='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' type='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' name='InitialAclEntry' declared_type='CSSM_ACL_ENTRY_INPUT'/>
</struct>
<struct type='{cssm_sample=&quot;TypedSample&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Verifier&quot;^{cssm_subservice_uid}}' name='CSSM_SAMPLE'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='TypedSample' declared_type='CSSM_LIST'/>
<field type='^{cssm_subservice_uid={cssm_guid=ISS[8C]}{cssm_version=II}II}' name='Verifier' const='true' declared_type='CSSM_SUBSERVICE_UID*'/>
</struct>
<struct type='{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}' name='CSSM_SAMPLEGROUP'>
<field type='I' name='NumberOfSamples' declared_type='uint32'/>
<field type='^{cssm_sample={cssm_list=I^{cssm_list_element}^{cssm_list_element}}^{cssm_subservice_uid}}' name='Samples' const='true' declared_type='CSSM_SAMPLE*'/>
</struct>
<struct type='{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}' name='CSSM_SAMPLEGROUP_PTR'>
<field type='I' name='NumberOfSamples' declared_type='uint32'/>
<field type='^{cssm_sample={cssm_list=I^{cssm_list_element}^{cssm_list_element}}^{cssm_subservice_uid}}' name='Samples' const='true' declared_type='CSSM_SAMPLE*'/>
</struct>
<struct type='{cssm_sample=&quot;TypedSample&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Verifier&quot;^{cssm_subservice_uid}}' name='CSSM_SAMPLE_PTR'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='TypedSample' declared_type='CSSM_LIST'/>
<field type='^{cssm_subservice_uid={cssm_guid=ISS[8C]}{cssm_version=II}II}' name='Verifier' const='true' declared_type='CSSM_SUBSERVICE_UID*'/>
</struct>
<struct type64='{cssm_selection_predicate=&quot;DbOperator&quot;I&quot;Attribute&quot;{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}}' type='{cssm_selection_predicate=&quot;DbOperator&quot;I&quot;Attribute&quot;{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}}' name='CSSM_SELECTION_PREDICATE'>
<field type='I' name='DbOperator' declared_type='CSSM_DB_OPERATOR'/>
<field type64='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' type='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' name='Attribute' declared_type='CSSM_DB_ATTRIBUTE_DATA'/>
</struct>
<struct type64='{cssm_selection_predicate=&quot;DbOperator&quot;I&quot;Attribute&quot;{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}}' type='{cssm_selection_predicate=&quot;DbOperator&quot;I&quot;Attribute&quot;{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}}' name='CSSM_SELECTION_PREDICATE_PTR'>
<field type='I' name='DbOperator' declared_type='CSSM_DB_OPERATOR'/>
<field type64='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' type='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' name='Attribute' declared_type='CSSM_DB_ATTRIBUTE_DATA'/>
</struct>
<struct type='{cssm_spi_ac_funcs=&quot;AuthCompute&quot;^?&quot;PassThrough&quot;^?}' name='CSSM_SPI_AC_FUNCS'>
<field function_pointer='true' type='^?' name='AuthCompute' declared_type='CSSM_RETURN (*)(CSSM_AC_HANDLE, CSSM_TUPLEGROUP *, CSSM_TUPLEGROUP *, uint32, CSSM_LIST *, CSSM_LIST *, CSSM_LIST *, CSSM_TUPLEGROUP_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_AC_HANDLE'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' declared_type='CSSM_TUPLEGROUP_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_AC_HANDLE, CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DL_DB_LIST *, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_AC_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_ac_funcs=&quot;AuthCompute&quot;^?&quot;PassThrough&quot;^?}' name='CSSM_SPI_AC_FUNCS_PTR'>
<field function_pointer='true' type='^?' name='AuthCompute' declared_type='CSSM_RETURN (*)(CSSM_AC_HANDLE, CSSM_TUPLEGROUP *, CSSM_TUPLEGROUP *, uint32, CSSM_LIST *, CSSM_LIST *, CSSM_LIST *, CSSM_TUPLEGROUP_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_AC_HANDLE'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' declared_type='CSSM_TUPLEGROUP_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_AC_HANDLE, CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DL_DB_LIST *, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_AC_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_cl_funcs=&quot;CertCreateTemplate&quot;^?&quot;CertGetAllTemplateFields&quot;^?&quot;CertSign&quot;^?&quot;CertVerify&quot;^?&quot;CertVerifyWithKey&quot;^?&quot;CertGetFirstFieldValue&quot;^?&quot;CertGetNextFieldValue&quot;^?&quot;CertAbortQuery&quot;^?&quot;CertGetKeyInfo&quot;^?&quot;CertGetAllFields&quot;^?&quot;FreeFields&quot;^?&quot;FreeFieldValue&quot;^?&quot;CertCache&quot;^?&quot;CertGetFirstCachedFieldValue&quot;^?&quot;CertGetNextCachedFieldValue&quot;^?&quot;CertAbortCache&quot;^?&quot;CertGroupToSignedBundle&quot;^?&quot;CertGroupFromVerifiedBundle&quot;^?&quot;CertDescribeFormat&quot;^?&quot;CrlCreateTemplate&quot;^?&quot;CrlSetFields&quot;^?&quot;CrlAddCert&quot;^?&quot;CrlRemoveCert&quot;^?&quot;CrlSign&quot;^?&quot;CrlVerify&quot;^?&quot;CrlVerifyWithKey&quot;^?&quot;IsCertInCrl&quot;^?&quot;CrlGetFirstFieldValue&quot;^?&quot;CrlGetNextFieldValue&quot;^?&quot;CrlAbortQuery&quot;^?&quot;CrlGetAllFields&quot;^?&quot;CrlCache&quot;^?&quot;IsCertInCachedCrl&quot;^?&quot;CrlGetFirstCachedFieldValue&quot;^?&quot;CrlGetNextCachedFieldValue&quot;^?&quot;CrlGetAllCachedRecordFields&quot;^?&quot;CrlAbortCache&quot;^?&quot;CrlDescribeFormat&quot;^?&quot;PassThrough&quot;^?}' name='CSSM_SPI_CL_FUNCS'>
<field function_pointer='true' type='^?' name='CertCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetAllTemplateFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertSign' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_FIELD *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertVerify' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_FIELD *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertVerifyWithKey' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetFirstFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetNextFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertAbortQuery' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetKeyInfo' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_KEY_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_key}' declared_type='CSSM_KEY_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetAllFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_OID *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_HANDLE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetFirstCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetNextCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertAbortCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupToSignedBundle' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_CERTGROUP *, CSSM_CERT_BUNDLE_HEADER *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_cert_bundle_header=II}' const='true' declared_type='CSSM_CERT_BUNDLE_HEADER*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupFromVerifiedBundle' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_CERT_BUNDLE *, CSSM_DATA *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_cert_bundle={cssm_cert_bundle_header=II}{cssm_data=Q*}}' type='^{cssm_cert_bundle={cssm_cert_bundle_header=II}{cssm_data=I*}}' const='true' declared_type='CSSM_CERT_BUNDLE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertDescribeFormat' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32 *, CSSM_OID_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_OID_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlSetFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlAddCert' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32, CSSM_FIELD *, CSSM_DATA *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlRemoveCert' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlSign' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_FIELD *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlVerify' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_FIELD *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlVerifyWithKey' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='IsCertInCrl' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_BOOL *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetFirstFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetNextFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlAbortQuery' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetAllFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_HANDLE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='IsCertInCachedCrl' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_HANDLE, CSSM_BOOL *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetFirstCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA *, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetNextCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetAllCachedRecordFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlAbortCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlDescribeFormat' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32 *, CSSM_OID_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_OID_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_cl_funcs=&quot;CertCreateTemplate&quot;^?&quot;CertGetAllTemplateFields&quot;^?&quot;CertSign&quot;^?&quot;CertVerify&quot;^?&quot;CertVerifyWithKey&quot;^?&quot;CertGetFirstFieldValue&quot;^?&quot;CertGetNextFieldValue&quot;^?&quot;CertAbortQuery&quot;^?&quot;CertGetKeyInfo&quot;^?&quot;CertGetAllFields&quot;^?&quot;FreeFields&quot;^?&quot;FreeFieldValue&quot;^?&quot;CertCache&quot;^?&quot;CertGetFirstCachedFieldValue&quot;^?&quot;CertGetNextCachedFieldValue&quot;^?&quot;CertAbortCache&quot;^?&quot;CertGroupToSignedBundle&quot;^?&quot;CertGroupFromVerifiedBundle&quot;^?&quot;CertDescribeFormat&quot;^?&quot;CrlCreateTemplate&quot;^?&quot;CrlSetFields&quot;^?&quot;CrlAddCert&quot;^?&quot;CrlRemoveCert&quot;^?&quot;CrlSign&quot;^?&quot;CrlVerify&quot;^?&quot;CrlVerifyWithKey&quot;^?&quot;IsCertInCrl&quot;^?&quot;CrlGetFirstFieldValue&quot;^?&quot;CrlGetNextFieldValue&quot;^?&quot;CrlAbortQuery&quot;^?&quot;CrlGetAllFields&quot;^?&quot;CrlCache&quot;^?&quot;IsCertInCachedCrl&quot;^?&quot;CrlGetFirstCachedFieldValue&quot;^?&quot;CrlGetNextCachedFieldValue&quot;^?&quot;CrlGetAllCachedRecordFields&quot;^?&quot;CrlAbortCache&quot;^?&quot;CrlDescribeFormat&quot;^?&quot;PassThrough&quot;^?}' name='CSSM_SPI_CL_FUNCS_PTR'>
<field function_pointer='true' type='^?' name='CertCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetAllTemplateFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertSign' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_FIELD *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertVerify' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_FIELD *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertVerifyWithKey' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetFirstFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetNextFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertAbortQuery' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetKeyInfo' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_KEY_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_key}' declared_type='CSSM_KEY_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetAllFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_OID *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_HANDLE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetFirstCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetNextCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertAbortCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupToSignedBundle' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_CERTGROUP *, CSSM_CERT_BUNDLE_HEADER *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_cert_bundle_header=II}' const='true' declared_type='CSSM_CERT_BUNDLE_HEADER*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupFromVerifiedBundle' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_CERT_BUNDLE *, CSSM_DATA *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_cert_bundle={cssm_cert_bundle_header=II}{cssm_data=Q*}}' type='^{cssm_cert_bundle={cssm_cert_bundle_header=II}{cssm_data=I*}}' const='true' declared_type='CSSM_CERT_BUNDLE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertDescribeFormat' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32 *, CSSM_OID_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_OID_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlSetFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlAddCert' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32, CSSM_FIELD *, CSSM_DATA *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlRemoveCert' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlSign' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_FIELD *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlVerify' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_FIELD *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlVerifyWithKey' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='IsCertInCrl' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_BOOL *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetFirstFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetNextFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlAbortQuery' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetAllFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_HANDLE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='IsCertInCachedCrl' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_HANDLE, CSSM_BOOL *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetFirstCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA *, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetNextCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetAllCachedRecordFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlAbortCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlDescribeFormat' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32 *, CSSM_OID_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_OID_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_csp_funcs=&quot;EventNotify&quot;^?&quot;QuerySize&quot;^?&quot;SignData&quot;^?&quot;SignDataInit&quot;^?&quot;SignDataUpdate&quot;^?&quot;SignDataFinal&quot;^?&quot;VerifyData&quot;^?&quot;VerifyDataInit&quot;^?&quot;VerifyDataUpdate&quot;^?&quot;VerifyDataFinal&quot;^?&quot;DigestData&quot;^?&quot;DigestDataInit&quot;^?&quot;DigestDataUpdate&quot;^?&quot;DigestDataClone&quot;^?&quot;DigestDataFinal&quot;^?&quot;GenerateMac&quot;^?&quot;GenerateMacInit&quot;^?&quot;GenerateMacUpdate&quot;^?&quot;GenerateMacFinal&quot;^?&quot;VerifyMac&quot;^?&quot;VerifyMacInit&quot;^?&quot;VerifyMacUpdate&quot;^?&quot;VerifyMacFinal&quot;^?&quot;EncryptData&quot;^?&quot;EncryptDataInit&quot;^?&quot;EncryptDataUpdate&quot;^?&quot;EncryptDataFinal&quot;^?&quot;DecryptData&quot;^?&quot;DecryptDataInit&quot;^?&quot;DecryptDataUpdate&quot;^?&quot;DecryptDataFinal&quot;^?&quot;QueryKeySizeInBits&quot;^?&quot;GenerateKey&quot;^?&quot;GenerateKeyPair&quot;^?&quot;GenerateRandom&quot;^?&quot;GenerateAlgorithmParams&quot;^?&quot;WrapKey&quot;^?&quot;UnwrapKey&quot;^?&quot;DeriveKey&quot;^?&quot;FreeKey&quot;^?&quot;PassThrough&quot;^?&quot;Login&quot;^?&quot;Logout&quot;^?&quot;ChangeLoginAcl&quot;^?&quot;ObtainPrivateKeyFromPublicKey&quot;^?&quot;RetrieveUniqueId&quot;^?&quot;RetrieveCounter&quot;^?&quot;VerifyDevice&quot;^?&quot;GetTimeValue&quot;^?&quot;GetOperationalStatistics&quot;^?&quot;GetLoginAcl&quot;^?&quot;GetKeyAcl&quot;^?&quot;ChangeKeyAcl&quot;^?&quot;GetKeyOwner&quot;^?&quot;ChangeKeyOwner&quot;^?&quot;GetLoginOwner&quot;^?&quot;ChangeLoginOwner&quot;^?}' name='CSSM_SPI_CSP_FUNCS'>
<field function_pointer='true' type='^?' name='EventNotify' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CONTEXT_EVENT, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' declared_type='CSSM_CONTEXT_EVENT'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='QuerySize' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_BOOL, uint32, CSSM_QUERY_SIZE_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='i' declared_type='CSSM_BOOL'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_query_size_data=II}' declared_type='CSSM_QUERY_SIZE_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_ALGORITHMS, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_ALGORITHMS, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataClone' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CC_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMac' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMacInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMacUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMacFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMac' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMacInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMacUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMacFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *, CSSM_DATA_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *, CSSM_DATA_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='QueryKeySizeInBits' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_KEY *, CSSM_KEY_SIZE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_key_size=II}' declared_type='CSSM_KEY_SIZE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateKeyPair' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, uint32, CSSM_DATA *, CSSM_KEY_PTR, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateRandom' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateAlgorithmParams' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, CSSM_DATA_PTR, uint32 *, CSSM_CONTEXT_ATTRIBUTE_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_context_attribute}' declared_type='CSSM_CONTEXT_ATTRIBUTE_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='WrapKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_ACCESS_CREDENTIALS *, CSSM_KEY *, CSSM_DATA *, CSSM_WRAP_KEY_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_WRAP_KEY_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='UnwrapKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_KEY *, CSSM_WRAP_KEY *, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR, CSSM_DATA_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_WRAP_KEY*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DeriveKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA_PTR, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_KEY_PTR, CSSM_BOOL)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='i' declared_type='CSSM_BOOL'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Login' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_DATA *, void *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Logout' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeLoginAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_EDIT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' const='true' declared_type='CSSM_ACL_EDIT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ObtainPrivateKeyFromPublicKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_KEY *, CSSM_KEY_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RetrieveUniqueId' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RetrieveCounter' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDevice' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetTimeValue' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ALGORITHMS, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetOperationalStatistics' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CSP_OPERATIONAL_STATISTICS *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_csp_operational_statistics=iIIIIIIIII}' declared_type='CSSM_CSP_OPERATIONAL_STATISTICS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetLoginAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_STRING *, uint32 *, CSSM_ACL_ENTRY_INFO_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^[68c]' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetKeyAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_KEY *, CSSM_STRING *, uint32 *, CSSM_ACL_ENTRY_INFO_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^[68c]' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeKeyAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_EDIT *, CSSM_KEY *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' const='true' declared_type='CSSM_ACL_EDIT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetKeyOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_KEY *, CSSM_ACL_OWNER_PROTOTYPE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeKeyOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_KEY *, CSSM_ACL_OWNER_PROTOTYPE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetLoginOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACL_OWNER_PROTOTYPE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeLoginOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_OWNER_PROTOTYPE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_csp_funcs=&quot;EventNotify&quot;^?&quot;QuerySize&quot;^?&quot;SignData&quot;^?&quot;SignDataInit&quot;^?&quot;SignDataUpdate&quot;^?&quot;SignDataFinal&quot;^?&quot;VerifyData&quot;^?&quot;VerifyDataInit&quot;^?&quot;VerifyDataUpdate&quot;^?&quot;VerifyDataFinal&quot;^?&quot;DigestData&quot;^?&quot;DigestDataInit&quot;^?&quot;DigestDataUpdate&quot;^?&quot;DigestDataClone&quot;^?&quot;DigestDataFinal&quot;^?&quot;GenerateMac&quot;^?&quot;GenerateMacInit&quot;^?&quot;GenerateMacUpdate&quot;^?&quot;GenerateMacFinal&quot;^?&quot;VerifyMac&quot;^?&quot;VerifyMacInit&quot;^?&quot;VerifyMacUpdate&quot;^?&quot;VerifyMacFinal&quot;^?&quot;EncryptData&quot;^?&quot;EncryptDataInit&quot;^?&quot;EncryptDataUpdate&quot;^?&quot;EncryptDataFinal&quot;^?&quot;DecryptData&quot;^?&quot;DecryptDataInit&quot;^?&quot;DecryptDataUpdate&quot;^?&quot;DecryptDataFinal&quot;^?&quot;QueryKeySizeInBits&quot;^?&quot;GenerateKey&quot;^?&quot;GenerateKeyPair&quot;^?&quot;GenerateRandom&quot;^?&quot;GenerateAlgorithmParams&quot;^?&quot;WrapKey&quot;^?&quot;UnwrapKey&quot;^?&quot;DeriveKey&quot;^?&quot;FreeKey&quot;^?&quot;PassThrough&quot;^?&quot;Login&quot;^?&quot;Logout&quot;^?&quot;ChangeLoginAcl&quot;^?&quot;ObtainPrivateKeyFromPublicKey&quot;^?&quot;RetrieveUniqueId&quot;^?&quot;RetrieveCounter&quot;^?&quot;VerifyDevice&quot;^?&quot;GetTimeValue&quot;^?&quot;GetOperationalStatistics&quot;^?&quot;GetLoginAcl&quot;^?&quot;GetKeyAcl&quot;^?&quot;ChangeKeyAcl&quot;^?&quot;GetKeyOwner&quot;^?&quot;ChangeKeyOwner&quot;^?&quot;GetLoginOwner&quot;^?&quot;ChangeLoginOwner&quot;^?}' name='CSSM_SPI_CSP_FUNCS_PTR'>
<field function_pointer='true' type='^?' name='EventNotify' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CONTEXT_EVENT, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' declared_type='CSSM_CONTEXT_EVENT'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='QuerySize' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_BOOL, uint32, CSSM_QUERY_SIZE_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='i' declared_type='CSSM_BOOL'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_query_size_data=II}' declared_type='CSSM_QUERY_SIZE_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_ALGORITHMS, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_ALGORITHMS, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataClone' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CC_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMac' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMacInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMacUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMacFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMac' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMacInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMacUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMacFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *, CSSM_DATA_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *, CSSM_DATA_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='QueryKeySizeInBits' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_KEY *, CSSM_KEY_SIZE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_key_size=II}' declared_type='CSSM_KEY_SIZE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateKeyPair' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, uint32, CSSM_DATA *, CSSM_KEY_PTR, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateRandom' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateAlgorithmParams' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, CSSM_DATA_PTR, uint32 *, CSSM_CONTEXT_ATTRIBUTE_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_context_attribute}' declared_type='CSSM_CONTEXT_ATTRIBUTE_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='WrapKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_ACCESS_CREDENTIALS *, CSSM_KEY *, CSSM_DATA *, CSSM_WRAP_KEY_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_WRAP_KEY_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='UnwrapKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_KEY *, CSSM_WRAP_KEY *, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR, CSSM_DATA_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_WRAP_KEY*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DeriveKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA_PTR, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_KEY_PTR, CSSM_BOOL)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='i' declared_type='CSSM_BOOL'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Login' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_DATA *, void *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Logout' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeLoginAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_EDIT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' const='true' declared_type='CSSM_ACL_EDIT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ObtainPrivateKeyFromPublicKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_KEY *, CSSM_KEY_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RetrieveUniqueId' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RetrieveCounter' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDevice' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetTimeValue' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ALGORITHMS, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetOperationalStatistics' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CSP_OPERATIONAL_STATISTICS *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_csp_operational_statistics=iIIIIIIIII}' declared_type='CSSM_CSP_OPERATIONAL_STATISTICS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetLoginAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_STRING *, uint32 *, CSSM_ACL_ENTRY_INFO_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^[68c]' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetKeyAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_KEY *, CSSM_STRING *, uint32 *, CSSM_ACL_ENTRY_INFO_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^[68c]' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeKeyAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_EDIT *, CSSM_KEY *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' const='true' declared_type='CSSM_ACL_EDIT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetKeyOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_KEY *, CSSM_ACL_OWNER_PROTOTYPE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeKeyOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_KEY *, CSSM_ACL_OWNER_PROTOTYPE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetLoginOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACL_OWNER_PROTOTYPE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeLoginOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_OWNER_PROTOTYPE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_dl_funcs=&quot;DbOpen&quot;^?&quot;DbClose&quot;^?&quot;DbCreate&quot;^?&quot;DbDelete&quot;^?&quot;CreateRelation&quot;^?&quot;DestroyRelation&quot;^?&quot;Authenticate&quot;^?&quot;GetDbAcl&quot;^?&quot;ChangeDbAcl&quot;^?&quot;GetDbOwner&quot;^?&quot;ChangeDbOwner&quot;^?&quot;GetDbNames&quot;^?&quot;GetDbNameFromHandle&quot;^?&quot;FreeNameList&quot;^?&quot;DataInsert&quot;^?&quot;DataDelete&quot;^?&quot;DataModify&quot;^?&quot;DataGetFirst&quot;^?&quot;DataGetNext&quot;^?&quot;DataAbortQuery&quot;^?&quot;DataGetFromUniqueRecordId&quot;^?&quot;FreeUniqueRecord&quot;^?&quot;PassThrough&quot;^?}' name='CSSM_SPI_DL_FUNCS'>
<field function_pointer='true' type='^?' name='DbOpen' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_DB_ACCESS_TYPE, CSSM_ACCESS_CREDENTIALS *, void *, CSSM_DB_HANDLE *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbClose' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbCreate' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_DBINFO *, CSSM_DB_ACCESS_TYPE, CSSM_RESOURCE_CONTROL_CONTEXT *, void *, CSSM_DB_HANDLE *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='^{cssm_dbinfo=I^{cssm_db_parsing_module_info}^{cssm_db_record_attribute_info}^{cssm_db_record_index_info}i*^v}' const='true' declared_type='CSSM_DBINFO*'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbDelete' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_ACCESS_CREDENTIALS *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CreateRelation' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE, char *, uint32, CSSM_DB_SCHEMA_ATTRIBUTE_INFO *, uint32, CSSM_DB_SCHEMA_INDEX_INFO *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_db_schema_attribute_info=I*{cssm_data=Q*}I}' type='^{cssm_db_schema_attribute_info=I*{cssm_data=I*}I}' const='true' declared_type='CSSM_DB_SCHEMA_ATTRIBUTE_INFO*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_db_schema_index_info=IIII}' const='true' declared_type='CSSM_DB_SCHEMA_INDEX_INFO*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DestroyRelation' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Authenticate' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_ACCESS_TYPE, CSSM_ACCESS_CREDENTIALS *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbAcl' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_STRING *, uint32 *, CSSM_ACL_ENTRY_INFO_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^[68c]' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeDbAcl' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_EDIT *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' const='true' declared_type='CSSM_ACL_EDIT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbOwner' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_ACL_OWNER_PROTOTYPE_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeDbOwner' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_OWNER_PROTOTYPE *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNames' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, CSSM_NAME_LIST_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='^^{cssm_name_list}' declared_type='CSSM_NAME_LIST_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNameFromHandle' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, char **)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^*' declared_type='char**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeNameList' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, CSSM_NAME_LIST_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='^{cssm_name_list=I^*}' declared_type='CSSM_NAME_LIST_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataInsert' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataDelete' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataModify' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_UNIQUE_RECORD_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_MODIFY_MODE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_DB_MODIFY_MODE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFirst' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_QUERY *, CSSM_HANDLE_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^{cssm_query=III^{cssm_selection_predicate}{cssm_query_limits=II}I}' const='true' declared_type='CSSM_QUERY*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetNext' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_HANDLE, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataAbortQuery' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFromUniqueRecordId' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeUniqueRecord' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_UNIQUE_RECORD_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, uint32, void *, void **)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_dl_funcs=&quot;DbOpen&quot;^?&quot;DbClose&quot;^?&quot;DbCreate&quot;^?&quot;DbDelete&quot;^?&quot;CreateRelation&quot;^?&quot;DestroyRelation&quot;^?&quot;Authenticate&quot;^?&quot;GetDbAcl&quot;^?&quot;ChangeDbAcl&quot;^?&quot;GetDbOwner&quot;^?&quot;ChangeDbOwner&quot;^?&quot;GetDbNames&quot;^?&quot;GetDbNameFromHandle&quot;^?&quot;FreeNameList&quot;^?&quot;DataInsert&quot;^?&quot;DataDelete&quot;^?&quot;DataModify&quot;^?&quot;DataGetFirst&quot;^?&quot;DataGetNext&quot;^?&quot;DataAbortQuery&quot;^?&quot;DataGetFromUniqueRecordId&quot;^?&quot;FreeUniqueRecord&quot;^?&quot;PassThrough&quot;^?}' name='CSSM_SPI_DL_FUNCS_PTR'>
<field function_pointer='true' type='^?' name='DbOpen' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_DB_ACCESS_TYPE, CSSM_ACCESS_CREDENTIALS *, void *, CSSM_DB_HANDLE *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbClose' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbCreate' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_DBINFO *, CSSM_DB_ACCESS_TYPE, CSSM_RESOURCE_CONTROL_CONTEXT *, void *, CSSM_DB_HANDLE *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='^{cssm_dbinfo=I^{cssm_db_parsing_module_info}^{cssm_db_record_attribute_info}^{cssm_db_record_index_info}i*^v}' const='true' declared_type='CSSM_DBINFO*'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbDelete' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_ACCESS_CREDENTIALS *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CreateRelation' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE, char *, uint32, CSSM_DB_SCHEMA_ATTRIBUTE_INFO *, uint32, CSSM_DB_SCHEMA_INDEX_INFO *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_db_schema_attribute_info=I*{cssm_data=Q*}I}' type='^{cssm_db_schema_attribute_info=I*{cssm_data=I*}I}' const='true' declared_type='CSSM_DB_SCHEMA_ATTRIBUTE_INFO*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_db_schema_index_info=IIII}' const='true' declared_type='CSSM_DB_SCHEMA_INDEX_INFO*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DestroyRelation' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Authenticate' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_ACCESS_TYPE, CSSM_ACCESS_CREDENTIALS *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbAcl' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_STRING *, uint32 *, CSSM_ACL_ENTRY_INFO_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^[68c]' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeDbAcl' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_EDIT *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' const='true' declared_type='CSSM_ACL_EDIT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbOwner' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_ACL_OWNER_PROTOTYPE_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeDbOwner' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_OWNER_PROTOTYPE *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNames' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, CSSM_NAME_LIST_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='^^{cssm_name_list}' declared_type='CSSM_NAME_LIST_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNameFromHandle' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, char **)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^*' declared_type='char**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeNameList' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, CSSM_NAME_LIST_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='^{cssm_name_list=I^*}' declared_type='CSSM_NAME_LIST_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataInsert' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataDelete' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataModify' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_UNIQUE_RECORD_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_MODIFY_MODE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_DB_MODIFY_MODE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFirst' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_QUERY *, CSSM_HANDLE_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^{cssm_query=III^{cssm_selection_predicate}{cssm_query_limits=II}I}' const='true' declared_type='CSSM_QUERY*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetNext' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_HANDLE, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataAbortQuery' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFromUniqueRecordId' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeUniqueRecord' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_UNIQUE_RECORD_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, uint32, void *, void **)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_kr_funcs=&quot;RegistrationRequest&quot;^?&quot;RegistrationRetrieve&quot;^?&quot;GenerateRecoveryFields&quot;^?&quot;ProcessRecoveryFields&quot;^?&quot;RecoveryRequest&quot;^?&quot;RecoveryRetrieve&quot;^?&quot;GetRecoveredObject&quot;^?&quot;RecoveryRequestAbort&quot;^?&quot;PassThrough&quot;^?}' name='CSSM_SPI_KR_FUNCS'>
<field function_pointer='true' type='^?' name='RegistrationRequest' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_ACCESS_CREDENTIALS *, CSSM_KR_POLICY_FLAGS, sint32 *, CSSM_HANDLE_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='I' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RegistrationRetrieve' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE, sint32 *, CSSM_KR_PROFILE_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^i' declared_type='sint32*'/>
<arg type='^{cssm_kr_profile={cssm_kr_name=CC*}^{cssm_certgroup}^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}^{cssm_data}I^{cssm_data}}' declared_type='CSSM_KR_PROFILE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateRecoveryFields' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_KR_POLICY_FLAGS, CSSM_DATA_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ProcessRecoveryFields' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_KR_POLICY_FLAGS, CSSM_DATA *)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RecoveryRequest' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_ACCESS_CREDENTIALS *, sint32 *, CSSM_HANDLE_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RecoveryRetrieve' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE, sint32 *, CSSM_HANDLE_PTR, uint32 *)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetRecoveredObject' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE, uint32, CSSM_CSP_HANDLE, CSSM_RESOURCE_CONTROL_CONTEXT *, uint32, CSSM_KEY_PTR, CSSM_DATA_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RecoveryRequestAbort' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, void *, void **)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_kr_funcs=&quot;RegistrationRequest&quot;^?&quot;RegistrationRetrieve&quot;^?&quot;GenerateRecoveryFields&quot;^?&quot;ProcessRecoveryFields&quot;^?&quot;RecoveryRequest&quot;^?&quot;RecoveryRetrieve&quot;^?&quot;GetRecoveredObject&quot;^?&quot;RecoveryRequestAbort&quot;^?&quot;PassThrough&quot;^?}' name='CSSM_SPI_KR_FUNCS_PTR'>
<field function_pointer='true' type='^?' name='RegistrationRequest' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_ACCESS_CREDENTIALS *, CSSM_KR_POLICY_FLAGS, sint32 *, CSSM_HANDLE_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='I' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RegistrationRetrieve' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE, sint32 *, CSSM_KR_PROFILE_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^i' declared_type='sint32*'/>
<arg type='^{cssm_kr_profile={cssm_kr_name=CC*}^{cssm_certgroup}^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}^{cssm_data}I^{cssm_data}}' declared_type='CSSM_KR_PROFILE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateRecoveryFields' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_KR_POLICY_FLAGS, CSSM_DATA_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ProcessRecoveryFields' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_KR_POLICY_FLAGS, CSSM_DATA *)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RecoveryRequest' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_ACCESS_CREDENTIALS *, sint32 *, CSSM_HANDLE_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RecoveryRetrieve' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE, sint32 *, CSSM_HANDLE_PTR, uint32 *)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetRecoveredObject' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE, uint32, CSSM_CSP_HANDLE, CSSM_RESOURCE_CONTROL_CONTEXT *, uint32, CSSM_KEY_PTR, CSSM_DATA_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RecoveryRequestAbort' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, void *, void **)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_tp_funcs=&quot;SubmitCredRequest&quot;^?&quot;RetrieveCredResult&quot;^?&quot;ConfirmCredResult&quot;^?&quot;ReceiveConfirmation&quot;^?&quot;CertReclaimKey&quot;^?&quot;CertReclaimAbort&quot;^?&quot;FormRequest&quot;^?&quot;FormSubmit&quot;^?&quot;CertGroupVerify&quot;^?&quot;CertCreateTemplate&quot;^?&quot;CertGetAllTemplateFields&quot;^?&quot;CertSign&quot;^?&quot;CrlVerify&quot;^?&quot;CrlCreateTemplate&quot;^?&quot;CertRevoke&quot;^?&quot;CertRemoveFromCrlTemplate&quot;^?&quot;CrlSign&quot;^?&quot;ApplyCrlToDb&quot;^?&quot;CertGroupConstruct&quot;^?&quot;CertGroupPrune&quot;^?&quot;CertGroupToTupleGroup&quot;^?&quot;TupleGroupToCertGroup&quot;^?&quot;PassThrough&quot;^?}' name='CSSM_SPI_TP_FUNCS'>
<field function_pointer='true' type='^?' name='SubmitCredRequest' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_TP_AUTHORITY_ID *, CSSM_TP_AUTHORITY_REQUEST_TYPE, CSSM_TP_REQUEST_SET *, CSSM_TP_CALLERAUTH_CONTEXT *, sint32 *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='I' declared_type='CSSM_TP_AUTHORITY_REQUEST_TYPE'/>
<arg type='^{cssm_tp_request_set=I^v}' const='true' declared_type='CSSM_TP_REQUEST_SET*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RetrieveCredResult' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_DATA *, CSSM_TP_CALLERAUTH_CONTEXT *, sint32 *, CSSM_BOOL *, CSSM_TP_RESULT_SET_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^i' declared_type='sint32*'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<arg type='^^{cssm_tp_result_set}' declared_type='CSSM_TP_RESULT_SET_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ConfirmCredResult' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_DATA *, CSSM_TP_CALLERAUTH_CONTEXT *, CSSM_TP_CONFIRM_RESPONSE *, CSSM_TP_AUTHORITY_ID *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^{cssm_tp_confirm_response=I^I}' const='true' declared_type='CSSM_TP_CONFIRM_RESPONSE*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ReceiveConfirmation' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_DATA *, CSSM_TP_CONFIRM_RESPONSE_PTR *, sint32 *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_tp_confirm_response}' declared_type='CSSM_TP_CONFIRM_RESPONSE_PTR*'/>
<arg type='^i' declared_type='sint32*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertReclaimKey' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CERTGROUP *, uint32, CSSM_LONG_HANDLE, CSSM_CSP_HANDLE, CSSM_RESOURCE_CONTROL_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='I' declared_type='uint32'/>
<arg type='Q' declared_type='CSSM_LONG_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertReclaimAbort' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_LONG_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='Q' declared_type='CSSM_LONG_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FormRequest' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_TP_AUTHORITY_ID *, CSSM_TP_FORM_TYPE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='I' declared_type='CSSM_TP_FORM_TYPE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FormSubmit' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_TP_FORM_TYPE, CSSM_DATA *, CSSM_TP_AUTHORITY_ID *, CSSM_TP_AUTHORITY_ID *, CSSM_ACCESS_CREDENTIALS_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='I' declared_type='CSSM_TP_FORM_TYPE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupVerify' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetAllTemplateFields' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertSign' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlVerify' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_ENCODED_CRL *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertRevoke' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_DATA *, CSSM_CERTGROUP *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_TP_CERTCHANGE_REASON, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type='I' declared_type='CSSM_TP_CERTCHANGE_REASON'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertRemoveFromCrlTemplate' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_DATA *, CSSM_CERTGROUP *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlSign' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_ENCODED_CRL *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ApplyCrlToDb' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_ENCODED_CRL *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupConstruct' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_DL_DB_LIST *, void *, CSSM_CERTGROUP *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupPrune' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_DL_DB_LIST *, CSSM_CERTGROUP *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupToTupleGroup' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CERTGROUP *, CSSM_TUPLEGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' declared_type='CSSM_TUPLEGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='TupleGroupToCertGroup' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_TUPLEGROUP *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DL_DB_LIST *, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_tp_funcs=&quot;SubmitCredRequest&quot;^?&quot;RetrieveCredResult&quot;^?&quot;ConfirmCredResult&quot;^?&quot;ReceiveConfirmation&quot;^?&quot;CertReclaimKey&quot;^?&quot;CertReclaimAbort&quot;^?&quot;FormRequest&quot;^?&quot;FormSubmit&quot;^?&quot;CertGroupVerify&quot;^?&quot;CertCreateTemplate&quot;^?&quot;CertGetAllTemplateFields&quot;^?&quot;CertSign&quot;^?&quot;CrlVerify&quot;^?&quot;CrlCreateTemplate&quot;^?&quot;CertRevoke&quot;^?&quot;CertRemoveFromCrlTemplate&quot;^?&quot;CrlSign&quot;^?&quot;ApplyCrlToDb&quot;^?&quot;CertGroupConstruct&quot;^?&quot;CertGroupPrune&quot;^?&quot;CertGroupToTupleGroup&quot;^?&quot;TupleGroupToCertGroup&quot;^?&quot;PassThrough&quot;^?}' name='CSSM_SPI_TP_FUNCS_PTR'>
<field function_pointer='true' type='^?' name='SubmitCredRequest' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_TP_AUTHORITY_ID *, CSSM_TP_AUTHORITY_REQUEST_TYPE, CSSM_TP_REQUEST_SET *, CSSM_TP_CALLERAUTH_CONTEXT *, sint32 *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='I' declared_type='CSSM_TP_AUTHORITY_REQUEST_TYPE'/>
<arg type='^{cssm_tp_request_set=I^v}' const='true' declared_type='CSSM_TP_REQUEST_SET*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RetrieveCredResult' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_DATA *, CSSM_TP_CALLERAUTH_CONTEXT *, sint32 *, CSSM_BOOL *, CSSM_TP_RESULT_SET_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^i' declared_type='sint32*'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<arg type='^^{cssm_tp_result_set}' declared_type='CSSM_TP_RESULT_SET_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ConfirmCredResult' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_DATA *, CSSM_TP_CALLERAUTH_CONTEXT *, CSSM_TP_CONFIRM_RESPONSE *, CSSM_TP_AUTHORITY_ID *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^{cssm_tp_confirm_response=I^I}' const='true' declared_type='CSSM_TP_CONFIRM_RESPONSE*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ReceiveConfirmation' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_DATA *, CSSM_TP_CONFIRM_RESPONSE_PTR *, sint32 *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_tp_confirm_response}' declared_type='CSSM_TP_CONFIRM_RESPONSE_PTR*'/>
<arg type='^i' declared_type='sint32*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertReclaimKey' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CERTGROUP *, uint32, CSSM_LONG_HANDLE, CSSM_CSP_HANDLE, CSSM_RESOURCE_CONTROL_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='I' declared_type='uint32'/>
<arg type='Q' declared_type='CSSM_LONG_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertReclaimAbort' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_LONG_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='Q' declared_type='CSSM_LONG_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FormRequest' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_TP_AUTHORITY_ID *, CSSM_TP_FORM_TYPE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='I' declared_type='CSSM_TP_FORM_TYPE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FormSubmit' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_TP_FORM_TYPE, CSSM_DATA *, CSSM_TP_AUTHORITY_ID *, CSSM_TP_AUTHORITY_ID *, CSSM_ACCESS_CREDENTIALS_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='I' declared_type='CSSM_TP_FORM_TYPE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupVerify' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetAllTemplateFields' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertSign' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlVerify' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_ENCODED_CRL *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertRevoke' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_DATA *, CSSM_CERTGROUP *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_TP_CERTCHANGE_REASON, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type='I' declared_type='CSSM_TP_CERTCHANGE_REASON'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertRemoveFromCrlTemplate' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_DATA *, CSSM_CERTGROUP *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlSign' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_ENCODED_CRL *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ApplyCrlToDb' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_ENCODED_CRL *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupConstruct' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_DL_DB_LIST *, void *, CSSM_CERTGROUP *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupPrune' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_DL_DB_LIST *, CSSM_CERTGROUP *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupToTupleGroup' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CERTGROUP *, CSSM_TUPLEGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' declared_type='CSSM_TUPLEGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='TupleGroupToCertGroup' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_TUPLEGROUP *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DL_DB_LIST *, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_state_funcs=&quot;cssm_GetAttachFunctions&quot;^?&quot;cssm_ReleaseAttachFunctions&quot;^?&quot;cssm_GetAppMemoryFunctions&quot;^?&quot;cssm_IsFuncCallValid&quot;^?&quot;cssm_DeregisterManagerServices&quot;^?&quot;cssm_DeliverModuleManagerEvent&quot;^?}' name='CSSM_STATE_FUNCS'>
<field function_pointer='true' type='^?' name='cssm_GetAttachFunctions' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_SERVICE_MASK, void **, CSSM_GUID_PTR, CSSM_BOOL *)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='I' declared_type='CSSM_SERVICE_MASK'/>
<arg type='^^v' declared_type='void**'/>
<arg type='^{cssm_guid=ISS[8C]}' declared_type='CSSM_GUID_PTR'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_ReleaseAttachFunctions' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_GetAppMemoryFunctions' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_UPCALLS_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^{cssm_upcalls=^?^?^?^?^?^?}' declared_type='CSSM_UPCALLS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_IsFuncCallValid' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_PROC_ADDR, CSSM_PROC_ADDR, CSSM_PRIVILEGE, CSSM_PRIVILEGE *, CSSM_BITMASK, CSSM_BOOL *)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^?' declared_type='CSSM_PROC_ADDR'/>
<arg type='^?' declared_type='CSSM_PROC_ADDR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<arg type='^Q' declared_type='CSSM_PRIVILEGE*'/>
<arg type='I' declared_type='CSSM_BITMASK'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_DeregisterManagerServices' declared_type='CSSM_RETURN (*)(CSSM_GUID *)'>
<arg type='^{cssm_guid=ISS[8C]}' const='true' declared_type='CSSM_GUID*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_DeliverModuleManagerEvent' declared_type='CSSM_RETURN (*)(CSSM_MANAGER_EVENT_NOTIFICATION *)'>
<arg type64='^{cssm_manager_event_notification=IIII{cssm_data=Q*}}' type='^{cssm_manager_event_notification=IIII{cssm_data=I*}}' const='true' declared_type='CSSM_MANAGER_EVENT_NOTIFICATION*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_state_funcs=&quot;cssm_GetAttachFunctions&quot;^?&quot;cssm_ReleaseAttachFunctions&quot;^?&quot;cssm_GetAppMemoryFunctions&quot;^?&quot;cssm_IsFuncCallValid&quot;^?&quot;cssm_DeregisterManagerServices&quot;^?&quot;cssm_DeliverModuleManagerEvent&quot;^?}' name='CSSM_STATE_FUNCS_PTR'>
<field function_pointer='true' type='^?' name='cssm_GetAttachFunctions' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_SERVICE_MASK, void **, CSSM_GUID_PTR, CSSM_BOOL *)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='I' declared_type='CSSM_SERVICE_MASK'/>
<arg type='^^v' declared_type='void**'/>
<arg type='^{cssm_guid=ISS[8C]}' declared_type='CSSM_GUID_PTR'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_ReleaseAttachFunctions' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_GetAppMemoryFunctions' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_UPCALLS_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^{cssm_upcalls=^?^?^?^?^?^?}' declared_type='CSSM_UPCALLS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_IsFuncCallValid' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_PROC_ADDR, CSSM_PROC_ADDR, CSSM_PRIVILEGE, CSSM_PRIVILEGE *, CSSM_BITMASK, CSSM_BOOL *)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^?' declared_type='CSSM_PROC_ADDR'/>
<arg type='^?' declared_type='CSSM_PROC_ADDR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<arg type='^Q' declared_type='CSSM_PRIVILEGE*'/>
<arg type='I' declared_type='CSSM_BITMASK'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_DeregisterManagerServices' declared_type='CSSM_RETURN (*)(CSSM_GUID *)'>
<arg type='^{cssm_guid=ISS[8C]}' const='true' declared_type='CSSM_GUID*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_DeliverModuleManagerEvent' declared_type='CSSM_RETURN (*)(CSSM_MANAGER_EVENT_NOTIFICATION *)'>
<arg type64='^{cssm_manager_event_notification=IIII{cssm_data=Q*}}' type='^{cssm_manager_event_notification=IIII{cssm_data=I*}}' const='true' declared_type='CSSM_MANAGER_EVENT_NOTIFICATION*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}' name='CSSM_SUBSERVICE_UID'>
<field type='{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}' name='Guid' declared_type='CSSM_GUID'/>
<field type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='Version' declared_type='CSSM_VERSION'/>
<field type='I' name='SubserviceId' declared_type='uint32'/>
<field type='I' name='SubserviceType' declared_type='CSSM_SERVICE_TYPE'/>
</struct>
<struct type='{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}' name='CSSM_SUBSERVICE_UID_PTR'>
<field type='{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}' name='Guid' declared_type='CSSM_GUID'/>
<field type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='Version' declared_type='CSSM_VERSION'/>
<field type='I' name='SubserviceId' declared_type='uint32'/>
<field type='I' name='SubserviceType' declared_type='CSSM_SERVICE_TYPE'/>
</struct>
<struct type='{_CSSM_TP_APPLE_EVIDENCE_HEADER=&quot;Version&quot;I}' name='CSSM_TP_APPLE_EVIDENCE_HEADER'>
<field type='I' name='Version' declared_type='uint32'/>
</struct>
<struct type64='{_CSSM_TP_APPLE_EVIDENCE_INFO=&quot;StatusBits&quot;I&quot;NumStatusCodes&quot;I&quot;StatusCodes&quot;^i&quot;Index&quot;I&quot;DlDbHandle&quot;{cssm_dl_db_handle=&quot;DLHandle&quot;q&quot;DBHandle&quot;q}&quot;UniqueRecord&quot;^{cssm_db_unique_record}}' type='{_CSSM_TP_APPLE_EVIDENCE_INFO=&quot;StatusBits&quot;I&quot;NumStatusCodes&quot;I&quot;StatusCodes&quot;^i&quot;Index&quot;I&quot;DlDbHandle&quot;{cssm_dl_db_handle=&quot;DLHandle&quot;i&quot;DBHandle&quot;i}&quot;UniqueRecord&quot;^{cssm_db_unique_record}}' name='CSSM_TP_APPLE_EVIDENCE_INFO'>
<field type='I' name='StatusBits' declared_type='CSSM_TP_APPLE_CERT_STATUS'/>
<field type='I' name='NumStatusCodes' declared_type='uint32'/>
<field type='^i' name='StatusCodes' declared_type='CSSM_RETURN*'/>
<field type='I' name='Index' declared_type='uint32'/>
<field type64='{cssm_dl_db_handle=&quot;DLHandle&quot;q&quot;DBHandle&quot;q}' type='{cssm_dl_db_handle=&quot;DLHandle&quot;i&quot;DBHandle&quot;i}' name='DlDbHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<field type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' name='UniqueRecord' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
</struct>
<struct type='{cssm_tp_authority_id=&quot;AuthorityCert&quot;^{cssm_data}&quot;AuthorityLocation&quot;^{cssm_net_address}}' name='CSSM_TP_AUTHORITY_ID'>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='AuthorityCert' declared_type='CSSM_DATA*'/>
<field type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' name='AuthorityLocation' declared_type='CSSM_NET_ADDRESS_PTR'/>
</struct>
<struct type='{cssm_tp_authority_id=&quot;AuthorityCert&quot;^{cssm_data}&quot;AuthorityLocation&quot;^{cssm_net_address}}' name='CSSM_TP_AUTHORITY_ID_PTR'>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='AuthorityCert' declared_type='CSSM_DATA*'/>
<field type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' name='AuthorityLocation' declared_type='CSSM_NET_ADDRESS_PTR'/>
</struct>
<struct type='{cssm_tp_callerauth_context=&quot;Policy&quot;{cssm_tp_policyinfo=&quot;NumberOfPolicyIds&quot;I&quot;PolicyIds&quot;^{cssm_field}&quot;PolicyControl&quot;^v}&quot;VerifyTime&quot;*&quot;VerificationAbortOn&quot;I&quot;CallbackWithVerifiedCert&quot;^?&quot;NumberOfAnchorCerts&quot;I&quot;AnchorCerts&quot;^{cssm_data}&quot;DBList&quot;^{cssm_dl_db_list}&quot;CallerCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CALLERAUTH_CONTEXT'>
<field type='{cssm_tp_policyinfo=&quot;NumberOfPolicyIds&quot;I&quot;PolicyIds&quot;^{cssm_field}&quot;PolicyControl&quot;^v}' name='Policy' declared_type='CSSM_TP_POLICYINFO'/>
<field type='*' name='VerifyTime' declared_type='CSSM_TIMESTRING'/>
<field type='I' name='VerificationAbortOn' declared_type='CSSM_TP_STOP_ON'/>
<field function_pointer='true' type='^?' name='CallbackWithVerifiedCert' declared_type='CSSM_TP_VERIFICATION_RESULTS_CALLBACK'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^v' declared_type='void*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='I' name='NumberOfAnchorCerts' declared_type='uint32'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='AnchorCerts' declared_type='CSSM_DATA_PTR'/>
<field type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' name='DBList' declared_type='CSSM_DL_DB_LIST_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='CallerCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type='{cssm_tp_callerauth_context=&quot;Policy&quot;{cssm_tp_policyinfo=&quot;NumberOfPolicyIds&quot;I&quot;PolicyIds&quot;^{cssm_field}&quot;PolicyControl&quot;^v}&quot;VerifyTime&quot;*&quot;VerificationAbortOn&quot;I&quot;CallbackWithVerifiedCert&quot;^?&quot;NumberOfAnchorCerts&quot;I&quot;AnchorCerts&quot;^{cssm_data}&quot;DBList&quot;^{cssm_dl_db_list}&quot;CallerCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CALLERAUTH_CONTEXT_PTR'>
<field type='{cssm_tp_policyinfo=&quot;NumberOfPolicyIds&quot;I&quot;PolicyIds&quot;^{cssm_field}&quot;PolicyControl&quot;^v}' name='Policy' declared_type='CSSM_TP_POLICYINFO'/>
<field type='*' name='VerifyTime' declared_type='CSSM_TIMESTRING'/>
<field type='I' name='VerificationAbortOn' declared_type='CSSM_TP_STOP_ON'/>
<field function_pointer='true' type='^?' name='CallbackWithVerifiedCert' declared_type='CSSM_TP_VERIFICATION_RESULTS_CALLBACK'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^v' declared_type='void*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='I' name='NumberOfAnchorCerts' declared_type='uint32'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='AnchorCerts' declared_type='CSSM_DATA_PTR'/>
<field type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' name='DBList' declared_type='CSSM_DL_DB_LIST_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='CallerCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type64='{cssm_tp_certchange_input=&quot;Action&quot;I&quot;Reason&quot;I&quot;CLHandle&quot;q&quot;Cert&quot;^{cssm_data}&quot;ChangeInfo&quot;^{cssm_field}&quot;StartTime&quot;*&quot;CallerCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certchange_input=&quot;Action&quot;I&quot;Reason&quot;I&quot;CLHandle&quot;i&quot;Cert&quot;^{cssm_data}&quot;ChangeInfo&quot;^{cssm_field}&quot;StartTime&quot;*&quot;CallerCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CERTCHANGE_INPUT'>
<field type='I' name='Action' declared_type='CSSM_TP_CERTCHANGE_ACTION'/>
<field type='I' name='Reason' declared_type='CSSM_TP_CERTCHANGE_REASON'/>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' declared_type='CSSM_DATA_PTR'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='ChangeInfo' declared_type='CSSM_FIELD_PTR'/>
<field type='*' name='StartTime' declared_type='CSSM_TIMESTRING'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='CallerCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type64='{cssm_tp_certchange_input=&quot;Action&quot;I&quot;Reason&quot;I&quot;CLHandle&quot;q&quot;Cert&quot;^{cssm_data}&quot;ChangeInfo&quot;^{cssm_field}&quot;StartTime&quot;*&quot;CallerCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certchange_input=&quot;Action&quot;I&quot;Reason&quot;I&quot;CLHandle&quot;i&quot;Cert&quot;^{cssm_data}&quot;ChangeInfo&quot;^{cssm_field}&quot;StartTime&quot;*&quot;CallerCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CERTCHANGE_INPUT_PTR'>
<field type='I' name='Action' declared_type='CSSM_TP_CERTCHANGE_ACTION'/>
<field type='I' name='Reason' declared_type='CSSM_TP_CERTCHANGE_REASON'/>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' declared_type='CSSM_DATA_PTR'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='ChangeInfo' declared_type='CSSM_FIELD_PTR'/>
<field type='*' name='StartTime' declared_type='CSSM_TIMESTRING'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='CallerCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type64='{cssm_tp_certchange_output=&quot;ActionStatus&quot;I&quot;RevokeInfo&quot;{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{cssm_tp_certchange_output=&quot;ActionStatus&quot;I&quot;RevokeInfo&quot;{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='CSSM_TP_CERTCHANGE_OUTPUT'>
<field type='I' name='ActionStatus' declared_type='CSSM_TP_CERTCHANGE_STATUS'/>
<field type64='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='RevokeInfo' declared_type='CSSM_FIELD'/>
</struct>
<struct type64='{cssm_tp_certchange_output=&quot;ActionStatus&quot;I&quot;RevokeInfo&quot;{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{cssm_tp_certchange_output=&quot;ActionStatus&quot;I&quot;RevokeInfo&quot;{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='CSSM_TP_CERTCHANGE_OUTPUT_PTR'>
<field type='I' name='ActionStatus' declared_type='CSSM_TP_CERTCHANGE_STATUS'/>
<field type64='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='RevokeInfo' declared_type='CSSM_FIELD'/>
</struct>
<struct type64='{cssm_tp_certissue_input=&quot;CSPSubserviceUid&quot;{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}&quot;CLHandle&quot;q&quot;NumberOfTemplateFields&quot;I&quot;SubjectCertFields&quot;^{cssm_field}&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certissue_input=&quot;CSPSubserviceUid&quot;{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}&quot;CLHandle&quot;i&quot;NumberOfTemplateFields&quot;I&quot;SubjectCertFields&quot;^{cssm_field}&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CERTISSUE_INPUT'>
<field type='{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}' name='CSPSubserviceUid' declared_type='CSSM_SUBSERVICE_UID'/>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='NumberOfTemplateFields' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SubjectCertFields' declared_type='CSSM_FIELD_PTR'/>
<field type='I' name='MoreServiceRequests' declared_type='CSSM_TP_SERVICES'/>
<field type='I' name='NumberOfServiceControls' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='ServiceControls' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='UserCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type64='{cssm_tp_certissue_input=&quot;CSPSubserviceUid&quot;{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}&quot;CLHandle&quot;q&quot;NumberOfTemplateFields&quot;I&quot;SubjectCertFields&quot;^{cssm_field}&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certissue_input=&quot;CSPSubserviceUid&quot;{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}&quot;CLHandle&quot;i&quot;NumberOfTemplateFields&quot;I&quot;SubjectCertFields&quot;^{cssm_field}&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CERTISSUE_INPUT_PTR'>
<field type='{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}' name='CSPSubserviceUid' declared_type='CSSM_SUBSERVICE_UID'/>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='NumberOfTemplateFields' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SubjectCertFields' declared_type='CSSM_FIELD_PTR'/>
<field type='I' name='MoreServiceRequests' declared_type='CSSM_TP_SERVICES'/>
<field type='I' name='NumberOfServiceControls' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='ServiceControls' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='UserCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type='{cssm_tp_certissue_output=&quot;IssueStatus&quot;I&quot;CertGroup&quot;^{cssm_certgroup}&quot;PerformedServiceRequests&quot;I}' name='CSSM_TP_CERTISSUE_OUTPUT'>
<field type='I' name='IssueStatus' declared_type='CSSM_TP_CERTISSUE_STATUS'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='CertGroup' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='I' name='PerformedServiceRequests' declared_type='CSSM_TP_SERVICES'/>
</struct>
<struct type='{cssm_tp_certissue_output=&quot;IssueStatus&quot;I&quot;CertGroup&quot;^{cssm_certgroup}&quot;PerformedServiceRequests&quot;I}' name='CSSM_TP_CERTISSUE_OUTPUT_PTR'>
<field type='I' name='IssueStatus' declared_type='CSSM_TP_CERTISSUE_STATUS'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='CertGroup' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='I' name='PerformedServiceRequests' declared_type='CSSM_TP_SERVICES'/>
</struct>
<struct type64='{cssm_tp_certnotarize_input=&quot;CLHandle&quot;q&quot;NumberOfFields&quot;I&quot;MoreFields&quot;^{cssm_field}&quot;SignScope&quot;^{cssm_field}&quot;ScopeSize&quot;I&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certnotarize_input=&quot;CLHandle&quot;i&quot;NumberOfFields&quot;I&quot;MoreFields&quot;^{cssm_field}&quot;SignScope&quot;^{cssm_field}&quot;ScopeSize&quot;I&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CERTNOTARIZE_INPUT'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='NumberOfFields' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='MoreFields' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SignScope' declared_type='CSSM_FIELD_PTR'/>
<field type='I' name='ScopeSize' declared_type='uint32'/>
<field type='I' name='MoreServiceRequests' declared_type='CSSM_TP_SERVICES'/>
<field type='I' name='NumberOfServiceControls' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='ServiceControls' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='UserCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type64='{cssm_tp_certnotarize_input=&quot;CLHandle&quot;q&quot;NumberOfFields&quot;I&quot;MoreFields&quot;^{cssm_field}&quot;SignScope&quot;^{cssm_field}&quot;ScopeSize&quot;I&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certnotarize_input=&quot;CLHandle&quot;i&quot;NumberOfFields&quot;I&quot;MoreFields&quot;^{cssm_field}&quot;SignScope&quot;^{cssm_field}&quot;ScopeSize&quot;I&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CERTNOTARIZE_INPUT_PTR'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='NumberOfFields' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='MoreFields' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SignScope' declared_type='CSSM_FIELD_PTR'/>
<field type='I' name='ScopeSize' declared_type='uint32'/>
<field type='I' name='MoreServiceRequests' declared_type='CSSM_TP_SERVICES'/>
<field type='I' name='NumberOfServiceControls' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='ServiceControls' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='UserCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type='{cssm_tp_certnotarize_output=&quot;NotarizeStatus&quot;I&quot;NotarizedCertGroup&quot;^{cssm_certgroup}&quot;PerformedServiceRequests&quot;I}' name='CSSM_TP_CERTNOTARIZE_OUTPUT'>
<field type='I' name='NotarizeStatus' declared_type='CSSM_TP_CERTNOTARIZE_STATUS'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='NotarizedCertGroup' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='I' name='PerformedServiceRequests' declared_type='CSSM_TP_SERVICES'/>
</struct>
<struct type='{cssm_tp_certnotarize_output=&quot;NotarizeStatus&quot;I&quot;NotarizedCertGroup&quot;^{cssm_certgroup}&quot;PerformedServiceRequests&quot;I}' name='CSSM_TP_CERTNOTARIZE_OUTPUT_PTR'>
<field type='I' name='NotarizeStatus' declared_type='CSSM_TP_CERTNOTARIZE_STATUS'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='NotarizedCertGroup' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='I' name='PerformedServiceRequests' declared_type='CSSM_TP_SERVICES'/>
</struct>
<struct type64='{cssm_tp_certreclaim_input=&quot;CLHandle&quot;q&quot;NumberOfSelectionFields&quot;I&quot;SelectionFields&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certreclaim_input=&quot;CLHandle&quot;i&quot;NumberOfSelectionFields&quot;I&quot;SelectionFields&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CERTRECLAIM_INPUT'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='NumberOfSelectionFields' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SelectionFields' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='UserCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type64='{cssm_tp_certreclaim_input=&quot;CLHandle&quot;q&quot;NumberOfSelectionFields&quot;I&quot;SelectionFields&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certreclaim_input=&quot;CLHandle&quot;i&quot;NumberOfSelectionFields&quot;I&quot;SelectionFields&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CERTRECLAIM_INPUT_PTR'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='NumberOfSelectionFields' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SelectionFields' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='UserCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type='{cssm_tp_certreclaim_output=&quot;ReclaimStatus&quot;I&quot;ReclaimedCertGroup&quot;^{cssm_certgroup}&quot;KeyCacheHandle&quot;Q}' name='CSSM_TP_CERTRECLAIM_OUTPUT'>
<field type='I' name='ReclaimStatus' declared_type='CSSM_TP_CERTRECLAIM_STATUS'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='ReclaimedCertGroup' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='Q' name='KeyCacheHandle' declared_type='CSSM_LONG_HANDLE'/>
</struct>
<struct type='{cssm_tp_certreclaim_output=&quot;ReclaimStatus&quot;I&quot;ReclaimedCertGroup&quot;^{cssm_certgroup}&quot;KeyCacheHandle&quot;Q}' name='CSSM_TP_CERTRECLAIM_OUTPUT_PTR'>
<field type='I' name='ReclaimStatus' declared_type='CSSM_TP_CERTRECLAIM_STATUS'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='ReclaimedCertGroup' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='Q' name='KeyCacheHandle' declared_type='CSSM_LONG_HANDLE'/>
</struct>
<struct type64='{cssm_tp_certverify_input=&quot;CLHandle&quot;q&quot;Cert&quot;^{cssm_data}&quot;VerifyContext&quot;^{cssm_tp_verify_context}}' type='{cssm_tp_certverify_input=&quot;CLHandle&quot;i&quot;Cert&quot;^{cssm_data}&quot;VerifyContext&quot;^{cssm_tp_verify_context}}' name='CSSM_TP_CERTVERIFY_INPUT'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' declared_type='CSSM_DATA_PTR'/>
<field type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' name='VerifyContext' declared_type='CSSM_TP_VERIFY_CONTEXT_PTR'/>
</struct>
<struct type64='{cssm_tp_certverify_input=&quot;CLHandle&quot;q&quot;Cert&quot;^{cssm_data}&quot;VerifyContext&quot;^{cssm_tp_verify_context}}' type='{cssm_tp_certverify_input=&quot;CLHandle&quot;i&quot;Cert&quot;^{cssm_data}&quot;VerifyContext&quot;^{cssm_tp_verify_context}}' name='CSSM_TP_CERTVERIFY_INPUT_PTR'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' declared_type='CSSM_DATA_PTR'/>
<field type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' name='VerifyContext' declared_type='CSSM_TP_VERIFY_CONTEXT_PTR'/>
</struct>
<struct type='{cssm_tp_certverify_output=&quot;VerifyStatus&quot;I&quot;NumberOfEvidence&quot;I&quot;Evidence&quot;^{cssm_evidence}}' name='CSSM_TP_CERTVERIFY_OUTPUT'>
<field type='I' name='VerifyStatus' declared_type='CSSM_TP_CERTVERIFY_STATUS'/>
<field type='I' name='NumberOfEvidence' declared_type='uint32'/>
<field type='^{cssm_evidence=I^v}' name='Evidence' declared_type='CSSM_EVIDENCE_PTR'/>
</struct>
<struct type='{cssm_tp_certverify_output=&quot;VerifyStatus&quot;I&quot;NumberOfEvidence&quot;I&quot;Evidence&quot;^{cssm_evidence}}' name='CSSM_TP_CERTVERIFY_OUTPUT_PTR'>
<field type='I' name='VerifyStatus' declared_type='CSSM_TP_CERTVERIFY_STATUS'/>
<field type='I' name='NumberOfEvidence' declared_type='uint32'/>
<field type='^{cssm_evidence=I^v}' name='Evidence' declared_type='CSSM_EVIDENCE_PTR'/>
</struct>
<struct type='{cssm_tp_confirm_response=&quot;NumberOfResponses&quot;I&quot;Responses&quot;^I}' name='CSSM_TP_CONFIRM_RESPONSE'>
<field type='I' name='NumberOfResponses' declared_type='uint32'/>
<field type='^I' name='Responses' declared_type='CSSM_TP_CONFIRM_STATUS_PTR'/>
</struct>
<struct type='{cssm_tp_confirm_response=&quot;NumberOfResponses&quot;I&quot;Responses&quot;^I}' name='CSSM_TP_CONFIRM_RESPONSE_PTR'>
<field type='I' name='NumberOfResponses' declared_type='uint32'/>
<field type='^I' name='Responses' declared_type='CSSM_TP_CONFIRM_STATUS_PTR'/>
</struct>
<struct type64='{cssm_tp_crlissue_input=&quot;CLHandle&quot;q&quot;CrlIdentifier&quot;I&quot;CrlThisTime&quot;*&quot;PolicyIdentifier&quot;^{cssm_field}&quot;CallerCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_crlissue_input=&quot;CLHandle&quot;i&quot;CrlIdentifier&quot;I&quot;CrlThisTime&quot;*&quot;PolicyIdentifier&quot;^{cssm_field}&quot;CallerCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CRLISSUE_INPUT'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='CrlIdentifier' declared_type='uint32'/>
<field type='*' name='CrlThisTime' declared_type='CSSM_TIMESTRING'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='PolicyIdentifier' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='CallerCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type64='{cssm_tp_crlissue_input=&quot;CLHandle&quot;q&quot;CrlIdentifier&quot;I&quot;CrlThisTime&quot;*&quot;PolicyIdentifier&quot;^{cssm_field}&quot;CallerCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_crlissue_input=&quot;CLHandle&quot;i&quot;CrlIdentifier&quot;I&quot;CrlThisTime&quot;*&quot;PolicyIdentifier&quot;^{cssm_field}&quot;CallerCredentials&quot;^{cssm_access_credentials}}' name='CSSM_TP_CRLISSUE_INPUT_PTR'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='CrlIdentifier' declared_type='uint32'/>
<field type='*' name='CrlThisTime' declared_type='CSSM_TIMESTRING'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='PolicyIdentifier' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='CallerCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type='{cssm_tp_crlissue_output=&quot;IssueStatus&quot;I&quot;Crl&quot;^{cssm_encoded_crl}&quot;CrlNextTime&quot;*}' name='CSSM_TP_CRLISSUE_OUTPUT'>
<field type='I' name='IssueStatus' declared_type='CSSM_TP_CRLISSUE_STATUS'/>
<field type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' name='Crl' declared_type='CSSM_ENCODED_CRL_PTR'/>
<field type='*' name='CrlNextTime' declared_type='CSSM_TIMESTRING'/>
</struct>
<struct type='{cssm_tp_crlissue_output=&quot;IssueStatus&quot;I&quot;Crl&quot;^{cssm_encoded_crl}&quot;CrlNextTime&quot;*}' name='CSSM_TP_CRLISSUE_OUTPUT_PTR'>
<field type='I' name='IssueStatus' declared_type='CSSM_TP_CRLISSUE_STATUS'/>
<field type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' name='Crl' declared_type='CSSM_ENCODED_CRL_PTR'/>
<field type='*' name='CrlNextTime' declared_type='CSSM_TIMESTRING'/>
</struct>
<struct type='{cssm_tp_policyinfo=&quot;NumberOfPolicyIds&quot;I&quot;PolicyIds&quot;^{cssm_field}&quot;PolicyControl&quot;^v}' name='CSSM_TP_POLICYINFO'>
<field type='I' name='NumberOfPolicyIds' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='PolicyIds' declared_type='CSSM_FIELD_PTR'/>
<field type='^v' name='PolicyControl' declared_type='void*'/>
</struct>
<struct type='{cssm_tp_policyinfo=&quot;NumberOfPolicyIds&quot;I&quot;PolicyIds&quot;^{cssm_field}&quot;PolicyControl&quot;^v}' name='CSSM_TP_POLICYINFO_PTR'>
<field type='I' name='NumberOfPolicyIds' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='PolicyIds' declared_type='CSSM_FIELD_PTR'/>
<field type='^v' name='PolicyControl' declared_type='void*'/>
</struct>
<struct type='{cssm_tp_request_set=&quot;NumberOfRequests&quot;I&quot;Requests&quot;^v}' name='CSSM_TP_REQUEST_SET'>
<field type='I' name='NumberOfRequests' declared_type='uint32'/>
<field type='^v' name='Requests' declared_type='void*'/>
</struct>
<struct type='{cssm_tp_request_set=&quot;NumberOfRequests&quot;I&quot;Requests&quot;^v}' name='CSSM_TP_REQUEST_SET_PTR'>
<field type='I' name='NumberOfRequests' declared_type='uint32'/>
<field type='^v' name='Requests' declared_type='void*'/>
</struct>
<struct type='{cssm_tp_result_set=&quot;NumberOfResults&quot;I&quot;Results&quot;^v}' name='CSSM_TP_RESULT_SET'>
<field type='I' name='NumberOfResults' declared_type='uint32'/>
<field type='^v' name='Results' declared_type='void*'/>
</struct>
<struct type='{cssm_tp_result_set=&quot;NumberOfResults&quot;I&quot;Results&quot;^v}' name='CSSM_TP_RESULT_SET_PTR'>
<field type='I' name='NumberOfResults' declared_type='uint32'/>
<field type='^v' name='Results' declared_type='void*'/>
</struct>
<struct type64='{cssm_tp_verify_context=&quot;Action&quot;I&quot;ActionData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;Crls&quot;{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}&quot;Cred&quot;^{cssm_tp_callerauth_context}}' type='{cssm_tp_verify_context=&quot;Action&quot;I&quot;ActionData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;Crls&quot;{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}&quot;Cred&quot;^{cssm_tp_callerauth_context}}' name='CSSM_TP_VERIFY_CONTEXT'>
<field type='I' name='Action' declared_type='CSSM_TP_ACTION'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='ActionData' declared_type='CSSM_DATA'/>
<field type='{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}' name='Crls' declared_type='CSSM_CRLGROUP'/>
<field type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' name='Cred' declared_type='CSSM_TP_CALLERAUTH_CONTEXT_PTR'/>
</struct>
<struct type64='{cssm_tp_verify_context=&quot;Action&quot;I&quot;ActionData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;Crls&quot;{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}&quot;Cred&quot;^{cssm_tp_callerauth_context}}' type='{cssm_tp_verify_context=&quot;Action&quot;I&quot;ActionData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;Crls&quot;{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}&quot;Cred&quot;^{cssm_tp_callerauth_context}}' name='CSSM_TP_VERIFY_CONTEXT_PTR'>
<field type='I' name='Action' declared_type='CSSM_TP_ACTION'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='ActionData' declared_type='CSSM_DATA'/>
<field type='{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}' name='Crls' declared_type='CSSM_CRLGROUP'/>
<field type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' name='Cred' declared_type='CSSM_TP_CALLERAUTH_CONTEXT_PTR'/>
</struct>
<struct type='{cssm_tp_verify_context_result=&quot;NumberOfEvidences&quot;I&quot;Evidence&quot;^{cssm_evidence}}' name='CSSM_TP_VERIFY_CONTEXT_RESULT'>
<field type='I' name='NumberOfEvidences' declared_type='uint32'/>
<field type='^{cssm_evidence=I^v}' name='Evidence' declared_type='CSSM_EVIDENCE_PTR'/>
</struct>
<struct type='{cssm_tp_verify_context_result=&quot;NumberOfEvidences&quot;I&quot;Evidence&quot;^{cssm_evidence}}' name='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'>
<field type='I' name='NumberOfEvidences' declared_type='uint32'/>
<field type='^{cssm_evidence=I^v}' name='Evidence' declared_type='CSSM_EVIDENCE_PTR'/>
</struct>
<struct type='{_CSSM_TUPLE=&quot;Issuer&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Subject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;AuthorizationTag&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;ValidityPeriod&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}}' name='CSSM_TUPLE'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='Issuer' declared_type='CSSM_LIST'/>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='Subject' declared_type='CSSM_LIST'/>
<field type='i' name='Delegate' declared_type='CSSM_BOOL'/>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='AuthorizationTag' declared_type='CSSM_LIST'/>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='ValidityPeriod' declared_type='CSSM_LIST'/>
</struct>
<struct type='{cssm_tuplegroup=&quot;NumberOfTuples&quot;I&quot;Tuples&quot;^{_CSSM_TUPLE_PTR=&quot;Issuer&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Subject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;AuthorizationTag&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;ValidityPeriod&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}}}' name='CSSM_TUPLEGROUP'>
<field type='I' name='NumberOfTuples' declared_type='uint32'/>
<field type='^{_CSSM_TUPLE_PTR=&quot;Issuer&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Subject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;AuthorizationTag&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;ValidityPeriod&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}}' name='Tuples' declared_type='CSSM_TUPLE_PTR'/>
</struct>
<struct type='{cssm_tuplegroup=&quot;NumberOfTuples&quot;I&quot;Tuples&quot;^{_CSSM_TUPLE_PTR=&quot;Issuer&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Subject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;AuthorizationTag&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;ValidityPeriod&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}}}' name='CSSM_TUPLEGROUP_PTR'>
<field type='I' name='NumberOfTuples' declared_type='uint32'/>
<field type='^{_CSSM_TUPLE_PTR=&quot;Issuer&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Subject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;AuthorizationTag&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;ValidityPeriod&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}}' name='Tuples' declared_type='CSSM_TUPLE_PTR'/>
</struct>
<struct type='{_CSSM_TUPLE_PTR=&quot;Issuer&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Subject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;AuthorizationTag&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;ValidityPeriod&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}}' name='CSSM_TUPLE_PTR'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='Issuer' declared_type='CSSM_LIST'/>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='Subject' declared_type='CSSM_LIST'/>
<field type='i' name='Delegate' declared_type='CSSM_BOOL'/>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='AuthorizationTag' declared_type='CSSM_LIST'/>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='ValidityPeriod' declared_type='CSSM_LIST'/>
</struct>
<struct type='{cssm_upcalls=&quot;malloc_func&quot;^?&quot;free_func&quot;^?&quot;realloc_func&quot;^?&quot;calloc_func&quot;^?&quot;CcToHandle_func&quot;^?&quot;GetModuleInfo_func&quot;^?}' name='CSSM_UPCALLS'>
<field function_pointer='true' type='^?' name='malloc_func' declared_type='CSSM_UPCALLS_MALLOC'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='free_func' declared_type='CSSM_UPCALLS_FREE'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' type='^?' name='realloc_func' declared_type='CSSM_UPCALLS_REALLOC'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^v' declared_type='void*'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='calloc_func' declared_type='CSSM_UPCALLS_CALLOC'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='CcToHandle_func' declared_type='CSSM_RETURN (*)(CSSM_CC_HANDLE, CSSM_MODULE_HANDLE_PTR)'>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^q' type='^i' declared_type='CSSM_MODULE_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetModuleInfo_func' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_GUID_PTR, CSSM_VERSION_PTR, uint32 *, CSSM_SERVICE_TYPE *, CSSM_ATTACH_FLAGS *, CSSM_KEY_HIERARCHY *, CSSM_API_MEMORY_FUNCS_PTR, CSSM_FUNC_NAME_ADDR_PTR, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^{cssm_guid=ISS[8C]}' declared_type='CSSM_GUID_PTR'/>
<arg type='^{cssm_version=II}' declared_type='CSSM_VERSION_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^I' declared_type='CSSM_SERVICE_TYPE*'/>
<arg type='^I' declared_type='CSSM_ATTACH_FLAGS*'/>
<arg type='^I' declared_type='CSSM_KEY_HIERARCHY*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' declared_type='CSSM_API_MEMORY_FUNCS_PTR'/>
<arg type='^{cssm_func_name_addr=[68c]^?}' declared_type='CSSM_FUNC_NAME_ADDR_PTR'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_upcalls=&quot;malloc_func&quot;^?&quot;free_func&quot;^?&quot;realloc_func&quot;^?&quot;calloc_func&quot;^?&quot;CcToHandle_func&quot;^?&quot;GetModuleInfo_func&quot;^?}' name='CSSM_UPCALLS_PTR'>
<field function_pointer='true' type='^?' name='malloc_func' declared_type='CSSM_UPCALLS_MALLOC'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='free_func' declared_type='CSSM_UPCALLS_FREE'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' type='^?' name='realloc_func' declared_type='CSSM_UPCALLS_REALLOC'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^v' declared_type='void*'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='calloc_func' declared_type='CSSM_UPCALLS_CALLOC'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='CcToHandle_func' declared_type='CSSM_RETURN (*)(CSSM_CC_HANDLE, CSSM_MODULE_HANDLE_PTR)'>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^q' type='^i' declared_type='CSSM_MODULE_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetModuleInfo_func' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_GUID_PTR, CSSM_VERSION_PTR, uint32 *, CSSM_SERVICE_TYPE *, CSSM_ATTACH_FLAGS *, CSSM_KEY_HIERARCHY *, CSSM_API_MEMORY_FUNCS_PTR, CSSM_FUNC_NAME_ADDR_PTR, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^{cssm_guid=ISS[8C]}' declared_type='CSSM_GUID_PTR'/>
<arg type='^{cssm_version=II}' declared_type='CSSM_VERSION_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^I' declared_type='CSSM_SERVICE_TYPE*'/>
<arg type='^I' declared_type='CSSM_ATTACH_FLAGS*'/>
<arg type='^I' declared_type='CSSM_KEY_HIERARCHY*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' declared_type='CSSM_API_MEMORY_FUNCS_PTR'/>
<arg type='^{cssm_func_name_addr=[68c]^?}' declared_type='CSSM_FUNC_NAME_ADDR_PTR'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='CSSM_VERSION'>
<field type='I' name='Major' declared_type='uint32'/>
<field type='I' name='Minor' declared_type='uint32'/>
</struct>
<struct type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='CSSM_VERSION_PTR'>
<field type='I' name='Major' declared_type='uint32'/>
<field type='I' name='Minor' declared_type='uint32'/>
</struct>
<struct type64='{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_WRAP_KEY'>
<field type='{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}' name='KeyHeader' declared_type='CSSM_KEYHEADER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='KeyData' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_x509ext_basicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}' name='CSSM_X509EXT_BASICCONSTRAINTS'>
<field type='i' name='cA' declared_type='CSSM_BOOL'/>
<field type='i' name='pathLenConstraintPresent' declared_type='CSSM_X509_OPTION'/>
<field type='I' name='pathLenConstraint' declared_type='uint32'/>
</struct>
<struct type='{cssm_x509ext_basicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}' name='CSSM_X509EXT_BASICCONSTRAINTS_PTR'>
<field type='i' name='cA' declared_type='CSSM_BOOL'/>
<field type='i' name='pathLenConstraintPresent' declared_type='CSSM_X509_OPTION'/>
<field type='I' name='pathLenConstraint' declared_type='uint32'/>
</struct>
<struct type64='{cssm_x509ext_pair=&quot;tagAndValue&quot;{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;parsedValue&quot;^v}' type='{cssm_x509ext_pair=&quot;tagAndValue&quot;{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;parsedValue&quot;^v}' name='CSSM_X509EXT_PAIR'>
<field type64='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='tagAndValue' declared_type='CSSM_X509EXT_TAGandVALUE'/>
<field type='^v' name='parsedValue' declared_type='void*'/>
</struct>
<struct type64='{cssm_x509ext_pair=&quot;tagAndValue&quot;{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;parsedValue&quot;^v}' type='{cssm_x509ext_pair=&quot;tagAndValue&quot;{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;parsedValue&quot;^v}' name='CSSM_X509EXT_PAIR_PTR'>
<field type64='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='tagAndValue' declared_type='CSSM_X509EXT_TAGandVALUE'/>
<field type='^v' name='parsedValue' declared_type='void*'/>
</struct>
<struct type64='{cssm_x509ext_policyInfo=&quot;policyIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;policyQualifiers&quot;{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}}' type='{cssm_x509ext_policyInfo=&quot;policyIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;policyQualifiers&quot;{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}}' name='CSSM_X509EXT_POLICYINFO'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='policyIdentifier' declared_type='CSSM_OID'/>
<field type='{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}' name='policyQualifiers' declared_type='CSSM_X509EXT_POLICYQUALIFIERS'/>
</struct>
<struct type64='{cssm_x509ext_policyInfo=&quot;policyIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;policyQualifiers&quot;{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}}' type='{cssm_x509ext_policyInfo=&quot;policyIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;policyQualifiers&quot;{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}}' name='CSSM_X509EXT_POLICYINFO_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='policyIdentifier' declared_type='CSSM_OID'/>
<field type='{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}' name='policyQualifiers' declared_type='CSSM_X509EXT_POLICYQUALIFIERS'/>
</struct>
<struct type64='{cssm_x509ext_policyQualifierInfo=&quot;policyQualifierId&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509ext_policyQualifierInfo=&quot;policyQualifierId&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509EXT_POLICYQUALIFIERINFO'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='policyQualifierId' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='value' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509ext_policyQualifierInfo=&quot;policyQualifierId&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509ext_policyQualifierInfo=&quot;policyQualifierId&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509EXT_POLICYQUALIFIERINFO_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='policyQualifierId' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='value' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}' name='CSSM_X509EXT_POLICYQUALIFIERS'>
<field type='I' name='numberOfPolicyQualifiers' declared_type='uint32'/>
<field type64='^{cssm_x509ext_policyQualifierInfo={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_x509ext_policyQualifierInfo={cssm_data=I*}{cssm_data=I*}}' name='policyQualifier' declared_type='CSSM_X509EXT_POLICYQUALIFIERINFO*'/>
</struct>
<struct type='{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}' name='CSSM_X509EXT_POLICYQUALIFIERS_PTR'>
<field type='I' name='numberOfPolicyQualifiers' declared_type='uint32'/>
<field type64='^{cssm_x509ext_policyQualifierInfo={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_x509ext_policyQualifierInfo={cssm_data=I*}{cssm_data=I*}}' name='policyQualifier' declared_type='CSSM_X509EXT_POLICYQUALIFIERINFO*'/>
</struct>
<struct type64='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509EXT_TAGandVALUE'>
<field type='C' name='type' declared_type='CSSM_BER_TAG'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='value' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509EXT_TAGandVALUE_PTR'>
<field type='C' name='type' declared_type='CSSM_BER_TAG'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='value' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_ALGORITHM_IDENTIFIER'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='algorithm' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='parameters' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_ALGORITHM_IDENTIFIER_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='algorithm' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='parameters' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_extension=&quot;extnId&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;critical&quot;i&quot;format&quot;i&quot;value&quot;(cssm_x509ext_value=&quot;tagAndValue&quot;^{cssm_x509_extensionTagAndValue}&quot;parsedValue&quot;^v&quot;valuePair&quot;^{cssm_x509ext_pair})&quot;BERvalue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_extension=&quot;extnId&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;critical&quot;i&quot;format&quot;i&quot;value&quot;(cssm_x509ext_value=&quot;tagAndValue&quot;^{cssm_x509_extensionTagAndValue}&quot;parsedValue&quot;^v&quot;valuePair&quot;^{cssm_x509ext_pair})&quot;BERvalue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_EXTENSION'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='extnId' declared_type='CSSM_OID'/>
<field type='i' name='critical' declared_type='CSSM_BOOL'/>
<field type='i' name='format' declared_type='CSSM_X509EXT_DATA_FORMAT'/>
<field type='(cssm_x509ext_value=&quot;tagAndValue&quot;^{cssm_x509_extensionTagAndValue}&quot;parsedValue&quot;^v&quot;valuePair&quot;^{cssm_x509ext_pair})' name='value' declared_type='union cssm_x509ext_value'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='BERvalue' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='CSSM_X509_EXTENSIONS'>
<field type='I' name='numberOfExtensions' declared_type='uint32'/>
<field type64='^{cssm_x509_extension={cssm_data=Q*}ii(cssm_x509ext_value=^{cssm_x509_extensionTagAndValue}^v^{cssm_x509ext_pair}){cssm_data=Q*}}' type='^{cssm_x509_extension={cssm_data=I*}ii(cssm_x509ext_value=^{cssm_x509_extensionTagAndValue}^v^{cssm_x509ext_pair}){cssm_data=I*}}' name='extensions' declared_type='CSSM_X509_EXTENSION_PTR'/>
</struct>
<struct type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='CSSM_X509_EXTENSIONS_PTR'>
<field type='I' name='numberOfExtensions' declared_type='uint32'/>
<field type64='^{cssm_x509_extension={cssm_data=Q*}ii(cssm_x509ext_value=^{cssm_x509_extensionTagAndValue}^v^{cssm_x509ext_pair}){cssm_data=Q*}}' type='^{cssm_x509_extension={cssm_data=I*}ii(cssm_x509ext_value=^{cssm_x509_extensionTagAndValue}^v^{cssm_x509ext_pair}){cssm_data=I*}}' name='extensions' declared_type='CSSM_X509_EXTENSION_PTR'/>
</struct>
<struct type64='{cssm_x509_extension=&quot;extnId&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;critical&quot;i&quot;format&quot;i&quot;value&quot;(cssm_x509ext_value=&quot;tagAndValue&quot;^{cssm_x509_extensionTagAndValue}&quot;parsedValue&quot;^v&quot;valuePair&quot;^{cssm_x509ext_pair})&quot;BERvalue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_extension=&quot;extnId&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;critical&quot;i&quot;format&quot;i&quot;value&quot;(cssm_x509ext_value=&quot;tagAndValue&quot;^{cssm_x509_extensionTagAndValue}&quot;parsedValue&quot;^v&quot;valuePair&quot;^{cssm_x509ext_pair})&quot;BERvalue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_EXTENSION_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='extnId' declared_type='CSSM_OID'/>
<field type='i' name='critical' declared_type='CSSM_BOOL'/>
<field type='i' name='format' declared_type='CSSM_X509EXT_DATA_FORMAT'/>
<field type='(cssm_x509ext_value=&quot;tagAndValue&quot;^{cssm_x509_extensionTagAndValue}&quot;parsedValue&quot;^v&quot;valuePair&quot;^{cssm_x509ext_pair})' name='value' declared_type='union cssm_x509ext_value'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='BERvalue' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='CSSM_X509_NAME'>
<field type='I' name='numberOfRDNs' declared_type='uint32'/>
<field type='^{cssm_x509_rdn=I^{cssm_x509_type_value_pair}}' name='RelativeDistinguishedName' declared_type='CSSM_X509_RDN_PTR'/>
</struct>
<struct type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='CSSM_X509_NAME_PTR'>
<field type='I' name='numberOfRDNs' declared_type='uint32'/>
<field type='^{cssm_x509_rdn=I^{cssm_x509_type_value_pair}}' name='RelativeDistinguishedName' declared_type='CSSM_X509_RDN_PTR'/>
</struct>
<struct type='{cssm_x509_rdn=&quot;numberOfPairs&quot;I&quot;AttributeTypeAndValue&quot;^{cssm_x509_type_value_pair}}' name='CSSM_X509_RDN'>
<field type='I' name='numberOfPairs' declared_type='uint32'/>
<field type64='^{cssm_x509_type_value_pair={cssm_data=Q*}C{cssm_data=Q*}}' type='^{cssm_x509_type_value_pair={cssm_data=I*}C{cssm_data=I*}}' name='AttributeTypeAndValue' declared_type='CSSM_X509_TYPE_VALUE_PAIR_PTR'/>
</struct>
<struct type='{cssm_x509_rdn=&quot;numberOfPairs&quot;I&quot;AttributeTypeAndValue&quot;^{cssm_x509_type_value_pair}}' name='CSSM_X509_RDN_PTR'>
<field type='I' name='numberOfPairs' declared_type='uint32'/>
<field type64='^{cssm_x509_type_value_pair={cssm_data=Q*}C{cssm_data=Q*}}' type='^{cssm_x509_type_value_pair={cssm_data=I*}C{cssm_data=I*}}' name='AttributeTypeAndValue' declared_type='CSSM_X509_TYPE_VALUE_PAIR_PTR'/>
</struct>
<struct type64='{cssm_x509_revoked_cert_entry=&quot;certificateSerialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;revocationDate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_revoked_cert_entry=&quot;certificateSerialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;revocationDate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='CSSM_X509_REVOKED_CERT_ENTRY'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='certificateSerialNumber' declared_type='CSSM_DATA'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='revocationDate' declared_type='CSSM_X509_TIME'/>
<field type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='extensions' declared_type='CSSM_X509_EXTENSIONS'/>
</struct>
<struct type64='{cssm_x509_revoked_cert_entry=&quot;certificateSerialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;revocationDate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_revoked_cert_entry=&quot;certificateSerialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;revocationDate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='CSSM_X509_REVOKED_CERT_ENTRY_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='certificateSerialNumber' declared_type='CSSM_DATA'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='revocationDate' declared_type='CSSM_X509_TIME'/>
<field type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='extensions' declared_type='CSSM_X509_EXTENSIONS'/>
</struct>
<struct type='{cssm_x509_revoked_cert_list=&quot;numberOfRevokedCertEntries&quot;I&quot;revokedCertEntry&quot;^{cssm_x509_revoked_cert_entry}}' name='CSSM_X509_REVOKED_CERT_LIST'>
<field type='I' name='numberOfRevokedCertEntries' declared_type='uint32'/>
<field type64='^{cssm_x509_revoked_cert_entry={cssm_data=Q*}{cssm_x509_time=C{cssm_data=Q*}}{cssm_x509_extensions=I^{cssm_x509_extension}}}' type='^{cssm_x509_revoked_cert_entry={cssm_data=I*}{cssm_x509_time=C{cssm_data=I*}}{cssm_x509_extensions=I^{cssm_x509_extension}}}' name='revokedCertEntry' declared_type='CSSM_X509_REVOKED_CERT_ENTRY_PTR'/>
</struct>
<struct type='{cssm_x509_revoked_cert_list=&quot;numberOfRevokedCertEntries&quot;I&quot;revokedCertEntry&quot;^{cssm_x509_revoked_cert_entry}}' name='CSSM_X509_REVOKED_CERT_LIST_PTR'>
<field type='I' name='numberOfRevokedCertEntries' declared_type='uint32'/>
<field type64='^{cssm_x509_revoked_cert_entry={cssm_data=Q*}{cssm_x509_time=C{cssm_data=Q*}}{cssm_x509_extensions=I^{cssm_x509_extension}}}' type='^{cssm_x509_revoked_cert_entry={cssm_data=I*}{cssm_x509_time=C{cssm_data=I*}}{cssm_x509_extensions=I^{cssm_x509_extension}}}' name='revokedCertEntry' declared_type='CSSM_X509_REVOKED_CERT_ENTRY_PTR'/>
</struct>
<struct type64='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_SIGNATURE'>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='algorithmIdentifier' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='encrypted' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_SIGNATURE_PTR'>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='algorithmIdentifier' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='encrypted' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_signed_certificate=&quot;certificate&quot;{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{cssm_x509_signed_certificate=&quot;certificate&quot;{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='CSSM_X509_SIGNED_CERTIFICATE'>
<field type64='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='certificate' declared_type='CSSM_X509_TBS_CERTIFICATE'/>
<field type64='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_SIGNATURE'/>
</struct>
<struct type64='{cssm_x509_signed_certificate=&quot;certificate&quot;{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{cssm_x509_signed_certificate=&quot;certificate&quot;{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='CSSM_X509_SIGNED_CERTIFICATE_PTR'>
<field type64='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='certificate' declared_type='CSSM_X509_TBS_CERTIFICATE'/>
<field type64='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_SIGNATURE'/>
</struct>
<struct type64='{cssm_x509_signed_crl=&quot;tbsCertList&quot;{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{cssm_x509_signed_crl=&quot;tbsCertList&quot;{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='CSSM_X509_SIGNED_CRL'>
<field type64='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='tbsCertList' declared_type='CSSM_X509_TBS_CERTLIST'/>
<field type64='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_SIGNATURE'/>
</struct>
<struct type64='{cssm_x509_signed_crl=&quot;tbsCertList&quot;{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{cssm_x509_signed_crl=&quot;tbsCertList&quot;{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='CSSM_X509_SIGNED_CRL_PTR'>
<field type64='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='tbsCertList' declared_type='CSSM_X509_TBS_CERTLIST'/>
<field type64='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_SIGNATURE'/>
</struct>
<struct type64='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_SUBJECT_PUBLIC_KEY_INFO'>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='algorithm' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='subjectPublicKey' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_SUBJECT_PUBLIC_KEY_INFO_PTR'>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='algorithm' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='subjectPublicKey' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='CSSM_X509_TBS_CERTIFICATE'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='version' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='serialNumber' declared_type='CSSM_DATA'/>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='issuer' declared_type='CSSM_X509_NAME'/>
<field type64='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='validity' declared_type='CSSM_X509_VALIDITY'/>
<field type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='subject' declared_type='CSSM_X509_NAME'/>
<field type64='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='subjectPublicKeyInfo' declared_type='CSSM_X509_SUBJECT_PUBLIC_KEY_INFO'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='issuerUniqueIdentifier' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='subjectUniqueIdentifier' declared_type='CSSM_DATA'/>
<field type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='extensions' declared_type='CSSM_X509_EXTENSIONS'/>
</struct>
<struct type64='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='CSSM_X509_TBS_CERTIFICATE_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='version' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='serialNumber' declared_type='CSSM_DATA'/>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='issuer' declared_type='CSSM_X509_NAME'/>
<field type64='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='validity' declared_type='CSSM_X509_VALIDITY'/>
<field type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='subject' declared_type='CSSM_X509_NAME'/>
<field type64='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='subjectPublicKeyInfo' declared_type='CSSM_X509_SUBJECT_PUBLIC_KEY_INFO'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='issuerUniqueIdentifier' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='subjectUniqueIdentifier' declared_type='CSSM_DATA'/>
<field type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='extensions' declared_type='CSSM_X509_EXTENSIONS'/>
</struct>
<struct type64='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='CSSM_X509_TBS_CERTLIST'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='version' declared_type='CSSM_DATA'/>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='issuer' declared_type='CSSM_X509_NAME'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='thisUpdate' declared_type='CSSM_X509_TIME'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='nextUpdate' declared_type='CSSM_X509_TIME'/>
<field type='^{cssm_x509_revoked_cert_list=I^{cssm_x509_revoked_cert_entry}}' name='revokedCertificates' declared_type='CSSM_X509_REVOKED_CERT_LIST_PTR'/>
<field type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='extensions' declared_type='CSSM_X509_EXTENSIONS'/>
</struct>
<struct type64='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='CSSM_X509_TBS_CERTLIST_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='version' declared_type='CSSM_DATA'/>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='issuer' declared_type='CSSM_X509_NAME'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='thisUpdate' declared_type='CSSM_X509_TIME'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='nextUpdate' declared_type='CSSM_X509_TIME'/>
<field type='^{cssm_x509_revoked_cert_list=I^{cssm_x509_revoked_cert_entry}}' name='revokedCertificates' declared_type='CSSM_X509_REVOKED_CERT_LIST_PTR'/>
<field type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='extensions' declared_type='CSSM_X509_EXTENSIONS'/>
</struct>
<struct type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_TIME'>
<field type='C' name='timeType' declared_type='CSSM_BER_TAG'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='time' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_TIME_PTR'>
<field type='C' name='timeType' declared_type='CSSM_BER_TAG'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='time' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_type_value_pair=&quot;type&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;valueType&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_type_value_pair=&quot;type&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;valueType&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_TYPE_VALUE_PAIR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='type' declared_type='CSSM_OID'/>
<field type='C' name='valueType' declared_type='CSSM_BER_TAG'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='value' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_type_value_pair=&quot;type&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;valueType&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_type_value_pair=&quot;type&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;valueType&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='CSSM_X509_TYPE_VALUE_PAIR_PTR'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='type' declared_type='CSSM_OID'/>
<field type='C' name='valueType' declared_type='CSSM_BER_TAG'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='value' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='CSSM_X509_VALIDITY'>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='notBefore' declared_type='CSSM_X509_TIME'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='notAfter' declared_type='CSSM_X509_TIME'/>
</struct>
<struct type64='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='CSSM_X509_VALIDITY_PTR'>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='notBefore' declared_type='CSSM_X509_TIME'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='notAfter' declared_type='CSSM_X509_TIME'/>
</struct>
<struct type64='{isl_const_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{isl_const_data=&quot;Length&quot;I&quot;Data&quot;*}' name='ISL_CONST_DATA'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' const='true' declared_type='uint8*'/>
</struct>
<struct type64='{isl_const_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{isl_const_data=&quot;Length&quot;I&quot;Data&quot;*}' name='ISL_CONST_DATA_PTR'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' const='true' declared_type='uint8*'/>
</struct>
<struct type64='{isl_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{isl_data=&quot;Length&quot;I&quot;Data&quot;*}' name='ISL_DATA'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' declared_type='uint8*'/>
</struct>
<struct type64='{isl_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{isl_data=&quot;Length&quot;I&quot;Data&quot;*}' name='ISL_DATA_PTR'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' declared_type='uint8*'/>
</struct>
<struct type64='{cssm_dl_db_handle=&quot;DLHandle&quot;q&quot;DBHandle&quot;q}' type='{cssm_dl_db_handle=&quot;DLHandle&quot;i&quot;DBHandle&quot;i}' name='MDS_DB_HANDLE'>
<field type64='q' type='l' name='DLHandle' declared_type='CSSM_DL_HANDLE'/>
<field type64='q' type='l' name='DBHandle' declared_type='CSSM_DB_HANDLE'/>
</struct>
<struct type='{mds_funcs=&quot;DbOpen&quot;^?&quot;DbClose&quot;^?&quot;GetDbNames&quot;^?&quot;GetDbNameFromHandle&quot;^?&quot;FreeNameList&quot;^?&quot;DataInsert&quot;^?&quot;DataDelete&quot;^?&quot;DataModify&quot;^?&quot;DataGetFirst&quot;^?&quot;DataGetNext&quot;^?&quot;DataAbortQuery&quot;^?&quot;DataGetFromUniqueRecordId&quot;^?&quot;FreeUniqueRecord&quot;^?&quot;CreateRelation&quot;^?&quot;DestroyRelation&quot;^?}' name='MDS_FUNCS'>
<field function_pointer='true' type='^?' name='DbOpen' declared_type='CSSM_RETURN (*)(MDS_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_DB_ACCESS_TYPE, CSSM_ACCESS_CREDENTIALS *, void *, CSSM_DB_HANDLE *)'>
<arg type64='q' type='l' declared_type='MDS_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbClose' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNames' declared_type='CSSM_RETURN (*)(MDS_HANDLE, CSSM_NAME_LIST_PTR *)'>
<arg type64='q' type='l' declared_type='MDS_HANDLE'/>
<arg type='^^{cssm_name_list}' declared_type='CSSM_NAME_LIST_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNameFromHandle' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, char **)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='^*' declared_type='char**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeNameList' declared_type='CSSM_RETURN (*)(MDS_HANDLE, CSSM_NAME_LIST_PTR)'>
<arg type64='q' type='l' declared_type='MDS_HANDLE'/>
<arg type='^{cssm_name_list=I^*}' declared_type='CSSM_NAME_LIST_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataInsert' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataDelete' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataModify' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_UNIQUE_RECORD_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_MODIFY_MODE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_DB_MODIFY_MODE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFirst' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_QUERY *, CSSM_HANDLE_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='^{cssm_query=III^{cssm_selection_predicate}{cssm_query_limits=II}I}' const='true' declared_type='CSSM_QUERY*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetNext' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_HANDLE, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataAbortQuery' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFromUniqueRecordId' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeUniqueRecord' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_UNIQUE_RECORD_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CreateRelation' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE, char *, uint32, CSSM_DB_SCHEMA_ATTRIBUTE_INFO *, uint32, CSSM_DB_SCHEMA_INDEX_INFO *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_db_schema_attribute_info=I*{cssm_data=Q*}I}' type='^{cssm_db_schema_attribute_info=I*{cssm_data=I*}I}' const='true' declared_type='CSSM_DB_SCHEMA_ATTRIBUTE_INFO*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_db_schema_index_info=IIII}' const='true' declared_type='CSSM_DB_SCHEMA_INDEX_INFO*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DestroyRelation' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{mds_funcs=&quot;DbOpen&quot;^?&quot;DbClose&quot;^?&quot;GetDbNames&quot;^?&quot;GetDbNameFromHandle&quot;^?&quot;FreeNameList&quot;^?&quot;DataInsert&quot;^?&quot;DataDelete&quot;^?&quot;DataModify&quot;^?&quot;DataGetFirst&quot;^?&quot;DataGetNext&quot;^?&quot;DataAbortQuery&quot;^?&quot;DataGetFromUniqueRecordId&quot;^?&quot;FreeUniqueRecord&quot;^?&quot;CreateRelation&quot;^?&quot;DestroyRelation&quot;^?}' name='MDS_FUNCS_PTR'>
<field function_pointer='true' type='^?' name='DbOpen' declared_type='CSSM_RETURN (*)(MDS_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_DB_ACCESS_TYPE, CSSM_ACCESS_CREDENTIALS *, void *, CSSM_DB_HANDLE *)'>
<arg type64='q' type='l' declared_type='MDS_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbClose' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNames' declared_type='CSSM_RETURN (*)(MDS_HANDLE, CSSM_NAME_LIST_PTR *)'>
<arg type64='q' type='l' declared_type='MDS_HANDLE'/>
<arg type='^^{cssm_name_list}' declared_type='CSSM_NAME_LIST_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNameFromHandle' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, char **)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='^*' declared_type='char**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeNameList' declared_type='CSSM_RETURN (*)(MDS_HANDLE, CSSM_NAME_LIST_PTR)'>
<arg type64='q' type='l' declared_type='MDS_HANDLE'/>
<arg type='^{cssm_name_list=I^*}' declared_type='CSSM_NAME_LIST_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataInsert' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataDelete' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataModify' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_UNIQUE_RECORD_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_MODIFY_MODE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_DB_MODIFY_MODE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFirst' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_QUERY *, CSSM_HANDLE_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='^{cssm_query=III^{cssm_selection_predicate}{cssm_query_limits=II}I}' const='true' declared_type='CSSM_QUERY*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetNext' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_HANDLE, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataAbortQuery' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFromUniqueRecordId' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeUniqueRecord' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_UNIQUE_RECORD_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CreateRelation' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE, char *, uint32, CSSM_DB_SCHEMA_ATTRIBUTE_INFO *, uint32, CSSM_DB_SCHEMA_INDEX_INFO *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_db_schema_attribute_info=I*{cssm_data=Q*}I}' type='^{cssm_db_schema_attribute_info=I*{cssm_data=I*}I}' const='true' declared_type='CSSM_DB_SCHEMA_ATTRIBUTE_INFO*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_db_schema_index_info=IIII}' const='true' declared_type='CSSM_DB_SCHEMA_INDEX_INFO*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DestroyRelation' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='SecAsn1AlgId'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='algorithm' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='parameters' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='SecAsn1Item'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' declared_type='uint8*'/>
</struct>
<struct type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='SecAsn1Oid'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' declared_type='uint8*'/>
</struct>
<struct type64='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='SecAsn1PubKeyInfo'>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='algorithm' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='subjectPublicKey' declared_type='CSSM_DATA'/>
</struct>
<struct type='{SecAsn1Template_struct=&quot;kind&quot;I&quot;offset&quot;I&quot;sub&quot;^v&quot;size&quot;I}' name='SecAsn1Template'>
<field type='I' name='kind' declared_type='uint32_t'/>
<field type='I' name='offset' declared_type='uint32_t'/>
<field type='^v' name='sub' const='true' declared_type='void*'/>
<field type='I' name='size' declared_type='uint32_t'/>
</struct>
<struct type='{SecAsn1Template_struct=&quot;kind&quot;I&quot;offset&quot;I&quot;sub&quot;^v&quot;size&quot;I}' name='SecAsn1Template_struct'>
<field type='I' name='kind' declared_type='uint32_t'/>
<field type='I' name='offset' declared_type='uint32_t'/>
<field type='^v' name='sub' const='true' declared_type='void*'/>
<field type='I' name='size' declared_type='uint32_t'/>
</struct>
<struct type='{_SecItemImportExportKeyParameters=&quot;version&quot;I&quot;flags&quot;I&quot;passphrase&quot;^v&quot;alertTitle&quot;^{__CFString}&quot;alertPrompt&quot;^{__CFString}&quot;accessRef&quot;^{OpaqueSecAccessRef}&quot;keyUsage&quot;^{__CFArray}&quot;keyAttributes&quot;^{__CFArray}}' name='SecItemImportExportKeyParameters'>
<field type='I' name='version' declared_type='uint32_t'/>
<field type='I' name='flags' declared_type='SecKeyImportExportFlags'/>
<field type='@' name='passphrase' declared_type='CFTypeRef'/>
<field type='^{__CFString=}' name='alertTitle' declared_type='CFStringRef'/>
<field type='^{__CFString=}' name='alertPrompt' declared_type='CFStringRef'/>
<field type='^{OpaqueSecAccessRef=}' name='accessRef' declared_type='SecAccessRef'/>
<field type='^{__CFArray=}' name='keyUsage' declared_type='CFArrayRef'/>
<field type='^{__CFArray=}' name='keyAttributes' declared_type='CFArrayRef'/>
</struct>
<struct type='{_SecKeyImportExportParameters=&quot;version&quot;I&quot;flags&quot;I&quot;passphrase&quot;^v&quot;alertTitle&quot;^{__CFString}&quot;alertPrompt&quot;^{__CFString}&quot;accessRef&quot;^{OpaqueSecAccessRef}&quot;keyUsage&quot;I&quot;keyAttributes&quot;I}' name='SecKeyImportExportParameters'>
<field type='I' name='version' declared_type='uint32_t'/>
<field type='I' name='flags' declared_type='SecKeyImportExportFlags'/>
<field type='@' name='passphrase' declared_type='CFTypeRef'/>
<field type='^{__CFString=}' name='alertTitle' declared_type='CFStringRef'/>
<field type='^{__CFString=}' name='alertPrompt' declared_type='CFStringRef'/>
<field type='^{OpaqueSecAccessRef=}' name='accessRef' declared_type='SecAccessRef'/>
<field type='I' name='keyUsage' declared_type='CSSM_KEYUSE'/>
<field type='I' name='keyAttributes' declared_type='CSSM_KEYATTR_FLAGS'/>
</struct>
<struct type='{SecKeychainAttribute=&quot;tag&quot;I&quot;length&quot;I&quot;data&quot;^v}' name='SecKeychainAttribute'>
<field type64='I' type='L' name='tag' declared_type='SecKeychainAttrType'/>
<field type64='I' type='L' name='length' declared_type='UInt32'/>
<field type='^v' name='data' declared_type='void*'/>
</struct>
<struct type='{SecKeychainAttributeInfo=&quot;count&quot;I&quot;tag&quot;^I&quot;format&quot;^I}' name='SecKeychainAttributeInfo'>
<field type64='I' type='L' name='count' declared_type='UInt32'/>
<field type='^I' name='tag' declared_type='UInt32*'/>
<field type='^I' name='format' declared_type='UInt32*'/>
</struct>
<struct type='{SecKeychainAttributeList=&quot;count&quot;I&quot;attr&quot;^{SecKeychainAttribute}}' name='SecKeychainAttributeList'>
<field type64='I' type='L' name='count' declared_type='UInt32'/>
<field type='^{SecKeychainAttribute=II^v}' name='attr' declared_type='SecKeychainAttribute*'/>
</struct>
<struct type='{SecKeychainCallbackInfo=&quot;version&quot;I&quot;item&quot;^{OpaqueSecKeychainItemRef}&quot;keychain&quot;^{OpaqueSecKeychainRef}&quot;pid&quot;i}' name='SecKeychainCallbackInfo'>
<field type64='I' type='L' name='version' declared_type='UInt32'/>
<field type='^{OpaqueSecKeychainItemRef=}' name='item' declared_type='SecKeychainItemRef'/>
<field type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<field type='i' name='pid' declared_type='pid_t'/>
</struct>
<struct type='{SecKeychainSettings=&quot;version&quot;I&quot;lockOnSleep&quot;B&quot;useLockInterval&quot;B&quot;lockInterval&quot;I}' name='SecKeychainSettings'>
<field type64='I' type='L' name='version' declared_type='UInt32'/>
<field type='B' name='lockOnSleep' declared_type='Boolean'/>
<field type='B' name='useLockInterval' declared_type='Boolean'/>
<field type64='I' type='L' name='lockInterval' declared_type='UInt32'/>
</struct>
<struct type64='{cssm_access_credentials=&quot;EntryTag&quot;[68c]&quot;BaseCerts&quot;{cssm_base_certs=&quot;TPHandle&quot;q&quot;CLHandle&quot;q&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}&quot;Samples&quot;{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' type='{cssm_access_credentials=&quot;EntryTag&quot;[68c]&quot;BaseCerts&quot;{cssm_base_certs=&quot;TPHandle&quot;i&quot;CLHandle&quot;i&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}&quot;Samples&quot;{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' name='cssm_access_credentials'>
<field type='[68c]' name='EntryTag' declared_type='CSSM_STRING'/>
<field type64='{cssm_base_certs=&quot;TPHandle&quot;q&quot;CLHandle&quot;q&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' type='{cssm_base_certs=&quot;TPHandle&quot;i&quot;CLHandle&quot;i&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' name='BaseCerts' declared_type='CSSM_BASE_CERTS'/>
<field type='{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}' name='Samples' declared_type='CSSM_SAMPLEGROUP'/>
<field function_pointer='true' type='^?' name='Callback' declared_type='CSSM_CHALLENGE_CALLBACK'>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_samplegroup=I^{cssm_sample}}' declared_type='CSSM_SAMPLEGROUP_PTR'/>
<arg type='^v' declared_type='void*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' const='true' declared_type='CSSM_MEMORY_FUNCS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='^v' name='CallerCtx' declared_type='void*'/>
</struct>
<struct type64='{cssm_acl_edit=&quot;EditMode&quot;I&quot;OldEntryHandle&quot;q&quot;NewEntry&quot;^{cssm_acl_entry_input}}' type='{cssm_acl_edit=&quot;EditMode&quot;I&quot;OldEntryHandle&quot;i&quot;NewEntry&quot;^{cssm_acl_entry_input}}' name='cssm_acl_edit'>
<field type='I' name='EditMode' declared_type='CSSM_ACL_EDIT_MODE'/>
<field type64='q' type='l' name='OldEntryHandle' declared_type='CSSM_ACL_HANDLE'/>
<field type64='^{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}' type='^{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}' name='NewEntry' const='true' declared_type='CSSM_ACL_ENTRY_INPUT*'/>
</struct>
<struct type64='{cssm_acl_entry_info=&quot;EntryPublicInfo&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;EntryHandle&quot;q}' type='{cssm_acl_entry_info=&quot;EntryPublicInfo&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;EntryHandle&quot;i}' name='cssm_acl_entry_info'>
<field type64='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' type='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' name='EntryPublicInfo' declared_type='CSSM_ACL_ENTRY_PROTOTYPE'/>
<field type64='q' type='l' name='EntryHandle' declared_type='CSSM_ACL_HANDLE'/>
</struct>
<struct type64='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' type='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' name='cssm_acl_entry_input'>
<field type64='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' type='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' name='Prototype' declared_type='CSSM_ACL_ENTRY_PROTOTYPE'/>
<field function_pointer='true' type='^?' name='Callback' declared_type='CSSM_ACL_SUBJECT_CALLBACK'>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' declared_type='CSSM_LIST_PTR'/>
<arg type='^v' declared_type='void*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' const='true' declared_type='CSSM_MEMORY_FUNCS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='^v' name='CallerContext' declared_type='void*'/>
</struct>
<struct type64='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' type='{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}' name='cssm_acl_entry_prototype'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='TypedSubject' declared_type='CSSM_LIST'/>
<field type='i' name='Delegate' declared_type='CSSM_BOOL'/>
<field type='{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}' name='Authorization' declared_type='CSSM_AUTHORIZATIONGROUP'/>
<field type64='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='TimeRange' declared_type='CSSM_ACL_VALIDITY_PERIOD'/>
<field type='[68c]' name='EntryTag' declared_type='CSSM_STRING'/>
</struct>
<struct type='{cssm_acl_keychain_prompt_selector=&quot;version&quot;S&quot;flags&quot;S}' name='cssm_acl_keychain_prompt_selector'>
<field type='S' name='version' declared_type='uint16'/>
<field type='S' name='flags' declared_type='uint16'/>
</struct>
<struct type='{cssm_acl_owner_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i}' name='cssm_acl_owner_prototype'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='TypedSubject' declared_type='CSSM_LIST'/>
<field type='i' name='Delegate' declared_type='CSSM_BOOL'/>
</struct>
<struct type='{cssm_acl_process_subject_selector=&quot;version&quot;S&quot;mask&quot;S&quot;uid&quot;I&quot;gid&quot;I}' name='cssm_acl_process_subject_selector'>
<field type='S' name='version' declared_type='uint16'/>
<field type='S' name='mask' declared_type='uint16'/>
<field type='I' name='uid' declared_type='uint32'/>
<field type='I' name='gid' declared_type='uint32'/>
</struct>
<struct type64='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_acl_validity_period'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='StartDate' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='EndDate' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_applecspdl_db_change_password_parameters=&quot;accessCredentials&quot;^{cssm_access_credentials}}' name='cssm_applecspdl_db_change_password_parameters'>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='accessCredentials' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
</struct>
<struct type='{cssm_applecspdl_db_is_locked_parameters=&quot;isLocked&quot;C}' name='cssm_applecspdl_db_is_locked_parameters'>
<field type='C' name='isLocked' declared_type='uint8'/>
</struct>
<struct type='{cssm_applecspdl_db_settings_parameters=&quot;idleTimeout&quot;I&quot;lockOnSleep&quot;C}' name='cssm_applecspdl_db_settings_parameters'>
<field type='I' name='idleTimeout' declared_type='uint32'/>
<field type='C' name='lockOnSleep' declared_type='uint8'/>
</struct>
<struct type='{cssm_appledl_open_parameters=&quot;length&quot;I&quot;version&quot;I&quot;autoCommit&quot;i&quot;mask&quot;I&quot;mode&quot;S}' name='cssm_appledl_open_parameters'>
<field type='I' name='length' declared_type='uint32'/>
<field type='I' name='version' declared_type='uint32'/>
<field type='i' name='autoCommit' declared_type='CSSM_BOOL'/>
<field type='I' name='mask' declared_type='uint32'/>
<field type='S' name='mode' declared_type='mode_t'/>
</struct>
<struct type='{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}' name='cssm_authorizationgroup'>
<field type='I' name='NumberOfAuthTags' declared_type='uint32'/>
<field type='^i' name='AuthTags' declared_type='CSSM_ACL_AUTHORIZATION_TAG*'/>
</struct>
<struct type64='{cssm_base_certs=&quot;TPHandle&quot;q&quot;CLHandle&quot;q&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' type='{cssm_base_certs=&quot;TPHandle&quot;i&quot;CLHandle&quot;i&quot;Certs&quot;{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}}' name='cssm_base_certs'>
<field type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}' name='Certs' declared_type='CSSM_CERTGROUP'/>
</struct>
<struct type64='{cssm_cert_bundle=&quot;BundleHeader&quot;{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}&quot;Bundle&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_cert_bundle=&quot;BundleHeader&quot;{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}&quot;Bundle&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_cert_bundle'>
<field type='{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}' name='BundleHeader' declared_type='CSSM_CERT_BUNDLE_HEADER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Bundle' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_cert_bundle_header=&quot;BundleType&quot;I&quot;BundleEncoding&quot;I}' name='cssm_cert_bundle_header'>
<field type='I' name='BundleType' declared_type='CSSM_CERT_BUNDLE_TYPE'/>
<field type='I' name='BundleEncoding' declared_type='CSSM_CERT_BUNDLE_ENCODING'/>
</struct>
<struct type64='{cssm_cert_pair=&quot;EncodedCert&quot;{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;ParsedCert&quot;{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}}' type='{cssm_cert_pair=&quot;EncodedCert&quot;{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;ParsedCert&quot;{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}}' name='cssm_cert_pair'>
<field type64='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='EncodedCert' declared_type='CSSM_ENCODED_CERT'/>
<field type='{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}' name='ParsedCert' declared_type='CSSM_PARSED_CERT'/>
</struct>
<struct type='{cssm_certgroup=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;NumCerts&quot;I&quot;GroupList&quot;(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})&quot;CertGroupType&quot;I&quot;Reserved&quot;^v}' name='cssm_certgroup'>
<field type='I' name='CertType' declared_type='CSSM_CERT_TYPE'/>
<field type='I' name='CertEncoding' declared_type='CSSM_CERT_ENCODING'/>
<field type='I' name='NumCerts' declared_type='uint32'/>
<field type='(?=&quot;CertList&quot;^{cssm_data}&quot;EncodedCertList&quot;^{cssm_encoded_cert}&quot;ParsedCertList&quot;^{cssm_parsed_cert}&quot;PairCertList&quot;^{cssm_cert_pair})' name='GroupList' declared_type='union cssm_certgroup::'/>
<field type='I' name='CertGroupType' declared_type='CSSM_CERTGROUP_TYPE'/>
<field type='^v' name='Reserved' declared_type='void*'/>
</struct>
<struct type64='{cssm_context=&quot;ContextType&quot;I&quot;AlgorithmType&quot;I&quot;NumberOfAttributes&quot;I&quot;ContextAttributes&quot;^{cssm_context_attribute}&quot;CSPHandle&quot;q&quot;Privileged&quot;i&quot;EncryptionProhibited&quot;I&quot;WorkFactor&quot;I&quot;Reserved&quot;I}' type='{cssm_context=&quot;ContextType&quot;I&quot;AlgorithmType&quot;I&quot;NumberOfAttributes&quot;I&quot;ContextAttributes&quot;^{cssm_context_attribute}&quot;CSPHandle&quot;i&quot;Privileged&quot;i&quot;EncryptionProhibited&quot;I&quot;WorkFactor&quot;I&quot;Reserved&quot;I}' name='cssm_context'>
<field type='I' name='ContextType' declared_type='CSSM_CONTEXT_TYPE'/>
<field type='I' name='AlgorithmType' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='NumberOfAttributes' declared_type='uint32'/>
<field type='^{cssm_context_attribute=II(cssm_context_attribute_value=*I^{cssm_access_credentials}^{cssm_key}^{cssm_data}I^{cssm_date}^{cssm_range}^{cssm_crypto_data}^{cssm_version}^{cssm_dl_db_handle}^{cssm_kr_profile})}' name='ContextAttributes' declared_type='CSSM_CONTEXT_ATTRIBUTE_PTR'/>
<field type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<field type='i' name='Privileged' declared_type='CSSM_BOOL'/>
<field type='I' name='EncryptionProhibited' declared_type='uint32'/>
<field type='I' name='WorkFactor' declared_type='uint32'/>
<field type='I' name='Reserved' declared_type='uint32'/>
</struct>
<struct type='{cssm_context_attribute=&quot;AttributeType&quot;I&quot;AttributeLength&quot;I&quot;Attribute&quot;(cssm_context_attribute_value=&quot;String&quot;*&quot;Uint32&quot;I&quot;AccessCredentials&quot;^{cssm_access_credentials}&quot;Key&quot;^{cssm_key}&quot;Data&quot;^{cssm_data}&quot;Padding&quot;I&quot;Date&quot;^{cssm_date}&quot;Range&quot;^{cssm_range}&quot;CryptoData&quot;^{cssm_crypto_data}&quot;Version&quot;^{cssm_version}&quot;DLDBHandle&quot;^{cssm_dl_db_handle}&quot;KRProfile&quot;^{cssm_kr_profile})}' name='cssm_context_attribute'>
<field type='I' name='AttributeType' declared_type='CSSM_ATTRIBUTE_TYPE'/>
<field type='I' name='AttributeLength' declared_type='uint32'/>
<field type='(cssm_context_attribute_value=&quot;String&quot;*&quot;Uint32&quot;I&quot;AccessCredentials&quot;^{cssm_access_credentials}&quot;Key&quot;^{cssm_key}&quot;Data&quot;^{cssm_data}&quot;Padding&quot;I&quot;Date&quot;^{cssm_date}&quot;Range&quot;^{cssm_range}&quot;CryptoData&quot;^{cssm_crypto_data}&quot;Version&quot;^{cssm_version}&quot;DLDBHandle&quot;^{cssm_dl_db_handle}&quot;KRProfile&quot;^{cssm_kr_profile})' name='Attribute' declared_type='union cssm_context_attribute_value'/>
</struct>
<struct type64='{cssm_crl_pair=&quot;EncodedCrl&quot;{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;ParsedCrl&quot;{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}}' type='{cssm_crl_pair=&quot;EncodedCrl&quot;{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;ParsedCrl&quot;{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}}' name='cssm_crl_pair'>
<field type64='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='EncodedCrl' declared_type='CSSM_ENCODED_CRL'/>
<field type='{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}' name='ParsedCrl' declared_type='CSSM_PARSED_CRL'/>
</struct>
<struct type='{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}' name='cssm_crlgroup'>
<field type='I' name='CrlType' declared_type='CSSM_CRL_TYPE'/>
<field type='I' name='CrlEncoding' declared_type='CSSM_CRL_ENCODING'/>
<field type='I' name='NumberOfCrls' declared_type='uint32'/>
<field type='(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})' name='GroupCrlList' declared_type='union cssm_crlgroup::'/>
<field type='I' name='CrlGroupType' declared_type='CSSM_CRLGROUP_TYPE'/>
</struct>
<struct type64='{cssm_crypto_data=&quot;Param&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' type='{cssm_crypto_data=&quot;Param&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;Callback&quot;^?&quot;CallerCtx&quot;^v}' name='cssm_crypto_data'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Param' declared_type='CSSM_DATA'/>
<field function_pointer='true' type='^?' name='Callback' declared_type='CSSM_CALLBACK'>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='^v' name='CallerCtx' declared_type='void*'/>
</struct>
<struct type='{cssm_csp_operational_statistics=&quot;UserAuthenticated&quot;i&quot;DeviceFlags&quot;I&quot;TokenMaxSessionCount&quot;I&quot;TokenOpenedSessionCount&quot;I&quot;TokenMaxRWSessionCount&quot;I&quot;TokenOpenedRWSessionCount&quot;I&quot;TokenTotalPublicMem&quot;I&quot;TokenFreePublicMem&quot;I&quot;TokenTotalPrivateMem&quot;I&quot;TokenFreePrivateMem&quot;I}' name='cssm_csp_operational_statistics'>
<field type='i' name='UserAuthenticated' declared_type='CSSM_BOOL'/>
<field type='I' name='DeviceFlags' declared_type='CSSM_CSP_FLAGS'/>
<field type='I' name='TokenMaxSessionCount' declared_type='uint32'/>
<field type='I' name='TokenOpenedSessionCount' declared_type='uint32'/>
<field type='I' name='TokenMaxRWSessionCount' declared_type='uint32'/>
<field type='I' name='TokenOpenedRWSessionCount' declared_type='uint32'/>
<field type='I' name='TokenTotalPublicMem' declared_type='uint32'/>
<field type='I' name='TokenFreePublicMem' declared_type='uint32'/>
<field type='I' name='TokenTotalPrivateMem' declared_type='uint32'/>
<field type='I' name='TokenFreePrivateMem' declared_type='uint32'/>
</struct>
<struct type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='cssm_data'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' declared_type='uint8*'/>
</struct>
<struct type='{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}' name='cssm_date'>
<field type='[4C]' name='Year' declared_type='uint8*'/>
<field type='[2C]' name='Month' declared_type='uint8*'/>
<field type='[2C]' name='Day' declared_type='uint8*'/>
</struct>
<struct type64='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' type='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' name='cssm_db_attribute_data'>
<field type64='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' type='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' name='Info' declared_type='CSSM_DB_ATTRIBUTE_INFO'/>
<field type='I' name='NumberOfValues' declared_type='uint32'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Value' declared_type='CSSM_DATA_PTR'/>
</struct>
<struct type64='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' type='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' name='cssm_db_attribute_info'>
<field type='I' name='AttributeNameFormat' declared_type='CSSM_DB_ATTRIBUTE_NAME_FORMAT'/>
<field type64='(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)' type='(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)' name='Label' declared_type='union cssm_db_attribute_label'/>
<field type='I' name='AttributeFormat' declared_type='CSSM_DB_ATTRIBUTE_FORMAT'/>
</struct>
<struct type64='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' type='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' name='cssm_db_index_info'>
<field type='I' name='IndexType' declared_type='CSSM_DB_INDEX_TYPE'/>
<field type='I' name='IndexedDataLocation' declared_type='CSSM_DB_INDEXED_DATA_LOCATION'/>
<field type64='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' type='{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}' name='Info' declared_type='CSSM_DB_ATTRIBUTE_INFO'/>
</struct>
<struct type='{cssm_db_parsing_module_info=&quot;RecordType&quot;I&quot;ModuleSubserviceUid&quot;{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}}' name='cssm_db_parsing_module_info'>
<field type='I' name='RecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}' name='ModuleSubserviceUid' declared_type='CSSM_SUBSERVICE_UID'/>
</struct>
<struct type='{cssm_db_record_attribute_data=&quot;DataRecordType&quot;I&quot;SemanticInformation&quot;I&quot;NumberOfAttributes&quot;I&quot;AttributeData&quot;^{cssm_db_attribute_data}}' name='cssm_db_record_attribute_data'>
<field type='I' name='DataRecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='SemanticInformation' declared_type='uint32'/>
<field type='I' name='NumberOfAttributes' declared_type='uint32'/>
<field type64='^{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}I^{cssm_data}}' type='^{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}I^{cssm_data}}' name='AttributeData' declared_type='CSSM_DB_ATTRIBUTE_DATA_PTR'/>
</struct>
<struct type='{cssm_db_record_attribute_info=&quot;DataRecordType&quot;I&quot;NumberOfAttributes&quot;I&quot;AttributeInfo&quot;^{cssm_db_attribute_info}}' name='cssm_db_record_attribute_info'>
<field type='I' name='DataRecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='NumberOfAttributes' declared_type='uint32'/>
<field type64='^{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}' type='^{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}' name='AttributeInfo' declared_type='CSSM_DB_ATTRIBUTE_INFO_PTR'/>
</struct>
<struct type='{cssm_db_record_index_info=&quot;DataRecordType&quot;I&quot;NumberOfIndexes&quot;I&quot;IndexInfo&quot;^{cssm_db_index_info}}' name='cssm_db_record_index_info'>
<field type='I' name='DataRecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='NumberOfIndexes' declared_type='uint32'/>
<field type64='^{cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}' type='^{cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}' name='IndexInfo' declared_type='CSSM_DB_INDEX_INFO_PTR'/>
</struct>
<struct type64='{cssm_db_schema_attribute_info=&quot;AttributeId&quot;I&quot;AttributeName&quot;*&quot;AttributeNameID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;DataType&quot;I}' type='{cssm_db_schema_attribute_info=&quot;AttributeId&quot;I&quot;AttributeName&quot;*&quot;AttributeNameID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;DataType&quot;I}' name='cssm_db_schema_attribute_info'>
<field type='I' name='AttributeId' declared_type='uint32'/>
<field type='*' name='AttributeName' declared_type='char*'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='AttributeNameID' declared_type='CSSM_OID'/>
<field type='I' name='DataType' declared_type='CSSM_DB_ATTRIBUTE_FORMAT'/>
</struct>
<struct type='{cssm_db_schema_index_info=&quot;AttributeId&quot;I&quot;IndexId&quot;I&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I}' name='cssm_db_schema_index_info'>
<field type='I' name='AttributeId' declared_type='uint32'/>
<field type='I' name='IndexId' declared_type='uint32'/>
<field type='I' name='IndexType' declared_type='CSSM_DB_INDEX_TYPE'/>
<field type='I' name='IndexedDataLocation' declared_type='CSSM_DB_INDEXED_DATA_LOCATION'/>
</struct>
<struct type64='{cssm_db_unique_record=&quot;RecordLocator&quot;{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}&quot;RecordIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_db_unique_record=&quot;RecordLocator&quot;{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}&quot;RecordIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_db_unique_record'>
<field type64='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' type='{cssm_db_index_info=&quot;IndexType&quot;I&quot;IndexedDataLocation&quot;I&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}}' name='RecordLocator' declared_type='CSSM_DB_INDEX_INFO'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='RecordIdentifier' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_dbinfo=&quot;NumberOfRecordTypes&quot;I&quot;DefaultParsingModules&quot;^{cssm_db_parsing_module_info}&quot;RecordAttributeNames&quot;^{cssm_db_record_attribute_info}&quot;RecordIndexes&quot;^{cssm_db_record_index_info}&quot;IsLocal&quot;i&quot;AccessPath&quot;*&quot;Reserved&quot;^v}' name='cssm_dbinfo'>
<field type='I' name='NumberOfRecordTypes' declared_type='uint32'/>
<field type='^{cssm_db_parsing_module_info=I{cssm_subservice_uid={cssm_guid=ISS[8C]}{cssm_version=II}II}}' name='DefaultParsingModules' declared_type='CSSM_DB_PARSING_MODULE_INFO_PTR'/>
<field type='^{cssm_db_record_attribute_info=II^{cssm_db_attribute_info}}' name='RecordAttributeNames' declared_type='CSSM_DB_RECORD_ATTRIBUTE_INFO_PTR'/>
<field type='^{cssm_db_record_index_info=II^{cssm_db_index_info}}' name='RecordIndexes' declared_type='CSSM_DB_RECORD_INDEX_INFO_PTR'/>
<field type='i' name='IsLocal' declared_type='CSSM_BOOL'/>
<field type='*' name='AccessPath' declared_type='char*'/>
<field type='^v' name='Reserved' declared_type='void*'/>
</struct>
<struct type64='{cssm_dl_db_handle=&quot;DLHandle&quot;q&quot;DBHandle&quot;q}' type='{cssm_dl_db_handle=&quot;DLHandle&quot;i&quot;DBHandle&quot;i}' name='cssm_dl_db_handle'>
<field type64='q' type='l' name='DLHandle' declared_type='CSSM_DL_HANDLE'/>
<field type64='q' type='l' name='DBHandle' declared_type='CSSM_DB_HANDLE'/>
</struct>
<struct type='{cssm_dl_db_list=&quot;NumHandles&quot;I&quot;DLDBHandle&quot;^{cssm_dl_db_handle}}' name='cssm_dl_db_list'>
<field type='I' name='NumHandles' declared_type='uint32'/>
<field type64='^{cssm_dl_db_handle=qq}' type='^{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE_PTR'/>
</struct>
<struct type='{cssm_dl_pkcs11_attributes=&quot;DeviceAccessFlags&quot;I}' name='cssm_dl_pkcs11_attributes'>
<field type='I' name='DeviceAccessFlags' declared_type='uint32'/>
</struct>
<struct type64='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_cert=&quot;CertType&quot;I&quot;CertEncoding&quot;I&quot;CertBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_encoded_cert'>
<field type='I' name='CertType' declared_type='CSSM_CERT_TYPE'/>
<field type='I' name='CertEncoding' declared_type='CSSM_CERT_ENCODING'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='CertBlob' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_encoded_crl=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;CrlBlob&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_encoded_crl'>
<field type='I' name='CrlType' declared_type='CSSM_CRL_TYPE'/>
<field type='I' name='CrlEncoding' declared_type='CSSM_CRL_ENCODING'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='CrlBlob' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_evidence=&quot;EvidenceForm&quot;I&quot;Evidence&quot;^v}' name='cssm_evidence'>
<field type='I' name='EvidenceForm' declared_type='CSSM_EVIDENCE_FORM'/>
<field type='^v' name='Evidence' declared_type='void*'/>
</struct>
<struct type64='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_field'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='FieldOid' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='FieldValue' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_fieldgroup=&quot;NumberOfFields&quot;i&quot;Fields&quot;^{cssm_field}}' name='cssm_fieldgroup'>
<field type='i' name='NumberOfFields' declared_type='int'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='Fields' declared_type='CSSM_FIELD_PTR'/>
</struct>
<struct type='{cssm_func_name_addr=&quot;Name&quot;[68c]&quot;Address&quot;^?}' name='cssm_func_name_addr'>
<field type='[68c]' name='Name' declared_type='CSSM_STRING'/>
<field function_pointer='true' type='^?' name='Address' declared_type='CSSM_PROC_ADDR'>
<retval type='v' declared_type='void'/>
</field>
</struct>
<struct type='{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}' name='cssm_guid'>
<field type='I' name='Data1' declared_type='uint32'/>
<field type='S' name='Data2' declared_type='uint16'/>
<field type='S' name='Data3' declared_type='uint16'/>
<field type='[8C]' name='Data4' declared_type='uint8*'/>
</struct>
<struct type64='{cssm_kea_derive_params=&quot;Rb&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;Yb&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_kea_derive_params=&quot;Rb&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;Yb&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_kea_derive_params'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Rb' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Yb' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_key=&quot;KeyHeader&quot;{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}&quot;KeyData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_key'>
<field type='{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}' name='KeyHeader' declared_type='CSSM_KEYHEADER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='KeyData' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_key_size=&quot;LogicalKeySizeInBits&quot;I&quot;EffectiveKeySizeInBits&quot;I}' name='cssm_key_size'>
<field type='I' name='LogicalKeySizeInBits' declared_type='uint32'/>
<field type='I' name='EffectiveKeySizeInBits' declared_type='uint32'/>
</struct>
<struct type='{cssm_keyheader=&quot;HeaderVersion&quot;I&quot;CspId&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;BlobType&quot;I&quot;Format&quot;I&quot;AlgorithmId&quot;I&quot;KeyClass&quot;I&quot;LogicalKeySizeInBits&quot;I&quot;KeyAttr&quot;I&quot;KeyUsage&quot;I&quot;StartDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;EndDate&quot;{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}&quot;WrapAlgorithmId&quot;I&quot;WrapMode&quot;I&quot;Reserved&quot;I}' name='cssm_keyheader'>
<field type='I' name='HeaderVersion' declared_type='CSSM_HEADERVERSION'/>
<field type='{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}' name='CspId' declared_type='CSSM_GUID'/>
<field type='I' name='BlobType' declared_type='CSSM_KEYBLOB_TYPE'/>
<field type='I' name='Format' declared_type='CSSM_KEYBLOB_FORMAT'/>
<field type='I' name='AlgorithmId' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='KeyClass' declared_type='CSSM_KEYCLASS'/>
<field type='I' name='LogicalKeySizeInBits' declared_type='uint32'/>
<field type='I' name='KeyAttr' declared_type='CSSM_KEYATTR_FLAGS'/>
<field type='I' name='KeyUsage' declared_type='CSSM_KEYUSE'/>
<field type='{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}' name='StartDate' declared_type='CSSM_DATE'/>
<field type='{cssm_date=&quot;Year&quot;[4C]&quot;Month&quot;[2C]&quot;Day&quot;[2C]}' name='EndDate' declared_type='CSSM_DATE'/>
<field type='I' name='WrapAlgorithmId' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='WrapMode' declared_type='CSSM_ENCRYPT_MODE'/>
<field type='I' name='Reserved' declared_type='uint32'/>
</struct>
<struct type='{cssm_kr_name=&quot;Type&quot;C&quot;Length&quot;C&quot;Name&quot;*}' name='cssm_kr_name'>
<field type='C' name='Type' declared_type='uint8'/>
<field type='C' name='Length' declared_type='uint8'/>
<field type='*' name='Name' declared_type='char*'/>
</struct>
<struct type='{cssm_kr_policy_info=&quot;krbNotAllowed&quot;i&quot;numberOfEntries&quot;I&quot;policyEntry&quot;^{cssm_kr_policy_list_item}}' name='cssm_kr_policy_info'>
<field type='i' name='krbNotAllowed' declared_type='CSSM_BOOL'/>
<field type='I' name='numberOfEntries' declared_type='uint32'/>
<field type='^{cssm_kr_policy_list_item=^{kr_policy_list_item}IIIICII}' name='policyEntry' declared_type='CSSM_KR_POLICY_LIST_ITEM*'/>
</struct>
<struct type='{cssm_kr_policy_list_item=&quot;next&quot;^{kr_policy_list_item}&quot;AlgorithmId&quot;I&quot;Mode&quot;I&quot;MaxKeyLength&quot;I&quot;MaxRounds&quot;I&quot;WorkFactor&quot;C&quot;PolicyFlags&quot;I&quot;AlgClass&quot;I}' name='cssm_kr_policy_list_item'>
<field type='^{kr_policy_list_item=}' name='next' declared_type='struct kr_policy_list_item*'/>
<field type='I' name='AlgorithmId' declared_type='CSSM_ALGORITHMS'/>
<field type='I' name='Mode' declared_type='CSSM_ENCRYPT_MODE'/>
<field type='I' name='MaxKeyLength' declared_type='uint32'/>
<field type='I' name='MaxRounds' declared_type='uint32'/>
<field type='C' name='WorkFactor' declared_type='uint8'/>
<field type='I' name='PolicyFlags' declared_type='CSSM_KR_POLICY_FLAGS'/>
<field type='I' name='AlgClass' declared_type='CSSM_CONTEXT_TYPE'/>
</struct>
<struct type='{cssm_kr_profile=&quot;UserName&quot;{cssm_kr_name=&quot;Type&quot;C&quot;Length&quot;C&quot;Name&quot;*}&quot;UserCertificate&quot;^{cssm_certgroup}&quot;KRSCertChain&quot;^{cssm_certgroup}&quot;LE_KRANum&quot;C&quot;LE_KRACertChainList&quot;^{cssm_certgroup}&quot;ENT_KRANum&quot;C&quot;ENT_KRACertChainList&quot;^{cssm_certgroup}&quot;INDIV_KRANum&quot;C&quot;INDIV_KRACertChainList&quot;^{cssm_certgroup}&quot;INDIV_AuthenticationInfo&quot;^{cssm_data}&quot;KRSPFlags&quot;I&quot;KRSPExtensions&quot;^{cssm_data}}' name='cssm_kr_profile'>
<field type='{cssm_kr_name=&quot;Type&quot;C&quot;Length&quot;C&quot;Name&quot;*}' name='UserName' declared_type='CSSM_KR_NAME'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='UserCertificate' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='KRSCertChain' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='C' name='LE_KRANum' declared_type='uint8'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='LE_KRACertChainList' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='C' name='ENT_KRANum' declared_type='uint8'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='ENT_KRACertChainList' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='C' name='INDIV_KRANum' declared_type='uint8'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='INDIV_KRACertChainList' declared_type='CSSM_CERTGROUP_PTR'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='INDIV_AuthenticationInfo' declared_type='CSSM_DATA_PTR'/>
<field type='I' name='KRSPFlags' declared_type='uint32'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KRSPExtensions' declared_type='CSSM_DATA_PTR'/>
</struct>
<struct type='{cssm_kr_wrappedproductinfo=&quot;StandardVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;StandardDescription&quot;[68c]&quot;ProductVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;ProductDescription&quot;[68c]&quot;ProductVendor&quot;[68c]&quot;ProductFlags&quot;I}' name='cssm_kr_wrappedproductinfo'>
<field type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='StandardVersion' declared_type='CSSM_VERSION'/>
<field type='[68c]' name='StandardDescription' declared_type='CSSM_STRING'/>
<field type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='ProductVersion' declared_type='CSSM_VERSION'/>
<field type='[68c]' name='ProductDescription' declared_type='CSSM_STRING'/>
<field type='[68c]' name='ProductVendor' declared_type='CSSM_STRING'/>
<field type='I' name='ProductFlags' declared_type='uint32'/>
</struct>
<struct type='{cssm_krsubservice=&quot;SubServiceId&quot;I&quot;Description&quot;*&quot;WrappedProduct&quot;{cssm_kr_wrappedproductinfo=&quot;StandardVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;StandardDescription&quot;[68c]&quot;ProductVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;ProductDescription&quot;[68c]&quot;ProductVendor&quot;[68c]&quot;ProductFlags&quot;I}}' name='cssm_krsubservice'>
<field type='I' name='SubServiceId' declared_type='uint32'/>
<field type='*' name='Description' declared_type='char*'/>
<field type='{cssm_kr_wrappedproductinfo=&quot;StandardVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;StandardDescription&quot;[68c]&quot;ProductVersion&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;ProductDescription&quot;[68c]&quot;ProductVendor&quot;[68c]&quot;ProductFlags&quot;I}' name='WrappedProduct' declared_type='CSSM_KR_WRAPPEDPRODUCT_INFO'/>
</struct>
<struct type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='cssm_list'>
<field type='I' name='ListType' declared_type='CSSM_LIST_TYPE'/>
<field type64='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=Q*})}' type='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=I*})}' name='Head' declared_type='CSSM_LIST_ELEMENT_PTR'/>
<field type64='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=Q*})}' type='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=I*})}' name='Tail' declared_type='CSSM_LIST_ELEMENT_PTR'/>
</struct>
<struct type64='{cssm_list_element=&quot;NextElement&quot;^{cssm_list_element}&quot;WordID&quot;i&quot;ElementType&quot;I&quot;Element&quot;(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*})}' type='{cssm_list_element=&quot;NextElement&quot;^{cssm_list_element}&quot;WordID&quot;i&quot;ElementType&quot;I&quot;Element&quot;(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*})}' name='cssm_list_element'>
<field type64='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=Q*})}' type='^{cssm_list_element=^{cssm_list_element}iI(?={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_data=I*})}' name='NextElement' declared_type='struct cssm_list_element*'/>
<field type='i' name='WordID' declared_type='CSSM_WORDID_TYPE'/>
<field type='I' name='ElementType' declared_type='CSSM_LIST_ELEMENT_TYPE'/>
<field type64='(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*})' type='(?=&quot;Sublist&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Word&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*})' name='Element' declared_type='union cssm_list_element::'/>
</struct>
<struct type64='{cssm_manager_event_notification=&quot;DestinationModuleManagerType&quot;I&quot;SourceModuleManagerType&quot;I&quot;Event&quot;I&quot;EventId&quot;I&quot;EventData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_manager_event_notification=&quot;DestinationModuleManagerType&quot;I&quot;SourceModuleManagerType&quot;I&quot;Event&quot;I&quot;EventId&quot;I&quot;EventData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_manager_event_notification'>
<field type='I' name='DestinationModuleManagerType' declared_type='CSSM_SERVICE_MASK'/>
<field type='I' name='SourceModuleManagerType' declared_type='CSSM_SERVICE_MASK'/>
<field type='I' name='Event' declared_type='CSSM_MANAGER_EVENT_TYPES'/>
<field type='I' name='EventId' declared_type='uint32'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='EventData' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_manager_registration_info=&quot;Initialize&quot;^?&quot;Terminate&quot;^?&quot;RegisterDispatchTable&quot;^?&quot;DeregisterDispatchTable&quot;^?&quot;EventNotifyManager&quot;^?&quot;RefreshFunctionTable&quot;^?}' name='cssm_manager_registration_info'>
<field function_pointer='true' type='^?' name='Initialize' declared_type='CSSM_RETURN (*)(uint32, uint32)'>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Terminate' declared_type='CSSM_RETURN (*)(void)'>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RegisterDispatchTable' declared_type='CSSM_RETURN (*)(CSSM_STATE_FUNCS_PTR)'>
<arg type='^{cssm_state_funcs=^?^?^?^?^?^?}' declared_type='CSSM_STATE_FUNCS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DeregisterDispatchTable' declared_type='CSSM_RETURN (*)(void)'>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EventNotifyManager' declared_type='CSSM_RETURN (*)(CSSM_MANAGER_EVENT_NOTIFICATION *)'>
<arg type64='^{cssm_manager_event_notification=IIII{cssm_data=Q*}}' type='^{cssm_manager_event_notification=IIII{cssm_data=I*}}' const='true' declared_type='CSSM_MANAGER_EVENT_NOTIFICATION*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RefreshFunctionTable' declared_type='CSSM_RETURN (*)(CSSM_FUNC_NAME_ADDR_PTR, uint32)'>
<arg type='^{cssm_func_name_addr=[68c]^?}' declared_type='CSSM_FUNC_NAME_ADDR_PTR'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_memory_funcs=&quot;malloc_func&quot;^?&quot;free_func&quot;^?&quot;realloc_func&quot;^?&quot;calloc_func&quot;^?&quot;AllocRef&quot;^v}' name='cssm_memory_funcs'>
<field function_pointer='true' type='^?' name='malloc_func' declared_type='CSSM_MALLOC'>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='free_func' declared_type='CSSM_FREE'>
<arg type='^v' declared_type='void*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' type='^?' name='realloc_func' declared_type='CSSM_REALLOC'>
<arg type='^v' declared_type='void*'/>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='calloc_func' declared_type='CSSM_CALLOC'>
<arg type='I' declared_type='uint32'/>
<arg type64='Q' type='L' declared_type='CSSM_SIZE'/>
<arg type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</field>
<field type='^v' name='AllocRef' declared_type='void*'/>
</struct>
<struct type='{cssm_module_funcs=&quot;ServiceType&quot;I&quot;NumberOfServiceFuncs&quot;I&quot;ServiceFuncs&quot;^^?}' name='cssm_module_funcs'>
<field type='I' name='ServiceType' declared_type='CSSM_SERVICE_TYPE'/>
<field type='I' name='NumberOfServiceFuncs' declared_type='uint32'/>
<field type='^^?' name='ServiceFuncs' const='true' declared_type='CSSM_PROC_ADDR*'/>
</struct>
<struct type='{cssm_name_list=&quot;NumStrings&quot;I&quot;String&quot;^*}' name='cssm_name_list'>
<field type='I' name='NumStrings' declared_type='uint32'/>
<field type='^*' name='String' declared_type='char**'/>
</struct>
<struct type64='{cssm_net_address=&quot;AddressType&quot;I&quot;Address&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_net_address=&quot;AddressType&quot;I&quot;Address&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_net_address'>
<field type='I' name='AddressType' declared_type='CSSM_NET_ADDRESS_TYPE'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Address' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_parsed_cert=&quot;CertType&quot;I&quot;ParsedCertFormat&quot;I&quot;ParsedCert&quot;^v}' name='cssm_parsed_cert'>
<field type='I' name='CertType' declared_type='CSSM_CERT_TYPE'/>
<field type='I' name='ParsedCertFormat' declared_type='CSSM_CERT_PARSE_FORMAT'/>
<field type='^v' name='ParsedCert' declared_type='void*'/>
</struct>
<struct type='{cssm_parsed_crl=&quot;CrlType&quot;I&quot;ParsedCrlFormat&quot;I&quot;ParsedCrl&quot;^v}' name='cssm_parsed_crl'>
<field type='I' name='CrlType' declared_type='CSSM_CRL_TYPE'/>
<field type='I' name='ParsedCrlFormat' declared_type='CSSM_CRL_PARSE_FORMAT'/>
<field type='^v' name='ParsedCrl' declared_type='void*'/>
</struct>
<struct type64='{cssm_pkcs1_oaep_params=&quot;HashAlgorithm&quot;I&quot;HashParams&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;MGF&quot;I&quot;MGFParams&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;PSource&quot;I&quot;PSourceParams&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_pkcs1_oaep_params=&quot;HashAlgorithm&quot;I&quot;HashParams&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;MGF&quot;I&quot;MGFParams&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;PSource&quot;I&quot;PSourceParams&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_pkcs1_oaep_params'>
<field type='I' name='HashAlgorithm' declared_type='uint32'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='HashParams' declared_type='CSSM_DATA'/>
<field type='I' name='MGF' declared_type='CSSM_PKCS_OAEP_MGF'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='MGFParams' declared_type='CSSM_DATA'/>
<field type='I' name='PSource' declared_type='CSSM_PKCS_OAEP_PSOURCE'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='PSourceParams' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_pkcs5_pbkdf1_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;InitVector&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_pkcs5_pbkdf1_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;InitVector&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_pkcs5_pbkdf1_params'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Passphrase' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='InitVector' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_pkcs5_pbkdf2_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;PseudoRandomFunction&quot;I}' type='{cssm_pkcs5_pbkdf2_params=&quot;Passphrase&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;PseudoRandomFunction&quot;I}' name='cssm_pkcs5_pbkdf2_params'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='Passphrase' declared_type='CSSM_DATA'/>
<field type='I' name='PseudoRandomFunction' declared_type='CSSM_PKCS5_PBKDF2_PRF'/>
</struct>
<struct type='{cssm_query=&quot;RecordType&quot;I&quot;Conjunctive&quot;I&quot;NumSelectionPredicates&quot;I&quot;SelectionPredicate&quot;^{cssm_selection_predicate}&quot;QueryLimits&quot;{cssm_query_limits=&quot;TimeLimit&quot;I&quot;SizeLimit&quot;I}&quot;QueryFlags&quot;I}' name='cssm_query'>
<field type='I' name='RecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<field type='I' name='Conjunctive' declared_type='CSSM_DB_CONJUNCTIVE'/>
<field type='I' name='NumSelectionPredicates' declared_type='uint32'/>
<field type64='^{cssm_selection_predicate=I{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}I^{cssm_data}}}' type='^{cssm_selection_predicate=I{cssm_db_attribute_data={cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}I^{cssm_data}}}' name='SelectionPredicate' declared_type='CSSM_SELECTION_PREDICATE_PTR'/>
<field type='{cssm_query_limits=&quot;TimeLimit&quot;I&quot;SizeLimit&quot;I}' name='QueryLimits' declared_type='CSSM_QUERY_LIMITS'/>
<field type='I' name='QueryFlags' declared_type='CSSM_QUERY_FLAGS'/>
</struct>
<struct type='{cssm_query_limits=&quot;TimeLimit&quot;I&quot;SizeLimit&quot;I}' name='cssm_query_limits'>
<field type='I' name='TimeLimit' declared_type='uint32'/>
<field type='I' name='SizeLimit' declared_type='uint32'/>
</struct>
<struct type='{cssm_query_size_data=&quot;SizeInputBlock&quot;I&quot;SizeOutputBlock&quot;I}' name='cssm_query_size_data'>
<field type='I' name='SizeInputBlock' declared_type='uint32'/>
<field type='I' name='SizeOutputBlock' declared_type='uint32'/>
</struct>
<struct type='{cssm_range=&quot;Min&quot;I&quot;Max&quot;I}' name='cssm_range'>
<field type='I' name='Min' declared_type='uint32'/>
<field type='I' name='Max' declared_type='uint32'/>
</struct>
<struct type64='{cssm_resource_control_context=&quot;AccessCred&quot;^{cssm_access_credentials}&quot;InitialAclEntry&quot;{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}}' type='{cssm_resource_control_context=&quot;AccessCred&quot;^{cssm_access_credentials}&quot;InitialAclEntry&quot;{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}}' name='cssm_resource_control_context'>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
<field type64='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' type='{cssm_acl_entry_input=&quot;Prototype&quot;{cssm_acl_entry_prototype=&quot;TypedSubject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;Authorization&quot;{cssm_authorizationgroup=&quot;NumberOfAuthTags&quot;I&quot;AuthTags&quot;^i}&quot;TimeRange&quot;{cssm_acl_validity_period=&quot;StartDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;EndDate&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;EntryTag&quot;[68c]}&quot;Callback&quot;^?&quot;CallerContext&quot;^v}' name='InitialAclEntry' declared_type='CSSM_ACL_ENTRY_INPUT'/>
</struct>
<struct type='{cssm_sample=&quot;TypedSample&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Verifier&quot;^{cssm_subservice_uid}}' name='cssm_sample'>
<field type='{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}' name='TypedSample' declared_type='CSSM_LIST'/>
<field type='^{cssm_subservice_uid={cssm_guid=ISS[8C]}{cssm_version=II}II}' name='Verifier' const='true' declared_type='CSSM_SUBSERVICE_UID*'/>
</struct>
<struct type='{cssm_samplegroup=&quot;NumberOfSamples&quot;I&quot;Samples&quot;^{cssm_sample}}' name='cssm_samplegroup'>
<field type='I' name='NumberOfSamples' declared_type='uint32'/>
<field type='^{cssm_sample={cssm_list=I^{cssm_list_element}^{cssm_list_element}}^{cssm_subservice_uid}}' name='Samples' const='true' declared_type='CSSM_SAMPLE*'/>
</struct>
<struct type64='{cssm_selection_predicate=&quot;DbOperator&quot;I&quot;Attribute&quot;{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}}' type='{cssm_selection_predicate=&quot;DbOperator&quot;I&quot;Attribute&quot;{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}}' name='cssm_selection_predicate'>
<field type='I' name='DbOperator' declared_type='CSSM_DB_OPERATOR'/>
<field type64='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' type='{cssm_db_attribute_data=&quot;Info&quot;{cssm_db_attribute_info=&quot;AttributeNameFormat&quot;I&quot;Label&quot;(cssm_db_attribute_label=&quot;AttributeName&quot;*&quot;AttributeOID&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;AttributeID&quot;I)&quot;AttributeFormat&quot;I}&quot;NumberOfValues&quot;I&quot;Value&quot;^{cssm_data}}' name='Attribute' declared_type='CSSM_DB_ATTRIBUTE_DATA'/>
</struct>
<struct type='{cssm_spi_ac_funcs=&quot;AuthCompute&quot;^?&quot;PassThrough&quot;^?}' name='cssm_spi_ac_funcs'>
<field function_pointer='true' type='^?' name='AuthCompute' declared_type='CSSM_RETURN (*)(CSSM_AC_HANDLE, CSSM_TUPLEGROUP *, CSSM_TUPLEGROUP *, uint32, CSSM_LIST *, CSSM_LIST *, CSSM_LIST *, CSSM_TUPLEGROUP_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_AC_HANDLE'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' declared_type='CSSM_TUPLEGROUP_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_AC_HANDLE, CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DL_DB_LIST *, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_AC_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_cl_funcs=&quot;CertCreateTemplate&quot;^?&quot;CertGetAllTemplateFields&quot;^?&quot;CertSign&quot;^?&quot;CertVerify&quot;^?&quot;CertVerifyWithKey&quot;^?&quot;CertGetFirstFieldValue&quot;^?&quot;CertGetNextFieldValue&quot;^?&quot;CertAbortQuery&quot;^?&quot;CertGetKeyInfo&quot;^?&quot;CertGetAllFields&quot;^?&quot;FreeFields&quot;^?&quot;FreeFieldValue&quot;^?&quot;CertCache&quot;^?&quot;CertGetFirstCachedFieldValue&quot;^?&quot;CertGetNextCachedFieldValue&quot;^?&quot;CertAbortCache&quot;^?&quot;CertGroupToSignedBundle&quot;^?&quot;CertGroupFromVerifiedBundle&quot;^?&quot;CertDescribeFormat&quot;^?&quot;CrlCreateTemplate&quot;^?&quot;CrlSetFields&quot;^?&quot;CrlAddCert&quot;^?&quot;CrlRemoveCert&quot;^?&quot;CrlSign&quot;^?&quot;CrlVerify&quot;^?&quot;CrlVerifyWithKey&quot;^?&quot;IsCertInCrl&quot;^?&quot;CrlGetFirstFieldValue&quot;^?&quot;CrlGetNextFieldValue&quot;^?&quot;CrlAbortQuery&quot;^?&quot;CrlGetAllFields&quot;^?&quot;CrlCache&quot;^?&quot;IsCertInCachedCrl&quot;^?&quot;CrlGetFirstCachedFieldValue&quot;^?&quot;CrlGetNextCachedFieldValue&quot;^?&quot;CrlGetAllCachedRecordFields&quot;^?&quot;CrlAbortCache&quot;^?&quot;CrlDescribeFormat&quot;^?&quot;PassThrough&quot;^?}' name='cssm_spi_cl_funcs'>
<field function_pointer='true' type='^?' name='CertCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetAllTemplateFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertSign' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_FIELD *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertVerify' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_FIELD *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertVerifyWithKey' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetFirstFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetNextFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertAbortQuery' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetKeyInfo' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_KEY_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_key}' declared_type='CSSM_KEY_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetAllFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_OID *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_HANDLE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetFirstCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetNextCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertAbortCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupToSignedBundle' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_CERTGROUP *, CSSM_CERT_BUNDLE_HEADER *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_cert_bundle_header=II}' const='true' declared_type='CSSM_CERT_BUNDLE_HEADER*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupFromVerifiedBundle' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_CERT_BUNDLE *, CSSM_DATA *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_cert_bundle={cssm_cert_bundle_header=II}{cssm_data=Q*}}' type='^{cssm_cert_bundle={cssm_cert_bundle_header=II}{cssm_data=I*}}' const='true' declared_type='CSSM_CERT_BUNDLE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertDescribeFormat' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32 *, CSSM_OID_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_OID_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlSetFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlAddCert' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32, CSSM_FIELD *, CSSM_DATA *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlRemoveCert' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlSign' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_FIELD *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlVerify' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_FIELD *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlVerifyWithKey' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='IsCertInCrl' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_DATA *, CSSM_BOOL *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetFirstFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetNextFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlAbortQuery' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetAllFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_HANDLE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='IsCertInCachedCrl' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_DATA *, CSSM_HANDLE, CSSM_BOOL *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetFirstCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA *, CSSM_OID *, CSSM_HANDLE_PTR, uint32 *, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetNextCachedFieldValue' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlGetAllCachedRecordFields' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlAbortCache' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlDescribeFormat' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, uint32 *, CSSM_OID_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_data}' declared_type='CSSM_OID_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_CL_HANDLE, CSSM_CC_HANDLE, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_csp_funcs=&quot;EventNotify&quot;^?&quot;QuerySize&quot;^?&quot;SignData&quot;^?&quot;SignDataInit&quot;^?&quot;SignDataUpdate&quot;^?&quot;SignDataFinal&quot;^?&quot;VerifyData&quot;^?&quot;VerifyDataInit&quot;^?&quot;VerifyDataUpdate&quot;^?&quot;VerifyDataFinal&quot;^?&quot;DigestData&quot;^?&quot;DigestDataInit&quot;^?&quot;DigestDataUpdate&quot;^?&quot;DigestDataClone&quot;^?&quot;DigestDataFinal&quot;^?&quot;GenerateMac&quot;^?&quot;GenerateMacInit&quot;^?&quot;GenerateMacUpdate&quot;^?&quot;GenerateMacFinal&quot;^?&quot;VerifyMac&quot;^?&quot;VerifyMacInit&quot;^?&quot;VerifyMacUpdate&quot;^?&quot;VerifyMacFinal&quot;^?&quot;EncryptData&quot;^?&quot;EncryptDataInit&quot;^?&quot;EncryptDataUpdate&quot;^?&quot;EncryptDataFinal&quot;^?&quot;DecryptData&quot;^?&quot;DecryptDataInit&quot;^?&quot;DecryptDataUpdate&quot;^?&quot;DecryptDataFinal&quot;^?&quot;QueryKeySizeInBits&quot;^?&quot;GenerateKey&quot;^?&quot;GenerateKeyPair&quot;^?&quot;GenerateRandom&quot;^?&quot;GenerateAlgorithmParams&quot;^?&quot;WrapKey&quot;^?&quot;UnwrapKey&quot;^?&quot;DeriveKey&quot;^?&quot;FreeKey&quot;^?&quot;PassThrough&quot;^?&quot;Login&quot;^?&quot;Logout&quot;^?&quot;ChangeLoginAcl&quot;^?&quot;ObtainPrivateKeyFromPublicKey&quot;^?&quot;RetrieveUniqueId&quot;^?&quot;RetrieveCounter&quot;^?&quot;VerifyDevice&quot;^?&quot;GetTimeValue&quot;^?&quot;GetOperationalStatistics&quot;^?&quot;GetLoginAcl&quot;^?&quot;GetKeyAcl&quot;^?&quot;ChangeKeyAcl&quot;^?&quot;GetKeyOwner&quot;^?&quot;ChangeKeyOwner&quot;^?&quot;GetLoginOwner&quot;^?&quot;ChangeLoginOwner&quot;^?}' name='cssm_spi_csp_funcs'>
<field function_pointer='true' type='^?' name='EventNotify' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CONTEXT_EVENT, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' declared_type='CSSM_CONTEXT_EVENT'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='QuerySize' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_BOOL, uint32, CSSM_QUERY_SIZE_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='i' declared_type='CSSM_BOOL'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_query_size_data=II}' declared_type='CSSM_QUERY_SIZE_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_ALGORITHMS, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='SignDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_ALGORITHMS, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataClone' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CC_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DigestDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMac' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMacInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMacUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateMacFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMac' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMacInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMacUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyMacFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *, CSSM_DATA_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='EncryptDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptData' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *, CSSM_DATA_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptDataInit' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptDataUpdate' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, uint32, CSSM_DATA_PTR, uint32, CSSM_SIZE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^Q' type='^I' declared_type='CSSM_SIZE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DecryptDataFinal' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='QueryKeySizeInBits' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_KEY *, CSSM_KEY_SIZE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_key_size=II}' declared_type='CSSM_KEY_SIZE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateKeyPair' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, uint32, CSSM_DATA *, CSSM_KEY_PTR, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateRandom' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateAlgorithmParams' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, CSSM_DATA_PTR, uint32 *, CSSM_CONTEXT_ATTRIBUTE_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_context_attribute}' declared_type='CSSM_CONTEXT_ATTRIBUTE_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='WrapKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_ACCESS_CREDENTIALS *, CSSM_KEY *, CSSM_DATA *, CSSM_WRAP_KEY_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_WRAP_KEY_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='UnwrapKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_KEY *, CSSM_WRAP_KEY *, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR, CSSM_DATA_PTR, CSSM_PRIVILEGE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_WRAP_KEY*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DeriveKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA_PTR, uint32, uint32, CSSM_DATA *, CSSM_RESOURCE_CONTROL_CONTEXT *, CSSM_KEY_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_KEY_PTR, CSSM_BOOL)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type='i' declared_type='CSSM_BOOL'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Login' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_DATA *, void *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Logout' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeLoginAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_EDIT *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' const='true' declared_type='CSSM_ACL_EDIT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ObtainPrivateKeyFromPublicKey' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_KEY *, CSSM_KEY_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RetrieveUniqueId' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RetrieveCounter' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='VerifyDevice' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetTimeValue' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ALGORITHMS, CSSM_DATA *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetOperationalStatistics' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_CSP_OPERATIONAL_STATISTICS *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_csp_operational_statistics=iIIIIIIIII}' declared_type='CSSM_CSP_OPERATIONAL_STATISTICS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetLoginAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_STRING *, uint32 *, CSSM_ACL_ENTRY_INFO_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^[68c]' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetKeyAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_KEY *, CSSM_STRING *, uint32 *, CSSM_ACL_ENTRY_INFO_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^[68c]' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeKeyAcl' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_EDIT *, CSSM_KEY *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' const='true' declared_type='CSSM_ACL_EDIT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetKeyOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_KEY *, CSSM_ACL_OWNER_PROTOTYPE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeKeyOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_KEY *, CSSM_ACL_OWNER_PROTOTYPE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetLoginOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACL_OWNER_PROTOTYPE_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeLoginOwner' declared_type='CSSM_RETURN (*)(CSSM_CSP_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_OWNER_PROTOTYPE *)'>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_dl_funcs=&quot;DbOpen&quot;^?&quot;DbClose&quot;^?&quot;DbCreate&quot;^?&quot;DbDelete&quot;^?&quot;CreateRelation&quot;^?&quot;DestroyRelation&quot;^?&quot;Authenticate&quot;^?&quot;GetDbAcl&quot;^?&quot;ChangeDbAcl&quot;^?&quot;GetDbOwner&quot;^?&quot;ChangeDbOwner&quot;^?&quot;GetDbNames&quot;^?&quot;GetDbNameFromHandle&quot;^?&quot;FreeNameList&quot;^?&quot;DataInsert&quot;^?&quot;DataDelete&quot;^?&quot;DataModify&quot;^?&quot;DataGetFirst&quot;^?&quot;DataGetNext&quot;^?&quot;DataAbortQuery&quot;^?&quot;DataGetFromUniqueRecordId&quot;^?&quot;FreeUniqueRecord&quot;^?&quot;PassThrough&quot;^?}' name='cssm_spi_dl_funcs'>
<field function_pointer='true' type='^?' name='DbOpen' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_DB_ACCESS_TYPE, CSSM_ACCESS_CREDENTIALS *, void *, CSSM_DB_HANDLE *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbClose' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbCreate' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_DBINFO *, CSSM_DB_ACCESS_TYPE, CSSM_RESOURCE_CONTROL_CONTEXT *, void *, CSSM_DB_HANDLE *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='^{cssm_dbinfo=I^{cssm_db_parsing_module_info}^{cssm_db_record_attribute_info}^{cssm_db_record_index_info}i*^v}' const='true' declared_type='CSSM_DBINFO*'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbDelete' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_ACCESS_CREDENTIALS *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CreateRelation' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE, char *, uint32, CSSM_DB_SCHEMA_ATTRIBUTE_INFO *, uint32, CSSM_DB_SCHEMA_INDEX_INFO *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_db_schema_attribute_info=I*{cssm_data=Q*}I}' type='^{cssm_db_schema_attribute_info=I*{cssm_data=I*}I}' const='true' declared_type='CSSM_DB_SCHEMA_ATTRIBUTE_INFO*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_db_schema_index_info=IIII}' const='true' declared_type='CSSM_DB_SCHEMA_INDEX_INFO*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DestroyRelation' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='Authenticate' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_ACCESS_TYPE, CSSM_ACCESS_CREDENTIALS *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbAcl' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_STRING *, uint32 *, CSSM_ACL_ENTRY_INFO_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^[68c]' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeDbAcl' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_EDIT *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' const='true' declared_type='CSSM_ACL_EDIT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbOwner' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_ACL_OWNER_PROTOTYPE_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ChangeDbOwner' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_ACCESS_CREDENTIALS *, CSSM_ACL_OWNER_PROTOTYPE *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNames' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, CSSM_NAME_LIST_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='^^{cssm_name_list}' declared_type='CSSM_NAME_LIST_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNameFromHandle' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, char **)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^*' declared_type='char**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeNameList' declared_type='CSSM_RETURN (*)(CSSM_DL_HANDLE, CSSM_NAME_LIST_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_DL_HANDLE'/>
<arg type='^{cssm_name_list=I^*}' declared_type='CSSM_NAME_LIST_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataInsert' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataDelete' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataModify' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_UNIQUE_RECORD_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_MODIFY_MODE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_DB_MODIFY_MODE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFirst' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_QUERY *, CSSM_HANDLE_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^{cssm_query=III^{cssm_selection_predicate}{cssm_query_limits=II}I}' const='true' declared_type='CSSM_QUERY*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetNext' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_HANDLE, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataAbortQuery' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFromUniqueRecordId' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeUniqueRecord' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, CSSM_DB_UNIQUE_RECORD_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_DL_DB_HANDLE, uint32, void *, void **)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_kr_funcs=&quot;RegistrationRequest&quot;^?&quot;RegistrationRetrieve&quot;^?&quot;GenerateRecoveryFields&quot;^?&quot;ProcessRecoveryFields&quot;^?&quot;RecoveryRequest&quot;^?&quot;RecoveryRetrieve&quot;^?&quot;GetRecoveredObject&quot;^?&quot;RecoveryRequestAbort&quot;^?&quot;PassThrough&quot;^?}' name='cssm_spi_kr_funcs'>
<field function_pointer='true' type='^?' name='RegistrationRequest' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_ACCESS_CREDENTIALS *, CSSM_KR_POLICY_FLAGS, sint32 *, CSSM_HANDLE_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='I' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RegistrationRetrieve' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE, sint32 *, CSSM_KR_PROFILE_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^i' declared_type='sint32*'/>
<arg type='^{cssm_kr_profile={cssm_kr_name=CC*}^{cssm_certgroup}^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}^{cssm_data}I^{cssm_data}}' declared_type='CSSM_KR_PROFILE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GenerateRecoveryFields' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_KR_POLICY_FLAGS, CSSM_DATA_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ProcessRecoveryFields' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_KR_POLICY_FLAGS, CSSM_DATA *)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RecoveryRequest' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_DATA *, CSSM_ACCESS_CREDENTIALS *, sint32 *, CSSM_HANDLE_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RecoveryRetrieve' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE, sint32 *, CSSM_HANDLE_PTR, uint32 *)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetRecoveredObject' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE, uint32, CSSM_CSP_HANDLE, CSSM_RESOURCE_CONTROL_CONTEXT *, uint32, CSSM_KEY_PTR, CSSM_DATA_PTR)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' declared_type='CSSM_KEY_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RecoveryRequestAbort' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_HANDLE)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_KRSP_HANDLE, CSSM_CC_HANDLE, CSSM_CONTEXT *, CSSM_CC_HANDLE, CSSM_CONTEXT *, uint32, void *, void **)'>
<arg type='I' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_spi_tp_funcs=&quot;SubmitCredRequest&quot;^?&quot;RetrieveCredResult&quot;^?&quot;ConfirmCredResult&quot;^?&quot;ReceiveConfirmation&quot;^?&quot;CertReclaimKey&quot;^?&quot;CertReclaimAbort&quot;^?&quot;FormRequest&quot;^?&quot;FormSubmit&quot;^?&quot;CertGroupVerify&quot;^?&quot;CertCreateTemplate&quot;^?&quot;CertGetAllTemplateFields&quot;^?&quot;CertSign&quot;^?&quot;CrlVerify&quot;^?&quot;CrlCreateTemplate&quot;^?&quot;CertRevoke&quot;^?&quot;CertRemoveFromCrlTemplate&quot;^?&quot;CrlSign&quot;^?&quot;ApplyCrlToDb&quot;^?&quot;CertGroupConstruct&quot;^?&quot;CertGroupPrune&quot;^?&quot;CertGroupToTupleGroup&quot;^?&quot;TupleGroupToCertGroup&quot;^?&quot;PassThrough&quot;^?}' name='cssm_spi_tp_funcs'>
<field function_pointer='true' type='^?' name='SubmitCredRequest' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_TP_AUTHORITY_ID *, CSSM_TP_AUTHORITY_REQUEST_TYPE, CSSM_TP_REQUEST_SET *, CSSM_TP_CALLERAUTH_CONTEXT *, sint32 *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='I' declared_type='CSSM_TP_AUTHORITY_REQUEST_TYPE'/>
<arg type='^{cssm_tp_request_set=I^v}' const='true' declared_type='CSSM_TP_REQUEST_SET*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^i' declared_type='sint32*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='RetrieveCredResult' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_DATA *, CSSM_TP_CALLERAUTH_CONTEXT *, sint32 *, CSSM_BOOL *, CSSM_TP_RESULT_SET_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^i' declared_type='sint32*'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<arg type='^^{cssm_tp_result_set}' declared_type='CSSM_TP_RESULT_SET_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ConfirmCredResult' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_DATA *, CSSM_TP_CALLERAUTH_CONTEXT *, CSSM_TP_CONFIRM_RESPONSE *, CSSM_TP_AUTHORITY_ID *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^{cssm_tp_confirm_response=I^I}' const='true' declared_type='CSSM_TP_CONFIRM_RESPONSE*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ReceiveConfirmation' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_DATA *, CSSM_TP_CONFIRM_RESPONSE_PTR *, sint32 *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_tp_confirm_response}' declared_type='CSSM_TP_CONFIRM_RESPONSE_PTR*'/>
<arg type='^i' declared_type='sint32*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertReclaimKey' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CERTGROUP *, uint32, CSSM_LONG_HANDLE, CSSM_CSP_HANDLE, CSSM_RESOURCE_CONTROL_CONTEXT *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='I' declared_type='uint32'/>
<arg type='Q' declared_type='CSSM_LONG_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertReclaimAbort' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_LONG_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='Q' declared_type='CSSM_LONG_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FormRequest' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_TP_AUTHORITY_ID *, CSSM_TP_FORM_TYPE, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='I' declared_type='CSSM_TP_FORM_TYPE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FormSubmit' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_TP_FORM_TYPE, CSSM_DATA *, CSSM_TP_AUTHORITY_ID *, CSSM_TP_AUTHORITY_ID *, CSSM_ACCESS_CREDENTIALS_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type='I' declared_type='CSSM_TP_FORM_TYPE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupVerify' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGetAllTemplateFields' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_DATA *, uint32 *, CSSM_FIELD_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^^{cssm_field}' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertSign' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DATA *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlVerify' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_ENCODED_CRL *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlCreateTemplate' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, uint32, CSSM_FIELD *, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertRevoke' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_DATA *, CSSM_CERTGROUP *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_TP_CERTCHANGE_REASON, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type='I' declared_type='CSSM_TP_CERTCHANGE_REASON'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertRemoveFromCrlTemplate' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_DATA *, CSSM_CERTGROUP *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CrlSign' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_ENCODED_CRL *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR, CSSM_DATA_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='ApplyCrlToDb' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_ENCODED_CRL *, CSSM_CERTGROUP *, CSSM_TP_VERIFY_CONTEXT *, CSSM_TP_VERIFY_CONTEXT_RESULT_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupConstruct' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CSP_HANDLE, CSSM_DL_DB_LIST *, void *, CSSM_CERTGROUP *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupPrune' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_DL_DB_LIST *, CSSM_CERTGROUP *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CertGroupToTupleGroup' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CERTGROUP *, CSSM_TUPLEGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' declared_type='CSSM_TUPLEGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='TupleGroupToCertGroup' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_TUPLEGROUP *, CSSM_CERTGROUP_PTR *)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='^^{cssm_certgroup}' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='PassThrough' declared_type='CSSM_RETURN (*)(CSSM_TP_HANDLE, CSSM_CL_HANDLE, CSSM_CC_HANDLE, CSSM_DL_DB_LIST *, uint32, void *, void **)'>
<arg type64='q' type='l' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^^v' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_state_funcs=&quot;cssm_GetAttachFunctions&quot;^?&quot;cssm_ReleaseAttachFunctions&quot;^?&quot;cssm_GetAppMemoryFunctions&quot;^?&quot;cssm_IsFuncCallValid&quot;^?&quot;cssm_DeregisterManagerServices&quot;^?&quot;cssm_DeliverModuleManagerEvent&quot;^?}' name='cssm_state_funcs'>
<field function_pointer='true' type='^?' name='cssm_GetAttachFunctions' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_SERVICE_MASK, void **, CSSM_GUID_PTR, CSSM_BOOL *)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='I' declared_type='CSSM_SERVICE_MASK'/>
<arg type='^^v' declared_type='void**'/>
<arg type='^{cssm_guid=ISS[8C]}' declared_type='CSSM_GUID_PTR'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_ReleaseAttachFunctions' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_GetAppMemoryFunctions' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_UPCALLS_PTR)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^{cssm_upcalls=^?^?^?^?^?^?}' declared_type='CSSM_UPCALLS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_IsFuncCallValid' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_PROC_ADDR, CSSM_PROC_ADDR, CSSM_PRIVILEGE, CSSM_PRIVILEGE *, CSSM_BITMASK, CSSM_BOOL *)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^?' declared_type='CSSM_PROC_ADDR'/>
<arg type='^?' declared_type='CSSM_PROC_ADDR'/>
<arg type='Q' declared_type='CSSM_PRIVILEGE'/>
<arg type='^Q' declared_type='CSSM_PRIVILEGE*'/>
<arg type='I' declared_type='CSSM_BITMASK'/>
<arg type='^i' declared_type='CSSM_BOOL*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_DeregisterManagerServices' declared_type='CSSM_RETURN (*)(CSSM_GUID *)'>
<arg type='^{cssm_guid=ISS[8C]}' const='true' declared_type='CSSM_GUID*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='cssm_DeliverModuleManagerEvent' declared_type='CSSM_RETURN (*)(CSSM_MANAGER_EVENT_NOTIFICATION *)'>
<arg type64='^{cssm_manager_event_notification=IIII{cssm_data=Q*}}' type='^{cssm_manager_event_notification=IIII{cssm_data=I*}}' const='true' declared_type='CSSM_MANAGER_EVENT_NOTIFICATION*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}' name='cssm_subservice_uid'>
<field type='{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}' name='Guid' declared_type='CSSM_GUID'/>
<field type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='Version' declared_type='CSSM_VERSION'/>
<field type='I' name='SubserviceId' declared_type='uint32'/>
<field type='I' name='SubserviceType' declared_type='CSSM_SERVICE_TYPE'/>
</struct>
<struct type='{cssm_tp_authority_id=&quot;AuthorityCert&quot;^{cssm_data}&quot;AuthorityLocation&quot;^{cssm_net_address}}' name='cssm_tp_authority_id'>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='AuthorityCert' declared_type='CSSM_DATA*'/>
<field type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' name='AuthorityLocation' declared_type='CSSM_NET_ADDRESS_PTR'/>
</struct>
<struct type='{cssm_tp_callerauth_context=&quot;Policy&quot;{cssm_tp_policyinfo=&quot;NumberOfPolicyIds&quot;I&quot;PolicyIds&quot;^{cssm_field}&quot;PolicyControl&quot;^v}&quot;VerifyTime&quot;*&quot;VerificationAbortOn&quot;I&quot;CallbackWithVerifiedCert&quot;^?&quot;NumberOfAnchorCerts&quot;I&quot;AnchorCerts&quot;^{cssm_data}&quot;DBList&quot;^{cssm_dl_db_list}&quot;CallerCredentials&quot;^{cssm_access_credentials}}' name='cssm_tp_callerauth_context'>
<field type='{cssm_tp_policyinfo=&quot;NumberOfPolicyIds&quot;I&quot;PolicyIds&quot;^{cssm_field}&quot;PolicyControl&quot;^v}' name='Policy' declared_type='CSSM_TP_POLICYINFO'/>
<field type='*' name='VerifyTime' declared_type='CSSM_TIMESTRING'/>
<field type='I' name='VerificationAbortOn' declared_type='CSSM_TP_STOP_ON'/>
<field function_pointer='true' type='^?' name='CallbackWithVerifiedCert' declared_type='CSSM_TP_VERIFICATION_RESULTS_CALLBACK'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^v' declared_type='void*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field type='I' name='NumberOfAnchorCerts' declared_type='uint32'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='AnchorCerts' declared_type='CSSM_DATA_PTR'/>
<field type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' name='DBList' declared_type='CSSM_DL_DB_LIST_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='CallerCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type64='{cssm_tp_certchange_input=&quot;Action&quot;I&quot;Reason&quot;I&quot;CLHandle&quot;q&quot;Cert&quot;^{cssm_data}&quot;ChangeInfo&quot;^{cssm_field}&quot;StartTime&quot;*&quot;CallerCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certchange_input=&quot;Action&quot;I&quot;Reason&quot;I&quot;CLHandle&quot;i&quot;Cert&quot;^{cssm_data}&quot;ChangeInfo&quot;^{cssm_field}&quot;StartTime&quot;*&quot;CallerCredentials&quot;^{cssm_access_credentials}}' name='cssm_tp_certchange_input'>
<field type='I' name='Action' declared_type='CSSM_TP_CERTCHANGE_ACTION'/>
<field type='I' name='Reason' declared_type='CSSM_TP_CERTCHANGE_REASON'/>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' declared_type='CSSM_DATA_PTR'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='ChangeInfo' declared_type='CSSM_FIELD_PTR'/>
<field type='*' name='StartTime' declared_type='CSSM_TIMESTRING'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='CallerCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type64='{cssm_tp_certchange_output=&quot;ActionStatus&quot;I&quot;RevokeInfo&quot;{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{cssm_tp_certchange_output=&quot;ActionStatus&quot;I&quot;RevokeInfo&quot;{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='cssm_tp_certchange_output'>
<field type='I' name='ActionStatus' declared_type='CSSM_TP_CERTCHANGE_STATUS'/>
<field type64='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_field=&quot;FieldOid&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;FieldValue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='RevokeInfo' declared_type='CSSM_FIELD'/>
</struct>
<struct type64='{cssm_tp_certissue_input=&quot;CSPSubserviceUid&quot;{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}&quot;CLHandle&quot;q&quot;NumberOfTemplateFields&quot;I&quot;SubjectCertFields&quot;^{cssm_field}&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certissue_input=&quot;CSPSubserviceUid&quot;{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}&quot;CLHandle&quot;i&quot;NumberOfTemplateFields&quot;I&quot;SubjectCertFields&quot;^{cssm_field}&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' name='cssm_tp_certissue_input'>
<field type='{cssm_subservice_uid=&quot;Guid&quot;{cssm_guid=&quot;Data1&quot;I&quot;Data2&quot;S&quot;Data3&quot;S&quot;Data4&quot;[8C]}&quot;Version&quot;{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}&quot;SubserviceId&quot;I&quot;SubserviceType&quot;I}' name='CSPSubserviceUid' declared_type='CSSM_SUBSERVICE_UID'/>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='NumberOfTemplateFields' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SubjectCertFields' declared_type='CSSM_FIELD_PTR'/>
<field type='I' name='MoreServiceRequests' declared_type='CSSM_TP_SERVICES'/>
<field type='I' name='NumberOfServiceControls' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='ServiceControls' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='UserCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type='{cssm_tp_certissue_output=&quot;IssueStatus&quot;I&quot;CertGroup&quot;^{cssm_certgroup}&quot;PerformedServiceRequests&quot;I}' name='cssm_tp_certissue_output'>
<field type='I' name='IssueStatus' declared_type='CSSM_TP_CERTISSUE_STATUS'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='CertGroup' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='I' name='PerformedServiceRequests' declared_type='CSSM_TP_SERVICES'/>
</struct>
<struct type64='{cssm_tp_certnotarize_input=&quot;CLHandle&quot;q&quot;NumberOfFields&quot;I&quot;MoreFields&quot;^{cssm_field}&quot;SignScope&quot;^{cssm_field}&quot;ScopeSize&quot;I&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certnotarize_input=&quot;CLHandle&quot;i&quot;NumberOfFields&quot;I&quot;MoreFields&quot;^{cssm_field}&quot;SignScope&quot;^{cssm_field}&quot;ScopeSize&quot;I&quot;MoreServiceRequests&quot;I&quot;NumberOfServiceControls&quot;I&quot;ServiceControls&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' name='cssm_tp_certnotarize_input'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='NumberOfFields' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='MoreFields' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SignScope' declared_type='CSSM_FIELD_PTR'/>
<field type='I' name='ScopeSize' declared_type='uint32'/>
<field type='I' name='MoreServiceRequests' declared_type='CSSM_TP_SERVICES'/>
<field type='I' name='NumberOfServiceControls' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='ServiceControls' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='UserCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type='{cssm_tp_certnotarize_output=&quot;NotarizeStatus&quot;I&quot;NotarizedCertGroup&quot;^{cssm_certgroup}&quot;PerformedServiceRequests&quot;I}' name='cssm_tp_certnotarize_output'>
<field type='I' name='NotarizeStatus' declared_type='CSSM_TP_CERTNOTARIZE_STATUS'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='NotarizedCertGroup' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='I' name='PerformedServiceRequests' declared_type='CSSM_TP_SERVICES'/>
</struct>
<struct type64='{cssm_tp_certreclaim_input=&quot;CLHandle&quot;q&quot;NumberOfSelectionFields&quot;I&quot;SelectionFields&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_certreclaim_input=&quot;CLHandle&quot;i&quot;NumberOfSelectionFields&quot;I&quot;SelectionFields&quot;^{cssm_field}&quot;UserCredentials&quot;^{cssm_access_credentials}}' name='cssm_tp_certreclaim_input'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='NumberOfSelectionFields' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SelectionFields' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='UserCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type='{cssm_tp_certreclaim_output=&quot;ReclaimStatus&quot;I&quot;ReclaimedCertGroup&quot;^{cssm_certgroup}&quot;KeyCacheHandle&quot;Q}' name='cssm_tp_certreclaim_output'>
<field type='I' name='ReclaimStatus' declared_type='CSSM_TP_CERTRECLAIM_STATUS'/>
<field type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='ReclaimedCertGroup' declared_type='CSSM_CERTGROUP_PTR'/>
<field type='Q' name='KeyCacheHandle' declared_type='CSSM_LONG_HANDLE'/>
</struct>
<struct type64='{cssm_tp_certverify_input=&quot;CLHandle&quot;q&quot;Cert&quot;^{cssm_data}&quot;VerifyContext&quot;^{cssm_tp_verify_context}}' type='{cssm_tp_certverify_input=&quot;CLHandle&quot;i&quot;Cert&quot;^{cssm_data}&quot;VerifyContext&quot;^{cssm_tp_verify_context}}' name='cssm_tp_certverify_input'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' declared_type='CSSM_DATA_PTR'/>
<field type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' name='VerifyContext' declared_type='CSSM_TP_VERIFY_CONTEXT_PTR'/>
</struct>
<struct type='{cssm_tp_certverify_output=&quot;VerifyStatus&quot;I&quot;NumberOfEvidence&quot;I&quot;Evidence&quot;^{cssm_evidence}}' name='cssm_tp_certverify_output'>
<field type='I' name='VerifyStatus' declared_type='CSSM_TP_CERTVERIFY_STATUS'/>
<field type='I' name='NumberOfEvidence' declared_type='uint32'/>
<field type='^{cssm_evidence=I^v}' name='Evidence' declared_type='CSSM_EVIDENCE_PTR'/>
</struct>
<struct type='{cssm_tp_confirm_response=&quot;NumberOfResponses&quot;I&quot;Responses&quot;^I}' name='cssm_tp_confirm_response'>
<field type='I' name='NumberOfResponses' declared_type='uint32'/>
<field type='^I' name='Responses' declared_type='CSSM_TP_CONFIRM_STATUS_PTR'/>
</struct>
<struct type64='{cssm_tp_crlissue_input=&quot;CLHandle&quot;q&quot;CrlIdentifier&quot;I&quot;CrlThisTime&quot;*&quot;PolicyIdentifier&quot;^{cssm_field}&quot;CallerCredentials&quot;^{cssm_access_credentials}}' type='{cssm_tp_crlissue_input=&quot;CLHandle&quot;i&quot;CrlIdentifier&quot;I&quot;CrlThisTime&quot;*&quot;PolicyIdentifier&quot;^{cssm_field}&quot;CallerCredentials&quot;^{cssm_access_credentials}}' name='cssm_tp_crlissue_input'>
<field type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<field type='I' name='CrlIdentifier' declared_type='uint32'/>
<field type='*' name='CrlThisTime' declared_type='CSSM_TIMESTRING'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='PolicyIdentifier' declared_type='CSSM_FIELD_PTR'/>
<field type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='CallerCredentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
</struct>
<struct type='{cssm_tp_crlissue_output=&quot;IssueStatus&quot;I&quot;Crl&quot;^{cssm_encoded_crl}&quot;CrlNextTime&quot;*}' name='cssm_tp_crlissue_output'>
<field type='I' name='IssueStatus' declared_type='CSSM_TP_CRLISSUE_STATUS'/>
<field type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' name='Crl' declared_type='CSSM_ENCODED_CRL_PTR'/>
<field type='*' name='CrlNextTime' declared_type='CSSM_TIMESTRING'/>
</struct>
<struct type='{cssm_tp_policyinfo=&quot;NumberOfPolicyIds&quot;I&quot;PolicyIds&quot;^{cssm_field}&quot;PolicyControl&quot;^v}' name='cssm_tp_policyinfo'>
<field type='I' name='NumberOfPolicyIds' declared_type='uint32'/>
<field type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='PolicyIds' declared_type='CSSM_FIELD_PTR'/>
<field type='^v' name='PolicyControl' declared_type='void*'/>
</struct>
<struct type='{cssm_tp_request_set=&quot;NumberOfRequests&quot;I&quot;Requests&quot;^v}' name='cssm_tp_request_set'>
<field type='I' name='NumberOfRequests' declared_type='uint32'/>
<field type='^v' name='Requests' declared_type='void*'/>
</struct>
<struct type='{cssm_tp_result_set=&quot;NumberOfResults&quot;I&quot;Results&quot;^v}' name='cssm_tp_result_set'>
<field type='I' name='NumberOfResults' declared_type='uint32'/>
<field type='^v' name='Results' declared_type='void*'/>
</struct>
<struct type64='{cssm_tp_verify_context=&quot;Action&quot;I&quot;ActionData&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;Crls&quot;{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}&quot;Cred&quot;^{cssm_tp_callerauth_context}}' type='{cssm_tp_verify_context=&quot;Action&quot;I&quot;ActionData&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;Crls&quot;{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}&quot;Cred&quot;^{cssm_tp_callerauth_context}}' name='cssm_tp_verify_context'>
<field type='I' name='Action' declared_type='CSSM_TP_ACTION'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='ActionData' declared_type='CSSM_DATA'/>
<field type='{cssm_crlgroup=&quot;CrlType&quot;I&quot;CrlEncoding&quot;I&quot;NumberOfCrls&quot;I&quot;GroupCrlList&quot;(?=&quot;CrlList&quot;^{cssm_data}&quot;EncodedCrlList&quot;^{cssm_encoded_crl}&quot;ParsedCrlList&quot;^{cssm_parsed_crl}&quot;PairCrlList&quot;^{cssm_crl_pair})&quot;CrlGroupType&quot;I}' name='Crls' declared_type='CSSM_CRLGROUP'/>
<field type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' name='Cred' declared_type='CSSM_TP_CALLERAUTH_CONTEXT_PTR'/>
</struct>
<struct type='{cssm_tp_verify_context_result=&quot;NumberOfEvidences&quot;I&quot;Evidence&quot;^{cssm_evidence}}' name='cssm_tp_verify_context_result'>
<field type='I' name='NumberOfEvidences' declared_type='uint32'/>
<field type='^{cssm_evidence=I^v}' name='Evidence' declared_type='CSSM_EVIDENCE_PTR'/>
</struct>
<struct type='{cssm_tuplegroup=&quot;NumberOfTuples&quot;I&quot;Tuples&quot;^{_CSSM_TUPLE_PTR=&quot;Issuer&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Subject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;AuthorizationTag&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;ValidityPeriod&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}}}' name='cssm_tuplegroup'>
<field type='I' name='NumberOfTuples' declared_type='uint32'/>
<field type='^{_CSSM_TUPLE_PTR=&quot;Issuer&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Subject&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;Delegate&quot;i&quot;AuthorizationTag&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}&quot;ValidityPeriod&quot;{cssm_list=&quot;ListType&quot;I&quot;Head&quot;^{cssm_list_element}&quot;Tail&quot;^{cssm_list_element}}}' name='Tuples' declared_type='CSSM_TUPLE_PTR'/>
</struct>
<struct type='{cssm_upcalls=&quot;malloc_func&quot;^?&quot;free_func&quot;^?&quot;realloc_func&quot;^?&quot;calloc_func&quot;^?&quot;CcToHandle_func&quot;^?&quot;GetModuleInfo_func&quot;^?}' name='cssm_upcalls'>
<field function_pointer='true' type='^?' name='malloc_func' declared_type='CSSM_UPCALLS_MALLOC'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='free_func' declared_type='CSSM_UPCALLS_FREE'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' type='^?' name='realloc_func' declared_type='CSSM_UPCALLS_REALLOC'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^v' declared_type='void*'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='calloc_func' declared_type='CSSM_UPCALLS_CALLOC'>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<arg type64='Q' type='L' declared_type='size_t'/>
<retval type='^v' declared_type='void*'/>
</field>
<field function_pointer='true' type='^?' name='CcToHandle_func' declared_type='CSSM_RETURN (*)(CSSM_CC_HANDLE, CSSM_MODULE_HANDLE_PTR)'>
<arg type='Q' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^q' type='^i' declared_type='CSSM_MODULE_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetModuleInfo_func' declared_type='CSSM_RETURN (*)(CSSM_MODULE_HANDLE, CSSM_GUID_PTR, CSSM_VERSION_PTR, uint32 *, CSSM_SERVICE_TYPE *, CSSM_ATTACH_FLAGS *, CSSM_KEY_HIERARCHY *, CSSM_API_MEMORY_FUNCS_PTR, CSSM_FUNC_NAME_ADDR_PTR, uint32)'>
<arg type64='q' type='l' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^{cssm_guid=ISS[8C]}' declared_type='CSSM_GUID_PTR'/>
<arg type='^{cssm_version=II}' declared_type='CSSM_VERSION_PTR'/>
<arg type='^I' declared_type='uint32*'/>
<arg type='^I' declared_type='CSSM_SERVICE_TYPE*'/>
<arg type='^I' declared_type='CSSM_ATTACH_FLAGS*'/>
<arg type='^I' declared_type='CSSM_KEY_HIERARCHY*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' declared_type='CSSM_API_MEMORY_FUNCS_PTR'/>
<arg type='^{cssm_func_name_addr=[68c]^?}' declared_type='CSSM_FUNC_NAME_ADDR_PTR'/>
<arg type='I' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type='{cssm_version=&quot;Major&quot;I&quot;Minor&quot;I}' name='cssm_version'>
<field type='I' name='Major' declared_type='uint32'/>
<field type='I' name='Minor' declared_type='uint32'/>
</struct>
<struct type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_x509_algorithm_identifier'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='algorithm' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='parameters' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_extension=&quot;extnId&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;critical&quot;i&quot;format&quot;i&quot;value&quot;(cssm_x509ext_value=&quot;tagAndValue&quot;^{cssm_x509_extensionTagAndValue}&quot;parsedValue&quot;^v&quot;valuePair&quot;^{cssm_x509ext_pair})&quot;BERvalue&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_extension=&quot;extnId&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;critical&quot;i&quot;format&quot;i&quot;value&quot;(cssm_x509ext_value=&quot;tagAndValue&quot;^{cssm_x509_extensionTagAndValue}&quot;parsedValue&quot;^v&quot;valuePair&quot;^{cssm_x509ext_pair})&quot;BERvalue&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_x509_extension'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='extnId' declared_type='CSSM_OID'/>
<field type='i' name='critical' declared_type='CSSM_BOOL'/>
<field type='i' name='format' declared_type='CSSM_X509EXT_DATA_FORMAT'/>
<field type='(cssm_x509ext_value=&quot;tagAndValue&quot;^{cssm_x509_extensionTagAndValue}&quot;parsedValue&quot;^v&quot;valuePair&quot;^{cssm_x509ext_pair})' name='value' declared_type='union cssm_x509ext_value'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='BERvalue' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_x509_extensionTagAndValue'>
<field type='C' name='type' declared_type='CSSM_BER_TAG'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='value' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='cssm_x509_extensions'>
<field type='I' name='numberOfExtensions' declared_type='uint32'/>
<field type64='^{cssm_x509_extension={cssm_data=Q*}ii(cssm_x509ext_value=^{cssm_x509_extensionTagAndValue}^v^{cssm_x509ext_pair}){cssm_data=Q*}}' type='^{cssm_x509_extension={cssm_data=I*}ii(cssm_x509ext_value=^{cssm_x509_extensionTagAndValue}^v^{cssm_x509ext_pair}){cssm_data=I*}}' name='extensions' declared_type='CSSM_X509_EXTENSION_PTR'/>
</struct>
<struct type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='cssm_x509_name'>
<field type='I' name='numberOfRDNs' declared_type='uint32'/>
<field type='^{cssm_x509_rdn=I^{cssm_x509_type_value_pair}}' name='RelativeDistinguishedName' declared_type='CSSM_X509_RDN_PTR'/>
</struct>
<struct type='{cssm_x509_rdn=&quot;numberOfPairs&quot;I&quot;AttributeTypeAndValue&quot;^{cssm_x509_type_value_pair}}' name='cssm_x509_rdn'>
<field type='I' name='numberOfPairs' declared_type='uint32'/>
<field type64='^{cssm_x509_type_value_pair={cssm_data=Q*}C{cssm_data=Q*}}' type='^{cssm_x509_type_value_pair={cssm_data=I*}C{cssm_data=I*}}' name='AttributeTypeAndValue' declared_type='CSSM_X509_TYPE_VALUE_PAIR_PTR'/>
</struct>
<struct type64='{cssm_x509_revoked_cert_entry=&quot;certificateSerialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;revocationDate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_revoked_cert_entry=&quot;certificateSerialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;revocationDate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='cssm_x509_revoked_cert_entry'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='certificateSerialNumber' declared_type='CSSM_DATA'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='revocationDate' declared_type='CSSM_X509_TIME'/>
<field type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='extensions' declared_type='CSSM_X509_EXTENSIONS'/>
</struct>
<struct type='{cssm_x509_revoked_cert_list=&quot;numberOfRevokedCertEntries&quot;I&quot;revokedCertEntry&quot;^{cssm_x509_revoked_cert_entry}}' name='cssm_x509_revoked_cert_list'>
<field type='I' name='numberOfRevokedCertEntries' declared_type='uint32'/>
<field type64='^{cssm_x509_revoked_cert_entry={cssm_data=Q*}{cssm_x509_time=C{cssm_data=Q*}}{cssm_x509_extensions=I^{cssm_x509_extension}}}' type='^{cssm_x509_revoked_cert_entry={cssm_data=I*}{cssm_x509_time=C{cssm_data=I*}}{cssm_x509_extensions=I^{cssm_x509_extension}}}' name='revokedCertEntry' declared_type='CSSM_X509_REVOKED_CERT_ENTRY_PTR'/>
</struct>
<struct type64='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_x509_signature'>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='algorithmIdentifier' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='encrypted' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_signed_certificate=&quot;certificate&quot;{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{cssm_x509_signed_certificate=&quot;certificate&quot;{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='cssm_x509_signed_certificate'>
<field type64='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='certificate' declared_type='CSSM_X509_TBS_CERTIFICATE'/>
<field type64='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_SIGNATURE'/>
</struct>
<struct type64='{cssm_x509_signed_crl=&quot;tbsCertList&quot;{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{cssm_x509_signed_crl=&quot;tbsCertList&quot;{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}&quot;signature&quot;{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='cssm_x509_signed_crl'>
<field type64='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='tbsCertList' declared_type='CSSM_X509_TBS_CERTLIST'/>
<field type64='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_signature=&quot;algorithmIdentifier&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;encrypted&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_SIGNATURE'/>
</struct>
<struct type64='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_x509_subject_public_key_info'>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='algorithm' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='subjectPublicKey' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certificate=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;serialNumber&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;validity&quot;{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}&quot;subject&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;subjectPublicKeyInfo&quot;{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuerUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;subjectUniqueIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='cssm_x509_tbs_certificate'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='version' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='serialNumber' declared_type='CSSM_DATA'/>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='issuer' declared_type='CSSM_X509_NAME'/>
<field type64='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='validity' declared_type='CSSM_X509_VALIDITY'/>
<field type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='subject' declared_type='CSSM_X509_NAME'/>
<field type64='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_subject_public_key_info=&quot;algorithm&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;subjectPublicKey&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='subjectPublicKeyInfo' declared_type='CSSM_X509_SUBJECT_PUBLIC_KEY_INFO'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='issuerUniqueIdentifier' declared_type='CSSM_DATA'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='subjectUniqueIdentifier' declared_type='CSSM_DATA'/>
<field type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='extensions' declared_type='CSSM_X509_EXTENSIONS'/>
</struct>
<struct type64='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' type='{cssm_x509_tbs_certlist=&quot;version&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;signature&quot;{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;issuer&quot;{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}&quot;thisUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;nextUpdate&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;revokedCertificates&quot;^{cssm_x509_revoked_cert_list}&quot;extensions&quot;{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}}' name='cssm_x509_tbs_certlist'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='version' declared_type='CSSM_DATA'/>
<field type64='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_algorithm_identifier=&quot;algorithm&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;parameters&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='signature' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER'/>
<field type='{cssm_x509_name=&quot;numberOfRDNs&quot;I&quot;RelativeDistinguishedName&quot;^{cssm_x509_rdn}}' name='issuer' declared_type='CSSM_X509_NAME'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='thisUpdate' declared_type='CSSM_X509_TIME'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='nextUpdate' declared_type='CSSM_X509_TIME'/>
<field type='^{cssm_x509_revoked_cert_list=I^{cssm_x509_revoked_cert_entry}}' name='revokedCertificates' declared_type='CSSM_X509_REVOKED_CERT_LIST_PTR'/>
<field type='{cssm_x509_extensions=&quot;numberOfExtensions&quot;I&quot;extensions&quot;^{cssm_x509_extension}}' name='extensions' declared_type='CSSM_X509_EXTENSIONS'/>
</struct>
<struct type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_x509_time'>
<field type='C' name='timeType' declared_type='CSSM_BER_TAG'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='time' declared_type='CSSM_DATA'/>
</struct>
<struct type64='{cssm_x509_type_value_pair=&quot;type&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;valueType&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_type_value_pair=&quot;type&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;valueType&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_x509_type_value_pair'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='type' declared_type='CSSM_OID'/>
<field type='C' name='valueType' declared_type='CSSM_BER_TAG'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='value' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_x509ext_basicConstraints=&quot;cA&quot;i&quot;pathLenConstraintPresent&quot;i&quot;pathLenConstraint&quot;I}' name='cssm_x509ext_basicConstraints'>
<field type='i' name='cA' declared_type='CSSM_BOOL'/>
<field type='i' name='pathLenConstraintPresent' declared_type='CSSM_X509_OPTION'/>
<field type='I' name='pathLenConstraint' declared_type='uint32'/>
</struct>
<struct type64='{cssm_x509ext_pair=&quot;tagAndValue&quot;{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;parsedValue&quot;^v}' type='{cssm_x509ext_pair=&quot;tagAndValue&quot;{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;parsedValue&quot;^v}' name='cssm_x509ext_pair'>
<field type64='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_extensionTagAndValue=&quot;type&quot;C&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='tagAndValue' declared_type='CSSM_X509EXT_TAGandVALUE'/>
<field type='^v' name='parsedValue' declared_type='void*'/>
</struct>
<struct type64='{cssm_x509ext_policyInfo=&quot;policyIdentifier&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;policyQualifiers&quot;{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}}' type='{cssm_x509ext_policyInfo=&quot;policyIdentifier&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;policyQualifiers&quot;{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}}' name='cssm_x509ext_policyInfo'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='policyIdentifier' declared_type='CSSM_OID'/>
<field type='{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}' name='policyQualifiers' declared_type='CSSM_X509EXT_POLICYQUALIFIERS'/>
</struct>
<struct type64='{cssm_x509ext_policyQualifierInfo=&quot;policyQualifierId&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}&quot;value&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509ext_policyQualifierInfo=&quot;policyQualifierId&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}&quot;value&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='cssm_x509ext_policyQualifierInfo'>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='policyQualifierId' declared_type='CSSM_OID'/>
<field type64='{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}' name='value' declared_type='CSSM_DATA'/>
</struct>
<struct type='{cssm_x509ext_policyQualifiers=&quot;numberOfPolicyQualifiers&quot;I&quot;policyQualifier&quot;^{cssm_x509ext_policyQualifierInfo}}' name='cssm_x509ext_policyQualifiers'>
<field type='I' name='numberOfPolicyQualifiers' declared_type='uint32'/>
<field type64='^{cssm_x509ext_policyQualifierInfo={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_x509ext_policyQualifierInfo={cssm_data=I*}{cssm_data=I*}}' name='policyQualifier' declared_type='CSSM_X509EXT_POLICYQUALIFIERINFO*'/>
</struct>
<struct type64='{isl_const_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{isl_const_data=&quot;Length&quot;I&quot;Data&quot;*}' name='isl_const_data'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' const='true' declared_type='uint8*'/>
</struct>
<struct type64='{isl_data=&quot;Length&quot;Q&quot;Data&quot;*}' type='{isl_data=&quot;Length&quot;I&quot;Data&quot;*}' name='isl_data'>
<field type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<field type='*' name='Data' declared_type='uint8*'/>
</struct>
<struct type='{mds_funcs=&quot;DbOpen&quot;^?&quot;DbClose&quot;^?&quot;GetDbNames&quot;^?&quot;GetDbNameFromHandle&quot;^?&quot;FreeNameList&quot;^?&quot;DataInsert&quot;^?&quot;DataDelete&quot;^?&quot;DataModify&quot;^?&quot;DataGetFirst&quot;^?&quot;DataGetNext&quot;^?&quot;DataAbortQuery&quot;^?&quot;DataGetFromUniqueRecordId&quot;^?&quot;FreeUniqueRecord&quot;^?&quot;CreateRelation&quot;^?&quot;DestroyRelation&quot;^?}' name='mds_funcs'>
<field function_pointer='true' type='^?' name='DbOpen' declared_type='CSSM_RETURN (*)(MDS_HANDLE, char *, CSSM_NET_ADDRESS *, CSSM_DB_ACCESS_TYPE, CSSM_ACCESS_CREDENTIALS *, void *, CSSM_DB_HANDLE *)'>
<arg type64='q' type='l' declared_type='MDS_HANDLE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='I' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DbClose' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNames' declared_type='CSSM_RETURN (*)(MDS_HANDLE, CSSM_NAME_LIST_PTR *)'>
<arg type64='q' type='l' declared_type='MDS_HANDLE'/>
<arg type='^^{cssm_name_list}' declared_type='CSSM_NAME_LIST_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='GetDbNameFromHandle' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, char **)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='^*' declared_type='char**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeNameList' declared_type='CSSM_RETURN (*)(MDS_HANDLE, CSSM_NAME_LIST_PTR)'>
<arg type64='q' type='l' declared_type='MDS_HANDLE'/>
<arg type='^{cssm_name_list=I^*}' declared_type='CSSM_NAME_LIST_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataInsert' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataDelete' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataModify' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE, CSSM_DB_UNIQUE_RECORD_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA *, CSSM_DATA *, CSSM_DB_MODIFY_MODE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' declared_type='CSSM_DB_MODIFY_MODE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFirst' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_QUERY *, CSSM_HANDLE_PTR, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='^{cssm_query=III^{cssm_selection_predicate}{cssm_query_limits=II}I}' const='true' declared_type='CSSM_QUERY*'/>
<arg type64='^q' type='^i' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetNext' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_HANDLE, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR, CSSM_DB_UNIQUE_RECORD_PTR *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataAbortQuery' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_HANDLE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='q' type='l' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DataGetFromUniqueRecordId' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_UNIQUE_RECORD *, CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR, CSSM_DATA_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='FreeUniqueRecord' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_UNIQUE_RECORD_PTR)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='CreateRelation' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE, char *, uint32, CSSM_DB_SCHEMA_ATTRIBUTE_INFO *, uint32, CSSM_DB_SCHEMA_INDEX_INFO *)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='*' const='true' declared_type='char*'/>
<arg type='I' declared_type='uint32'/>
<arg type64='^{cssm_db_schema_attribute_info=I*{cssm_data=Q*}I}' type='^{cssm_db_schema_attribute_info=I*{cssm_data=I*}I}' const='true' declared_type='CSSM_DB_SCHEMA_ATTRIBUTE_INFO*'/>
<arg type='I' declared_type='uint32'/>
<arg type='^{cssm_db_schema_index_info=IIII}' const='true' declared_type='CSSM_DB_SCHEMA_INDEX_INFO*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
<field function_pointer='true' type='^?' name='DestroyRelation' declared_type='CSSM_RETURN (*)(MDS_DB_HANDLE, CSSM_DB_RECORDTYPE)'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' declared_type='MDS_DB_HANDLE'/>
<arg type='I' declared_type='CSSM_DB_RECORDTYPE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</field>
</struct>
<struct type64='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}}' type='{x509_validity=&quot;notBefore&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}&quot;notAfter&quot;{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}}' name='x509_validity'>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='notBefore' declared_type='CSSM_X509_TIME'/>
<field type64='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;Q&quot;Data&quot;*}}' type='{cssm_x509_time=&quot;timeType&quot;C&quot;time&quot;{cssm_data=&quot;Length&quot;I&quot;Data&quot;*}}' name='notAfter' declared_type='CSSM_X509_TIME'/>
</struct>
<cftype type='^{__OpaqueAuthorizationEngine=}' name='AuthorizationEngineRef'/>
<cftype type='^v' name='AuthorizationMechanismRef'/>
<cftype type='^v' name='AuthorizationPluginRef'/>
<cftype type='^{AuthorizationOpaqueRef=}' name='AuthorizationRef'/>
<cftype type='^{_CMSDecoder=}' tollfree='__NSCFType' name='CMSDecoderRef' gettypeid_func='CMSDecoderGetTypeID'/>
<cftype type='^{_CMSEncoder=}' tollfree='__NSCFType' name='CMSEncoderRef' gettypeid_func='CMSEncoderGetTypeID'/>
<cftype type='^v' name='SSLConnectionRef'/>
<cftype type='^{SSLContext=}' tollfree='__NSCFType' name='SSLContextRef' gettypeid_func='SSLContextGetTypeID'/>
<cftype type='^{OpaqueSecTrustRef=}' tollfree='__NSCFType' name='SecACLRef' gettypeid_func='SecACLGetTypeID'/>
<cftype type='^{OpaqueSecAccessRef=}' tollfree='__NSCFType' name='SecAccessRef' gettypeid_func='SecAccessGetTypeID'/>
<cftype type='^{SecAsn1Coder=}' name='SecAsn1CoderRef'/>
<cftype type='^{OpaqueSecCertificateRef=}' tollfree='__NSCFType' name='SecCertificateRef' gettypeid_func='SecCertificateGetTypeID'/>
<cftype type='^{__SecCode=}' tollfree='__NSCFType' name='SecCodeRef' gettypeid_func='SecCodeGetTypeID'/>
<cftype type='^{OpaqueSecIdentityRef=}' tollfree='__NSCFType' name='SecIdentityRef' gettypeid_func='SecIdentityGetTypeID'/>
<cftype type='^{OpaqueSecIdentitySearchRef=}' tollfree='__NSCFType' name='SecIdentitySearchRef' gettypeid_func='SecIdentitySearchGetTypeID'/>
<cftype type='^{OpaqueSecKeyRef=}' tollfree='__NSCFType' name='SecKeyRef' gettypeid_func='SecKeyGetTypeID'/>
<cftype type='^{OpaqueSecKeychainItemRef=}' tollfree='__NSCFType' name='SecKeychainItemRef' gettypeid_func='SecKeychainItemGetTypeID'/>
<cftype type='^{OpaqueSecKeychainRef=}' tollfree='__NSCFType' name='SecKeychainRef' gettypeid_func='SecKeychainGetTypeID'/>
<cftype type='^{OpaqueSecKeychainSearchRef=}' tollfree='__NSCFType' name='SecKeychainSearchRef' gettypeid_func='SecKeychainSearchGetTypeID'/>
<cftype type='^{OpaqueSecPasswordRef=}' name='SecPasswordRef'/>
<cftype type='^{OpaqueSecPolicyRef=}' tollfree='__NSCFType' name='SecPolicyRef' gettypeid_func='SecPolicyGetTypeID'/>
<cftype type='^{OpaquePolicySearchRef=}' tollfree='__NSCFType' name='SecPolicySearchRef' gettypeid_func='SecPolicySearchGetTypeID'/>
<cftype type='^{__SecRandom=}' name='SecRandomRef'/>
<cftype type='^{__SecRequirement=}' tollfree='__NSCFType' name='SecRequirementRef' gettypeid_func='SecRequirementGetTypeID'/>
<cftype type='^{__SecCode=}' tollfree='__NSCFType' name='SecStaticCodeRef' gettypeid_func='SecStaticCodeGetTypeID'/>
<cftype type='^{__SecTask=}' tollfree='__NSCFType' name='SecTaskRef' gettypeid_func='SecTaskGetTypeID'/>
<cftype type='^{OpaqueSecTransformImplementation=}' name='SecTransformImplementationRef'/>
<cftype type='^{OpaqueSecTrustRef=}' tollfree='__NSCFType' name='SecTrustRef' gettypeid_func='SecTrustGetTypeID'/>
<cftype type='^{OpaqueSecTrustedApplicationRef=}' tollfree='__NSCFType' name='SecTrustedApplicationRef' gettypeid_func='SecTrustedApplicationGetTypeID'/>
<cftype type='^{OpaqueSecureDownload=}' name='SecureDownloadRef'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ADC_CERT_POLICY' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_AD_CA_ISSUERS' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_AD_CA_REPOSITORY' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_AD_OCSP' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_AD_TIME_STAMPING' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_EPHEM' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_EPHEM_SHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_HYBRID1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_HYBRID1_SHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_HYBRID2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_HYBRID2_SHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_HYBRID_ONEFLOW' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_ONE_FLOW' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_ONE_FLOW_SHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_PUB_NUMBER' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_STATIC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_DH_STATIC_SHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_MQV1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_MQV1_SHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_MQV2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ANSI_MQV2_SHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLEID_CERT_POLICY' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLEID_SHARING_CERT_POLICY' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_ASC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_CERT_POLICY' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_ECDSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EKU_CODE_SIGNING' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EKU_CODE_SIGNING_DEV' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EKU_ICHAT_ENCRYPTION' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EKU_ICHAT_SIGNING' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EKU_RESOURCE_SIGNING' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EKU_SYSTEM_IDENTITY' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_AAI_INTERMEDIATE' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_ADC_APPLE_SIGNING' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_ADC_DEV_SIGNING' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_APPLEID_INTERMEDIATE' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_APPLEID_SHARING' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_APPLE_SIGNING' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_CODE_SIGNING' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_INTERMEDIATE_MARKER' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_ITMS_INTERMEDIATE' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_MACAPPSTORE_RECEIPT' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_EXTENSION_WWDR_INTERMEDIATE' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_FEE' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_FEED' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_FEEDEXP' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_FEE_MD5' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_FEE_SHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_ISIGN' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_APPLEID_SHARING' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_CODE_SIGN' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_CODE_SIGNING' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_CSR_GEN' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_EAP' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_ICHAT' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_IP_SEC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_LOCAL_CERT_GEN' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_MACAPPSTORE_RECEIPT' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_PACKAGE_SIGNING' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_PKINIT_CLIENT' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_PKINIT_SERVER' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_RESOURCE_SIGN' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_REVOCATION_CRL' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_REVOCATION_OCSP' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_SMIME' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_SSL' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_SW_UPDATE_SIGNING' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_TP_TIMESTAMPING' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_APPLE_X509_BASIC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_AliasedEntryName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_AuthorityInfoAccess' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_AuthorityKeyIdentifier' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_AuthorityRevocationList' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_BasicConstraints' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_BiometricInfo' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_BusinessCategory' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CACertificate' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CSSMKeyStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CertIssuer' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_Certicom' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CerticomEllCurve' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CertificatePolicies' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CertificateRevocationList' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ChallengePassword' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ClientAuth' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectiveFacsimileTelephoneNumber' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectiveInternationalISDNNumber' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectiveOrganizationName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectiveOrganizationalUnitName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectivePhysicalDeliveryOfficeName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectivePostOfficeBox' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectivePostalAddress' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectivePostalCode' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectiveStateProvinceName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectiveStreetAddress' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectiveTelephoneNumber' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectiveTelexNumber' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CollectiveTelexTerminalIdentifier' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CommonName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ContentType' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CounterSignature' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CountryName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CrlDistributionPoints' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CrlNumber' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CrlReason' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_CrossCertificatePair' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DES_CBC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DH' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DNQualifier' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_EMAIL_ENCRYPT' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_EMAIL_SIGN' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_EXTENSION' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_IDENTITY' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_POLICY' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_ARCHIVE_FETCH' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_ARCHIVE_LIST' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_ARCHIVE_REMOVE' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_ARCHIVE_STORE' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_EMAIL_ENCRYPT' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_EMAIL_SIGN' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_IDENTITY' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_SHARED_SERVICES' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_VALUE_ASYNC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_VALUE_HOSTNAME' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_VALUE_IS_PENDING' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_VALUE_PASSWORD' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_VALUE_RENEW' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DOTMAC_CERT_REQ_VALUE_USERNAME' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DSA_CMS' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DSA_JDK' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DeltaCrlIndicator' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_Description' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DestinationIndicator' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DistinguishedName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_DomainComponent' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ECDSA_WithSHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ECDSA_WithSHA224' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ECDSA_WithSHA256' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ECDSA_WithSHA384' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ECDSA_WithSHA512' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ECDSA_WithSpecified' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_EKU_IPSec' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ETSI_QCS_QC_COMPLIANCE' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ETSI_QCS_QC_LIMIT_VALUE' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ETSI_QCS_QC_RETENTION' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ETSI_QCS_QC_SSCD' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_EmailAddress' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_EmailProtection' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_EnhancedSearchGuide' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ExtendedCertificateAttributes' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ExtendedKeyUsage' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ExtendedKeyUsageAny' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ExtendedUseCodeSigning' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_FacsimileTelephoneNumber' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_GenerationQualifier' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_GivenName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_HoldInstructionCode' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_HouseIdentifier' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_InhibitAnyPolicy' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_Initials' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_InternationalISDNNumber' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_InvalidityDate' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_IssuerAltName' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_IssuingDistributionPoint' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_IssuingDistributionPoints' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_KERBv5_PKINIT_AUTH_DATA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_KERBv5_PKINIT_DH_KEY_DATA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_KERBv5_PKINIT_KP_CLIENT_AUTH' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_KERBv5_PKINIT_KP_KDC' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_KERBv5_PKINIT_RKEY_DATA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_KeyUsage' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_KnowledgeInformation' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_LocalityName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_MACAPPSTORE_CERT_POLICY' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_MACAPPSTORE_RECEIPT_CERT_POLICY' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_MD2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_MD2WithRSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_MD4' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_MD4WithRSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_MD5' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_MD5WithRSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_Member' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_MessageDigest' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_MicrosoftSGC' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_Name' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_NameConstraints' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_NetscapeCertSequence' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_NetscapeCertType' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_NetscapeSGC' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_OAEP_ID_PSPECIFIED' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_OAEP_MGF1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_OCSPSigning' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_OID_QCS_SYNTAX_V1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_OID_QCS_SYNTAX_V2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ObjectClass' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_OrganizationName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_OrganizationalUnitName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_Owner' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PDA_COUNTRY_CITIZEN' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PDA_COUNTRY_RESIDENCE' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PDA_DATE_OF_BIRTH' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PDA_GENDER' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PDA_PLACE_OF_BIRTH' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_certBag' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_crlBag' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_keyBag' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_pbeWithSHAAnd128BitRC2CBC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_pbeWithSHAAnd128BitRC4' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_pbeWithSHAAnd2Key3DESCBC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_pbeWithSHAAnd3Key3DESCBC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_pbeWithSHAAnd40BitRC4' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_pbewithSHAAnd40BitRC2CBC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_safeContentsBag' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_secretBag' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS12_shroudedKeyBag' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS3' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_DES_EDE3_CBC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_DIGEST_ALG' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_ENCRYPT_ALG' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_HMAC_SHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_PBES2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_PBKDF2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_PBMAC1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_RC2_CBC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_RC5_CBC' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_pbeWithMD2AndDES' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_pbeWithMD2AndRC2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_pbeWithMD5AndDES' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_pbeWithMD5AndRC2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_pbeWithSHA1AndDES' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS5_pbeWithSHA1AndRC2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS7_Data' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS7_DataWithAttributes' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS7_DigestedData' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS7_EncryptedData' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS7_EncryptedPrivateKeyInfo' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS7_EnvelopedData' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS7_SignedAndEnvelopedData' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS7_SignedData' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS9_CertTypes' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS9_CrlTypes' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS9_FriendlyName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS9_Id_Ct_TSTInfo' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS9_LocalKeyId' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS9_SdsiCertificate' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS9_TimeStampToken' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS9_X509Certificate' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKCS9_X509Crl' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKIX_OCSP' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKIX_OCSP_ARCHIVE_CUTOFF' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKIX_OCSP_BASIC' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKIX_OCSP_CRL' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKIX_OCSP_NOCHECK' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKIX_OCSP_NONCE' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKIX_OCSP_RESPONSE' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PKIX_OCSP_SERVICE_LOCATOR' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PhysicalDeliveryOfficeName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PolicyConstraints' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PolicyMappings' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PostOfficeBox' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PostalAddress' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PostalCode' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PreferredDeliveryMethod' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PresentationAddress' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_PrivateKeyUsagePeriod' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ProtocolInformation' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_QC_Statements' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_QT_CPS' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_QT_UNOTICE' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_RSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_RSAWithOAEP' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_RegisteredAddress' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_RoleOccupant' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA1WithDSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA1WithDSA_CMS' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA1WithDSA_JDK' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA1WithRSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA1WithRSA_OIW' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA224' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA224WithRSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA256' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA256WithRSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA384' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA384WithRSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA512' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SHA512WithRSA' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SearchGuide' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SeeAlso' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SerialNumber' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ServerAuth' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SigningTime' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_StateProvinceName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_StreetAddress' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SubjectAltName' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SubjectDirectoryAttributes' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SubjectEmailAddress' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SubjectInfoAccess' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SubjectKeyIdentifier' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SubjectPicture' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SubjectSignatureBitmap' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_SupportedApplicationContext' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_Surname' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_TelephoneNumber' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_TelexNumber' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_TelexTerminalIdentifier' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_TimeStamping' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_Title' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_UniqueIdentifier' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_UniqueMember' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_UnstructuredAddress' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_UnstructuredName' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_UseExemptions' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_UserCertificate' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_UserID' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_UserPassword' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLIssuerNameCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLIssuerNameLDAP' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLIssuerStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLNextUpdate' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLNumberOfRevokedCertEntries' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLRevokedCertificatesCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLRevokedCertificatesStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLRevokedEntryCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLRevokedEntryRevocationDate' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLRevokedEntrySerialNumber' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLRevokedEntryStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CRLThisUpdate' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CertificateIssuerUniqueId' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1CertificateSubjectUniqueId' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1IssuerName' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1IssuerNameCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1IssuerNameLDAP' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1IssuerNameStd' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SerialNumber' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1Signature' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SignatureAlgorithm' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SignatureAlgorithmParameters' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SignatureAlgorithmTBS' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SignatureCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SignatureStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SubjectName' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SubjectNameCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SubjectNameLDAP' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SubjectNameStd' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SubjectPublicKey' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SubjectPublicKeyAlgorithm' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SubjectPublicKeyAlgorithmParameters' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1SubjectPublicKeyCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1ValidityNotAfter' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1ValidityNotBefore' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V1Version' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLAllExtensionsCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLAllExtensionsStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLExtensionCritical' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLExtensionId' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLExtensionType' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLNumberOfExtensions' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLRevokedEntryAllExtensionsCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLRevokedEntryAllExtensionsStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLRevokedEntryExtensionCritical' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLRevokedEntryExtensionId' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLRevokedEntryExtensionType' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLRevokedEntryExtensionValue' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLRevokedEntryNumberOfExtensions' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLRevokedEntrySingleExtensionCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLRevokedEntrySingleExtensionStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLSignedCrlCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLSignedCrlStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLSingleExtensionCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLSingleExtensionStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLTbsCertListCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLTbsCertListStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V2CRLVersion' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3Certificate' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3CertificateCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3CertificateExtensionCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3CertificateExtensionCritical' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3CertificateExtensionId' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3CertificateExtensionStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3CertificateExtensionType' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3CertificateExtensionValue' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3CertificateExtensionsCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3CertificateExtensionsStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3CertificateNumberOfExtensions' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3SignedCertificate' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X509V3SignedCertificateCStruct' const='true' declared_type='CSSM_OID'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X9_62' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X9_62_C_TwoCurve' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X9_62_EllCurve' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X9_62_FieldType' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X9_62_PrimeCurve' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X9_62_PubKeyType' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X9_62_SigType' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_X_121Address' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_ecPublicKey' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp112r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp112r2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp128r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp128r2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp160k1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp160r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp160r2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp192k1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp192r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp224k1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp224r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp256k1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp256r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp384r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_secp521r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect113r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect113r2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect131r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect131r2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect163k1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect163r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect163r2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect193r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect193r2' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect233k1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect233r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect239k1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect283k1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect283r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect409k1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect409r1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect571k1' const='true' declared_type='SecAsn1Oid'/>
<constant type64='{cssm_data=Q*}' type='{cssm_data=I*}' name='CSSMOID_sect571r1' const='true' declared_type='SecAsn1Oid'/>
<constant type='{cssm_guid=ISS[8C]}' name='gGuidAppleCSP' const='true' declared_type='CSSM_GUID'/>
<constant type='{cssm_guid=ISS[8C]}' name='gGuidAppleCSPDL' const='true' declared_type='CSSM_GUID'/>
<constant type='{cssm_guid=ISS[8C]}' name='gGuidAppleDotMacDL' const='true' declared_type='CSSM_GUID'/>
<constant type='{cssm_guid=ISS[8C]}' name='gGuidAppleDotMacTP' const='true' declared_type='CSSM_GUID'/>
<constant type='{cssm_guid=ISS[8C]}' name='gGuidAppleFileDL' const='true' declared_type='CSSM_GUID'/>
<constant type='{cssm_guid=ISS[8C]}' name='gGuidAppleLDAPDL' const='true' declared_type='CSSM_GUID'/>
<constant type='{cssm_guid=ISS[8C]}' name='gGuidAppleSdCSPDL' const='true' declared_type='CSSM_GUID'/>
<constant type='{cssm_guid=ISS[8C]}' name='gGuidAppleX509CL' const='true' declared_type='CSSM_GUID'/>
<constant type='{cssm_guid=ISS[8C]}' name='gGuidAppleX509TP' const='true' declared_type='CSSM_GUID'/>
<constant type='{cssm_guid=ISS[8C]}' name='gGuidCssm' const='true' declared_type='CSSM_GUID'/>
<constant type='@' name='kSecACLAuthorizationAny' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationChangeACL' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationChangeOwner' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationDecrypt' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationDelete' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationDerive' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationEncrypt' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationExportClear' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationExportWrapped' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationGenKey' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationImportClear' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationImportWrapped' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationKeychainCreate' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationKeychainDelete' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationKeychainItemDelete' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationKeychainItemInsert' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationKeychainItemModify' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationKeychainItemRead' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationLogin' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationMAC' declared_type='CFTypeRef'/>
<constant type='@' name='kSecACLAuthorizationSign' declared_type='CFTypeRef'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1AnyTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1BMPStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1BitStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1BooleanTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1EnumeratedTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1GeneralizedTimeTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1IA5StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1IntegerTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1NullTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1ObjectIDTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1OctetStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToAnyTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToBMPStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToBitStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToBooleanTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToEnumeratedTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToGeneralizedTimeTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToIA5StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToIntegerTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToNullTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToObjectIDTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToOctetStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToPrintableStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToT61StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToTeletexStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToUTCTimeTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToUTF8StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToUniversalStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PointerToVisibleStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1PrintableStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfAnyTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfBMPStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfBitStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfBooleanTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfEnumeratedTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfGeneralizedTimeTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfIA5StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfIntegerTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfNullTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfObjectIDTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfOctetStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfPrintableStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfT61StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfTeletexStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfUTCTimeTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfUTF8StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfUniversalStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SequenceOfVisibleStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfAnyTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfBMPStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfBitStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfBooleanTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfEnumeratedTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfGeneralizedTimeTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfIA5StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfIntegerTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfNullTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfObjectIDTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfOctetStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfPrintableStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfT61StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfTeletexStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfUTCTimeTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfUTF8StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfUniversalStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SetOfVisibleStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1SkipTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1T61StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1TeletexStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1UTCTimeTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1UTF8StringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1UniversalStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1UnsignedIntegerTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='^{SecAsn1Template_struct=II^vI}' name='kSecAsn1VisibleStringTemplate' const='true' declared_type='SecAsn1Template*'/>
<constant type='@' name='kSecAttrAccess' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrAccount' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrApplicationLabel' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrApplicationTag' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrAuthenticationType' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrAuthenticationTypeDPA' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrAuthenticationTypeDefault' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrAuthenticationTypeHTMLForm' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrAuthenticationTypeHTTPBasic' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrAuthenticationTypeHTTPDigest' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrAuthenticationTypeMSN' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrAuthenticationTypeNTLM' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrAuthenticationTypeRPA' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCanDecrypt' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCanDerive' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCanEncrypt' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCanSign' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCanUnwrap' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCanVerify' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCanWrap' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCertificateEncoding' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCertificateType' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrComment' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCreationDate' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrCreator' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrDescription' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrEffectiveKeySize' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrGeneric' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrIsInvisible' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrIsNegative' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrIsPermanent' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrIssuer' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyClass' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyClassPrivate' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyClassPublic' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyClassSymmetric' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeySizeInBits' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyType' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyType3DES' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyTypeAES' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyTypeCAST' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyTypeDES' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyTypeDSA' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyTypeECDSA' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyTypeRC2' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyTypeRC4' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrKeyTypeRSA' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrLabel' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrModificationDate' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrPRF' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrPRFHmacAlgSHA1' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrPRFHmacAlgSHA224' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrPRFHmacAlgSHA256' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrPRFHmacAlgSHA384' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrPRFHmacAlgSHA512' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrPath' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrPort' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocol' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolAFP' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolAppleTalk' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolDAAP' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolEPPC' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolFTP' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolFTPAccount' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolFTPProxy' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolFTPS' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolHTTP' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolHTTPProxy' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolHTTPS' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolHTTPSProxy' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolIMAP' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolIMAPS' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolIPP' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolIRC' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolIRCS' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolLDAP' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolLDAPS' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolNNTP' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolNNTPS' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolPOP3' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolPOP3S' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolRTSP' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolRTSPProxy' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolSMB' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolSMTP' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolSOCKS' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolSSH' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolTelnet' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrProtocolTelnetS' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrPublicKeyHash' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrRounds' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrSalt' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrSecurityDomain' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrSerialNumber' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrServer' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrService' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrSubject' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrSubjectKeyID' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecAttrType' const='true' declared_type='CFTypeRef'/>
<constant type='^{__CFString=}' name='kSecBase32Encoding' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecBase64Encoding' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCFErrorArchitecture' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCFErrorGuestAttributes' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCFErrorInfoPlist' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCFErrorPath' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCFErrorPattern' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCFErrorRequirementSyntax' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCFErrorResourceAdded' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCFErrorResourceAltered' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCFErrorResourceMissing' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCFErrorResourceSeal' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCertificateUsageDeriveAndSign' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCertificateUsageSigning' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCertificateUsageSigningAndEncrypting' const='true' declared_type='CFStringRef'/>
<constant type='@' name='kSecClass' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecClassCertificate' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecClassGenericPassword' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecClassIdentity' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecClassInternetPassword' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecClassKey' const='true' declared_type='CFTypeRef'/>
<constant type='^{__CFString=}' name='kSecCodeAttributeArchitecture' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeAttributeBundleVersion' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeAttributeSubarchitecture' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoCMS' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoCertificates' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoChangedFiles' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoDesignatedRequirement' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoDigestAlgorithm' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoEntitlements' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoEntitlementsDict' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoFormat' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoIdentifier' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoImplicitDesignatedRequirement' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoMainExecutable' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoPList' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoRequirementData' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoRequirements' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoSource' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoStatus' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoTime' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoTimestamp' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoTrust' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeInfoUnique' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCodeSignerFlags' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecCompressionRatio' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDecodeTypeAttribute' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestHMACKeyAttribute' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestHMACMD5' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestHMACSHA1' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestHMACSHA2' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestLengthAttribute' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestMD2' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestMD4' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestMD5' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestSHA1' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestSHA2' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecDigestTypeAttribute' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecEncodeLineLengthAttribute' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecEncodeTypeAttribute' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecEncryptKey' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecEncryptionMode' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecGuestAttributeArchitecture' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecGuestAttributeCanonical' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecGuestAttributeHash' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecGuestAttributeMachPort' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecGuestAttributePid' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecGuestAttributeSubarchitecture' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecIVKey' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecIdentityDomainDefault' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecIdentityDomainKerberosKDC' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecImportExportAccess' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecImportExportKeychain' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecImportExportPassphrase' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecImportItemCertChain' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecImportItemIdentity' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecImportItemKeyID' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecImportItemLabel' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecImportItemTrust' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecInputIsAttributeName' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecInputIsDigest' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecInputIsPlainText' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecInputIsRaw' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecKeyAttributeName' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecLineLength64' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecLineLength76' const='true' declared_type='CFStringRef'/>
<constant type='@' name='kSecMatchCaseInsensitive' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchDiacriticInsensitive' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchEmailAddressIfPresent' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchIssuers' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchItemList' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchLimit' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchLimitAll' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchLimitOne' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchPolicy' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchSearchList' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchSubjectContains' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchSubjectEndsWith' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchSubjectStartsWith' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchSubjectWholeString' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchTrustedOnly' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchValidOnDate' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecMatchWidthInsensitive' const='true' declared_type='CFTypeRef'/>
<constant type='^{__CFString=}' name='kSecModeCBCKey' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecModeCFBKey' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecModeECBKey' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecModeNoneKey' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecModeOFBKey' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecOAEPEncodingParametersAttributeName' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecOAEPMGF1DigestAlgorithmAttributeName' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecOAEPMessageLengthAttributeName' declared_type='CFStringRef'/>
<constant type='@' name='kSecOIDADC_CERT_POLICY' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_CERT_POLICY' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EKU_CODE_SIGNING' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EKU_CODE_SIGNING_DEV' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EKU_ICHAT_ENCRYPTION' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EKU_ICHAT_SIGNING' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EKU_RESOURCE_SIGNING' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EKU_SYSTEM_IDENTITY' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EXTENSION' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EXTENSION_AAI_INTERMEDIATE' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EXTENSION_ADC_APPLE_SIGNING' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EXTENSION_ADC_DEV_SIGNING' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EXTENSION_APPLEID_INTERMEDIATE' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EXTENSION_APPLE_SIGNING' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EXTENSION_CODE_SIGNING' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EXTENSION_INTERMEDIATE_MARKER' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EXTENSION_ITMS_INTERMEDIATE' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAPPLE_EXTENSION_WWDR_INTERMEDIATE' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAuthorityInfoAccess' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDAuthorityKeyIdentifier' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDBasicConstraints' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDBiometricInfo' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDCSSMKeyStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDCertIssuer' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDCertificatePolicies' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDClientAuth' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDCollectiveStateProvinceName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDCollectiveStreetAddress' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDCommonName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDCountryName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDCrlDistributionPoints' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDCrlNumber' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDCrlReason' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDDOTMAC_CERT_EMAIL_ENCRYPT' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDDOTMAC_CERT_EMAIL_SIGN' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDDOTMAC_CERT_EXTENSION' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDDOTMAC_CERT_IDENTITY' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDDOTMAC_CERT_POLICY' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDDeltaCrlIndicator' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDDescription' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDEKU_IPSec' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDEmailAddress' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDEmailProtection' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDExtendedKeyUsage' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDExtendedKeyUsageAny' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDExtendedUseCodeSigning' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDGivenName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDHoldInstructionCode' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDInvalidityDate' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDIssuerAltName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDIssuingDistributionPoint' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDIssuingDistributionPoints' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDKERBv5_PKINIT_KP_CLIENT_AUTH' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDKERBv5_PKINIT_KP_KDC' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDKeyUsage' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDLocalityName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDMS_NTPrincipalName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDMicrosoftSGC' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDNameConstraints' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDNetscapeCertSequence' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDNetscapeCertType' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDNetscapeSGC' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDOCSPSigning' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDOrganizationName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDOrganizationalUnitName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDPolicyConstraints' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDPolicyMappings' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDPrivateKeyUsagePeriod' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDQC_Statements' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDSRVName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDSerialNumber' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDServerAuth' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDStateProvinceName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDStreetAddress' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDSubjectAltName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDSubjectDirectoryAttributes' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDSubjectEmailAddress' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDSubjectInfoAccess' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDSubjectKeyIdentifier' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDSubjectPicture' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDSubjectSignatureBitmap' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDSurname' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDTimeStamping' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDTitle' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDUseExemptions' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1CertificateIssuerUniqueId' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1CertificateSubjectUniqueId' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1IssuerName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1IssuerNameCStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1IssuerNameLDAP' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1IssuerNameStd' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SerialNumber' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1Signature' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SignatureAlgorithm' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SignatureAlgorithmParameters' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SignatureAlgorithmTBS' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SignatureCStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SignatureStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SubjectName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SubjectNameCStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SubjectNameLDAP' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SubjectNameStd' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SubjectPublicKey' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SubjectPublicKeyAlgorithm' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SubjectPublicKeyAlgorithmParameters' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1SubjectPublicKeyCStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1ValidityNotAfter' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1ValidityNotBefore' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V1Version' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3Certificate' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3CertificateCStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3CertificateExtensionCStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3CertificateExtensionCritical' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3CertificateExtensionId' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3CertificateExtensionStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3CertificateExtensionType' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3CertificateExtensionValue' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3CertificateExtensionsCStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3CertificateExtensionsStruct' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3CertificateNumberOfExtensions' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3SignedCertificate' declared_type='CFTypeRef'/>
<constant type='@' name='kSecOIDX509V3SignedCertificateCStruct' declared_type='CFTypeRef'/>
<constant type='^{__CFString=}' name='kSecPaddingKey' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPaddingNoneKey' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPaddingOAEPKey' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPaddingPKCS1Key' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPaddingPKCS5Key' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPaddingPKCS7Key' declared_type='CFStringRef'/>
<constant type='@' name='kSecPolicyAppleCodeSigning' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyAppleEAP' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyAppleIDValidation' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyAppleIPsec' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyApplePKINITClient' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyApplePKINITServer' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyAppleSMIME' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyAppleSSL' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyAppleTimeStamping' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyAppleX509Basic' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyAppleiChat' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyClient' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyKU_CRLSign' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyKU_DataEncipherment' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyKU_DecipherOnly' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyKU_DigitalSignature' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyKU_EncipherOnly' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyKU_KeyAgreement' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyKU_KeyCertSign' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyKU_KeyEncipherment' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyKU_NonRepudiation' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyMacAppStoreReceipt' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyName' declared_type='CFTypeRef'/>
<constant type='@' name='kSecPolicyOid' declared_type='CFTypeRef'/>
<constant type='^{__CFString=}' name='kSecPropertyKeyLabel' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPropertyKeyLocalizedLabel' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPropertyKeyType' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPropertyKeyValue' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPropertyTypeData' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPropertyTypeDate' declared_type='CFStringRef'/>
<constant type='@' name='kSecPropertyTypeError' declared_type='CFTypeRef'/>
<constant type='^{__CFString=}' name='kSecPropertyTypeSection' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPropertyTypeString' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPropertyTypeSuccess' declared_type='CFStringRef'/>
<constant type='@' name='kSecPropertyTypeTitle' declared_type='CFTypeRef'/>
<constant type='^{__CFString=}' name='kSecPropertyTypeURL' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecPropertyTypeWarning' declared_type='CFStringRef'/>
<constant type='^{__SecRandom=}' name='kSecRandomDefault' const='true' declared_type='SecRandomRef'/>
<constant type='@' name='kSecReturnAttributes' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecReturnData' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecReturnPersistentRef' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecReturnRef' const='true' declared_type='CFTypeRef'/>
<constant type='^{__CFString=}' name='kSecSignatureAttributeName' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformAbortAttributeName' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformAbortOriginatorKey' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformActionAttributeNotification' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformActionAttributeValidation' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformActionCanExecute' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformActionExternalizeExtraData' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformActionFinalize' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformActionInternalizeExtraData' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformActionProcessData' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformActionStartingExecution' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformDebugAttributeName' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformErrorDomain' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformInputAttributeName' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformOutputAttributeName' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformPreviousErrorKey' const='true' declared_type='CFStringRef'/>
<constant type='^{__CFString=}' name='kSecTransformTransformName' const='true' declared_type='CFStringRef'/>
<constant type='@' name='kSecUseItemList' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecUseKeychain' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecValueData' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecValuePersistentRef' const='true' declared_type='CFTypeRef'/>
<constant type='@' name='kSecValueRef' const='true' declared_type='CFTypeRef'/>
<constant type='^{__CFString=}' name='kSecZLibEncoding' const='true' declared_type='CFStringRef'/>
<string_constant value='99991231235959' name='CSSM_APPLE_CRL_END_OF_TIME'/>
<string_constant value='MDS CDSA Directory' name='MDS_CDSA_DIRECTORY_NAME'/>
<string_constant value='MDS Object Directory' name='MDS_OBJECT_DIRECTORY_NAME'/>
<string_constant value='comment' name='kAuthorizationComment'/>
<string_constant value='icon' name='kAuthorizationEnvironmentIcon'/>
<string_constant value='password' name='kAuthorizationEnvironmentPassword'/>
<string_constant value='prompt' name='kAuthorizationEnvironmentPrompt'/>
<string_constant value='shared' name='kAuthorizationEnvironmentShared'/>
<string_constant value='username' name='kAuthorizationEnvironmentUsername'/>
<string_constant value='system.privilege.admin' name='kAuthorizationRightExecute'/>
<string_constant value='rule' name='kAuthorizationRightRule'/>
<string_constant value='authenticate-admin' name='kAuthorizationRuleAuthenticateAsAdmin'/>
<string_constant value='authenticate-session-owner' name='kAuthorizationRuleAuthenticateAsSessionUser'/>
<string_constant value='allow' name='kAuthorizationRuleClassAllow'/>
<string_constant value='deny' name='kAuthorizationRuleClassDeny'/>
<string_constant value='is-admin' name='kAuthorizationRuleIsAdmin'/>
<string_constant value='.keychain' name='kKeychainSuffix'/>
<string_constant nsstring='true' value='kSecTrustSettingsAllowedError' name='kSecTrustSettingsAllowedError'/>
<string_constant nsstring='true' value='kSecTrustSettingsApplication' name='kSecTrustSettingsApplication'/>
<string_constant nsstring='true' value='kSecTrustSettingsKeyUsage' name='kSecTrustSettingsKeyUsage'/>
<string_constant nsstring='true' value='kSecTrustSettingsPolicy' name='kSecTrustSettingsPolicy'/>
<string_constant nsstring='true' value='kSecTrustSettingsPolicyString' name='kSecTrustSettingsPolicyString'/>
<string_constant nsstring='true' value='kSecTrustSettingsResult' name='kSecTrustSettingsResult'/>
<string_constant value='/Library/Keychains/' name='kSystemKeychainDir'/>
<string_constant value='System.keychain' name='kSystemKeychainName'/>
<string_constant value='/var/db/SystemKey' name='kSystemUnlockFile'/>
<enum value='100' name='APPLE_ADS_OID'/>
<enum value='7' name='APPLE_ADS_OID_LENGTH'/>
<enum value='2' name='APPLE_ALG_OID'/>
<enum value='8' name='APPLE_ALG_OID_LENGTH'/>
<enum value='5' name='APPLE_CERT_POLICIES'/>
<enum value='7' name='APPLE_CERT_POLICIES_APPLEID'/>
<enum value='9' name='APPLE_CERT_POLICIES_APPLEID_LENGTH'/>
<enum value='1' name='APPLE_CERT_POLICIES_APPLEID_SHARING'/>
<enum value='10' name='APPLE_CERT_POLICIES_APPLEID_SHARING_LENGTH'/>
<enum value='8' name='APPLE_CERT_POLICIES_LENGTH'/>
<enum value='6' name='APPLE_CERT_POLICIES_MACAPPSTORE'/>
<enum value='9' name='APPLE_CERT_POLICIES_MACAPPSTORE_LENGTH'/>
<enum value='1' name='APPLE_CERT_POLICIES_MACAPPSTORE_RECEIPT'/>
<enum value='10' name='APPLE_CERT_POLICIES_MACAPPSTORE_RECEIPT_LENGTH'/>
<enum value='2' name='APPLE_DOTMAC_CERT_EXTEN_OID'/>
<enum value='9' name='APPLE_DOTMAC_CERT_EXTEN_OID_LENGTH'/>
<enum value='3' name='APPLE_DOTMAC_CERT_OID'/>
<enum value='8' name='APPLE_DOTMAC_CERT_OID_LENGTH'/>
<enum value='1' name='APPLE_DOTMAC_CERT_REQ_OID'/>
<enum value='9' name='APPLE_DOTMAC_CERT_REQ_OID_LENGTH'/>
<enum value='3' name='APPLE_DOTMAC_CERT_REQ_VALUE_OID'/>
<enum value='9' name='APPLE_DOTMAC_CERT_REQ_VALUE_OID_LENGTH'/>
<enum value='1' name='APPLE_EKU_CODE_SIGNING'/>
<enum value='9' name='APPLE_EKU_CODE_SIGNING_LENGTH'/>
<enum value='4' name='APPLE_EKU_OID'/>
<enum value='8' name='APPLE_EKU_OID_LENGTH'/>
<enum value='3' name='APPLE_EXTENSION_AAI_INTERMEDIATE'/>
<enum value='9' name='APPLE_EXTENSION_AAI_INTERMEDIATE_LENGTH'/>
<enum value='7' name='APPLE_EXTENSION_APPLEID_INTERMEDIATE'/>
<enum value='9' name='APPLE_EXTENSION_APPLEID_INTERMEDIATE_LENGTH'/>
<enum value='7' name='APPLE_EXTENSION_APPLEID_SHARING'/>
<enum value='9' name='APPLE_EXTENSION_APPLEID_SHARING_LENGTH'/>
<enum value='1' name='APPLE_EXTENSION_CODE_SIGNING'/>
<enum value='9' name='APPLE_EXTENSION_CODE_SIGNING_LENGTH'/>
<enum value='2' name='APPLE_EXTENSION_INTERMEDIATE_MARKER'/>
<enum value='9' name='APPLE_EXTENSION_INTERMEDIATE_MARKER_LENGTH'/>
<enum value='2' name='APPLE_EXTENSION_ITMS_INTERMEDIATE'/>
<enum value='9' name='APPLE_EXTENSION_ITMS_INTERMEDIATE_LENGTH'/>
<enum value='1' name='APPLE_EXTENSION_MACAPPSTORE_RECEIPT'/>
<enum value='10' name='APPLE_EXTENSION_MACAPPSTORE_RECEIPT_LENGTH'/>
<enum value='6' name='APPLE_EXTENSION_OID'/>
<enum value='8' name='APPLE_EXTENSION_OID_LENGTH'/>
<enum value='1' name='APPLE_EXTENSION_WWDR_INTERMEDIATE'/>
<enum value='9' name='APPLE_EXTENSION_WWDR_INTERMEDIATE_LENGTH'/>
<enum value='99' name='APPLE_OID'/>
<enum value='6' name='APPLE_OID_LENGTH'/>
<enum value='1' name='APPLE_TP_OID'/>
<enum value='8' name='APPLE_TP_OID_LENGTH'/>
<enum value='3' name='BER_TAG_BIT_STRING'/>
<enum value='1' name='BER_TAG_BOOLEAN'/>
<enum value='10' name='BER_TAG_ENUMERATED'/>
<enum value='8' name='BER_TAG_EXTERNAL'/>
<enum value='24' name='BER_TAG_GENERALIZED_TIME'/>
<enum value='27' name='BER_TAG_GENERAL_STRING'/>
<enum value='25' name='BER_TAG_GRAPHIC_STRING'/>
<enum value='22' name='BER_TAG_IA5_STRING'/>
<enum value='2' name='BER_TAG_INTEGER'/>
<enum value='26' name='BER_TAG_ISO646_STRING'/>
<enum value='5' name='BER_TAG_NULL'/>
<enum value='18' name='BER_TAG_NUMERIC_STRING'/>
<enum value='7' name='BER_TAG_OBJECT_DESCRIPTOR'/>
<enum value='4' name='BER_TAG_OCTET_STRING'/>
<enum value='6' name='BER_TAG_OID'/>
<enum value='30' name='BER_TAG_PKIX_BMP_STRING'/>
<enum value='28' name='BER_TAG_PKIX_UNIVERSAL_STRING'/>
<enum value='12' name='BER_TAG_PKIX_UTF8_STRING'/>
<enum value='19' name='BER_TAG_PRINTABLE_STRING'/>
<enum value='9' name='BER_TAG_REAL'/>
<enum value='16' name='BER_TAG_SEQUENCE'/>
<enum value='17' name='BER_TAG_SET'/>
<enum value='20' name='BER_TAG_T61_STRING'/>
<enum value='20' name='BER_TAG_TELETEX_STRING'/>
<enum value='0' name='BER_TAG_UNKNOWN'/>
<enum value='23' name='BER_TAG_UTC_TIME'/>
<enum value='21' name='BER_TAG_VIDEOTEX_STRING'/>
<enum value='26' name='BER_TAG_VISIBLE_STRING'/>
<enum value='0' name='CE_CDNT_FullName'/>
<enum value='1' name='CE_CDNT_NameRelativeToCrlIssuer'/>
<enum value='16' name='CE_CD_AffiliationChanged'/>
<enum value='32' name='CE_CD_CACompromise'/>
<enum value='2' name='CE_CD_CertificateHold'/>
<enum value='4' name='CE_CD_CessationOfOperation'/>
<enum value='64' name='CE_CD_KeyCompromise'/>
<enum value='8' name='CE_CD_Superseded'/>
<enum value='128' name='CE_CD_Unspecified'/>
<enum value='3' name='CE_CR_AffiliationChanged'/>
<enum value='2' name='CE_CR_CACompromise'/>
<enum value='6' name='CE_CR_CertificateHold'/>
<enum value='5' name='CE_CR_CessationOfOperation'/>
<enum value='1' name='CE_CR_KeyCompromise'/>
<enum value='8' name='CE_CR_RemoveFromCRL'/>
<enum value='4' name='CE_CR_Superseded'/>
<enum value='0' name='CE_CR_Unspecified'/>
<enum value='512' name='CE_KU_CRLSign'/>
<enum value='4096' name='CE_KU_DataEncipherment'/>
<enum value='128' name='CE_KU_DecipherOnly'/>
<enum value='32768' name='CE_KU_DigitalSignature'/>
<enum value='256' name='CE_KU_EncipherOnly'/>
<enum value='2048' name='CE_KU_KeyAgreement'/>
<enum value='1024' name='CE_KU_KeyCertSign'/>
<enum value='8192' name='CE_KU_KeyEncipherment'/>
<enum value='16384' name='CE_KU_NonRepudiation'/>
<enum value='4096' name='CE_NCT_ObjSign'/>
<enum value='256' name='CE_NCT_ObjSignCA'/>
<enum value='2048' name='CE_NCT_Reserved'/>
<enum value='8192' name='CE_NCT_SMIME'/>
<enum value='512' name='CE_NCT_SMIME_CA'/>
<enum value='1024' name='CE_NCT_SSL_CA'/>
<enum value='32768' name='CE_NCT_SSL_Client'/>
<enum value='16384' name='CE_NCT_SSL_Server'/>
<enum value='-2147405595' name='CSSMERR_AC_DEVICE_FAILED'/>
<enum value='-2147405596' name='CSSMERR_AC_DEVICE_RESET'/>
<enum value='-2147405814' name='CSSMERR_AC_FUNCTION_FAILED'/>
<enum value='-2147405817' name='CSSMERR_AC_FUNCTION_NOT_IMPLEMENTED'/>
<enum value='-2147405597' name='CSSMERR_AC_INSUFFICIENT_CLIENT_IDENTIFICATION'/>
<enum value='-2147405823' name='CSSMERR_AC_INTERNAL_ERROR'/>
<enum value='-2147405567' name='CSSMERR_AC_INVALID_BASE_ACLS'/>
<enum value='-2147405742' name='CSSMERR_AC_INVALID_CL_HANDLE'/>
<enum value='-2147405760' name='CSSMERR_AC_INVALID_CONTEXT_HANDLE'/>
<enum value='-2147405754' name='CSSMERR_AC_INVALID_DATA'/>
<enum value='-2147405750' name='CSSMERR_AC_INVALID_DB_HANDLE'/>
<enum value='-2147405748' name='CSSMERR_AC_INVALID_DB_LIST'/>
<enum value='-2147405747' name='CSSMERR_AC_INVALID_DB_LIST_POINTER'/>
<enum value='-2147405743' name='CSSMERR_AC_INVALID_DL_HANDLE'/>
<enum value='-2147405565' name='CSSMERR_AC_INVALID_ENCODING'/>
<enum value='-2147405819' name='CSSMERR_AC_INVALID_INPUT_POINTER'/>
<enum value='-2147405818' name='CSSMERR_AC_INVALID_OUTPUT_POINTER'/>
<enum value='-2147405738' name='CSSMERR_AC_INVALID_PASSTHROUGH_ID'/>
<enum value='-2147405820' name='CSSMERR_AC_INVALID_POINTER'/>
<enum value='-2147405563' name='CSSMERR_AC_INVALID_REQUESTOR'/>
<enum value='-2147405562' name='CSSMERR_AC_INVALID_REQUEST_DESCRIPTOR'/>
<enum value='-2147405741' name='CSSMERR_AC_INVALID_TP_HANDLE'/>
<enum value='-2147405566' name='CSSMERR_AC_INVALID_TUPLE_CREDENTIALS'/>
<enum value='-2147405564' name='CSSMERR_AC_INVALID_VALIDITY_PERIOD'/>
<enum value='-2147405594' name='CSSMERR_AC_IN_DARK_WAKE'/>
<enum value='-2147405821' name='CSSMERR_AC_MDS_ERROR'/>
<enum value='-2147405822' name='CSSMERR_AC_MEMORY_ERROR'/>
<enum value='-2147405600' name='CSSMERR_AC_NO_USER_INTERACTION'/>
<enum value='-2147405815' name='CSSMERR_AC_OS_ACCESS_DENIED'/>
<enum value='-2147405816' name='CSSMERR_AC_SELF_CHECK_FAILED'/>
<enum value='-2147405598' name='CSSMERR_AC_SERVICE_NOT_AVAILABLE'/>
<enum value='-2147405599' name='CSSMERR_AC_USER_CANCELED'/>
<enum value='-2147412991' name='CSSMERR_APPLEDL_DISK_FULL'/>
<enum value='-2147412989' name='CSSMERR_APPLEDL_FILE_TOO_BIG'/>
<enum value='-2147412986' name='CSSMERR_APPLEDL_INCOMPATIBLE_DATABASE_BLOB'/>
<enum value='-2147412985' name='CSSMERR_APPLEDL_INCOMPATIBLE_KEY_BLOB'/>
<enum value='-2147412988' name='CSSMERR_APPLEDL_INVALID_DATABASE_BLOB'/>
<enum value='-2147412987' name='CSSMERR_APPLEDL_INVALID_KEY_BLOB'/>
<enum value='-2147412992' name='CSSMERR_APPLEDL_INVALID_OPEN_PARAMETERS'/>
<enum value='-2147412990' name='CSSMERR_APPLEDL_QUOTA_EXCEEDED'/>
<enum value='-2147408873' name='CSSMERR_APPLETP_BAD_CERT_FROM_ISSUER'/>
<enum value='-2147408874' name='CSSMERR_APPLETP_CERT_NOT_FOUND_FROM_ISSUER'/>
<enum value='-2147408845' name='CSSMERR_APPLETP_CODE_SIGN_DEVELOPMENT'/>
<enum value='-2147408881' name='CSSMERR_APPLETP_CRL_BAD_URI'/>
<enum value='-2147408885' name='CSSMERR_APPLETP_CRL_EXPIRED'/>
<enum value='-2147408877' name='CSSMERR_APPLETP_CRL_INVALID_ANCHOR_CERT'/>
<enum value='-2147408883' name='CSSMERR_APPLETP_CRL_NOT_FOUND'/>
<enum value='-2147408878' name='CSSMERR_APPLETP_CRL_NOT_TRUSTED'/>
<enum value='-2147408884' name='CSSMERR_APPLETP_CRL_NOT_VALID_YET'/>
<enum value='-2147408876' name='CSSMERR_APPLETP_CRL_POLICY_FAIL'/>
<enum value='-2147408882' name='CSSMERR_APPLETP_CRL_SERVER_DOWN'/>
<enum value='-2147408849' name='CSSMERR_APPLETP_CS_BAD_CERT_CHAIN_LENGTH'/>
<enum value='-2147408847' name='CSSMERR_APPLETP_CS_BAD_PATH_LENGTH'/>
<enum value='-2147408848' name='CSSMERR_APPLETP_CS_NO_BASIC_CONSTRAINTS'/>
<enum value='-2147408846' name='CSSMERR_APPLETP_CS_NO_EXTENDED_KEY_USAGE'/>
<enum value='-2147408838' name='CSSMERR_APPLETP_EXT_KEYUSAGE_NOT_CRITICAL'/>
<enum value='-2147408896' name='CSSMERR_APPLETP_HOSTNAME_MISMATCH'/>
<enum value='-2147408875' name='CSSMERR_APPLETP_IDP_FAIL'/>
<enum value='-2147408861' name='CSSMERR_APPLETP_INCOMPLETE_REVOCATION_CHECK'/>
<enum value='-2147408892' name='CSSMERR_APPLETP_INVALID_AUTHORITY_ID'/>
<enum value='-2147408893' name='CSSMERR_APPLETP_INVALID_CA'/>
<enum value='-2147408841' name='CSSMERR_APPLETP_INVALID_EMPTY_SUBJECT'/>
<enum value='-2147408889' name='CSSMERR_APPLETP_INVALID_EXTENDED_KEY_USAGE'/>
<enum value='-2147408888' name='CSSMERR_APPLETP_INVALID_ID_LINKAGE'/>
<enum value='-2147408890' name='CSSMERR_APPLETP_INVALID_KEY_USAGE'/>
<enum value='-2147408886' name='CSSMERR_APPLETP_INVALID_ROOT'/>
<enum value='-2147408891' name='CSSMERR_APPLETP_INVALID_SUBJECT_ID'/>
<enum value='-2147408839' name='CSSMERR_APPLETP_MISSING_REQUIRED_EXTENSION'/>
<enum value='-2147408860' name='CSSMERR_APPLETP_NETWORK_FAILURE'/>
<enum value='-2147408894' name='CSSMERR_APPLETP_NO_BASIC_CONSTRAINTS'/>
<enum value='-2147408864' name='CSSMERR_APPLETP_OCSP_BAD_REQUEST'/>
<enum value='-2147408865' name='CSSMERR_APPLETP_OCSP_BAD_RESPONSE'/>
<enum value='-2147408858' name='CSSMERR_APPLETP_OCSP_INVALID_ANCHOR_CERT'/>
<enum value='-2147408850' name='CSSMERR_APPLETP_OCSP_NONCE_MISMATCH'/>
<enum value='-2147408859' name='CSSMERR_APPLETP_OCSP_NOT_TRUSTED'/>
<enum value='-2147408856' name='CSSMERR_APPLETP_OCSP_NO_SIGNER'/>
<enum value='-2147408854' name='CSSMERR_APPLETP_OCSP_RESP_INTERNAL_ERR'/>
<enum value='-2147408855' name='CSSMERR_APPLETP_OCSP_RESP_MALFORMED_REQ'/>
<enum value='-2147408852' name='CSSMERR_APPLETP_OCSP_RESP_SIG_REQUIRED'/>
<enum value='-2147408853' name='CSSMERR_APPLETP_OCSP_RESP_TRY_LATER'/>
<enum value='-2147408851' name='CSSMERR_APPLETP_OCSP_RESP_UNAUTHORIZED'/>
<enum value='-2147408857' name='CSSMERR_APPLETP_OCSP_SIG_ERROR'/>
<enum value='-2147408862' name='CSSMERR_APPLETP_OCSP_STATUS_UNRECOGNIZED'/>
<enum value='-2147408863' name='CSSMERR_APPLETP_OCSP_UNAVAILABLE'/>
<enum value='-2147408887' name='CSSMERR_APPLETP_PATH_LEN_CONSTRAINT'/>
<enum value='-2147408844' name='CSSMERR_APPLETP_RS_BAD_CERT_CHAIN_LENGTH'/>
<enum value='-2147408843' name='CSSMERR_APPLETP_RS_BAD_EXTENDED_KEY_USAGE'/>
<enum value='-2147408871' name='CSSMERR_APPLETP_SMIME_BAD_EXT_KEY_USE'/>
<enum value='-2147408870' name='CSSMERR_APPLETP_SMIME_BAD_KEY_USE'/>
<enum value='-2147408872' name='CSSMERR_APPLETP_SMIME_EMAIL_ADDRS_NOT_FOUND'/>
<enum value='-2147408869' name='CSSMERR_APPLETP_SMIME_KEYUSAGE_NOT_CRITICAL'/>
<enum value='-2147408868' name='CSSMERR_APPLETP_SMIME_NO_EMAIL_ADDRS'/>
<enum value='-2147408867' name='CSSMERR_APPLETP_SMIME_SUBJ_ALT_NAME_NOT_CRIT'/>
<enum value='-2147408866' name='CSSMERR_APPLETP_SSL_BAD_EXT_KEY_USE'/>
<enum value='-2147408842' name='CSSMERR_APPLETP_TRUST_SETTING_DENY'/>
<enum value='-2147408880' name='CSSMERR_APPLETP_UNKNOWN_CERT_EXTEN'/>
<enum value='-2147408895' name='CSSMERR_APPLETP_UNKNOWN_CRITICAL_EXTEN'/>
<enum value='-2147408879' name='CSSMERR_APPLETP_UNKNOWN_CRL_EXTEN'/>
<enum value='-2147408840' name='CSSMERR_APPLETP_UNKNOWN_QUAL_CERT_STATEMENT'/>
<enum value='-2147408785' name='CSSMERR_APPLE_DOTMAC_CSR_VERIFY_FAIL'/>
<enum value='-2147408784' name='CSSMERR_APPLE_DOTMAC_FAILED_CONSISTENCY_CHECK'/>
<enum value='-2147408786' name='CSSMERR_APPLE_DOTMAC_NO_REQ_PENDING'/>
<enum value='-2147408787' name='CSSMERR_APPLE_DOTMAC_REQ_IS_PENDING'/>
<enum value='-2147408796' name='CSSMERR_APPLE_DOTMAC_REQ_QUEUED'/>
<enum value='-2147408795' name='CSSMERR_APPLE_DOTMAC_REQ_REDIRECT'/>
<enum value='-2147408789' name='CSSMERR_APPLE_DOTMAC_REQ_SERVER_ALREADY_EXIST'/>
<enum value='-2147408792' name='CSSMERR_APPLE_DOTMAC_REQ_SERVER_AUTH'/>
<enum value='-2147408794' name='CSSMERR_APPLE_DOTMAC_REQ_SERVER_ERR'/>
<enum value='-2147408790' name='CSSMERR_APPLE_DOTMAC_REQ_SERVER_NOT_AVAIL'/>
<enum value='-2147408793' name='CSSMERR_APPLE_DOTMAC_REQ_SERVER_PARAM'/>
<enum value='-2147408788' name='CSSMERR_APPLE_DOTMAC_REQ_SERVER_SERVICE_ERROR'/>
<enum value='-2147408791' name='CSSMERR_APPLE_DOTMAC_REQ_SERVER_UNIMPL'/>
<enum value='-2147411897' name='CSSMERR_CL_CRL_ALREADY_SIGNED'/>
<enum value='-2147411739' name='CSSMERR_CL_DEVICE_FAILED'/>
<enum value='-2147411740' name='CSSMERR_CL_DEVICE_RESET'/>
<enum value='-2147411958' name='CSSMERR_CL_FUNCTION_FAILED'/>
<enum value='-2147411961' name='CSSMERR_CL_FUNCTION_NOT_IMPLEMENTED'/>
<enum value='-2147411741' name='CSSMERR_CL_INSUFFICIENT_CLIENT_IDENTIFICATION'/>
<enum value='-2147411967' name='CSSMERR_CL_INTERNAL_ERROR'/>
<enum value='-2147411708' name='CSSMERR_CL_INVALID_BUNDLE_INFO'/>
<enum value='-2147411711' name='CSSMERR_CL_INVALID_BUNDLE_POINTER'/>
<enum value='-2147411710' name='CSSMERR_CL_INVALID_CACHE_HANDLE'/>
<enum value='-2147411902' name='CSSMERR_CL_INVALID_CERTGROUP_POINTER'/>
<enum value='-2147411901' name='CSSMERR_CL_INVALID_CERT_POINTER'/>
<enum value='-2147411904' name='CSSMERR_CL_INVALID_CONTEXT_HANDLE'/>
<enum value='-2147411707' name='CSSMERR_CL_INVALID_CRL_INDEX'/>
<enum value='-2147411900' name='CSSMERR_CL_INVALID_CRL_POINTER'/>
<enum value='-2147411898' name='CSSMERR_CL_INVALID_DATA'/>
<enum value='-2147411899' name='CSSMERR_CL_INVALID_FIELD_POINTER'/>
<enum value='-2147411963' name='CSSMERR_CL_INVALID_INPUT_POINTER'/>
<enum value='-2147411896' name='CSSMERR_CL_INVALID_NUMBER_OF_FIELDS'/>
<enum value='-2147411962' name='CSSMERR_CL_INVALID_OUTPUT_POINTER'/>
<enum value='-2147411882' name='CSSMERR_CL_INVALID_PASSTHROUGH_ID'/>
<enum value='-2147411964' name='CSSMERR_CL_INVALID_POINTER'/>
<enum value='-2147411709' name='CSSMERR_CL_INVALID_RESULTS_HANDLE'/>
<enum value='-2147411706' name='CSSMERR_CL_INVALID_SCOPE'/>
<enum value='-2147411738' name='CSSMERR_CL_IN_DARK_WAKE'/>
<enum value='-2147411965' name='CSSMERR_CL_MDS_ERROR'/>
<enum value='-2147411966' name='CSSMERR_CL_MEMORY_ERROR'/>
<enum value='-2147411705' name='CSSMERR_CL_NO_FIELD_VALUES'/>
<enum value='-2147411744' name='CSSMERR_CL_NO_USER_INTERACTION'/>
<enum value='-2147411959' name='CSSMERR_CL_OS_ACCESS_DENIED'/>
<enum value='-2147411704' name='CSSMERR_CL_SCOPE_NOT_SUPPORTED'/>
<enum value='-2147411960' name='CSSMERR_CL_SELF_CHECK_FAILED'/>
<enum value='-2147411742' name='CSSMERR_CL_SERVICE_NOT_AVAILABLE'/>
<enum value='-2147411890' name='CSSMERR_CL_UNKNOWN_FORMAT'/>
<enum value='-2147411889' name='CSSMERR_CL_UNKNOWN_TAG'/>
<enum value='-2147411743' name='CSSMERR_CL_USER_CANCELED'/>
<enum value='-2147411895' name='CSSMERR_CL_VERIFICATION_FAILURE'/>
<enum value='-2147415035' name='CSSMERR_CSPDL_APPLE_DL_CONVERSION_ERROR'/>
<enum value='-2147416010' name='CSSMERR_CSP_ACL_ADD_FAILED'/>
<enum value='-2147416025' name='CSSMERR_CSP_ACL_BASE_CERTS_NOT_SUPPORTED'/>
<enum value='-2147416019' name='CSSMERR_CSP_ACL_CHALLENGE_CALLBACK_FAILED'/>
<enum value='-2147416015' name='CSSMERR_CSP_ACL_CHANGE_FAILED'/>
<enum value='-2147416012' name='CSSMERR_CSP_ACL_DELETE_FAILED'/>
<enum value='-2147416017' name='CSSMERR_CSP_ACL_ENTRY_TAG_NOT_FOUND'/>
<enum value='-2147416011' name='CSSMERR_CSP_ACL_REPLACE_FAILED'/>
<enum value='-2147416021' name='CSSMERR_CSP_ACL_SUBJECT_TYPE_NOT_SUPPORTED'/>
<enum value='-2147415789' name='CSSMERR_CSP_ALGID_MISMATCH'/>
<enum value='-2147415726' name='CSSMERR_CSP_ALREADY_LOGGED_IN'/>
<enum value='-2147415040' name='CSSMERR_CSP_APPLE_ADD_APPLICATION_ACL_SUBJECT'/>
<enum value='-2147415036' name='CSSMERR_CSP_APPLE_INVALID_KEY_END_DATE'/>
<enum value='-2147415037' name='CSSMERR_CSP_APPLE_INVALID_KEY_START_DATE'/>
<enum value='-2147415039' name='CSSMERR_CSP_APPLE_PUBLIC_KEY_INCOMPLETE'/>
<enum value='-2147415038' name='CSSMERR_CSP_APPLE_SIGNATURE_MISMATCH'/>
<enum value='-2147415034' name='CSSMERR_CSP_APPLE_SSLv2_ROLLBACK'/>
<enum value='-2147415802' name='CSSMERR_CSP_ATTACH_HANDLE_BUSY'/>
<enum value='-2147415731' name='CSSMERR_CSP_BLOCK_SIZE_MISMATCH'/>
<enum value='-2147415722' name='CSSMERR_CSP_CRYPTO_DATA_CALLBACK_FAILED'/>
<enum value='-2147415804' name='CSSMERR_CSP_DEVICE_ERROR'/>
<enum value='-2147415835' name='CSSMERR_CSP_DEVICE_FAILED'/>
<enum value='-2147415803' name='CSSMERR_CSP_DEVICE_MEMORY_ERROR'/>
<enum value='-2147415836' name='CSSMERR_CSP_DEVICE_RESET'/>
<enum value='-2147415728' name='CSSMERR_CSP_DEVICE_VERIFY_FAILED'/>
<enum value='-2147416054' name='CSSMERR_CSP_FUNCTION_FAILED'/>
<enum value='-2147416057' name='CSSMERR_CSP_FUNCTION_NOT_IMPLEMENTED'/>
<enum value='-2147415807' name='CSSMERR_CSP_INPUT_LENGTH_ERROR'/>
<enum value='-2147415837' name='CSSMERR_CSP_INSUFFICIENT_CLIENT_IDENTIFICATION'/>
<enum value='-2147416063' name='CSSMERR_CSP_INTERNAL_ERROR'/>
<enum value='-2147416027' name='CSSMERR_CSP_INVALID_ACCESS_CREDENTIALS'/>
<enum value='-2147416026' name='CSSMERR_CSP_INVALID_ACL_BASE_CERTS'/>
<enum value='-2147416020' name='CSSMERR_CSP_INVALID_ACL_CHALLENGE_CALLBACK'/>
<enum value='-2147416016' name='CSSMERR_CSP_INVALID_ACL_EDIT_MODE'/>
<enum value='-2147416018' name='CSSMERR_CSP_INVALID_ACL_ENTRY_TAG'/>
<enum value='-2147416022' name='CSSMERR_CSP_INVALID_ACL_SUBJECT_VALUE'/>
<enum value='-2147415759' name='CSSMERR_CSP_INVALID_ALGORITHM'/>
<enum value='-2147415678' name='CSSMERR_CSP_INVALID_ATTR_ACCESS_CREDENTIALS'/>
<enum value='-2147415704' name='CSSMERR_CSP_INVALID_ATTR_ALG_PARAMS'/>
<enum value='-2147415686' name='CSSMERR_CSP_INVALID_ATTR_BASE'/>
<enum value='-2147415738' name='CSSMERR_CSP_INVALID_ATTR_BLOCK_SIZE'/>
<enum value='-2147415680' name='CSSMERR_CSP_INVALID_ATTR_DL_DB_HANDLE'/>
<enum value='-2147415696' name='CSSMERR_CSP_INVALID_ATTR_EFFECTIVE_BITS'/>
<enum value='-2147415692' name='CSSMERR_CSP_INVALID_ATTR_END_DATE'/>
<enum value='-2147415752' name='CSSMERR_CSP_INVALID_ATTR_INIT_VECTOR'/>
<enum value='-2147415682' name='CSSMERR_CSP_INVALID_ATTR_ITERATION_COUNT'/>
<enum value='-2147415754' name='CSSMERR_CSP_INVALID_ATTR_KEY'/>
<enum value='-2147415740' name='CSSMERR_CSP_INVALID_ATTR_KEY_LENGTH'/>
<enum value='-2147415700' name='CSSMERR_CSP_INVALID_ATTR_KEY_TYPE'/>
<enum value='-2147415702' name='CSSMERR_CSP_INVALID_ATTR_LABEL'/>
<enum value='-2147415698' name='CSSMERR_CSP_INVALID_ATTR_MODE'/>
<enum value='-2147415708' name='CSSMERR_CSP_INVALID_ATTR_OUTPUT_SIZE'/>
<enum value='-2147415748' name='CSSMERR_CSP_INVALID_ATTR_PADDING'/>
<enum value='-2147415742' name='CSSMERR_CSP_INVALID_ATTR_PASSPHRASE'/>
<enum value='-2147415688' name='CSSMERR_CSP_INVALID_ATTR_PRIME'/>
<enum value='-2147415674' name='CSSMERR_CSP_INVALID_ATTR_PRIVATE_KEY_FORMAT'/>
<enum value='-2147415676' name='CSSMERR_CSP_INVALID_ATTR_PUBLIC_KEY_FORMAT'/>
<enum value='-2147415746' name='CSSMERR_CSP_INVALID_ATTR_RANDOM'/>
<enum value='-2147415706' name='CSSMERR_CSP_INVALID_ATTR_ROUNDS'/>
<enum value='-2147415750' name='CSSMERR_CSP_INVALID_ATTR_SALT'/>
<enum value='-2147415744' name='CSSMERR_CSP_INVALID_ATTR_SEED'/>
<enum value='-2147415694' name='CSSMERR_CSP_INVALID_ATTR_START_DATE'/>
<enum value='-2147415684' name='CSSMERR_CSP_INVALID_ATTR_SUBPRIME'/>
<enum value='-2147415672' name='CSSMERR_CSP_INVALID_ATTR_SYMMETRIC_KEY_FORMAT'/>
<enum value='-2147415690' name='CSSMERR_CSP_INVALID_ATTR_VERSION'/>
<enum value='-2147415670' name='CSSMERR_CSP_INVALID_ATTR_WRAPPED_KEY_FORMAT'/>
<enum value='-2147415760' name='CSSMERR_CSP_INVALID_CONTEXT'/>
<enum value='-2147416000' name='CSSMERR_CSP_INVALID_CONTEXT_HANDLE'/>
<enum value='-2147415976' name='CSSMERR_CSP_INVALID_CRYPTO_DATA'/>
<enum value='-2147415994' name='CSSMERR_CSP_INVALID_DATA'/>
<enum value='-2147415768' name='CSSMERR_CSP_INVALID_DATA_COUNT'/>
<enum value='-2147415723' name='CSSMERR_CSP_INVALID_DIGEST_ALGORITHM'/>
<enum value='-2147416059' name='CSSMERR_CSP_INVALID_INPUT_POINTER'/>
<enum value='-2147415766' name='CSSMERR_CSP_INVALID_INPUT_VECTOR'/>
<enum value='-2147415792' name='CSSMERR_CSP_INVALID_KEY'/>
<enum value='-2147415780' name='CSSMERR_CSP_INVALID_KEYATTR_MASK'/>
<enum value='-2147415782' name='CSSMERR_CSP_INVALID_KEYUSAGE_MASK'/>
<enum value='-2147415790' name='CSSMERR_CSP_INVALID_KEY_CLASS'/>
<enum value='-2147415776' name='CSSMERR_CSP_INVALID_KEY_FORMAT'/>
<enum value='-2147415778' name='CSSMERR_CSP_INVALID_KEY_LABEL'/>
<enum value='-2147415783' name='CSSMERR_CSP_INVALID_KEY_POINTER'/>
<enum value='-2147415791' name='CSSMERR_CSP_INVALID_KEY_REFERENCE'/>
<enum value='-2147415727' name='CSSMERR_CSP_INVALID_LOGIN_NAME'/>
<enum value='-2147416014' name='CSSMERR_CSP_INVALID_NEW_ACL_ENTRY'/>
<enum value='-2147416013' name='CSSMERR_CSP_INVALID_NEW_ACL_OWNER'/>
<enum value='-2147416058' name='CSSMERR_CSP_INVALID_OUTPUT_POINTER'/>
<enum value='-2147415765' name='CSSMERR_CSP_INVALID_OUTPUT_VECTOR'/>
<enum value='-2147415978' name='CSSMERR_CSP_INVALID_PASSTHROUGH_ID'/>
<enum value='-2147416060' name='CSSMERR_CSP_INVALID_POINTER'/>
<enum value='-2147416024' name='CSSMERR_CSP_INVALID_SAMPLE_VALUE'/>
<enum value='-2147415733' name='CSSMERR_CSP_INVALID_SIGNATURE'/>
<enum value='-2147415834' name='CSSMERR_CSP_IN_DARK_WAKE'/>
<enum value='-2147415787' name='CSSMERR_CSP_KEY_BLOB_TYPE_INCORRECT'/>
<enum value='-2147415786' name='CSSMERR_CSP_KEY_HEADER_INCONSISTENT'/>
<enum value='-2147415724' name='CSSMERR_CSP_KEY_LABEL_ALREADY_EXISTS'/>
<enum value='-2147415788' name='CSSMERR_CSP_KEY_USAGE_INCORRECT'/>
<enum value='-2147416061' name='CSSMERR_CSP_MDS_ERROR'/>
<enum value='-2147416062' name='CSSMERR_CSP_MEMORY_ERROR'/>
<enum value='-2147415677' name='CSSMERR_CSP_MISSING_ATTR_ACCESS_CREDENTIALS'/>
<enum value='-2147415703' name='CSSMERR_CSP_MISSING_ATTR_ALG_PARAMS'/>
<enum value='-2147415685' name='CSSMERR_CSP_MISSING_ATTR_BASE'/>
<enum value='-2147415737' name='CSSMERR_CSP_MISSING_ATTR_BLOCK_SIZE'/>
<enum value='-2147415679' name='CSSMERR_CSP_MISSING_ATTR_DL_DB_HANDLE'/>
<enum value='-2147415695' name='CSSMERR_CSP_MISSING_ATTR_EFFECTIVE_BITS'/>
<enum value='-2147415691' name='CSSMERR_CSP_MISSING_ATTR_END_DATE'/>
<enum value='-2147415751' name='CSSMERR_CSP_MISSING_ATTR_INIT_VECTOR'/>
<enum value='-2147415681' name='CSSMERR_CSP_MISSING_ATTR_ITERATION_COUNT'/>
<enum value='-2147415753' name='CSSMERR_CSP_MISSING_ATTR_KEY'/>
<enum value='-2147415739' name='CSSMERR_CSP_MISSING_ATTR_KEY_LENGTH'/>
<enum value='-2147415699' name='CSSMERR_CSP_MISSING_ATTR_KEY_TYPE'/>
<enum value='-2147415701' name='CSSMERR_CSP_MISSING_ATTR_LABEL'/>
<enum value='-2147415697' name='CSSMERR_CSP_MISSING_ATTR_MODE'/>
<enum value='-2147415707' name='CSSMERR_CSP_MISSING_ATTR_OUTPUT_SIZE'/>
<enum value='-2147415747' name='CSSMERR_CSP_MISSING_ATTR_PADDING'/>
<enum value='-2147415741' name='CSSMERR_CSP_MISSING_ATTR_PASSPHRASE'/>
<enum value='-2147415687' name='CSSMERR_CSP_MISSING_ATTR_PRIME'/>
<enum value='-2147415673' name='CSSMERR_CSP_MISSING_ATTR_PRIVATE_KEY_FORMAT'/>
<enum value='-2147415675' name='CSSMERR_CSP_MISSING_ATTR_PUBLIC_KEY_FORMAT'/>
<enum value='-2147415745' name='CSSMERR_CSP_MISSING_ATTR_RANDOM'/>
<enum value='-2147415705' name='CSSMERR_CSP_MISSING_ATTR_ROUNDS'/>
<enum value='-2147415749' name='CSSMERR_CSP_MISSING_ATTR_SALT'/>
<enum value='-2147415743' name='CSSMERR_CSP_MISSING_ATTR_SEED'/>
<enum value='-2147415693' name='CSSMERR_CSP_MISSING_ATTR_START_DATE'/>
<enum value='-2147415683' name='CSSMERR_CSP_MISSING_ATTR_SUBPRIME'/>
<enum value='-2147415671' name='CSSMERR_CSP_MISSING_ATTR_SYMMETRIC_KEY_FORMAT'/>
<enum value='-2147415689' name='CSSMERR_CSP_MISSING_ATTR_VERSION'/>
<enum value='-2147415669' name='CSSMERR_CSP_MISSING_ATTR_WRAPPED_KEY_FORMAT'/>
<enum value='-2147415801' name='CSSMERR_CSP_NOT_LOGGED_IN'/>
<enum value='-2147415840' name='CSSMERR_CSP_NO_USER_INTERACTION'/>
<enum value='-2147416029' name='CSSMERR_CSP_OBJECT_ACL_NOT_SUPPORTED'/>
<enum value='-2147416028' name='CSSMERR_CSP_OBJECT_ACL_REQUIRED'/>
<enum value='-2147416030' name='CSSMERR_CSP_OBJECT_MANIP_AUTH_DENIED'/>
<enum value='-2147416031' name='CSSMERR_CSP_OBJECT_USE_AUTH_DENIED'/>
<enum value='-2147416032' name='CSSMERR_CSP_OPERATION_AUTH_DENIED'/>
<enum value='-2147416055' name='CSSMERR_CSP_OS_ACCESS_DENIED'/>
<enum value='-2147415806' name='CSSMERR_CSP_OUTPUT_LENGTH_ERROR'/>
<enum value='-2147415725' name='CSSMERR_CSP_PRIVATE_KEY_ALREADY_EXISTS'/>
<enum value='-2147415730' name='CSSMERR_CSP_PRIVATE_KEY_NOT_FOUND'/>
<enum value='-2147415989' name='CSSMERR_CSP_PRIVILEGE_NOT_GRANTED'/>
<enum value='-2147415805' name='CSSMERR_CSP_PRIVILEGE_NOT_SUPPORTED'/>
<enum value='-2147415729' name='CSSMERR_CSP_PUBLIC_KEY_INCONSISTENT'/>
<enum value='-2147415732' name='CSSMERR_CSP_QUERY_SIZE_UNKNOWN'/>
<enum value='-2147416023' name='CSSMERR_CSP_SAMPLE_VALUE_NOT_SUPPORTED'/>
<enum value='-2147416056' name='CSSMERR_CSP_SELF_CHECK_FAILED'/>
<enum value='-2147415838' name='CSSMERR_CSP_SERVICE_NOT_AVAILABLE'/>
<enum value='-2147415736' name='CSSMERR_CSP_STAGED_OPERATION_IN_PROGRESS'/>
<enum value='-2147415735' name='CSSMERR_CSP_STAGED_OPERATION_NOT_STARTED'/>
<enum value='-2147415779' name='CSSMERR_CSP_UNSUPPORTED_KEYATTR_MASK'/>
<enum value='-2147415781' name='CSSMERR_CSP_UNSUPPORTED_KEYUSAGE_MASK'/>
<enum value='-2147415785' name='CSSMERR_CSP_UNSUPPORTED_KEY_FORMAT'/>
<enum value='-2147415777' name='CSSMERR_CSP_UNSUPPORTED_KEY_LABEL'/>
<enum value='-2147415784' name='CSSMERR_CSP_UNSUPPORTED_KEY_SIZE'/>
<enum value='-2147415839' name='CSSMERR_CSP_USER_CANCELED'/>
<enum value='-2147415767' name='CSSMERR_CSP_VECTOR_OF_BUFS_UNSUPPORTED'/>
<enum value='-2147415734' name='CSSMERR_CSP_VERIFY_FAILED'/>
<enum value='-2147417828' name='CSSMERR_CSSM_ADDIN_AUTHENTICATE_FAILED'/>
<enum value='-2147417834' name='CSSMERR_CSSM_ADDIN_LOAD_FAILED'/>
<enum value='-2147417832' name='CSSMERR_CSSM_ADDIN_UNLOAD_FAILED'/>
<enum value='-2147417822' name='CSSMERR_CSSM_ATTRIBUTE_NOT_IN_CONTEXT'/>
<enum value='-2147417824' name='CSSMERR_CSSM_BUFFER_TOO_SMALL'/>
<enum value='-2147417883' name='CSSMERR_CSSM_DEVICE_FAILED'/>
<enum value='-2147417884' name='CSSMERR_CSSM_DEVICE_RESET'/>
<enum value='-2147417829' name='CSSMERR_CSSM_EMM_AUTHENTICATE_FAILED'/>
<enum value='-2147417836' name='CSSMERR_CSSM_EMM_LOAD_FAILED'/>
<enum value='-2147417835' name='CSSMERR_CSSM_EMM_UNLOAD_FAILED'/>
<enum value='-2147417819' name='CSSMERR_CSSM_EVENT_NOTIFICATION_CALLBACK_NOT_FOUND'/>
<enum value='-2147418102' name='CSSMERR_CSSM_FUNCTION_FAILED'/>
<enum value='-2147417851' name='CSSMERR_CSSM_FUNCTION_INTEGRITY_FAIL'/>
<enum value='-2147418105' name='CSSMERR_CSSM_FUNCTION_NOT_IMPLEMENTED'/>
<enum value='-2147418047' name='CSSMERR_CSSM_INCOMPATIBLE_VERSION'/>
<enum value='-2147417885' name='CSSMERR_CSSM_INSUFFICIENT_CLIENT_IDENTIFICATION'/>
<enum value='-2147418111' name='CSSMERR_CSSM_INTERNAL_ERROR'/>
<enum value='-2147417830' name='CSSMERR_CSSM_INVALID_ADDIN_FUNCTION_TABLE'/>
<enum value='-2147417855' name='CSSMERR_CSSM_INVALID_ADDIN_HANDLE'/>
<enum value='-2147417823' name='CSSMERR_CSSM_INVALID_ATTRIBUTE'/>
<enum value='-2147418048' name='CSSMERR_CSSM_INVALID_CONTEXT_HANDLE'/>
<enum value='-2147418100' name='CSSMERR_CSSM_INVALID_GUID'/>
<enum value='-2147417853' name='CSSMERR_CSSM_INVALID_HANDLE_USAGE'/>
<enum value='-2147418107' name='CSSMERR_CSSM_INVALID_INPUT_POINTER'/>
<enum value='-2147417833' name='CSSMERR_CSSM_INVALID_KEY_HIERARCHY'/>
<enum value='-2147418106' name='CSSMERR_CSSM_INVALID_OUTPUT_POINTER'/>
<enum value='-2147418108' name='CSSMERR_CSSM_INVALID_POINTER'/>
<enum value='-2147417837' name='CSSMERR_CSSM_INVALID_PVC'/>
<enum value='-2147417827' name='CSSMERR_CSSM_INVALID_SERVICE_MASK'/>
<enum value='-2147417825' name='CSSMERR_CSSM_INVALID_SUBSERVICEID'/>
<enum value='-2147417882' name='CSSMERR_CSSM_IN_DARK_WAKE'/>
<enum value='-2147417831' name='CSSMERR_CSSM_LIB_REF_NOT_FOUND'/>
<enum value='-2147418109' name='CSSMERR_CSSM_MDS_ERROR'/>
<enum value='-2147418110' name='CSSMERR_CSSM_MEMORY_ERROR'/>
<enum value='-2147417821' name='CSSMERR_CSSM_MODULE_MANAGER_INITIALIZE_FAIL'/>
<enum value='-2147417820' name='CSSMERR_CSSM_MODULE_MANAGER_NOT_FOUND'/>
<enum value='-2147418101' name='CSSMERR_CSSM_MODULE_MANIFEST_VERIFY_FAILED'/>
<enum value='-2147417826' name='CSSMERR_CSSM_MODULE_NOT_LOADED'/>
<enum value='-2147417854' name='CSSMERR_CSSM_NOT_INITIALIZED'/>
<enum value='-2147417888' name='CSSMERR_CSSM_NO_USER_INTERACTION'/>
<enum value='-2147418103' name='CSSMERR_CSSM_OS_ACCESS_DENIED'/>
<enum value='-2147418037' name='CSSMERR_CSSM_PRIVILEGE_NOT_GRANTED'/>
<enum value='-2147417838' name='CSSMERR_CSSM_PVC_ALREADY_CONFIGURED'/>
<enum value='-2147417852' name='CSSMERR_CSSM_PVC_REFERENT_NOT_FOUND'/>
<enum value='-2147417839' name='CSSMERR_CSSM_SCOPE_NOT_SUPPORTED'/>
<enum value='-2147418104' name='CSSMERR_CSSM_SELF_CHECK_FAILED'/>
<enum value='-2147417886' name='CSSMERR_CSSM_SERVICE_NOT_AVAILABLE'/>
<enum value='-2147417887' name='CSSMERR_CSSM_USER_CANCELED'/>
<enum value='-2147413962' name='CSSMERR_DL_ACL_ADD_FAILED'/>
<enum value='-2147413977' name='CSSMERR_DL_ACL_BASE_CERTS_NOT_SUPPORTED'/>
<enum value='-2147413971' name='CSSMERR_DL_ACL_CHALLENGE_CALLBACK_FAILED'/>
<enum value='-2147413967' name='CSSMERR_DL_ACL_CHANGE_FAILED'/>
<enum value='-2147413964' name='CSSMERR_DL_ACL_DELETE_FAILED'/>
<enum value='-2147413969' name='CSSMERR_DL_ACL_ENTRY_TAG_NOT_FOUND'/>
<enum value='-2147413963' name='CSSMERR_DL_ACL_REPLACE_FAILED'/>
<enum value='-2147413973' name='CSSMERR_DL_ACL_SUBJECT_TYPE_NOT_SUPPORTED'/>
<enum value='-2147413759' name='CSSMERR_DL_DATABASE_CORRUPT'/>
<enum value='-2147413736' name='CSSMERR_DL_DATASTORE_ALREADY_EXISTS'/>
<enum value='-2147413737' name='CSSMERR_DL_DATASTORE_DOESNOT_EXIST'/>
<enum value='-2147413734' name='CSSMERR_DL_DATASTORE_IS_OPEN'/>
<enum value='-2147413735' name='CSSMERR_DL_DB_LOCKED'/>
<enum value='-2147413787' name='CSSMERR_DL_DEVICE_FAILED'/>
<enum value='-2147413788' name='CSSMERR_DL_DEVICE_RESET'/>
<enum value='-2147413715' name='CSSMERR_DL_ENDOFDATA'/>
<enum value='-2147413742' name='CSSMERR_DL_FIELD_SPECIFIED_MULTIPLE'/>
<enum value='-2147414006' name='CSSMERR_DL_FUNCTION_FAILED'/>
<enum value='-2147414009' name='CSSMERR_DL_FUNCTION_NOT_IMPLEMENTED'/>
<enum value='-2147413741' name='CSSMERR_DL_INCOMPATIBLE_FIELD_FORMAT'/>
<enum value='-2147413789' name='CSSMERR_DL_INSUFFICIENT_CLIENT_IDENTIFICATION'/>
<enum value='-2147414015' name='CSSMERR_DL_INTERNAL_ERROR'/>
<enum value='-2147413979' name='CSSMERR_DL_INVALID_ACCESS_CREDENTIALS'/>
<enum value='-2147413724' name='CSSMERR_DL_INVALID_ACCESS_REQUEST'/>
<enum value='-2147413978' name='CSSMERR_DL_INVALID_ACL_BASE_CERTS'/>
<enum value='-2147413972' name='CSSMERR_DL_INVALID_ACL_CHALLENGE_CALLBACK'/>
<enum value='-2147413968' name='CSSMERR_DL_INVALID_ACL_EDIT_MODE'/>
<enum value='-2147413970' name='CSSMERR_DL_INVALID_ACL_ENTRY_TAG'/>
<enum value='-2147413974' name='CSSMERR_DL_INVALID_ACL_SUBJECT_VALUE'/>
<enum value='-2147413934' name='CSSMERR_DL_INVALID_CL_HANDLE'/>
<enum value='-2147413936' name='CSSMERR_DL_INVALID_CSP_HANDLE'/>
<enum value='-2147413942' name='CSSMERR_DL_INVALID_DB_HANDLE'/>
<enum value='-2147413939' name='CSSMERR_DL_INVALID_DB_LIST_POINTER'/>
<enum value='-2147413725' name='CSSMERR_DL_INVALID_DB_LOCATION'/>
<enum value='-2147413738' name='CSSMERR_DL_INVALID_DB_NAME'/>
<enum value='-2147413935' name='CSSMERR_DL_INVALID_DL_HANDLE'/>
<enum value='-2147413750' name='CSSMERR_DL_INVALID_FIELD_NAME'/>
<enum value='-2147413723' name='CSSMERR_DL_INVALID_INDEX_INFO'/>
<enum value='-2147414011' name='CSSMERR_DL_INVALID_INPUT_POINTER'/>
<enum value='-2147413718' name='CSSMERR_DL_INVALID_MODIFY_MODE'/>
<enum value='-2147413929' name='CSSMERR_DL_INVALID_NETWORK_ADDR'/>
<enum value='-2147413966' name='CSSMERR_DL_INVALID_NEW_ACL_ENTRY'/>
<enum value='-2147413965' name='CSSMERR_DL_INVALID_NEW_ACL_OWNER'/>
<enum value='-2147413721' name='CSSMERR_DL_INVALID_NEW_OWNER'/>
<enum value='-2147413717' name='CSSMERR_DL_INVALID_OPEN_PARAMETERS'/>
<enum value='-2147414010' name='CSSMERR_DL_INVALID_OUTPUT_POINTER'/>
<enum value='-2147413740' name='CSSMERR_DL_INVALID_PARSING_MODULE'/>
<enum value='-2147413930' name='CSSMERR_DL_INVALID_PASSTHROUGH_ID'/>
<enum value='-2147414012' name='CSSMERR_DL_INVALID_POINTER'/>
<enum value='-2147413714' name='CSSMERR_DL_INVALID_QUERY'/>
<enum value='-2147413751' name='CSSMERR_DL_INVALID_RECORDTYPE'/>
<enum value='-2147413752' name='CSSMERR_DL_INVALID_RECORD_INDEX'/>
<enum value='-2147413720' name='CSSMERR_DL_INVALID_RECORD_UID'/>
<enum value='-2147413726' name='CSSMERR_DL_INVALID_RESULTS_HANDLE'/>
<enum value='-2147413976' name='CSSMERR_DL_INVALID_SAMPLE_VALUE'/>
<enum value='-2147413722' name='CSSMERR_DL_INVALID_SELECTION_TAG'/>
<enum value='-2147413719' name='CSSMERR_DL_INVALID_UNIQUE_INDEX_DATA'/>
<enum value='-2147413713' name='CSSMERR_DL_INVALID_VALUE'/>
<enum value='-2147413786' name='CSSMERR_DL_IN_DARK_WAKE'/>
<enum value='-2147414013' name='CSSMERR_DL_MDS_ERROR'/>
<enum value='-2147414014' name='CSSMERR_DL_MEMORY_ERROR'/>
<enum value='-2147413732' name='CSSMERR_DL_MISSING_VALUE'/>
<enum value='-2147413712' name='CSSMERR_DL_MULTIPLE_VALUES_UNSUPPORTED'/>
<enum value='-2147413792' name='CSSMERR_DL_NO_USER_INTERACTION'/>
<enum value='-2147413981' name='CSSMERR_DL_OBJECT_ACL_NOT_SUPPORTED'/>
<enum value='-2147413980' name='CSSMERR_DL_OBJECT_ACL_REQUIRED'/>
<enum value='-2147413982' name='CSSMERR_DL_OBJECT_MANIP_AUTH_DENIED'/>
<enum value='-2147413983' name='CSSMERR_DL_OBJECT_USE_AUTH_DENIED'/>
<enum value='-2147413984' name='CSSMERR_DL_OPERATION_AUTH_DENIED'/>
<enum value='-2147414007' name='CSSMERR_DL_OS_ACCESS_DENIED'/>
<enum value='-2147413716' name='CSSMERR_DL_RECORD_MODIFIED'/>
<enum value='-2147413733' name='CSSMERR_DL_RECORD_NOT_FOUND'/>
<enum value='-2147413975' name='CSSMERR_DL_SAMPLE_VALUE_NOT_SUPPORTED'/>
<enum value='-2147414008' name='CSSMERR_DL_SELF_CHECK_FAILED'/>
<enum value='-2147413790' name='CSSMERR_DL_SERVICE_NOT_AVAILABLE'/>
<enum value='-2147413711' name='CSSMERR_DL_STALE_UNIQUE_RECORD'/>
<enum value='-2147413749' name='CSSMERR_DL_UNSUPPORTED_FIELD_FORMAT'/>
<enum value='-2147413748' name='CSSMERR_DL_UNSUPPORTED_INDEX_INFO'/>
<enum value='-2147413747' name='CSSMERR_DL_UNSUPPORTED_LOCALITY'/>
<enum value='-2147413746' name='CSSMERR_DL_UNSUPPORTED_NUM_ATTRIBUTES'/>
<enum value='-2147413745' name='CSSMERR_DL_UNSUPPORTED_NUM_INDEXES'/>
<enum value='-2147413744' name='CSSMERR_DL_UNSUPPORTED_NUM_RECORDTYPES'/>
<enum value='-2147413729' name='CSSMERR_DL_UNSUPPORTED_NUM_SELECTION_PREDS'/>
<enum value='-2147413727' name='CSSMERR_DL_UNSUPPORTED_OPERATOR'/>
<enum value='-2147413731' name='CSSMERR_DL_UNSUPPORTED_QUERY'/>
<enum value='-2147413730' name='CSSMERR_DL_UNSUPPORTED_QUERY_LIMITS'/>
<enum value='-2147413743' name='CSSMERR_DL_UNSUPPORTED_RECORDTYPE'/>
<enum value='-2147413791' name='CSSMERR_DL_USER_CANCELED'/>
<enum value='-2147409657' name='CSSMERR_TP_AUTHENTICATION_FAILED'/>
<enum value='-2147409656' name='CSSMERR_TP_CERTGROUP_INCOMPLETE'/>
<enum value='-2147409655' name='CSSMERR_TP_CERTIFICATE_CANT_OPERATE'/>
<enum value='-2147409654' name='CSSMERR_TP_CERT_EXPIRED'/>
<enum value='-2147409653' name='CSSMERR_TP_CERT_NOT_VALID_YET'/>
<enum value='-2147409652' name='CSSMERR_TP_CERT_REVOKED'/>
<enum value='-2147409651' name='CSSMERR_TP_CERT_SUSPENDED'/>
<enum value='-2147409849' name='CSSMERR_TP_CRL_ALREADY_SIGNED'/>
<enum value='-2147409691' name='CSSMERR_TP_DEVICE_FAILED'/>
<enum value='-2147409692' name='CSSMERR_TP_DEVICE_RESET'/>
<enum value='-2147409910' name='CSSMERR_TP_FUNCTION_FAILED'/>
<enum value='-2147409913' name='CSSMERR_TP_FUNCTION_NOT_IMPLEMENTED'/>
<enum value='-2147409693' name='CSSMERR_TP_INSUFFICIENT_CLIENT_IDENTIFICATION'/>
<enum value='-2147409650' name='CSSMERR_TP_INSUFFICIENT_CREDENTIALS'/>
<enum value='-2147409919' name='CSSMERR_TP_INTERNAL_ERROR'/>
<enum value='-2147409649' name='CSSMERR_TP_INVALID_ACTION'/>
<enum value='-2147409648' name='CSSMERR_TP_INVALID_ACTION_DATA'/>
<enum value='-2147409646' name='CSSMERR_TP_INVALID_ANCHOR_CERT'/>
<enum value='-2147409645' name='CSSMERR_TP_INVALID_AUTHORITY'/>
<enum value='-2147409625' name='CSSMERR_TP_INVALID_CALLBACK'/>
<enum value='-2147409663' name='CSSMERR_TP_INVALID_CALLERAUTH_CONTEXT_POINTER'/>
<enum value='-2147409660' name='CSSMERR_TP_INVALID_CERTGROUP'/>
<enum value='-2147409854' name='CSSMERR_TP_INVALID_CERTGROUP_POINTER'/>
<enum value='-2147409643' name='CSSMERR_TP_INVALID_CERTIFICATE'/>
<enum value='-2147409642' name='CSSMERR_TP_INVALID_CERT_AUTHORITY'/>
<enum value='-2147409853' name='CSSMERR_TP_INVALID_CERT_POINTER'/>
<enum value='-2147409838' name='CSSMERR_TP_INVALID_CL_HANDLE'/>
<enum value='-2147409856' name='CSSMERR_TP_INVALID_CONTEXT_HANDLE'/>
<enum value='-2147409638' name='CSSMERR_TP_INVALID_CRL'/>
<enum value='-2147409659' name='CSSMERR_TP_INVALID_CRLGROUP'/>
<enum value='-2147409658' name='CSSMERR_TP_INVALID_CRLGROUP_POINTER'/>
<enum value='-2147409641' name='CSSMERR_TP_INVALID_CRL_AUTHORITY'/>
<enum value='-2147409640' name='CSSMERR_TP_INVALID_CRL_ENCODING'/>
<enum value='-2147409852' name='CSSMERR_TP_INVALID_CRL_POINTER'/>
<enum value='-2147409639' name='CSSMERR_TP_INVALID_CRL_TYPE'/>
<enum value='-2147409840' name='CSSMERR_TP_INVALID_CSP_HANDLE'/>
<enum value='-2147409850' name='CSSMERR_TP_INVALID_DATA'/>
<enum value='-2147409846' name='CSSMERR_TP_INVALID_DB_HANDLE'/>
<enum value='-2147409844' name='CSSMERR_TP_INVALID_DB_LIST'/>
<enum value='-2147409843' name='CSSMERR_TP_INVALID_DB_LIST_POINTER'/>
<enum value='-2147409839' name='CSSMERR_TP_INVALID_DL_HANDLE'/>
<enum value='-2147409851' name='CSSMERR_TP_INVALID_FIELD_POINTER'/>
<enum value='-2147409637' name='CSSMERR_TP_INVALID_FORM_TYPE'/>
<enum value='-2147409636' name='CSSMERR_TP_INVALID_ID'/>
<enum value='-2147409635' name='CSSMERR_TP_INVALID_IDENTIFIER'/>
<enum value='-2147409662' name='CSSMERR_TP_INVALID_IDENTIFIER_POINTER'/>
<enum value='-2147409634' name='CSSMERR_TP_INVALID_INDEX'/>
<enum value='-2147409915' name='CSSMERR_TP_INVALID_INPUT_POINTER'/>
<enum value='-2147409661' name='CSSMERR_TP_INVALID_KEYCACHE_HANDLE'/>
<enum value='-2147409633' name='CSSMERR_TP_INVALID_NAME'/>
<enum value='-2147409833' name='CSSMERR_TP_INVALID_NETWORK_ADDR'/>
<enum value='-2147409848' name='CSSMERR_TP_INVALID_NUMBER_OF_FIELDS'/>
<enum value='-2147409914' name='CSSMERR_TP_INVALID_OUTPUT_POINTER'/>
<enum value='-2147409834' name='CSSMERR_TP_INVALID_PASSTHROUGH_ID'/>
<enum value='-2147409916' name='CSSMERR_TP_INVALID_POINTER'/>
<enum value='-2147409632' name='CSSMERR_TP_INVALID_POLICY_IDENTIFIERS'/>
<enum value='-2147409630' name='CSSMERR_TP_INVALID_REASON'/>
<enum value='-2147409629' name='CSSMERR_TP_INVALID_REQUEST_INPUTS'/>
<enum value='-2147409628' name='CSSMERR_TP_INVALID_RESPONSE_VECTOR'/>
<enum value='-2147409627' name='CSSMERR_TP_INVALID_SIGNATURE'/>
<enum value='-2147409626' name='CSSMERR_TP_INVALID_STOP_ON_POLICY'/>
<enum value='-2147409631' name='CSSMERR_TP_INVALID_TIMESTRING'/>
<enum value='-2147409624' name='CSSMERR_TP_INVALID_TUPLE'/>
<enum value='-2147409614' name='CSSMERR_TP_INVALID_TUPLEGROUP'/>
<enum value='-2147409615' name='CSSMERR_TP_INVALID_TUPLEGROUP_POINTER'/>
<enum value='-2147409690' name='CSSMERR_TP_IN_DARK_WAKE'/>
<enum value='-2147409917' name='CSSMERR_TP_MDS_ERROR'/>
<enum value='-2147409918' name='CSSMERR_TP_MEMORY_ERROR'/>
<enum value='-2147409623' name='CSSMERR_TP_NOT_SIGNER'/>
<enum value='-2147409622' name='CSSMERR_TP_NOT_TRUSTED'/>
<enum value='-2147409621' name='CSSMERR_TP_NO_DEFAULT_AUTHORITY'/>
<enum value='-2147409696' name='CSSMERR_TP_NO_USER_INTERACTION'/>
<enum value='-2147409911' name='CSSMERR_TP_OS_ACCESS_DENIED'/>
<enum value='-2147409620' name='CSSMERR_TP_REJECTED_FORM'/>
<enum value='-2147409619' name='CSSMERR_TP_REQUEST_LOST'/>
<enum value='-2147409618' name='CSSMERR_TP_REQUEST_REJECTED'/>
<enum value='-2147409912' name='CSSMERR_TP_SELF_CHECK_FAILED'/>
<enum value='-2147409694' name='CSSMERR_TP_SERVICE_NOT_AVAILABLE'/>
<enum value='-2147409842' name='CSSMERR_TP_UNKNOWN_FORMAT'/>
<enum value='-2147409841' name='CSSMERR_TP_UNKNOWN_TAG'/>
<enum value='-2147409617' name='CSSMERR_TP_UNSUPPORTED_ADDR_TYPE'/>
<enum value='-2147409616' name='CSSMERR_TP_UNSUPPORTED_SERVICE'/>
<enum value='-2147409695' name='CSSMERR_TP_USER_CANCELED'/>
<enum value='-2147409847' name='CSSMERR_TP_VERIFICATION_FAILURE'/>
<enum value='-2147409644' name='CSSMERR_TP_VERIFY_ACTION_FAILED'/>
<enum value='1' name='CSSM_ACL_AUTHORIZATION_ANY'/>
<enum value='65536' name='CSSM_ACL_AUTHORIZATION_CHANGE_ACL'/>
<enum value='65537' name='CSSM_ACL_AUTHORIZATION_CHANGE_OWNER'/>
<enum value='22' name='CSSM_ACL_AUTHORIZATION_DBS_CREATE'/>
<enum value='23' name='CSSM_ACL_AUTHORIZATION_DBS_DELETE'/>
<enum value='17' name='CSSM_ACL_AUTHORIZATION_DB_DELETE'/>
<enum value='19' name='CSSM_ACL_AUTHORIZATION_DB_INSERT'/>
<enum value='20' name='CSSM_ACL_AUTHORIZATION_DB_MODIFY'/>
<enum value='21' name='CSSM_ACL_AUTHORIZATION_DB_READ'/>
<enum value='24' name='CSSM_ACL_AUTHORIZATION_DECRYPT'/>
<enum value='25' name='CSSM_ACL_AUTHORIZATION_DELETE'/>
<enum value='28' name='CSSM_ACL_AUTHORIZATION_DERIVE'/>
<enum value='35' name='CSSM_ACL_AUTHORIZATION_ENCRYPT'/>
<enum value='37' name='CSSM_ACL_AUTHORIZATION_EXPORT_CLEAR'/>
<enum value='38' name='CSSM_ACL_AUTHORIZATION_EXPORT_WRAPPED'/>
<enum value='41' name='CSSM_ACL_AUTHORIZATION_GENKEY'/>
<enum value='47' name='CSSM_ACL_AUTHORIZATION_IMPORT_CLEAR'/>
<enum value='48' name='CSSM_ACL_AUTHORIZATION_IMPORT_WRAPPED'/>
<enum value='57' name='CSSM_ACL_AUTHORIZATION_LOGIN'/>
<enum value='59' name='CSSM_ACL_AUTHORIZATION_MAC'/>
<enum value='16842752' name='CSSM_ACL_AUTHORIZATION_PREAUTH_BASE'/>
<enum value='16908288' name='CSSM_ACL_AUTHORIZATION_PREAUTH_END'/>
<enum value='115' name='CSSM_ACL_AUTHORIZATION_SIGN'/>
<enum value='65536' name='CSSM_ACL_AUTHORIZATION_TAG_VENDOR_DEFINED_START'/>
<enum value='0' name='CSSM_ACL_CODE_SIGNATURE_INVALID'/>
<enum value='1' name='CSSM_ACL_CODE_SIGNATURE_OSX'/>
<enum value='1' name='CSSM_ACL_EDIT_MODE_ADD'/>
<enum value='2' name='CSSM_ACL_EDIT_MODE_DELETE'/>
<enum value='3' name='CSSM_ACL_EDIT_MODE_REPLACE'/>
<enum value='257' name='CSSM_ACL_KEYCHAIN_PROMPT_CURRENT_VERSION'/>
<enum value='64' name='CSSM_ACL_KEYCHAIN_PROMPT_INVALID'/>
<enum value='128' name='CSSM_ACL_KEYCHAIN_PROMPT_INVALID_ACT'/>
<enum value='1' name='CSSM_ACL_KEYCHAIN_PROMPT_REQUIRE_PASSPHRASE'/>
<enum value='16' name='CSSM_ACL_KEYCHAIN_PROMPT_UNSIGNED'/>
<enum value='32' name='CSSM_ACL_KEYCHAIN_PROMPT_UNSIGNED_ACT'/>
<enum value='3' name='CSSM_ACL_MATCH_BITS'/>
<enum value='2' name='CSSM_ACL_MATCH_GID'/>
<enum value='256' name='CSSM_ACL_MATCH_HONOR_ROOT'/>
<enum value='1' name='CSSM_ACL_MATCH_UID'/>
<enum value='2147483648' name='CSSM_ACL_PREAUTH_TRACKING_AUTHORIZED'/>
<enum value='0' name='CSSM_ACL_PREAUTH_TRACKING_BLOCKED'/>
<enum value='255' name='CSSM_ACL_PREAUTH_TRACKING_COUNT_MASK'/>
<enum value='1073741824' name='CSSM_ACL_PREAUTH_TRACKING_UNKNOWN'/>
<enum value='257' name='CSSM_ACL_PROCESS_SELECTOR_CURRENT_VERSION'/>
<enum value='1' name='CSSM_ACL_SUBJECT_TYPE_ANY'/>
<enum value='65547' name='CSSM_ACL_SUBJECT_TYPE_ASYMMETRIC_KEY'/>
<enum value='8' name='CSSM_ACL_SUBJECT_TYPE_BIOMETRIC'/>
<enum value='116' name='CSSM_ACL_SUBJECT_TYPE_CODE_SIGNATURE'/>
<enum value='12' name='CSSM_ACL_SUBJECT_TYPE_COMMENT'/>
<enum value='78' name='CSSM_ACL_SUBJECT_TYPE_EXT_PAM_NAME'/>
<enum value='44' name='CSSM_ACL_SUBJECT_TYPE_HASHED_SUBJECT'/>
<enum value='65536' name='CSSM_ACL_SUBJECT_TYPE_KEYCHAIN_PROMPT'/>
<enum value='58' name='CSSM_ACL_SUBJECT_TYPE_LOGIN_NAME'/>
<enum value='79' name='CSSM_ACL_SUBJECT_TYPE_PASSWORD'/>
<enum value='65545' name='CSSM_ACL_SUBJECT_TYPE_PREAUTH'/>
<enum value='65546' name='CSSM_ACL_SUBJECT_TYPE_PREAUTH_SOURCE'/>
<enum value='65539' name='CSSM_ACL_SUBJECT_TYPE_PROCESS'/>
<enum value='83' name='CSSM_ACL_SUBJECT_TYPE_PROMPTED_BIOMETRIC'/>
<enum value='84' name='CSSM_ACL_SUBJECT_TYPE_PROMPTED_PASSWORD'/>
<enum value='86' name='CSSM_ACL_SUBJECT_TYPE_PROTECTED_BIOMETRIC'/>
<enum value='87' name='CSSM_ACL_SUBJECT_TYPE_PROTECTED_PASSWORD'/>
<enum value='89' name='CSSM_ACL_SUBJECT_TYPE_PUBLIC_KEY'/>
<enum value='65541' name='CSSM_ACL_SUBJECT_TYPE_SYMMETRIC_KEY'/>
<enum value='123' name='CSSM_ACL_SUBJECT_TYPE_THRESHOLD'/>
<enum value='-2147405568' name='CSSM_AC_BASE_AC_ERROR'/>
<enum value='-2147405824' name='CSSM_AC_BASE_ERROR'/>
<enum value='-2147404800' name='CSSM_AC_PRIVATE_ERROR'/>
<enum value='1' name='CSSM_ADDR_CUSTOM'/>
<enum value='4' name='CSSM_ADDR_NAME'/>
<enum value='0' name='CSSM_ADDR_NONE'/>
<enum value='3' name='CSSM_ADDR_SOCKADDR'/>
<enum value='2' name='CSSM_ADDR_URL'/>
<enum value='8' name='CSSM_ALGCLASS_ASYMMETRIC'/>
<enum value='1' name='CSSM_ALGCLASS_CUSTOM'/>
<enum value='10' name='CSSM_ALGCLASS_DERIVEKEY'/>
<enum value='4' name='CSSM_ALGCLASS_DIGEST'/>
<enum value='9' name='CSSM_ALGCLASS_KEYGEN'/>
<enum value='7' name='CSSM_ALGCLASS_MAC'/>
<enum value='0' name='CSSM_ALGCLASS_NONE'/>
<enum value='5' name='CSSM_ALGCLASS_RANDOMGEN'/>
<enum value='2' name='CSSM_ALGCLASS_SIGNATURE'/>
<enum value='3' name='CSSM_ALGCLASS_SYMMETRIC'/>
<enum value='6' name='CSSM_ALGCLASS_UNIQUEGEN'/>
<enum value='77' name='CSSM_ALGID_3DES'/>
<enum value='20' name='CSSM_ALGID_3DES_1KEY'/>
<enum value='19' name='CSSM_ALGID_3DES_1KEY_EEE'/>
<enum value='18' name='CSSM_ALGID_3DES_2KEY'/>
<enum value='18' name='CSSM_ALGID_3DES_2KEY_EDE'/>
<enum value='21' name='CSSM_ALGID_3DES_2KEY_EEE'/>
<enum value='17' name='CSSM_ALGID_3DES_3KEY'/>
<enum value='17' name='CSSM_ALGID_3DES_3KEY_EDE'/>
<enum value='20' name='CSSM_ALGID_3DES_3KEY_EEE'/>
<enum value='2147483649' name='CSSM_ALGID_AES'/>
<enum value='2147483648' name='CSSM_ALGID_APPLE_YARROW'/>
<enum value='2147483655' name='CSSM_ALGID_ASC'/>
<enum value='72' name='CSSM_ALGID_BATON'/>
<enum value='28' name='CSSM_ALGID_BLOWFISH'/>
<enum value='27' name='CSSM_ALGID_CAST'/>
<enum value='53' name='CSSM_ALGID_CAST3'/>
<enum value='54' name='CSSM_ALGID_CAST5'/>
<enum value='52' name='CSSM_ALGID_CDMF'/>
<enum value='41' name='CSSM_ALGID_CRAB'/>
<enum value='1' name='CSSM_ALGID_CUSTOM'/>
<enum value='58' name='CSSM_ALGID_ConcatBaseAndData'/>
<enum value='56' name='CSSM_ALGID_ConcatBaseAndKey'/>
<enum value='59' name='CSSM_ALGID_ConcatDataAndBase'/>
<enum value='57' name='CSSM_ALGID_ConcatKeyAndBase'/>
<enum value='14' name='CSSM_ALGID_DES'/>
<enum value='50' name='CSSM_ALGID_DESRandom'/>
<enum value='15' name='CSSM_ALGID_DESX'/>
<enum value='2' name='CSSM_ALGID_DH'/>
<enum value='43' name='CSSM_ALGID_DSA'/>
<enum value='83' name='CSSM_ALGID_DSA_BSAFE'/>
<enum value='90' name='CSSM_ALGID_ECAES'/>
<enum value='93' name='CSSM_ALGID_ECC'/>
<enum value='84' name='CSSM_ALGID_ECDH'/>
<enum value='2147483677' name='CSSM_ALGID_ECDH_X963_KDF'/>
<enum value='73' name='CSSM_ALGID_ECDSA'/>
<enum value='2147483676' name='CSSM_ALGID_ECDSA_SPECIFIED'/>
<enum value='89' name='CSSM_ALGID_ECES'/>
<enum value='85' name='CSSM_ALGID_ECMQV'/>
<enum value='87' name='CSSM_ALGID_ECNRA'/>
<enum value='2147483665' name='CSSM_ALGID_ENTROPY_DEFAULT'/>
<enum value='46' name='CSSM_ALGID_ElGamal'/>
<enum value='61' name='CSSM_ALGID_ExtractFromKey'/>
<enum value='76' name='CSSM_ALGID_FASTHASH'/>
<enum value='32' name='CSSM_ALGID_FEAL'/>
<enum value='2147483650' name='CSSM_ALGID_FEE'/>
<enum value='2147483653' name='CSSM_ALGID_FEED'/>
<enum value='2147483654' name='CSSM_ALGID_FEEDEXP'/>
<enum value='2147483651' name='CSSM_ALGID_FEE_MD5'/>
<enum value='2147483652' name='CSSM_ALGID_FEE_SHA1'/>
<enum value='92' name='CSSM_ALGID_FIPS186Random'/>
<enum value='80' name='CSSM_ALGID_FortezzaTimestamp'/>
<enum value='39' name='CSSM_ALGID_GOST'/>
<enum value='55' name='CSSM_ALGID_GenericSecret'/>
<enum value='10' name='CSSM_ALGID_HAVAL'/>
<enum value='98' name='CSSM_ALGID_HAVAL3'/>
<enum value='99' name='CSSM_ALGID_HAVAL4'/>
<enum value='100' name='CSSM_ALGID_HAVAL5'/>
<enum value='12' name='CSSM_ALGID_IBCHASH'/>
<enum value='22' name='CSSM_ALGID_IDEA'/>
<enum value='96' name='CSSM_ALGID_IntelPlatformRandom'/>
<enum value='75' name='CSSM_ALGID_JUNIPER'/>
<enum value='4' name='CSSM_ALGID_KEA'/>
<enum value='2147483657' name='CSSM_ALGID_KEYCHAIN_KEY'/>
<enum value='37' name='CSSM_ALGID_KHAFRE'/>
<enum value='36' name='CSSM_ALGID_KHUFU'/>
<enum value='2147483647' name='CSSM_ALGID_LAST'/>
<enum value='35' name='CSSM_ALGID_LOKI'/>
<enum value='30' name='CSSM_ALGID_LUCIFER'/>
<enum value='31' name='CSSM_ALGID_MADRYGA'/>
<enum value='74' name='CSSM_ALGID_MAYFLY'/>
<enum value='5' name='CSSM_ALGID_MD2'/>
<enum value='47' name='CSSM_ALGID_MD2Random'/>
<enum value='45' name='CSSM_ALGID_MD2WithRSA'/>
<enum value='6' name='CSSM_ALGID_MD4'/>
<enum value='7' name='CSSM_ALGID_MD5'/>
<enum value='102' name='CSSM_ALGID_MD5HMAC'/>
<enum value='48' name='CSSM_ALGID_MD5Random'/>
<enum value='44' name='CSSM_ALGID_MD5WithRSA'/>
<enum value='38' name='CSSM_ALGID_MMB'/>
<enum value='94' name='CSSM_ALGID_MQV'/>
<enum value='9' name='CSSM_ALGID_NHASH'/>
<enum value='0' name='CSSM_ALGID_NONE'/>
<enum value='95' name='CSSM_ALGID_NRA'/>
<enum value='2147483671' name='CSSM_ALGID_OPENSSH1'/>
<enum value='2147483661' name='CSSM_ALGID_PBE_OPENSSL_MD5'/>
<enum value='3' name='CSSM_ALGID_PH'/>
<enum value='2147483658' name='CSSM_ALGID_PKCS12_PBE_ENCR'/>
<enum value='2147483659' name='CSSM_ALGID_PKCS12_PBE_MAC'/>
<enum value='86' name='CSSM_ALGID_PKCS12_SHA1_PBE'/>
<enum value='68' name='CSSM_ALGID_PKCS5_PBKDF1_MD2'/>
<enum value='67' name='CSSM_ALGID_PKCS5_PBKDF1_MD5'/>
<enum value='69' name='CSSM_ALGID_PKCS5_PBKDF1_SHA1'/>
<enum value='103' name='CSSM_ALGID_PKCS5_PBKDF2'/>
<enum value='23' name='CSSM_ALGID_RC2'/>
<enum value='25' name='CSSM_ALGID_RC4'/>
<enum value='24' name='CSSM_ALGID_RC5'/>
<enum value='16' name='CSSM_ALGID_RDES'/>
<enum value='33' name='CSSM_ALGID_REDOC'/>
<enum value='34' name='CSSM_ALGID_REDOC3'/>
<enum value='13' name='CSSM_ALGID_RIPEMAC'/>
<enum value='11' name='CSSM_ALGID_RIPEMD'/>
<enum value='42' name='CSSM_ALGID_RSA'/>
<enum value='104' name='CSSM_ALGID_RUNNING_COUNTER'/>
<enum value='40' name='CSSM_ALGID_SAFER'/>
<enum value='26' name='CSSM_ALGID_SEAL'/>
<enum value='2147483660' name='CSSM_ALGID_SECURE_PASSPHRASE'/>
<enum value='8' name='CSSM_ALGID_SHA1'/>
<enum value='91' name='CSSM_ALGID_SHA1HMAC'/>
<enum value='2147483656' name='CSSM_ALGID_SHA1HMAC_LEGACY'/>
<enum value='81' name='CSSM_ALGID_SHA1WithDSA'/>
<enum value='82' name='CSSM_ALGID_SHA1WithECDSA'/>
<enum value='88' name='CSSM_ALGID_SHA1WithECNRA'/>
<enum value='51' name='CSSM_ALGID_SHA1WithRSA'/>
<enum value='2147483666' name='CSSM_ALGID_SHA224'/>
<enum value='2147483672' name='CSSM_ALGID_SHA224WithECDSA'/>
<enum value='2147483667' name='CSSM_ALGID_SHA224WithRSA'/>
<enum value='2147483662' name='CSSM_ALGID_SHA256'/>
<enum value='2147483673' name='CSSM_ALGID_SHA256WithECDSA'/>
<enum value='2147483668' name='CSSM_ALGID_SHA256WithRSA'/>
<enum value='2147483663' name='CSSM_ALGID_SHA384'/>
<enum value='2147483674' name='CSSM_ALGID_SHA384WithECDSA'/>
<enum value='2147483669' name='CSSM_ALGID_SHA384WithRSA'/>
<enum value='2147483664' name='CSSM_ALGID_SHA512'/>
<enum value='2147483675' name='CSSM_ALGID_SHA512WithECDSA'/>
<enum value='2147483670' name='CSSM_ALGID_SHA512WithRSA'/>
<enum value='49' name='CSSM_ALGID_SHARandom'/>
<enum value='29' name='CSSM_ALGID_SKIPJACK'/>
<enum value='64' name='CSSM_ALGID_SSL3KeyAndMacDerive'/>
<enum value='78' name='CSSM_ALGID_SSL3MD5'/>
<enum value='65' name='CSSM_ALGID_SSL3MD5_MAC'/>
<enum value='63' name='CSSM_ALGID_SSL3MasterDerive'/>
<enum value='62' name='CSSM_ALGID_SSL3PreMasterGen'/>
<enum value='79' name='CSSM_ALGID_SSL3SHA1'/>
<enum value='66' name='CSSM_ALGID_SSL3SHA1_MAC'/>
<enum value='101' name='CSSM_ALGID_TIGER'/>
<enum value='97' name='CSSM_ALGID_UTC'/>
<enum value='2147483648' name='CSSM_ALGID_VENDOR_DEFINED'/>
<enum value='70' name='CSSM_ALGID_WrapLynks'/>
<enum value='71' name='CSSM_ALGID_WrapSET_OAEP'/>
<enum value='60' name='CSSM_ALGID_XORBaseAndData'/>
<enum value='2147483678' name='CSSM_ALGID__FIRST_UNUSED'/>
<enum value='14' name='CSSM_ALGMODE_BC'/>
<enum value='4' name='CSSM_ALGMODE_CBC'/>
<enum value='36' name='CSSM_ALGMODE_CBC128'/>
<enum value='25' name='CSSM_ALGMODE_CBC64'/>
<enum value='16' name='CSSM_ALGMODE_CBCC'/>
<enum value='20' name='CSSM_ALGMODE_CBCPD'/>
<enum value='6' name='CSSM_ALGMODE_CBCPadIV8'/>
<enum value='5' name='CSSM_ALGMODE_CBC_IV8'/>
<enum value='7' name='CSSM_ALGMODE_CFB'/>
<enum value='29' name='CSSM_ALGMODE_CFB16'/>
<enum value='28' name='CSSM_ALGMODE_CFB32'/>
<enum value='30' name='CSSM_ALGMODE_CFB8'/>
<enum value='9' name='CSSM_ALGMODE_CFBPadIV8'/>
<enum value='8' name='CSSM_ALGMODE_CFB_IV8'/>
<enum value='13' name='CSSM_ALGMODE_COUNTER'/>
<enum value='1' name='CSSM_ALGMODE_CUSTOM'/>
<enum value='2' name='CSSM_ALGMODE_ECB'/>
<enum value='34' name='CSSM_ALGMODE_ECB128'/>
<enum value='24' name='CSSM_ALGMODE_ECB64'/>
<enum value='35' name='CSSM_ALGMODE_ECB96'/>
<enum value='3' name='CSSM_ALGMODE_ECBPad'/>
<enum value='41' name='CSSM_ALGMODE_ISO_9796'/>
<enum value='2147483647' name='CSSM_ALGMODE_LAST'/>
<enum value='0' name='CSSM_ALGMODE_NONE'/>
<enum value='37' name='CSSM_ALGMODE_OAEP_HASH'/>
<enum value='10' name='CSSM_ALGMODE_OFB'/>
<enum value='26' name='CSSM_ALGMODE_OFB64'/>
<enum value='17' name='CSSM_ALGMODE_OFBNLF'/>
<enum value='12' name='CSSM_ALGMODE_OFBPadIV8'/>
<enum value='11' name='CSSM_ALGMODE_OFB_IV8'/>
<enum value='18' name='CSSM_ALGMODE_PBC'/>
<enum value='15' name='CSSM_ALGMODE_PCBC'/>
<enum value='19' name='CSSM_ALGMODE_PFB'/>
<enum value='39' name='CSSM_ALGMODE_PKCS1_EME_OAEP'/>
<enum value='38' name='CSSM_ALGMODE_PKCS1_EME_V15'/>
<enum value='40' name='CSSM_ALGMODE_PKCS1_EMSA_V15'/>
<enum value='22' name='CSSM_ALGMODE_PRIVATE_KEY'/>
<enum value='32' name='CSSM_ALGMODE_PRIVATE_WRAP'/>
<enum value='21' name='CSSM_ALGMODE_PUBLIC_KEY'/>
<enum value='33' name='CSSM_ALGMODE_RELAYX'/>
<enum value='23' name='CSSM_ALGMODE_SHUFFLE'/>
<enum value='2147483648' name='CSSM_ALGMODE_VENDOR_DEFINED'/>
<enum value='31' name='CSSM_ALGMODE_WRAP'/>
<enum value='42' name='CSSM_ALGMODE_X9_31'/>
<enum value='5' name='CSSM_APPLECSPDL_DB_CHANGE_PASSWORD'/>
<enum value='6' name='CSSM_APPLECSPDL_DB_GET_HANDLE'/>
<enum value='2' name='CSSM_APPLECSPDL_DB_GET_SETTINGS'/>
<enum value='4' name='CSSM_APPLECSPDL_DB_IS_LOCKED'/>
<enum value='0' name='CSSM_APPLECSPDL_DB_LOCK'/>
<enum value='3' name='CSSM_APPLECSPDL_DB_SET_SETTINGS'/>
<enum value='1' name='CSSM_APPLECSPDL_DB_UNLOCK'/>
<enum value='256' name='CSSM_APPLECSP_KEYDIGEST'/>
<enum value='1' name='CSSM_APPLEDL_OPEN_PARAMETERS_VERSION'/>
<enum value='1' name='CSSM_APPLEFILEDL_COMMIT'/>
<enum value='2' name='CSSM_APPLEFILEDL_ROLLBACK'/>
<enum value='0' name='CSSM_APPLEFILEDL_TOGGLE_AUTOCOMMIT'/>
<enum value='7' name='CSSM_APPLESCPDL_CSP_GET_KEYHANDLE'/>
<enum value='0' name='CSSM_APPLEX509CL_OBTAIN_CSR'/>
<enum value='1' name='CSSM_APPLEX509CL_VERIFY_CSR'/>
<enum value='10' name='CSSM_APPLE_PRIVATE_CSPDL_CODE_10'/>
<enum value='11' name='CSSM_APPLE_PRIVATE_CSPDL_CODE_11'/>
<enum value='12' name='CSSM_APPLE_PRIVATE_CSPDL_CODE_12'/>
<enum value='13' name='CSSM_APPLE_PRIVATE_CSPDL_CODE_13'/>
<enum value='14' name='CSSM_APPLE_PRIVATE_CSPDL_CODE_14'/>
<enum value='15' name='CSSM_APPLE_PRIVATE_CSPDL_CODE_15'/>
<enum value='16' name='CSSM_APPLE_PRIVATE_CSPDL_CODE_16'/>
<enum value='8' name='CSSM_APPLE_PRIVATE_CSPDL_CODE_8'/>
<enum value='9' name='CSSM_APPLE_PRIVATE_CSPDL_CODE_9'/>
<enum value='0' name='CSSM_APPLE_TP_ACTION_VERSION'/>
<enum value='0' name='CSSM_APPLE_TP_CRL_OPTS_VERSION'/>
<enum value='0' name='CSSM_APPLE_TP_SMIME_OPTS_VERSION'/>
<enum value='1' name='CSSM_APPLE_TP_SSL_CLIENT'/>
<enum value='1' name='CSSM_APPLE_TP_SSL_OPTS_VERSION'/>
<enum value='1' name='CSSM_APPLE_UNLOCK_TYPE_KEY_DIRECT'/>
<enum value='2' name='CSSM_APPLE_UNLOCK_TYPE_WRAPPED_PRIVATE'/>
<enum value='5' name='CSSM_ASC_OPTIMIZE_ASCII'/>
<enum value='0' name='CSSM_ASC_OPTIMIZE_DEFAULT'/>
<enum value='2' name='CSSM_ASC_OPTIMIZE_SECURITY'/>
<enum value='1' name='CSSM_ASC_OPTIMIZE_SIZE'/>
<enum value='3' name='CSSM_ASC_OPTIMIZE_TIME'/>
<enum value='4' name='CSSM_ASC_OPTIMIZE_TIME_SIZE'/>
<enum value='1' name='CSSM_ATTACH_READ_ONLY'/>
<enum value='2147483684' name='CSSM_ATTRIBUTE_ACCESS_CREDENTIALS'/>
<enum value='545259527' name='CSSM_ATTRIBUTE_ALERT_TITLE'/>
<enum value='268435485' name='CSSM_ATTRIBUTE_ALG_ID'/>
<enum value='536870928' name='CSSM_ATTRIBUTE_ALG_PARAMS'/>
<enum value='276824067' name='CSSM_ATTRIBUTE_ASC_OPTIMIZATION'/>
<enum value='536870939' name='CSSM_ATTRIBUTE_BASE'/>
<enum value='268435468' name='CSSM_ATTRIBUTE_BLOCK_SIZE'/>
<enum value='268435490' name='CSSM_ATTRIBUTE_CSP_HANDLE'/>
<enum value='536870913' name='CSSM_ATTRIBUTE_CUSTOM'/>
<enum value='2147483648' name='CSSM_ATTRIBUTE_DATA_ACCESS_CREDENTIALS'/>
<enum value='805306368' name='CSSM_ATTRIBUTE_DATA_CRYPTO_DATA'/>
<enum value='536870912' name='CSSM_ATTRIBUTE_DATA_CSSM_DATA'/>
<enum value='1610612736' name='CSSM_ATTRIBUTE_DATA_DATE'/>
<enum value='33554432' name='CSSM_ATTRIBUTE_DATA_DL_DB_HANDLE'/>
<enum value='1073741824' name='CSSM_ATTRIBUTE_DATA_KEY'/>
<enum value='50331648' name='CSSM_ATTRIBUTE_DATA_KR_PROFILE'/>
<enum value='0' name='CSSM_ATTRIBUTE_DATA_NONE'/>
<enum value='1879048192' name='CSSM_ATTRIBUTE_DATA_RANGE'/>
<enum value='1342177280' name='CSSM_ATTRIBUTE_DATA_STRING'/>
<enum value='268435456' name='CSSM_ATTRIBUTE_DATA_UINT32'/>
<enum value='16777216' name='CSSM_ATTRIBUTE_DATA_VERSION'/>
<enum value='1342177282' name='CSSM_ATTRIBUTE_DESCRIPTION'/>
<enum value='33554467' name='CSSM_ATTRIBUTE_DL_DB_HANDLE'/>
<enum value='268435476' name='CSSM_ATTRIBUTE_EFFECTIVE_BITS'/>
<enum value='1610612758' name='CSSM_ATTRIBUTE_END_DATE'/>
<enum value='276824066' name='CSSM_ATTRIBUTE_FEE_CURVE_TYPE'/>
<enum value='276824065' name='CSSM_ATTRIBUTE_FEE_PRIME_TYPE'/>
<enum value='536870916' name='CSSM_ATTRIBUTE_INIT_VECTOR'/>
<enum value='268435486' name='CSSM_ATTRIBUTE_ITERATION_COUNT'/>
<enum value='268435471' name='CSSM_ATTRIBUTE_IV_SIZE'/>
<enum value='1073741827' name='CSSM_ATTRIBUTE_KEY'/>
<enum value='268435480' name='CSSM_ATTRIBUTE_KEYATTR'/>
<enum value='268435479' name='CSSM_ATTRIBUTE_KEYUSAGE'/>
<enum value='268435466' name='CSSM_ATTRIBUTE_KEY_LENGTH'/>
<enum value='1879048203' name='CSSM_ATTRIBUTE_KEY_LENGTH_RANGE'/>
<enum value='268435474' name='CSSM_ATTRIBUTE_KEY_TYPE'/>
<enum value='50331680' name='CSSM_ATTRIBUTE_KRPROFILE_LOCAL'/>
<enum value='50331681' name='CSSM_ATTRIBUTE_KRPROFILE_REMOTE'/>
<enum value='536870929' name='CSSM_ATTRIBUTE_LABEL'/>
<enum value='268435475' name='CSSM_ATTRIBUTE_MODE'/>
<enum value='0' name='CSSM_ATTRIBUTE_NONE'/>
<enum value='268435469' name='CSSM_ATTRIBUTE_OUTPUT_SIZE'/>
<enum value='268435462' name='CSSM_ATTRIBUTE_PADDING'/>
<enum value='1082130437' name='CSSM_ATTRIBUTE_PARAM_KEY'/>
<enum value='805306377' name='CSSM_ATTRIBUTE_PASSPHRASE'/>
<enum value='536870938' name='CSSM_ATTRIBUTE_PRIME'/>
<enum value='268435494' name='CSSM_ATTRIBUTE_PRIVATE_KEY_FORMAT'/>
<enum value='545259526' name='CSSM_ATTRIBUTE_PROMPT'/>
<enum value='1082130432' name='CSSM_ATTRIBUTE_PUBLIC_KEY'/>
<enum value='268435493' name='CSSM_ATTRIBUTE_PUBLIC_KEY_FORMAT'/>
<enum value='536870919' name='CSSM_ATTRIBUTE_RANDOM'/>
<enum value='268435470' name='CSSM_ATTRIBUTE_ROUNDS'/>
<enum value='1879048223' name='CSSM_ATTRIBUTE_ROUNDS_RANGE'/>
<enum value='276824068' name='CSSM_ATTRIBUTE_RSA_BLINDING'/>
<enum value='536870917' name='CSSM_ATTRIBUTE_SALT'/>
<enum value='805306376' name='CSSM_ATTRIBUTE_SEED'/>
<enum value='1610612757' name='CSSM_ATTRIBUTE_START_DATE'/>
<enum value='536870940' name='CSSM_ATTRIBUTE_SUBPRIME'/>
<enum value='268435495' name='CSSM_ATTRIBUTE_SYMMETRIC_KEY_FORMAT'/>
<enum value='4278190080' name='CSSM_ATTRIBUTE_TYPE_MASK'/>
<enum value='8388608' name='CSSM_ATTRIBUTE_VENDOR_DEFINED'/>
<enum value='276824072' name='CSSM_ATTRIBUTE_VERIFY_PASSPHRASE'/>
<enum value='16777241' name='CSSM_ATTRIBUTE_VERSION'/>
<enum value='268435496' name='CSSM_ATTRIBUTE_WRAPPED_KEY_FORMAT'/>
<enum value='-2147418112' name='CSSM_BASE_ERROR'/>
<enum value='3' name='CSSM_CERTGROUP_CERT_PAIR'/>
<enum value='0' name='CSSM_CERTGROUP_DATA'/>
<enum value='1' name='CSSM_CERTGROUP_ENCODED_CERT'/>
<enum value='2' name='CSSM_CERTGROUP_PARSED_CERT'/>
<enum value='12' name='CSSM_CERT_ACL_ENTRY'/>
<enum value='1' name='CSSM_CERT_BUNDLE_CUSTOM'/>
<enum value='2' name='CSSM_CERT_BUNDLE_ENCODING_BER'/>
<enum value='1' name='CSSM_CERT_BUNDLE_ENCODING_CUSTOM'/>
<enum value='3' name='CSSM_CERT_BUNDLE_ENCODING_DER'/>
<enum value='5' name='CSSM_CERT_BUNDLE_ENCODING_PGP'/>
<enum value='4' name='CSSM_CERT_BUNDLE_ENCODING_SEXPR'/>
<enum value='0' name='CSSM_CERT_BUNDLE_ENCODING_UNKNOWN'/>
<enum value='32767' name='CSSM_CERT_BUNDLE_LAST'/>
<enum value='5' name='CSSM_CERT_BUNDLE_PFX'/>
<enum value='7' name='CSSM_CERT_BUNDLE_PGP_KEYRING'/>
<enum value='4' name='CSSM_CERT_BUNDLE_PKCS12'/>
<enum value='2' name='CSSM_CERT_BUNDLE_PKCS7_SIGNED_DATA'/>
<enum value='3' name='CSSM_CERT_BUNDLE_PKCS7_SIGNED_ENVELOPED_DATA'/>
<enum value='6' name='CSSM_CERT_BUNDLE_SPKI_SEQUENCE'/>
<enum value='0' name='CSSM_CERT_BUNDLE_UNKNOWN'/>
<enum value='2' name='CSSM_CERT_ENCODING_BER'/>
<enum value='1' name='CSSM_CERT_ENCODING_CUSTOM'/>
<enum value='3' name='CSSM_CERT_ENCODING_DER'/>
<enum value='32767' name='CSSM_CERT_ENCODING_LAST'/>
<enum value='32766' name='CSSM_CERT_ENCODING_MULTIPLE'/>
<enum value='4' name='CSSM_CERT_ENCODING_NDR'/>
<enum value='6' name='CSSM_CERT_ENCODING_PGP'/>
<enum value='5' name='CSSM_CERT_ENCODING_SEXPR'/>
<enum value='0' name='CSSM_CERT_ENCODING_UNKNOWN'/>
<enum value='8' name='CSSM_CERT_Intel'/>
<enum value='32767' name='CSSM_CERT_LAST'/>
<enum value='32766' name='CSSM_CERT_MULTIPLE'/>
<enum value='3' name='CSSM_CERT_PARSE_FORMAT_COMPLEX'/>
<enum value='1' name='CSSM_CERT_PARSE_FORMAT_CUSTOM'/>
<enum value='32767' name='CSSM_CERT_PARSE_FORMAT_LAST'/>
<enum value='32766' name='CSSM_CERT_PARSE_FORMAT_MULTIPLE'/>
<enum value='0' name='CSSM_CERT_PARSE_FORMAT_NONE'/>
<enum value='4' name='CSSM_CERT_PARSE_FORMAT_OID_NAMED'/>
<enum value='2' name='CSSM_CERT_PARSE_FORMAT_SEXPR'/>
<enum value='5' name='CSSM_CERT_PARSE_FORMAT_TUPLE'/>
<enum value='4' name='CSSM_CERT_PGP'/>
<enum value='6' name='CSSM_CERT_SDSIv1'/>
<enum value='5' name='CSSM_CERT_SPKI'/>
<enum value='1' name='CSSM_CERT_STATUS_EXPIRED'/>
<enum value='32' name='CSSM_CERT_STATUS_IS_FROM_NET'/>
<enum value='8' name='CSSM_CERT_STATUS_IS_IN_ANCHORS'/>
<enum value='4' name='CSSM_CERT_STATUS_IS_IN_INPUT_CERTS'/>
<enum value='16' name='CSSM_CERT_STATUS_IS_ROOT'/>
<enum value='2' name='CSSM_CERT_STATUS_NOT_VALID_YET'/>
<enum value='1024' name='CSSM_CERT_STATUS_TRUST_SETTINGS_DENY'/>
<enum value='128' name='CSSM_CERT_STATUS_TRUST_SETTINGS_FOUND_ADMIN'/>
<enum value='256' name='CSSM_CERT_STATUS_TRUST_SETTINGS_FOUND_SYSTEM'/>
<enum value='64' name='CSSM_CERT_STATUS_TRUST_SETTINGS_FOUND_USER'/>
<enum value='2048' name='CSSM_CERT_STATUS_TRUST_SETTINGS_IGNORED_ERROR'/>
<enum value='512' name='CSSM_CERT_STATUS_TRUST_SETTINGS_TRUST'/>
<enum value='11' name='CSSM_CERT_TUPLE'/>
<enum value='0' name='CSSM_CERT_UNKNOWN'/>
<enum value='10' name='CSSM_CERT_X9_ATTRIBUTE'/>
<enum value='9' name='CSSM_CERT_X_509_ATTRIBUTE'/>
<enum value='1' name='CSSM_CERT_X_509v1'/>
<enum value='2' name='CSSM_CERT_X_509v2'/>
<enum value='3' name='CSSM_CERT_X_509v3'/>
<enum value='-2147411712' name='CSSM_CL_BASE_CL_ERROR'/>
<enum value='-2147411968' name='CSSM_CL_BASE_ERROR'/>
<enum value='32768' name='CSSM_CL_CUSTOM_CERT_BUNDLE_TYPE'/>
<enum value='32768' name='CSSM_CL_CUSTOM_CERT_ENCODING'/>
<enum value='32768' name='CSSM_CL_CUSTOM_CERT_PARSE_FORMAT'/>
<enum value='32768' name='CSSM_CL_CUSTOM_CERT_TYPE'/>
<enum value='32768' name='CSSM_CL_CUSTOM_CRL_PARSE_FORMAT'/>
<enum value='-2147410944' name='CSSM_CL_PRIVATE_ERROR'/>
<enum value='1' name='CSSM_CL_TEMPLATE_INTERMEDIATE_CERT'/>
<enum value='2' name='CSSM_CL_TEMPLATE_PKIX_CERTTEMPLATE'/>
<enum value='1' name='CSSM_CONTEXT_EVENT_CREATE'/>
<enum value='2' name='CSSM_CONTEXT_EVENT_DELETE'/>
<enum value='3' name='CSSM_CONTEXT_EVENT_UPDATE'/>
<enum value='3' name='CSSM_CRLGROUP_CRL_PAIR'/>
<enum value='0' name='CSSM_CRLGROUP_DATA'/>
<enum value='1' name='CSSM_CRLGROUP_ENCODED_CRL'/>
<enum value='2' name='CSSM_CRLGROUP_PARSED_CRL'/>
<enum value='2' name='CSSM_CRL_ENCODING_BER'/>
<enum value='4' name='CSSM_CRL_ENCODING_BLOOM'/>
<enum value='1' name='CSSM_CRL_ENCODING_CUSTOM'/>
<enum value='3' name='CSSM_CRL_ENCODING_DER'/>
<enum value='32766' name='CSSM_CRL_ENCODING_MULTIPLE'/>
<enum value='5' name='CSSM_CRL_ENCODING_SEXPR'/>
<enum value='0' name='CSSM_CRL_ENCODING_UNKNOWN'/>
<enum value='3' name='CSSM_CRL_PARSE_FORMAT_COMPLEX'/>
<enum value='1' name='CSSM_CRL_PARSE_FORMAT_CUSTOM'/>
<enum value='32767' name='CSSM_CRL_PARSE_FORMAT_LAST'/>
<enum value='32766' name='CSSM_CRL_PARSE_FORMAT_MULTIPLE'/>
<enum value='0' name='CSSM_CRL_PARSE_FORMAT_NONE'/>
<enum value='4' name='CSSM_CRL_PARSE_FORMAT_OID_NAMED'/>
<enum value='2' name='CSSM_CRL_PARSE_FORMAT_SEXPR'/>
<enum value='5' name='CSSM_CRL_PARSE_FORMAT_TUPLE'/>
<enum value='32766' name='CSSM_CRL_TYPE_MULTIPLE'/>
<enum value='3' name='CSSM_CRL_TYPE_SPKI'/>
<enum value='0' name='CSSM_CRL_TYPE_UNKNOWN'/>
<enum value='1' name='CSSM_CRL_TYPE_X_509v1'/>
<enum value='2' name='CSSM_CRL_TYPE_X_509v2'/>
<enum value='-2147415808' name='CSSM_CSP_BASE_CSP_ERROR'/>
<enum value='-2147416064' name='CSSM_CSP_BASE_ERROR'/>
<enum value='2' name='CSSM_CSP_HARDWARE'/>
<enum value='3' name='CSSM_CSP_HYBRID'/>
<enum value='-2147415040' name='CSSM_CSP_PRIVATE_ERROR'/>
<enum value='2' name='CSSM_CSP_RDR_EXISTS'/>
<enum value='4' name='CSSM_CSP_RDR_HW'/>
<enum value='1' name='CSSM_CSP_RDR_TOKENPRESENT'/>
<enum value='1' name='CSSM_CSP_SOFTWARE'/>
<enum value='134217728' name='CSSM_CSP_STORES_CERTIFICATES'/>
<enum value='268435456' name='CSSM_CSP_STORES_GENERIC'/>
<enum value='16777216' name='CSSM_CSP_STORES_PRIVATE_KEYS'/>
<enum value='33554432' name='CSSM_CSP_STORES_PUBLIC_KEYS'/>
<enum value='67108864' name='CSSM_CSP_STORES_SESSION_KEYS'/>
<enum value='64' name='CSSM_CSP_TOK_CLOCK_EXISTS'/>
<enum value='4' name='CSSM_CSP_TOK_LOGIN_REQUIRED'/>
<enum value='4194304' name='CSSM_CSP_TOK_PRIVATE_KEY_PASSWORD'/>
<enum value='256' name='CSSM_CSP_TOK_PROT_AUTHENTICATION'/>
<enum value='1' name='CSSM_CSP_TOK_RNG'/>
<enum value='2097152' name='CSSM_CSP_TOK_SESSION_KEY_PASSWORD'/>
<enum value='1048576' name='CSSM_CSP_TOK_USER_PIN_EXPIRED'/>
<enum value='8' name='CSSM_CSP_TOK_USER_PIN_INITIALIZED'/>
<enum value='2' name='CSSM_CSP_TOK_WRITE_PROTECTED'/>
<enum value='-2147417840' name='CSSM_CSSM_BASE_CSSM_ERROR'/>
<enum value='-2147418112' name='CSSM_CSSM_BASE_ERROR'/>
<enum value='-2147417088' name='CSSM_CSSM_PRIVATE_ERROR'/>
<enum value='224' name='CSSM_CUSTOM_COMMON_ERROR_EXTENT'/>
<enum value='4' name='CSSM_DB_ACCESS_PRIVILEGED'/>
<enum value='1' name='CSSM_DB_ACCESS_READ'/>
<enum value='65536' name='CSSM_DB_ACCESS_RESET'/>
<enum value='2' name='CSSM_DB_ACCESS_WRITE'/>
<enum value='1' name='CSSM_DB_AND'/>
<enum value='3' name='CSSM_DB_ATTRIBUTE_FORMAT_BIG_NUM'/>
<enum value='6' name='CSSM_DB_ATTRIBUTE_FORMAT_BLOB'/>
<enum value='8' name='CSSM_DB_ATTRIBUTE_FORMAT_COMPLEX'/>
<enum value='7' name='CSSM_DB_ATTRIBUTE_FORMAT_MULTI_UINT32'/>
<enum value='4' name='CSSM_DB_ATTRIBUTE_FORMAT_REAL'/>
<enum value='1' name='CSSM_DB_ATTRIBUTE_FORMAT_SINT32'/>
<enum value='0' name='CSSM_DB_ATTRIBUTE_FORMAT_STRING'/>
<enum value='5' name='CSSM_DB_ATTRIBUTE_FORMAT_TIME_DATE'/>
<enum value='2' name='CSSM_DB_ATTRIBUTE_FORMAT_UINT32'/>
<enum value='1073758208' name='CSSM_DB_ATTRIBUTE_MDS_END'/>
<enum value='1073741824' name='CSSM_DB_ATTRIBUTE_MDS_START'/>
<enum value='2' name='CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER'/>
<enum value='1' name='CSSM_DB_ATTRIBUTE_NAME_AS_OID'/>
<enum value='0' name='CSSM_DB_ATTRIBUTE_NAME_AS_STRING'/>
<enum value='4' name='CSSM_DB_CERT_USE_OWNER'/>
<enum value='32' name='CSSM_DB_CERT_USE_PRIVACY'/>
<enum value='8' name='CSSM_DB_CERT_USE_REVOKED'/>
<enum value='16' name='CSSM_DB_CERT_USE_SIGNING'/>
<enum value='2' name='CSSM_DB_CERT_USE_SYSTEM'/>
<enum value='1' name='CSSM_DB_CERT_USE_TRUSTED'/>
<enum value='4' name='CSSM_DB_CONTAINS'/>
<enum value='6' name='CSSM_DB_CONTAINS_FINAL_SUBSTRING'/>
<enum value='5' name='CSSM_DB_CONTAINS_INITIAL_SUBSTRING'/>
<enum value='4294967295' name='CSSM_DB_DATASTORES_UNKNOWN'/>
<enum value='0' name='CSSM_DB_EQUAL'/>
<enum value='1' name='CSSM_DB_FILESYSTEMSCAN_MODE'/>
<enum value='3' name='CSSM_DB_GREATER_THAN'/>
<enum value='1' name='CSSM_DB_INDEX_NONUNIQUE'/>
<enum value='1' name='CSSM_DB_INDEX_ON_ATTRIBUTE'/>
<enum value='2' name='CSSM_DB_INDEX_ON_RECORD'/>
<enum value='0' name='CSSM_DB_INDEX_ON_UNKNOWN'/>
<enum value='0' name='CSSM_DB_INDEX_UNIQUE'/>
<enum value='2' name='CSSM_DB_LESS_THAN'/>
<enum value='1' name='CSSM_DB_MODIFY_ATTRIBUTE_ADD'/>
<enum value='2' name='CSSM_DB_MODIFY_ATTRIBUTE_DELETE'/>
<enum value='0' name='CSSM_DB_MODIFY_ATTRIBUTE_NONE'/>
<enum value='3' name='CSSM_DB_MODIFY_ATTRIBUTE_REPLACE'/>
<enum value='0' name='CSSM_DB_NONE'/>
<enum value='1' name='CSSM_DB_NOT_EQUAL'/>
<enum value='2' name='CSSM_DB_OR'/>
<enum value='4294967295' name='CSSM_DB_RECORDTYPE_APP_DEFINED_END'/>
<enum value='2147483648' name='CSSM_DB_RECORDTYPE_APP_DEFINED_START'/>
<enum value='18' name='CSSM_DB_RECORDTYPE_OPEN_GROUP_END'/>
<enum value='10' name='CSSM_DB_RECORDTYPE_OPEN_GROUP_START'/>
<enum value='4' name='CSSM_DB_RECORDTYPE_SCHEMA_END'/>
<enum value='0' name='CSSM_DB_RECORDTYPE_SCHEMA_START'/>
<enum value='1073758208' name='CSSM_DB_RELATIONID_MDS_END'/>
<enum value='1073741824' name='CSSM_DB_RELATIONID_MDS_START'/>
<enum value='0' name='CSSM_DB_TRANSACTIONAL_MODE'/>
<enum value='-2147413760' name='CSSM_DL_BASE_DL_ERROR'/>
<enum value='-2147414016' name='CSSM_DL_BASE_ERROR'/>
<enum value='1' name='CSSM_DL_CUSTOM'/>
<enum value='18' name='CSSM_DL_DB_RECORD_ALL_KEYS'/>
<enum value='10' name='CSSM_DL_DB_RECORD_ANY'/>
<enum value='2147483650' name='CSSM_DL_DB_RECORD_APPLESHARE_PASSWORD'/>
<enum value='11' name='CSSM_DL_DB_RECORD_CERT'/>
<enum value='12' name='CSSM_DL_DB_RECORD_CRL'/>
<enum value='2147487748' name='CSSM_DL_DB_RECORD_EXTENDED_ATTRIBUTE'/>
<enum value='14' name='CSSM_DL_DB_RECORD_GENERIC'/>
<enum value='2147483648' name='CSSM_DL_DB_RECORD_GENERIC_PASSWORD'/>
<enum value='2147483649' name='CSSM_DL_DB_RECORD_INTERNET_PASSWORD'/>
<enum value='2147516416' name='CSSM_DL_DB_RECORD_METADATA'/>
<enum value='13' name='CSSM_DL_DB_RECORD_POLICY'/>
<enum value='16' name='CSSM_DL_DB_RECORD_PRIVATE_KEY'/>
<enum value='15' name='CSSM_DL_DB_RECORD_PUBLIC_KEY'/>
<enum value='17' name='CSSM_DL_DB_RECORD_SYMMETRIC_KEY'/>
<enum value='2147487747' name='CSSM_DL_DB_RECORD_UNLOCK_REFERRAL'/>
<enum value='2147487745' name='CSSM_DL_DB_RECORD_USER_TRUST'/>
<enum value='2147487744' name='CSSM_DL_DB_RECORD_X509_CERTIFICATE'/>
<enum value='2147487746' name='CSSM_DL_DB_RECORD_X509_CRL'/>
<enum value='2' name='CSSM_DL_DB_SCHEMA_ATTRIBUTES'/>
<enum value='1' name='CSSM_DL_DB_SCHEMA_INDEXES'/>
<enum value='0' name='CSSM_DL_DB_SCHEMA_INFO'/>
<enum value='3' name='CSSM_DL_DB_SCHEMA_PARSING_MODULE'/>
<enum value='5' name='CSSM_DL_FFS'/>
<enum value='2' name='CSSM_DL_LDAP'/>
<enum value='6' name='CSSM_DL_MEMORY'/>
<enum value='3' name='CSSM_DL_ODBC'/>
<enum value='4' name='CSSM_DL_PKCS11'/>
<enum value='-2147412992' name='CSSM_DL_PRIVATE_ERROR'/>
<enum value='7' name='CSSM_DL_REMOTEDIR'/>
<enum value='0' name='CSSM_DL_UNKNOWN'/>
<enum value='-2' name='CSSM_ELAPSED_TIME_COMPLETE'/>
<enum value='-1' name='CSSM_ELAPSED_TIME_UNKNOWN'/>
<enum value='54' name='CSSM_ERRCODE_ACL_ADD_FAILED'/>
<enum value='39' name='CSSM_ERRCODE_ACL_BASE_CERTS_NOT_SUPPORTED'/>
<enum value='45' name='CSSM_ERRCODE_ACL_CHALLENGE_CALLBACK_FAILED'/>
<enum value='49' name='CSSM_ERRCODE_ACL_CHANGE_FAILED'/>
<enum value='52' name='CSSM_ERRCODE_ACL_DELETE_FAILED'/>
<enum value='47' name='CSSM_ERRCODE_ACL_ENTRY_TAG_NOT_FOUND'/>
<enum value='53' name='CSSM_ERRCODE_ACL_REPLACE_FAILED'/>
<enum value='43' name='CSSM_ERRCODE_ACL_SUBJECT_TYPE_NOT_SUPPORTED'/>
<enum value='71' name='CSSM_ERRCODE_CRL_ALREADY_SIGNED'/>
<enum value='229' name='CSSM_ERRCODE_DEVICE_FAILED'/>
<enum value='228' name='CSSM_ERRCODE_DEVICE_RESET'/>
<enum value='10' name='CSSM_ERRCODE_FUNCTION_FAILED'/>
<enum value='7' name='CSSM_ERRCODE_FUNCTION_NOT_IMPLEMENTED'/>
<enum value='65' name='CSSM_ERRCODE_INCOMPATIBLE_VERSION'/>
<enum value='227' name='CSSM_ERRCODE_INSUFFICIENT_CLIENT_IDENTIFICATION'/>
<enum value='1' name='CSSM_ERRCODE_INTERNAL_ERROR'/>
<enum value='37' name='CSSM_ERRCODE_INVALID_ACCESS_CREDENTIALS'/>
<enum value='38' name='CSSM_ERRCODE_INVALID_ACL_BASE_CERTS'/>
<enum value='44' name='CSSM_ERRCODE_INVALID_ACL_CHALLENGE_CALLBACK'/>
<enum value='48' name='CSSM_ERRCODE_INVALID_ACL_EDIT_MODE'/>
<enum value='46' name='CSSM_ERRCODE_INVALID_ACL_ENTRY_TAG'/>
<enum value='42' name='CSSM_ERRCODE_INVALID_ACL_SUBJECT_VALUE'/>
<enum value='85' name='CSSM_ERRCODE_INVALID_AC_HANDLE'/>
<enum value='66' name='CSSM_ERRCODE_INVALID_CERTGROUP_POINTER'/>
<enum value='67' name='CSSM_ERRCODE_INVALID_CERT_POINTER'/>
<enum value='82' name='CSSM_ERRCODE_INVALID_CL_HANDLE'/>
<enum value='64' name='CSSM_ERRCODE_INVALID_CONTEXT_HANDLE'/>
<enum value='68' name='CSSM_ERRCODE_INVALID_CRL_POINTER'/>
<enum value='88' name='CSSM_ERRCODE_INVALID_CRYPTO_DATA'/>
<enum value='80' name='CSSM_ERRCODE_INVALID_CSP_HANDLE'/>
<enum value='70' name='CSSM_ERRCODE_INVALID_DATA'/>
<enum value='74' name='CSSM_ERRCODE_INVALID_DB_HANDLE'/>
<enum value='76' name='CSSM_ERRCODE_INVALID_DB_LIST'/>
<enum value='77' name='CSSM_ERRCODE_INVALID_DB_LIST_POINTER'/>
<enum value='81' name='CSSM_ERRCODE_INVALID_DL_HANDLE'/>
<enum value='69' name='CSSM_ERRCODE_INVALID_FIELD_POINTER'/>
<enum value='12' name='CSSM_ERRCODE_INVALID_GUID'/>
<enum value='5' name='CSSM_ERRCODE_INVALID_INPUT_POINTER'/>
<enum value='84' name='CSSM_ERRCODE_INVALID_KR_HANDLE'/>
<enum value='87' name='CSSM_ERRCODE_INVALID_NETWORK_ADDR'/>
<enum value='50' name='CSSM_ERRCODE_INVALID_NEW_ACL_ENTRY'/>
<enum value='51' name='CSSM_ERRCODE_INVALID_NEW_ACL_OWNER'/>
<enum value='72' name='CSSM_ERRCODE_INVALID_NUMBER_OF_FIELDS'/>
<enum value='6' name='CSSM_ERRCODE_INVALID_OUTPUT_POINTER'/>
<enum value='86' name='CSSM_ERRCODE_INVALID_PASSTHROUGH_ID'/>
<enum value='4' name='CSSM_ERRCODE_INVALID_POINTER'/>
<enum value='40' name='CSSM_ERRCODE_INVALID_SAMPLE_VALUE'/>
<enum value='83' name='CSSM_ERRCODE_INVALID_TP_HANDLE'/>
<enum value='230' name='CSSM_ERRCODE_IN_DARK_WAKE'/>
<enum value='3' name='CSSM_ERRCODE_MDS_ERROR'/>
<enum value='2' name='CSSM_ERRCODE_MEMORY_ERROR'/>
<enum value='11' name='CSSM_ERRCODE_MODULE_MANIFEST_VERIFY_FAILED'/>
<enum value='224' name='CSSM_ERRCODE_NO_USER_INTERACTION'/>
<enum value='35' name='CSSM_ERRCODE_OBJECT_ACL_NOT_SUPPORTED'/>
<enum value='36' name='CSSM_ERRCODE_OBJECT_ACL_REQUIRED'/>
<enum value='34' name='CSSM_ERRCODE_OBJECT_MANIP_AUTH_DENIED'/>
<enum value='33' name='CSSM_ERRCODE_OBJECT_USE_AUTH_DENIED'/>
<enum value='32' name='CSSM_ERRCODE_OPERATION_AUTH_DENIED'/>
<enum value='9' name='CSSM_ERRCODE_OS_ACCESS_DENIED'/>
<enum value='75' name='CSSM_ERRCODE_PRIVILEGE_NOT_GRANTED'/>
<enum value='41' name='CSSM_ERRCODE_SAMPLE_VALUE_NOT_SUPPORTED'/>
<enum value='8' name='CSSM_ERRCODE_SELF_CHECK_FAILED'/>
<enum value='226' name='CSSM_ERRCODE_SERVICE_NOT_AVAILABLE'/>
<enum value='78' name='CSSM_ERRCODE_UNKNOWN_FORMAT'/>
<enum value='79' name='CSSM_ERRCODE_UNKNOWN_TAG'/>
<enum value='225' name='CSSM_ERRCODE_USER_CANCELED'/>
<enum value='73' name='CSSM_ERRCODE_VERIFICATION_FAILURE'/>
<enum value='256' name='CSSM_ERRORCODE_COMMON_EXTENT'/>
<enum value='1024' name='CSSM_ERRORCODE_CUSTOM_OFFSET'/>
<enum value='2048' name='CSSM_ERRORCODE_MODULE_EXTENT'/>
<enum value='-1' name='CSSM_ESTIMATED_TIME_UNKNOWN'/>
<enum value='2147483649' name='CSSM_EVIDENCE_FORM_APPLE_CERTGROUP'/>
<enum value='2147483650' name='CSSM_EVIDENCE_FORM_APPLE_CERT_INFO'/>
<enum value='2147483648' name='CSSM_EVIDENCE_FORM_APPLE_CUSTOM'/>
<enum value='2147483648' name='CSSM_EVIDENCE_FORM_APPLE_HEADER'/>
<enum value='1' name='CSSM_EVIDENCE_FORM_CERT'/>
<enum value='3' name='CSSM_EVIDENCE_FORM_CERT_ID'/>
<enum value='2' name='CSSM_EVIDENCE_FORM_CRL'/>
<enum value='4' name='CSSM_EVIDENCE_FORM_CRL_ID'/>
<enum value='7' name='CSSM_EVIDENCE_FORM_CRL_NEXTTIME'/>
<enum value='6' name='CSSM_EVIDENCE_FORM_CRL_THISTIME'/>
<enum value='8' name='CSSM_EVIDENCE_FORM_POLICYINFO'/>
<enum value='9' name='CSSM_EVIDENCE_FORM_TUPLEGROUP'/>
<enum value='0' name='CSSM_EVIDENCE_FORM_UNSPECIFIC'/>
<enum value='5' name='CSSM_EVIDENCE_FORM_VERIFIER_TIME'/>
<enum value='0' name='CSSM_FALSE'/>
<enum value='3' name='CSSM_FEE_CURVE_TYPE_ANSI_X9_62'/>
<enum value='0' name='CSSM_FEE_CURVE_TYPE_DEFAULT'/>
<enum value='1' name='CSSM_FEE_CURVE_TYPE_MONTGOMERY'/>
<enum value='2' name='CSSM_FEE_CURVE_TYPE_WEIERSTRASS'/>
<enum value='0' name='CSSM_FEE_PRIME_TYPE_DEFAULT'/>
<enum value='2' name='CSSM_FEE_PRIME_TYPE_FEE'/>
<enum value='3' name='CSSM_FEE_PRIME_TYPE_GENERAL'/>
<enum value='1' name='CSSM_FEE_PRIME_TYPE_MERSENNE'/>
<enum value='4294967295' name='CSSM_FIELDVALUE_COMPLEX_DATA_TYPE'/>
<enum value='1' name='CSSM_HINT_ADDRESS_APP'/>
<enum value='2' name='CSSM_HINT_ADDRESS_SP'/>
<enum value='1' name='CSSM_HINT_CALLBACK'/>
<enum value='0' name='CSSM_HINT_NONE'/>
<enum value='0' name='CSSM_INVALID_HANDLE'/>
<enum value='16' name='CSSM_KEYATTR_ALWAYS_SENSITIVE'/>
<enum value='32' name='CSSM_KEYATTR_EXTRACTABLE'/>
<enum value='4' name='CSSM_KEYATTR_MODIFIABLE'/>
<enum value='64' name='CSSM_KEYATTR_NEVER_EXTRACTABLE'/>
<enum value='65536' name='CSSM_KEYATTR_PARTIAL'/>
<enum value='1' name='CSSM_KEYATTR_PERMANENT'/>
<enum value='2' name='CSSM_KEYATTR_PRIVATE'/>
<enum value='131072' name='CSSM_KEYATTR_PUBLIC_KEY_ENCRYPT'/>
<enum value='268435456' name='CSSM_KEYATTR_RETURN_DATA'/>
<enum value='0' name='CSSM_KEYATTR_RETURN_DEFAULT'/>
<enum value='1073741824' name='CSSM_KEYATTR_RETURN_NONE'/>
<enum value='536870912' name='CSSM_KEYATTR_RETURN_REF'/>
<enum value='8' name='CSSM_KEYATTR_SENSITIVE'/>
<enum value='4294967295' name='CSSM_KEYBLOB_OTHER'/>
<enum value='0' name='CSSM_KEYBLOB_RAW'/>
<enum value='6' name='CSSM_KEYBLOB_RAW_FORMAT_BSAFE'/>
<enum value='9' name='CSSM_KEYBLOB_RAW_FORMAT_CCA'/>
<enum value='5' name='CSSM_KEYBLOB_RAW_FORMAT_FIPS186'/>
<enum value='3' name='CSSM_KEYBLOB_RAW_FORMAT_MSCAPI'/>
<enum value='0' name='CSSM_KEYBLOB_RAW_FORMAT_NONE'/>
<enum value='12' name='CSSM_KEYBLOB_RAW_FORMAT_OCTET_STRING'/>
<enum value='2147483649' name='CSSM_KEYBLOB_RAW_FORMAT_OPENSSH'/>
<enum value='2147483651' name='CSSM_KEYBLOB_RAW_FORMAT_OPENSSH2'/>
<enum value='2147483650' name='CSSM_KEYBLOB_RAW_FORMAT_OPENSSL'/>
<enum value='4294967295' name='CSSM_KEYBLOB_RAW_FORMAT_OTHER'/>
<enum value='4' name='CSSM_KEYBLOB_RAW_FORMAT_PGP'/>
<enum value='1' name='CSSM_KEYBLOB_RAW_FORMAT_PKCS1'/>
<enum value='2' name='CSSM_KEYBLOB_RAW_FORMAT_PKCS3'/>
<enum value='10' name='CSSM_KEYBLOB_RAW_FORMAT_PKCS8'/>
<enum value='11' name='CSSM_KEYBLOB_RAW_FORMAT_SPKI'/>
<enum value='2147483648' name='CSSM_KEYBLOB_RAW_FORMAT_VENDOR_DEFINED'/>
<enum value='2147483648' name='CSSM_KEYBLOB_RAW_FORMAT_X509'/>
<enum value='2' name='CSSM_KEYBLOB_REFERENCE'/>
<enum value='0' name='CSSM_KEYBLOB_REF_FORMAT_INTEGER'/>
<enum value='4294967295' name='CSSM_KEYBLOB_REF_FORMAT_OTHER'/>
<enum value='2' name='CSSM_KEYBLOB_REF_FORMAT_SPKI'/>
<enum value='1' name='CSSM_KEYBLOB_REF_FORMAT_STRING'/>
<enum value='3' name='CSSM_KEYBLOB_WRAPPED'/>
<enum value='100' name='CSSM_KEYBLOB_WRAPPED_FORMAT_APPLE_CUSTOM'/>
<enum value='3' name='CSSM_KEYBLOB_WRAPPED_FORMAT_MSCAPI'/>
<enum value='0' name='CSSM_KEYBLOB_WRAPPED_FORMAT_NONE'/>
<enum value='102' name='CSSM_KEYBLOB_WRAPPED_FORMAT_OPENSSH1'/>
<enum value='101' name='CSSM_KEYBLOB_WRAPPED_FORMAT_OPENSSL'/>
<enum value='4294967295' name='CSSM_KEYBLOB_WRAPPED_FORMAT_OTHER'/>
<enum value='2' name='CSSM_KEYBLOB_WRAPPED_FORMAT_PKCS7'/>
<enum value='1' name='CSSM_KEYBLOB_WRAPPED_FORMAT_PKCS8'/>
<enum value='4294967295' name='CSSM_KEYCLASS_OTHER'/>
<enum value='1' name='CSSM_KEYCLASS_PRIVATE_KEY'/>
<enum value='0' name='CSSM_KEYCLASS_PUBLIC_KEY'/>
<enum value='3' name='CSSM_KEYCLASS_SECRET_PART'/>
<enum value='2' name='CSSM_KEYCLASS_SESSION_KEY'/>
<enum value='2' name='CSSM_KEYHEADER_VERSION'/>
<enum value='2147483648' name='CSSM_KEYUSE_ANY'/>
<enum value='2' name='CSSM_KEYUSE_DECRYPT'/>
<enum value='256' name='CSSM_KEYUSE_DERIVE'/>
<enum value='1' name='CSSM_KEYUSE_ENCRYPT'/>
<enum value='4' name='CSSM_KEYUSE_SIGN'/>
<enum value='16' name='CSSM_KEYUSE_SIGN_RECOVER'/>
<enum value='128' name='CSSM_KEYUSE_UNWRAP'/>
<enum value='8' name='CSSM_KEYUSE_VERIFY'/>
<enum value='32' name='CSSM_KEYUSE_VERIFY_RECOVER'/>
<enum value='64' name='CSSM_KEYUSE_WRAP'/>
<enum value='2' name='CSSM_KEY_HIERARCHY_EXPORT'/>
<enum value='1' name='CSSM_KEY_HIERARCHY_INTEG'/>
<enum value='0' name='CSSM_KEY_HIERARCHY_NONE'/>
<enum value='-2147407872' name='CSSM_KR_BASE_ERROR'/>
<enum value='32' name='CSSM_KR_DROP_WORKFACTOR'/>
<enum value='2' name='CSSM_KR_ENT'/>
<enum value='2' name='CSSM_KR_ENT_POLICY'/>
<enum value='1' name='CSSM_KR_INDIV'/>
<enum value='1' name='CSSM_KR_INDIV_POLICY'/>
<enum value='12' name='CSSM_KR_LE'/>
<enum value='4' name='CSSM_KR_LE_MAN'/>
<enum value='3' name='CSSM_KR_LE_MAN_POLICY'/>
<enum value='8' name='CSSM_KR_LE_USE'/>
<enum value='4' name='CSSM_KR_LE_USE_POLICY'/>
<enum value='16' name='CSSM_KR_OPTIMIZE'/>
<enum value='-2147406848' name='CSSM_KR_PRIVATE_ERROR'/>
<enum value='0' name='CSSM_LIST_ELEMENT_DATUM'/>
<enum value='1' name='CSSM_LIST_ELEMENT_SUBLIST'/>
<enum value='2' name='CSSM_LIST_ELEMENT_WORDID'/>
<enum value='1' name='CSSM_LIST_TYPE_CUSTOM'/>
<enum value='2' name='CSSM_LIST_TYPE_SEXPR'/>
<enum value='0' name='CSSM_LIST_TYPE_UNKNOWN'/>
<enum value='2' name='CSSM_MANAGER_REPLY'/>
<enum value='1' name='CSSM_MANAGER_SERVICE_REQUEST'/>
<enum value='-2147414016' name='CSSM_MDS_BASE_ERROR'/>
<enum value='-2147412992' name='CSSM_MDS_PRIVATE_ERROR'/>
<enum value='64' name='CSSM_MODULE_STRING_SIZE'/>
<enum value='10' name='CSSM_NET_PROTO_CMP'/>
<enum value='11' name='CSSM_NET_PROTO_CMPS'/>
<enum value='1' name='CSSM_NET_PROTO_CUSTOM'/>
<enum value='7' name='CSSM_NET_PROTO_FTP'/>
<enum value='8' name='CSSM_NET_PROTO_FTPS'/>
<enum value='3' name='CSSM_NET_PROTO_LDAP'/>
<enum value='5' name='CSSM_NET_PROTO_LDAPNS'/>
<enum value='4' name='CSSM_NET_PROTO_LDAPS'/>
<enum value='0' name='CSSM_NET_PROTO_NONE'/>
<enum value='9' name='CSSM_NET_PROTO_OCSP'/>
<enum value='2' name='CSSM_NET_PROTO_UNSPECIFIED'/>
<enum value='6' name='CSSM_NET_PROTO_X500DAP'/>
<enum value='3' name='CSSM_NOTIFY_FAULT'/>
<enum value='1' name='CSSM_NOTIFY_INSERT'/>
<enum value='2' name='CSSM_NOTIFY_REMOVE'/>
<enum value='0' name='CSSM_OK'/>
<enum value='4' name='CSSM_PADDING_ALTERNATE'/>
<enum value='2147483648' name='CSSM_PADDING_APPLE_SSLv2'/>
<enum value='8' name='CSSM_PADDING_CIPHERSTEALING'/>
<enum value='1' name='CSSM_PADDING_CUSTOM'/>
<enum value='5' name='CSSM_PADDING_FF'/>
<enum value='0' name='CSSM_PADDING_NONE'/>
<enum value='3' name='CSSM_PADDING_ONE'/>
<enum value='10' name='CSSM_PADDING_PKCS1'/>
<enum value='6' name='CSSM_PADDING_PKCS5'/>
<enum value='7' name='CSSM_PADDING_PKCS7'/>
<enum value='9' name='CSSM_PADDING_RANDOM'/>
<enum value='2147483648' name='CSSM_PADDING_VENDOR_DEFINED'/>
<enum value='2' name='CSSM_PADDING_ZERO'/>
<enum value='0' name='CSSM_PKCS5_PBKDF2_PRF_HMAC_SHA1'/>
<enum value='2' name='CSSM_PKCS_OAEP_MGF1_MD5'/>
<enum value='1' name='CSSM_PKCS_OAEP_MGF1_SHA1'/>
<enum value='0' name='CSSM_PKCS_OAEP_MGF_NONE'/>
<enum value='0' name='CSSM_PKCS_OAEP_PSOURCE_NONE'/>
<enum value='1' name='CSSM_PKCS_OAEP_PSOURCE_Pspecified'/>
<enum value='0' name='CSSM_PRIVILEGE_SCOPE_NONE'/>
<enum value='1' name='CSSM_PRIVILEGE_SCOPE_PROCESS'/>
<enum value='2' name='CSSM_PRIVILEGE_SCOPE_THREAD'/>
<enum value='1' name='CSSM_PVC_APP'/>
<enum value='0' name='CSSM_PVC_NONE'/>
<enum value='2' name='CSSM_PVC_SP'/>
<enum value='1' name='CSSM_QUERY_RETURN_DATA'/>
<enum value='0' name='CSSM_QUERY_SIZELIMIT_NONE'/>
<enum value='0' name='CSSM_QUERY_TIMELIMIT_NONE'/>
<enum value='65547' name='CSSM_SAMPLE_TYPE_ASYMMETRIC_KEY'/>
<enum value='8' name='CSSM_SAMPLE_TYPE_BIOMETRIC'/>
<enum value='12' name='CSSM_SAMPLE_TYPE_COMMENT'/>
<enum value='43' name='CSSM_SAMPLE_TYPE_HASHED_PASSWORD'/>
<enum value='65538' name='CSSM_SAMPLE_TYPE_KEYCHAIN_CHANGE_LOCK'/>
<enum value='65537' name='CSSM_SAMPLE_TYPE_KEYCHAIN_LOCK'/>
<enum value='65536' name='CSSM_SAMPLE_TYPE_KEYCHAIN_PROMPT'/>
<enum value='79' name='CSSM_SAMPLE_TYPE_PASSWORD'/>
<enum value='65545' name='CSSM_SAMPLE_TYPE_PREAUTH'/>
<enum value='65539' name='CSSM_SAMPLE_TYPE_PROCESS'/>
<enum value='83' name='CSSM_SAMPLE_TYPE_PROMPTED_BIOMETRIC'/>
<enum value='84' name='CSSM_SAMPLE_TYPE_PROMPTED_PASSWORD'/>
<enum value='86' name='CSSM_SAMPLE_TYPE_PROTECTED_BIOMETRIC'/>
<enum value='87' name='CSSM_SAMPLE_TYPE_PROTECTED_PASSWORD'/>
<enum value='85' name='CSSM_SAMPLE_TYPE_RETRY_ID'/>
<enum value='117' name='CSSM_SAMPLE_TYPE_SIGNED_NONCE'/>
<enum value='118' name='CSSM_SAMPLE_TYPE_SIGNED_SECRET'/>
<enum value='65541' name='CSSM_SAMPLE_TYPE_SYMMETRIC_KEY'/>
<enum value='123' name='CSSM_SAMPLE_TYPE_THRESHOLD'/>
<enum value='32' name='CSSM_SERVICE_AC'/>
<enum value='8' name='CSSM_SERVICE_CL'/>
<enum value='2' name='CSSM_SERVICE_CSP'/>
<enum value='1' name='CSSM_SERVICE_CSSM'/>
<enum value='4' name='CSSM_SERVICE_DL'/>
<enum value='64' name='CSSM_SERVICE_KR'/>
<enum value='16' name='CSSM_SERVICE_TP'/>
<enum value='1' name='CSSM_TP_ACTION_ALLOW_EXPIRED'/>
<enum value='8' name='CSSM_TP_ACTION_ALLOW_EXPIRED_ROOT'/>
<enum value='4' name='CSSM_TP_ACTION_CRL_SUFFICIENT'/>
<enum value='0' name='CSSM_TP_ACTION_DEFAULT'/>
<enum value='4' name='CSSM_TP_ACTION_FETCH_CERT_FROM_NET'/>
<enum value='2' name='CSSM_TP_ACTION_FETCH_CRL_FROM_NET'/>
<enum value='64' name='CSSM_TP_ACTION_IMPLICIT_ANCHORS'/>
<enum value='2' name='CSSM_TP_ACTION_LEAF_IS_CA'/>
<enum value='8' name='CSSM_TP_ACTION_REQUIRE_CRL_IF_PRESENT'/>
<enum value='1' name='CSSM_TP_ACTION_REQUIRE_CRL_PER_CERT'/>
<enum value='16' name='CSSM_TP_ACTION_REQUIRE_REV_PER_CERT'/>
<enum value='32' name='CSSM_TP_ACTION_TRUST_SETTINGS'/>
<enum value='0' name='CSSM_TP_APPLE_EVIDENCE_VERSION'/>
<enum value='1' name='CSSM_TP_AUTHORITY_REQUEST_CERTISSUE'/>
<enum value='6' name='CSSM_TP_AUTHORITY_REQUEST_CERTNOTARIZE'/>
<enum value='4' name='CSSM_TP_AUTHORITY_REQUEST_CERTRESUME'/>
<enum value='2' name='CSSM_TP_AUTHORITY_REQUEST_CERTREVOKE'/>
<enum value='3' name='CSSM_TP_AUTHORITY_REQUEST_CERTSUSPEND'/>
<enum value='7' name='CSSM_TP_AUTHORITY_REQUEST_CERTUSERECOVER'/>
<enum value='5' name='CSSM_TP_AUTHORITY_REQUEST_CERTVERIFY'/>
<enum value='256' name='CSSM_TP_AUTHORITY_REQUEST_CRLISSUE'/>
<enum value='-2147409920' name='CSSM_TP_BASE_ERROR'/>
<enum value='-2147409664' name='CSSM_TP_BASE_TP_ERROR'/>
<enum value='2' name='CSSM_TP_CERTCHANGE_HOLD'/>
<enum value='0' name='CSSM_TP_CERTCHANGE_NONE'/>
<enum value='5' name='CSSM_TP_CERTCHANGE_NOT_AUTHORIZED'/>
<enum value='1' name='CSSM_TP_CERTCHANGE_OK'/>
<enum value='2' name='CSSM_TP_CERTCHANGE_OKWITHNEWTIME'/>
<enum value='4' name='CSSM_TP_CERTCHANGE_REASON_AFFILIATIONCHANGE'/>
<enum value='2' name='CSSM_TP_CERTCHANGE_REASON_CACOMPROMISE'/>
<enum value='3' name='CSSM_TP_CERTCHANGE_REASON_CEASEOPERATION'/>
<enum value='7' name='CSSM_TP_CERTCHANGE_REASON_HOLDRELEASE'/>
<enum value='1' name='CSSM_TP_CERTCHANGE_REASON_KEYCOMPROMISE'/>
<enum value='5' name='CSSM_TP_CERTCHANGE_REASON_SUPERCEDED'/>
<enum value='6' name='CSSM_TP_CERTCHANGE_REASON_SUSPECTEDCOMPROMISE'/>
<enum value='0' name='CSSM_TP_CERTCHANGE_REASON_UNKNOWN'/>
<enum value='4' name='CSSM_TP_CERTCHANGE_REJECTED'/>
<enum value='3' name='CSSM_TP_CERTCHANGE_RELEASE'/>
<enum value='1' name='CSSM_TP_CERTCHANGE_REVOKE'/>
<enum value='0' name='CSSM_TP_CERTCHANGE_STATUS_UNKNOWN'/>
<enum value='3' name='CSSM_TP_CERTCHANGE_WRONGCA'/>
<enum value='5' name='CSSM_TP_CERTISSUE_NOT_AUTHORIZED'/>
<enum value='1' name='CSSM_TP_CERTISSUE_OK'/>
<enum value='2' name='CSSM_TP_CERTISSUE_OKWITHCERTMODS'/>
<enum value='3' name='CSSM_TP_CERTISSUE_OKWITHSERVICEMODS'/>
<enum value='4' name='CSSM_TP_CERTISSUE_REJECTED'/>
<enum value='0' name='CSSM_TP_CERTISSUE_STATUS_UNKNOWN'/>
<enum value='6' name='CSSM_TP_CERTISSUE_WILL_BE_REVOKED'/>
<enum value='5' name='CSSM_TP_CERTNOTARIZE_NOT_AUTHORIZED'/>
<enum value='1' name='CSSM_TP_CERTNOTARIZE_OK'/>
<enum value='2' name='CSSM_TP_CERTNOTARIZE_OKWITHOUTFIELDS'/>
<enum value='3' name='CSSM_TP_CERTNOTARIZE_OKWITHSERVICEMODS'/>
<enum value='4' name='CSSM_TP_CERTNOTARIZE_REJECTED'/>
<enum value='0' name='CSSM_TP_CERTNOTARIZE_STATUS_UNKNOWN'/>
<enum value='2' name='CSSM_TP_CERTRECLAIM_NOMATCH'/>
<enum value='4' name='CSSM_TP_CERTRECLAIM_NOT_AUTHORIZED'/>
<enum value='1' name='CSSM_TP_CERTRECLAIM_OK'/>
<enum value='3' name='CSSM_TP_CERTRECLAIM_REJECTED'/>
<enum value='0' name='CSSM_TP_CERTRECLAIM_STATUS_UNKNOWN'/>
<enum value='5' name='CSSM_TP_CERTVERIFY_EXPIRED'/>
<enum value='2' name='CSSM_TP_CERTVERIFY_INVALID'/>
<enum value='7' name='CSSM_TP_CERTVERIFY_INVALID_AUTHORITY'/>
<enum value='13' name='CSSM_TP_CERTVERIFY_INVALID_BASIC_CONSTRAINTS'/>
<enum value='10' name='CSSM_TP_CERTVERIFY_INVALID_CERTGROUP'/>
<enum value='9' name='CSSM_TP_CERTVERIFY_INVALID_CERT_VALUE'/>
<enum value='14' name='CSSM_TP_CERTVERIFY_INVALID_CRL_DIST_PT'/>
<enum value='15' name='CSSM_TP_CERTVERIFY_INVALID_NAME_TREE'/>
<enum value='11' name='CSSM_TP_CERTVERIFY_INVALID_POLICY'/>
<enum value='12' name='CSSM_TP_CERTVERIFY_INVALID_POLICY_IDS'/>
<enum value='8' name='CSSM_TP_CERTVERIFY_INVALID_SIGNATURE'/>
<enum value='6' name='CSSM_TP_CERTVERIFY_NOT_VALID_YET'/>
<enum value='3' name='CSSM_TP_CERTVERIFY_REVOKED'/>
<enum value='4' name='CSSM_TP_CERTVERIFY_SUSPENDED'/>
<enum value='0' name='CSSM_TP_CERTVERIFY_UNKNOWN'/>
<enum value='16' name='CSSM_TP_CERTVERIFY_UNKNOWN_CRITICAL_EXT'/>
<enum value='1' name='CSSM_TP_CERTVERIFY_VALID'/>
<enum value='8' name='CSSM_TP_CERT_DIR_UPDATE'/>
<enum value='4' name='CSSM_TP_CERT_NOTIFY_RENEW'/>
<enum value='2' name='CSSM_TP_CERT_PUBLISH'/>
<enum value='1' name='CSSM_TP_CONFIRM_ACCEPT'/>
<enum value='2' name='CSSM_TP_CONFIRM_REJECT'/>
<enum value='0' name='CSSM_TP_CONFIRM_STATUS_UNKNOWN'/>
<enum value='3' name='CSSM_TP_CRLISSUE_INVALID_DOMAIN'/>
<enum value='6' name='CSSM_TP_CRLISSUE_NOT_AUTHORIZED'/>
<enum value='2' name='CSSM_TP_CRLISSUE_NOT_CURRENT'/>
<enum value='1' name='CSSM_TP_CRLISSUE_OK'/>
<enum value='5' name='CSSM_TP_CRLISSUE_REJECTED'/>
<enum value='0' name='CSSM_TP_CRLISSUE_STATUS_UNKNOWN'/>
<enum value='4' name='CSSM_TP_CRLISSUE_UNKNOWN_IDENTIFIER'/>
<enum value='16' name='CSSM_TP_CRL_DISTRIBUTE'/>
<enum value='0' name='CSSM_TP_FORM_TYPE_GENERIC'/>
<enum value='1' name='CSSM_TP_FORM_TYPE_REGISTRATION'/>
<enum value='1' name='CSSM_TP_KEY_ARCHIVE'/>
<enum value='-2147408896' name='CSSM_TP_PRIVATE_ERROR'/>
<enum value='3' name='CSSM_TP_STOP_ON_FIRST_FAIL'/>
<enum value='2' name='CSSM_TP_STOP_ON_FIRST_PASS'/>
<enum value='1' name='CSSM_TP_STOP_ON_NONE'/>
<enum value='0' name='CSSM_TP_STOP_ON_POLICY'/>
<enum value='1' name='CSSM_TRUE'/>
<enum value='6' name='CSSM_USEE_AUTHENTICATION'/>
<enum value='1' name='CSSM_USEE_DOMESTIC'/>
<enum value='2' name='CSSM_USEE_FINANCIAL'/>
<enum value='9' name='CSSM_USEE_INSURANCE'/>
<enum value='7' name='CSSM_USEE_KEYEXCH'/>
<enum value='4' name='CSSM_USEE_KRENT'/>
<enum value='3' name='CSSM_USEE_KRLE'/>
<enum value='255' name='CSSM_USEE_LAST'/>
<enum value='8' name='CSSM_USEE_MEDICAL'/>
<enum value='0' name='CSSM_USEE_NONE'/>
<enum value='5' name='CSSM_USEE_SSL'/>
<enum value='10' name='CSSM_USEE_WEAK'/>
<enum value='4294967295' name='CSSM_VALUE_NOT_AVAILABLE'/>
<enum value='2' name='CSSM_WORDID_A'/>
<enum value='3' name='CSSM_WORDID_ACL'/>
<enum value='4' name='CSSM_WORDID_ALPHA'/>
<enum value='65547' name='CSSM_WORDID_ASYMMETRIC_KEY'/>
<enum value='5' name='CSSM_WORDID_B'/>
<enum value='6' name='CSSM_WORDID_BER'/>
<enum value='7' name='CSSM_WORDID_BINARY'/>
<enum value='8' name='CSSM_WORDID_BIOMETRIC'/>
<enum value='9' name='CSSM_WORDID_C'/>
<enum value='10' name='CSSM_WORDID_CANCELED'/>
<enum value='11' name='CSSM_WORDID_CERT'/>
<enum value='12' name='CSSM_WORDID_COMMENT'/>
<enum value='13' name='CSSM_WORDID_CRL'/>
<enum value='14' name='CSSM_WORDID_CUSTOM'/>
<enum value='15' name='CSSM_WORDID_D'/>
<enum value='16' name='CSSM_WORDID_DATE'/>
<enum value='22' name='CSSM_WORDID_DBS_CREATE'/>
<enum value='23' name='CSSM_WORDID_DBS_DELETE'/>
<enum value='17' name='CSSM_WORDID_DB_DELETE'/>
<enum value='18' name='CSSM_WORDID_DB_EXEC_STORED_QUERY'/>
<enum value='19' name='CSSM_WORDID_DB_INSERT'/>
<enum value='20' name='CSSM_WORDID_DB_MODIFY'/>
<enum value='21' name='CSSM_WORDID_DB_READ'/>
<enum value='24' name='CSSM_WORDID_DECRYPT'/>
<enum value='25' name='CSSM_WORDID_DELETE'/>
<enum value='26' name='CSSM_WORDID_DELTA_CRL'/>
<enum value='27' name='CSSM_WORDID_DER'/>
<enum value='28' name='CSSM_WORDID_DERIVE'/>
<enum value='29' name='CSSM_WORDID_DISPLAY'/>
<enum value='30' name='CSSM_WORDID_DO'/>
<enum value='31' name='CSSM_WORDID_DSA'/>
<enum value='32' name='CSSM_WORDID_DSA_SHA1'/>
<enum value='33' name='CSSM_WORDID_E'/>
<enum value='34' name='CSSM_WORDID_ELGAMAL'/>
<enum value='35' name='CSSM_WORDID_ENCRYPT'/>
<enum value='36' name='CSSM_WORDID_ENTRY'/>
<enum value='37' name='CSSM_WORDID_EXPORT_CLEAR'/>
<enum value='38' name='CSSM_WORDID_EXPORT_WRAPPED'/>
<enum value='39' name='CSSM_WORDID_G'/>
<enum value='40' name='CSSM_WORDID_GE'/>
<enum value='41' name='CSSM_WORDID_GENKEY'/>
<enum value='42' name='CSSM_WORDID_HASH'/>
<enum value='43' name='CSSM_WORDID_HASHED_PASSWORD'/>
<enum value='44' name='CSSM_WORDID_HASHED_SUBJECT'/>
<enum value='45' name='CSSM_WORDID_HAVAL'/>
<enum value='46' name='CSSM_WORDID_IBCHASH'/>
<enum value='47' name='CSSM_WORDID_IMPORT_CLEAR'/>
<enum value='48' name='CSSM_WORDID_IMPORT_WRAPPED'/>
<enum value='49' name='CSSM_WORDID_INTEL'/>
<enum value='50' name='CSSM_WORDID_ISSUER'/>
<enum value='51' name='CSSM_WORDID_ISSUER_INFO'/>
<enum value='53' name='CSSM_WORDID_KEA'/>
<enum value='65543' name='CSSM_WORDID_KEY'/>
<enum value='65538' name='CSSM_WORDID_KEYCHAIN_CHANGE_LOCK'/>
<enum value='65537' name='CSSM_WORDID_KEYCHAIN_LOCK'/>
<enum value='65536' name='CSSM_WORDID_KEYCHAIN_PROMPT'/>
<enum value='54' name='CSSM_WORDID_KEYHOLDER'/>
<enum value='52' name='CSSM_WORDID_K_OF_N'/>
<enum value='55' name='CSSM_WORDID_L'/>
<enum value='56' name='CSSM_WORDID_LE'/>
<enum value='57' name='CSSM_WORDID_LOGIN'/>
<enum value='58' name='CSSM_WORDID_LOGIN_NAME'/>
<enum value='59' name='CSSM_WORDID_MAC'/>
<enum value='60' name='CSSM_WORDID_MD2'/>
<enum value='61' name='CSSM_WORDID_MD2WITHRSA'/>
<enum value='62' name='CSSM_WORDID_MD4'/>
<enum value='63' name='CSSM_WORDID_MD5'/>
<enum value='64' name='CSSM_WORDID_MD5WITHRSA'/>
<enum value='65' name='CSSM_WORDID_N'/>
<enum value='66' name='CSSM_WORDID_NAME'/>
<enum value='67' name='CSSM_WORDID_NDR'/>
<enum value='68' name='CSSM_WORDID_NHASH'/>
<enum value='69' name='CSSM_WORDID_NOT_AFTER'/>
<enum value='70' name='CSSM_WORDID_NOT_BEFORE'/>
<enum value='71' name='CSSM_WORDID_NULL'/>
<enum value='72' name='CSSM_WORDID_NUMERIC'/>
<enum value='73' name='CSSM_WORDID_OBJECT_HASH'/>
<enum value='74' name='CSSM_WORDID_ONE_TIME'/>
<enum value='75' name='CSSM_WORDID_ONLINE'/>
<enum value='76' name='CSSM_WORDID_OWNER'/>
<enum value='77' name='CSSM_WORDID_P'/>
<enum value='78' name='CSSM_WORDID_PAM_NAME'/>
<enum value='79' name='CSSM_WORDID_PASSWORD'/>
<enum value='80' name='CSSM_WORDID_PGP'/>
<enum value='65544' name='CSSM_WORDID_PIN'/>
<enum value='65545' name='CSSM_WORDID_PREAUTH'/>
<enum value='65546' name='CSSM_WORDID_PREAUTH_SOURCE'/>
<enum value='81' name='CSSM_WORDID_PREFIX'/>
<enum value='82' name='CSSM_WORDID_PRIVATE_KEY'/>
<enum value='65539' name='CSSM_WORDID_PROCESS'/>
<enum value='83' name='CSSM_WORDID_PROMPTED_BIOMETRIC'/>
<enum value='84' name='CSSM_WORDID_PROMPTED_PASSWORD'/>
<enum value='85' name='CSSM_WORDID_PROPAGATE'/>
<enum value='86' name='CSSM_WORDID_PROTECTED_BIOMETRIC'/>
<enum value='87' name='CSSM_WORDID_PROTECTED_PASSWORD'/>
<enum value='88' name='CSSM_WORDID_PROTECTED_PIN'/>
<enum value='89' name='CSSM_WORDID_PUBLIC_KEY'/>
<enum value='90' name='CSSM_WORDID_PUBLIC_KEY_FROM_CERT'/>
<enum value='91' name='CSSM_WORDID_Q'/>
<enum value='92' name='CSSM_WORDID_RANGE'/>
<enum value='93' name='CSSM_WORDID_REVAL'/>
<enum value='94' name='CSSM_WORDID_RIPEMAC'/>
<enum value='95' name='CSSM_WORDID_RIPEMD'/>
<enum value='96' name='CSSM_WORDID_RIPEMD160'/>
<enum value='97' name='CSSM_WORDID_RSA'/>
<enum value='98' name='CSSM_WORDID_RSA_ISO9796'/>
<enum value='99' name='CSSM_WORDID_RSA_PKCS'/>
<enum value='102' name='CSSM_WORDID_RSA_PKCS1'/>
<enum value='103' name='CSSM_WORDID_RSA_PKCS1_MD5'/>
<enum value='104' name='CSSM_WORDID_RSA_PKCS1_SHA1'/>
<enum value='105' name='CSSM_WORDID_RSA_PKCS1_SIG'/>
<enum value='100' name='CSSM_WORDID_RSA_PKCS_MD5'/>
<enum value='101' name='CSSM_WORDID_RSA_PKCS_SHA1'/>
<enum value='106' name='CSSM_WORDID_RSA_RAW'/>
<enum value='107' name='CSSM_WORDID_SDSIV1'/>
<enum value='108' name='CSSM_WORDID_SEQUENCE'/>
<enum value='109' name='CSSM_WORDID_SET'/>
<enum value='110' name='CSSM_WORDID_SEXPR'/>
<enum value='111' name='CSSM_WORDID_SHA1'/>
<enum value='112' name='CSSM_WORDID_SHA1WITHDSA'/>
<enum value='113' name='CSSM_WORDID_SHA1WITHECDSA'/>
<enum value='114' name='CSSM_WORDID_SHA1WITHRSA'/>
<enum value='115' name='CSSM_WORDID_SIGN'/>
<enum value='116' name='CSSM_WORDID_SIGNATURE'/>
<enum value='117' name='CSSM_WORDID_SIGNED_NONCE'/>
<enum value='118' name='CSSM_WORDID_SIGNED_SECRET'/>
<enum value='119' name='CSSM_WORDID_SPKI'/>
<enum value='120' name='CSSM_WORDID_SUBJECT'/>
<enum value='121' name='CSSM_WORDID_SUBJECT_INFO'/>
<enum value='65541' name='CSSM_WORDID_SYMMETRIC_KEY'/>
<enum value='65542' name='CSSM_WORDID_SYSTEM'/>
<enum value='122' name='CSSM_WORDID_TAG'/>
<enum value='123' name='CSSM_WORDID_THRESHOLD'/>
<enum value='124' name='CSSM_WORDID_TIME'/>
<enum value='125' name='CSSM_WORDID_URI'/>
<enum value='2147418112' name='CSSM_WORDID_VENDOR_END'/>
<enum value='65536' name='CSSM_WORDID_VENDOR_START'/>
<enum value='126' name='CSSM_WORDID_VERSION'/>
<enum value='128' name='CSSM_WORDID_X509V1'/>
<enum value='129' name='CSSM_WORDID_X509V2'/>
<enum value='130' name='CSSM_WORDID_X509V3'/>
<enum value='127' name='CSSM_WORDID_X509_ATTRIBUTE'/>
<enum value='131' name='CSSM_WORDID_X9_ATTRIBUTE'/>
<enum value='65548' name='CSSM_WORDID__FIRST_UNUSED'/>
<enum value='0' name='CSSM_WORDID__NLU_'/>
<enum value='65540' name='CSSM_WORDID__RESERVED_1'/>
<enum value='1' name='CSSM_WORDID__STAR_'/>
<enum value='-1' name='CSSM_WORDID__UNK_'/>
<enum value='0' name='CSSM_X509_DATAFORMAT_ENCODED'/>
<enum value='2' name='CSSM_X509_DATAFORMAT_PAIR'/>
<enum value='1' name='CSSM_X509_DATAFORMAT_PARSED'/>
<enum value='0' name='CSSM_X509_OPTION_NOT_PRESENT'/>
<enum value='1' name='CSSM_X509_OPTION_PRESENT'/>
<enum value='14' name='DT_AuthorityInfoAccess'/>
<enum value='0' name='DT_AuthorityKeyID'/>
<enum value='6' name='DT_BasicConstraints'/>
<enum value='7' name='DT_CertPolicies'/>
<enum value='12' name='DT_CrlDistributionPoints'/>
<enum value='9' name='DT_CrlNumber'/>
<enum value='11' name='DT_CrlReason'/>
<enum value='10' name='DT_DeltaCrl'/>
<enum value='5' name='DT_ExtendedKeyUsage'/>
<enum value='20' name='DT_InhibitAnyPolicy'/>
<enum value='4' name='DT_IssuerAltName'/>
<enum value='13' name='DT_IssuingDistributionPoint'/>
<enum value='2' name='DT_KeyUsage'/>
<enum value='17' name='DT_NameConstraints'/>
<enum value='8' name='DT_NetscapeCertType'/>
<enum value='15' name='DT_Other'/>
<enum value='19' name='DT_PolicyConstraints'/>
<enum value='18' name='DT_PolicyMappings'/>
<enum value='16' name='DT_QC_Statements'/>
<enum value='3' name='DT_SubjectAltName'/>
<enum value='1' name='DT_SubjectKeyID'/>
<enum value='2' name='GNT_DNSName'/>
<enum value='4' name='GNT_DirectoryName'/>
<enum value='5' name='GNT_EdiPartyName'/>
<enum value='7' name='GNT_IPAddress'/>
<enum value='0' name='GNT_OtherName'/>
<enum value='1' name='GNT_RFC822Name'/>
<enum value='8' name='GNT_RegisteredID'/>
<enum value='6' name='GNT_URI'/>
<enum value='3' name='GNT_X400Address'/>
<enum value='77' name='INTEL'/>
<enum value='2' name='INTEL_CDSASECURITY'/>
<enum value='8' name='INTEL_CDSASECURITY_LENGTH'/>
<enum value='1' name='INTEL_CERT_AND_PRIVATE_KEY_2_0'/>
<enum value='11' name='INTEL_CERT_AND_PRIVATE_KEY_2_0_LENGTH'/>
<enum value='7' name='INTEL_LENGTH'/>
<enum value='5' name='INTEL_SEC_ALGS'/>
<enum value='10' name='INTEL_SEC_ALGS_LENGTH'/>
<enum value='1' name='INTEL_SEC_FORMATS'/>
<enum value='9' name='INTEL_SEC_FORMATS_LENGTH'/>
<enum value='4' name='INTEL_SEC_OBJECT_BUNDLE'/>
<enum value='10' name='INTEL_SEC_OBJECT_BUNDLE_LENGTH'/>
<enum value='1' name='INTEL_X509V2_CRL_R08'/>
<enum value='11' name='INTEL_X509V2_CRL_R08_LENGTH'/>
<enum value='50' name='INTEL_X509V3_CERT_PRIVATE_EXTENSIONS'/>
<enum value='12' name='INTEL_X509V3_CERT_PRIVATE_EXTENSIONS_LENGTH'/>
<enum value='1' name='INTEL_X509V3_CERT_R08'/>
<enum value='11' name='INTEL_X509V3_CERT_R08_LENGTH'/>
<enum value='2' name='INTEL_X509V3_SIGN_R08'/>
<enum value='11' name='INTEL_X509V3_SIGN_R08_LENGTH'/>
<enum value='1' name='INTEL_X509_C_DATATYPE'/>
<enum value='2' name='INTEL_X509_LDAPSTRING_DATATYPE'/>
<enum value='-1' name='ISL_FAIL'/>
<enum value='0' name='ISL_OK'/>
<enum value='1073741890' name='MDS_CDSAATTR_ACLSUBJECTTYPES'/>
<enum value='1073741850' name='MDS_CDSAATTR_ALG_TYPE'/>
<enum value='1073741852' name='MDS_CDSAATTR_ATTRIBUTE_TYPE'/>
<enum value='1073741853' name='MDS_CDSAATTR_ATTRIBUTE_VALUE'/>
<enum value='1073741898' name='MDS_CDSAATTR_AUTHORITY_REQUEST_TYPE'/>
<enum value='1073741891' name='MDS_CDSAATTR_AUTHTAGS'/>
<enum value='1073741883' name='MDS_CDSAATTR_BUNDLE_TYPEFORMAT'/>
<enum value='1073741829' name='MDS_CDSAATTR_CDSAVERSION'/>
<enum value='1073741884' name='MDS_CDSAATTR_CERT_CLASSNAME'/>
<enum value='1073741882' name='MDS_CDSAATTR_CERT_FIELDNAMES'/>
<enum value='1073741880' name='MDS_CDSAATTR_CERT_TYPEFORMAT'/>
<enum value='1073741877' name='MDS_CDSAATTR_CONJUNCTIVE_OPS'/>
<enum value='1073741849' name='MDS_CDSAATTR_CONTEXT_TYPE'/>
<enum value='1073741881' name='MDS_CDSAATTR_CRL_TYPEFORMAT'/>
<enum value='1073741847' name='MDS_CDSAATTR_CSP_CUSTOMFLAGS'/>
<enum value='1073741846' name='MDS_CDSAATTR_CSP_FLAGS'/>
<enum value='1073741845' name='MDS_CDSAATTR_CSP_TYPE'/>
<enum value='1073741896' name='MDS_CDSAATTR_DEFAULT_TEMPLATE_TYPE'/>
<enum value='1073741832' name='MDS_CDSAATTR_DESC'/>
<enum value='1073741875' name='MDS_CDSAATTR_DL_TYPE'/>
<enum value='1073741842' name='MDS_CDSAATTR_DYNAMIC_FLAG'/>
<enum value='1073741835' name='MDS_CDSAATTR_EMMSPECVERSION'/>
<enum value='1073741838' name='MDS_CDSAATTR_EMM_TYPE'/>
<enum value='1073741837' name='MDS_CDSAATTR_EMM_VENDOR'/>
<enum value='1073741836' name='MDS_CDSAATTR_EMM_VERSION'/>
<enum value='1073741851' name='MDS_CDSAATTR_GROUP_ID'/>
<enum value='1073741833' name='MDS_CDSAATTR_INTERFACE_GUID'/>
<enum value='1073741826' name='MDS_CDSAATTR_MANIFEST'/>
<enum value='1073741825' name='MDS_CDSAATTR_MODULE_ID'/>
<enum value='1073741827' name='MDS_CDSAATTR_MODULE_NAME'/>
<enum value='1073741843' name='MDS_CDSAATTR_MULTITHREAD_FLAG'/>
<enum value='1073741841' name='MDS_CDSAATTR_NATIVE_SERVICES'/>
<enum value='1073741894' name='MDS_CDSAATTR_OID'/>
<enum value='1073741828' name='MDS_CDSAATTR_PATH'/>
<enum value='1073741834' name='MDS_CDSAATTR_POLICY_STMT'/>
<enum value='1073741858' name='MDS_CDSAATTR_PRODUCT_CUSTOMFLAGS'/>
<enum value='1073741854' name='MDS_CDSAATTR_PRODUCT_DESC'/>
<enum value='1073741857' name='MDS_CDSAATTR_PRODUCT_FLAGS'/>
<enum value='1073741855' name='MDS_CDSAATTR_PRODUCT_VENDOR'/>
<enum value='1073741856' name='MDS_CDSAATTR_PRODUCT_VERSION'/>
<enum value='1073741879' name='MDS_CDSAATTR_PROTOCOL'/>
<enum value='1073741876' name='MDS_CDSAATTR_QUERY_LIMITS'/>
<enum value='1073741866' name='MDS_CDSAATTR_READER_CUSTOMFLAGS'/>
<enum value='1073741861' name='MDS_CDSAATTR_READER_DESC'/>
<enum value='1073741865' name='MDS_CDSAATTR_READER_FLAGS'/>
<enum value='1073741864' name='MDS_CDSAATTR_READER_FWVERSION'/>
<enum value='1073741867' name='MDS_CDSAATTR_READER_SERIALNUMBER'/>
<enum value='1073741862' name='MDS_CDSAATTR_READER_VENDOR'/>
<enum value='1073741863' name='MDS_CDSAATTR_READER_VERSION'/>
<enum value='1073741878' name='MDS_CDSAATTR_RELATIONAL_OPS'/>
<enum value='1073741888' name='MDS_CDSAATTR_REQCREDENTIALS'/>
<enum value='1073741893' name='MDS_CDSAATTR_RETRIEVALMODE'/>
<enum value='1073741885' name='MDS_CDSAATTR_ROOTCERT'/>
<enum value='1073741886' name='MDS_CDSAATTR_ROOTCERT_TYPEFORMAT'/>
<enum value='1073741889' name='MDS_CDSAATTR_SAMPLETYPES'/>
<enum value='1073741873' name='MDS_CDSAATTR_SC_CUSTOMFLAGS'/>
<enum value='1073741868' name='MDS_CDSAATTR_SC_DESC'/>
<enum value='1073741872' name='MDS_CDSAATTR_SC_FLAGS'/>
<enum value='1073741871' name='MDS_CDSAATTR_SC_FWVERSION'/>
<enum value='1073741874' name='MDS_CDSAATTR_SC_SERIALNUMBER'/>
<enum value='1073741869' name='MDS_CDSAATTR_SC_VENDOR'/>
<enum value='1073741870' name='MDS_CDSAATTR_SC_VERSION'/>
<enum value='1073741844' name='MDS_CDSAATTR_SERVICE_MASK'/>
<enum value='1073741840' name='MDS_CDSAATTR_SERVICE_TYPE'/>
<enum value='1073741839' name='MDS_CDSAATTR_SSID'/>
<enum value='1073741859' name='MDS_CDSAATTR_STANDARD_DESC'/>
<enum value='1073741860' name='MDS_CDSAATTR_STANDARD_VERSION'/>
<enum value='1073741897' name='MDS_CDSAATTR_TEMPLATE_FIELD_NAMES'/>
<enum value='1073741892' name='MDS_CDSAATTR_USEETAG'/>
<enum value='1073741848' name='MDS_CDSAATTR_USEE_TAGS'/>
<enum value='1073741887' name='MDS_CDSAATTR_VALUE'/>
<enum value='1073741830' name='MDS_CDSAATTR_VENDOR'/>
<enum value='1073741895' name='MDS_CDSAATTR_XLATIONTYPEFORMAT'/>
<enum value='6' name='MDS_CDSADIR_AC_PRIMARY_NUM_ATTRIBUTES'/>
<enum value='1073741841' name='MDS_CDSADIR_AC_PRIMARY_RECORDTYPE'/>
<enum value='8' name='MDS_CDSADIR_CL_ENCAPSULATED_PRODUCT_NUM_ATTRIBUTES'/>
<enum value='1073741836' name='MDS_CDSADIR_CL_ENCAPSULATED_PRODUCT_RECORDTYPE'/>
<enum value='13' name='MDS_CDSADIR_CL_PRIMARY_NUM_ATTRIBUTES'/>
<enum value='1073741835' name='MDS_CDSADIR_CL_PRIMARY_RECORDTYPE'/>
<enum value='9' name='MDS_CDSADIR_COMMON_NUM_ATTRIBUTES'/>
<enum value='1073741828' name='MDS_CDSADIR_COMMON_RECORDTYPE'/>
<enum value='9' name='MDS_CDSADIR_CSP_CAPABILITY_NUM_ATTRIBUTES'/>
<enum value='1073741830' name='MDS_CDSADIR_CSP_CAPABILITY_RECORDTYPE'/>
<enum value='16' name='MDS_CDSADIR_CSP_ENCAPSULATED_PRODUCT_NUM_ATTRIBUTES'/>
<enum value='1073741831' name='MDS_CDSADIR_CSP_ENCAPSULATED_PRODUCT_RECORDTYPE'/>
<enum value='13' name='MDS_CDSADIR_CSP_PRIMARY_NUM_ATTRIBUTES'/>
<enum value='1073741829' name='MDS_CDSADIR_CSP_PRIMARY_RECORDTYPE'/>
<enum value='9' name='MDS_CDSADIR_CSP_SC_INFO_NUM_ATTRIBUTES'/>
<enum value='1073741832' name='MDS_CDSADIR_CSP_SC_INFO_RECORDTYPE'/>
<enum value='4' name='MDS_CDSADIR_CSSM_NUM_ATTRIBUTES'/>
<enum value='1073741825' name='MDS_CDSADIR_CSSM_RECORDTYPE'/>
<enum value='10' name='MDS_CDSADIR_DL_ENCAPSULATED_PRODUCT_NUM_ATTRIBUTES'/>
<enum value='1073741834' name='MDS_CDSADIR_DL_ENCAPSULATED_PRODUCT_RECORDTYPE'/>
<enum value='13' name='MDS_CDSADIR_DL_PRIMARY_NUM_ATTRIBUTES'/>
<enum value='1073741833' name='MDS_CDSADIR_DL_PRIMARY_RECORDTYPE'/>
<enum value='11' name='MDS_CDSADIR_EMM_NUM_ATTRIBUTES'/>
<enum value='9' name='MDS_CDSADIR_EMM_PRIMARY_NUM_ATTRIBUTES'/>
<enum value='1073741840' name='MDS_CDSADIR_EMM_PRIMARY_RECORDTYPE'/>
<enum value='1073741827' name='MDS_CDSADIR_EMM_RECORDTYPE'/>
<enum value='1073741826' name='MDS_CDSADIR_KRMM_RECORDTYPE'/>
<enum value='1073741842' name='MDS_CDSADIR_KR_PRIMARY_RECORDTYPE'/>
<enum value='1073741844' name='MDS_CDSADIR_MDS_SCHEMA_ATTRIBUTES'/>
<enum value='1073741845' name='MDS_CDSADIR_MDS_SCHEMA_INDEXES'/>
<enum value='1073741843' name='MDS_CDSADIR_MDS_SCHEMA_RELATIONS'/>
<enum value='19' name='MDS_CDSADIR_NUM_RELATIONS'/>
<enum value='6' name='MDS_CDSADIR_SCHEMA_ATTRIBUTES_NUM_ATTRIBUTES'/>
<enum value='5' name='MDS_CDSADIR_SCHEMA_INDEXES_NUM_ATTRIBUTES'/>
<enum value='2' name='MDS_CDSADIR_SCHEMA_RELATONS_NUM_ATTRIBUTES'/>
<enum value='14' name='MDS_CDSADIR_TP_ENCAPSULATED_PRODUCT_NUM_ATTRIBUTES'/>
<enum value='1073741839' name='MDS_CDSADIR_TP_ENCAPSULATED_PRODUCT_RECORDTYPE'/>
<enum value='4' name='MDS_CDSADIR_TP_OIDS_NUM_ATTRIBUTES'/>
<enum value='1073741838' name='MDS_CDSADIR_TP_OIDS_RECORDTYPE'/>
<enum value='10' name='MDS_CDSADIR_TP_PRIMARY_NUM_ATTRIBUTES'/>
<enum value='1073741837' name='MDS_CDSADIR_TP_PRIMARY_RECORDTYPE'/>
<enum value='1073741824' name='MDS_CDSA_SCHEMA_START'/>
<enum value='4' name='MDS_OBJECT_NUM_ATTRIBUTES'/>
<enum value='1' name='MDS_OBJECT_NUM_RELATIONS'/>
<enum value='1073741824' name='MDS_OBJECT_RECORDTYPE'/>
<enum value='66' name='NETSCAPE_BASE_OID'/>
<enum value='7' name='NETSCAPE_BASE_OID_LEN'/>
<enum value='1' name='NETSCAPE_CERT_EXTEN'/>
<enum value='8' name='NETSCAPE_CERT_EXTEN_LENGTH'/>
<enum value='4' name='NETSCAPE_CERT_POLICY'/>
<enum value='8' name='NETSCAPE_CERT_POLICY_LENGTH'/>
<enum value='48' name='OID_AD'/>
<enum value='7' name='OID_AD_LENGTH'/>
<enum value='1' name='OID_AD_OCSP'/>
<enum value='8' name='OID_AD_OCSP_LENGTH'/>
<enum value='2' name='OID_ANSI_X9_42'/>
<enum value='6' name='OID_ANSI_X9_42_LEN'/>
<enum value='4' name='OID_ANSI_X9_42_NAMED_SCHEME'/>
<enum value='7' name='OID_ANSI_X9_42_NAMED_SCHEME_LEN'/>
<enum value='3' name='OID_ANSI_X9_42_SCHEME'/>
<enum value='7' name='OID_ANSI_X9_42_SCHEME_LEN'/>
<enum value='61' name='OID_ANSI_X9_62'/>
<enum value='0' name='OID_ANSI_X9_62_C_TWO_CURVE'/>
<enum value='3' name='OID_ANSI_X9_62_ELL_CURVE'/>
<enum value='6' name='OID_ANSI_X9_62_ELL_CURVE_LEN'/>
<enum value='1' name='OID_ANSI_X9_62_FIELD_TYPE'/>
<enum value='5' name='OID_ANSI_X9_62_LEN'/>
<enum value='1' name='OID_ANSI_X9_62_PRIME_CURVE'/>
<enum value='2' name='OID_ANSI_X9_62_PUBKEY_TYPE'/>
<enum value='4' name='OID_ANSI_X9_62_SIG_TYPE'/>
<enum value='6' name='OID_ANSI_X9_62_SIG_TYPE_LEN'/>
<enum value='4' name='OID_ATTR_TYPE'/>
<enum value='2' name='OID_ATTR_TYPE_LENGTH'/>
<enum value='4' name='OID_CERTICOM'/>
<enum value='0' name='OID_CERTICOM_ELL_CURVE'/>
<enum value='4' name='OID_CERTICOM_ELL_CURVE_LEN'/>
<enum value='3' name='OID_CERTICOM_LEN'/>
<enum value='6' name='OID_DOD'/>
<enum value='85' name='OID_DS'/>
<enum value='1' name='OID_DS_LENGTH'/>
<enum value='0' name='OID_ETSI'/>
<enum value='2' name='OID_ETSI_LENGTH'/>
<enum value='1' name='OID_ETSI_QCS'/>
<enum value='5' name='OID_ETSI_QCS_LENGTH'/>
<enum value='29' name='OID_EXTENSION'/>
<enum value='2' name='OID_EXTENSION_LENGTH'/>
<enum value='5' name='OID_GOSIP'/>
<enum value='85' name='OID_ISO_CCITT_DIR_SERVICE'/>
<enum value='43' name='OID_ISO_IDENTIFIED_ORG'/>
<enum value='42' name='OID_ISO_MEMBER'/>
<enum value='1' name='OID_ISO_MEMBER_LENGTH'/>
<enum value='40' name='OID_ISO_STANDARD'/>
<enum value='9' name='OID_ITU_RFCDATA'/>
<enum value='134' name='OID_ITU_RFCDATA_2342'/>
<enum value='3' name='OID_ITU_RFCDATA_2342_LENGTH'/>
<enum value='140' name='OID_ITU_RFCDATA_2342_UCL'/>
<enum value='228' name='OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT'/>
<enum value='129' name='OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_ATTRIBUTES'/>
<enum value='153' name='OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_ATTRIBUTES_DOMAINCOMPONENT'/>
<enum value='10' name='OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_ATTRIBUTES_DOMAINCOMPONENT_LENGTH'/>
<enum value='9' name='OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_ATTRIBUTES_LENGTH'/>
<enum value='129' name='OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_ATTRIBUTES_USERID'/>
<enum value='10' name='OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_ATTRIBUTES_USERID_LENGTH'/>
<enum value='8' name='OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_LENGTH'/>
<enum value='7' name='OID_ITU_RFCDATA_2342_UCL_LENGTH'/>
<enum value='1' name='OID_ITU_RFCDATA_MEMBER_LENGTH'/>
<enum value='2' name='OID_KERBv5'/>
<enum value='5' name='OID_KERBv5_LEN'/>
<enum value='3' name='OID_KERBv5_PKINIT'/>
<enum value='6' name='OID_KERBv5_PKINIT_LEN'/>
<enum value='3' name='OID_KP'/>
<enum value='7' name='OID_KP_LENGTH'/>
<enum value='2' name='OID_NIST_HASHALG'/>
<enum value='8' name='OID_NIST_HASHALG_LENGTH'/>
<enum value='14' name='OID_OIW'/>
<enum value='2' name='OID_OIW_ALGORITHM'/>
<enum value='4' name='OID_OIW_ALGORITHM_LENGTH'/>
<enum value='2' name='OID_OIW_LENGTH'/>
<enum value='3' name='OID_OIW_SECSIG'/>
<enum value='3' name='OID_OIW_SECSIG_LENGTH'/>
<enum value='4' name='OID_OSINET'/>
<enum value='8' name='OID_OTHER_NAME'/>
<enum value='7' name='OID_OTHER_NAME_LENGTH'/>
<enum value='9' name='OID_PDA'/>
<enum value='7' name='OID_PDA_LENGTH'/>
<enum value='1' name='OID_PE'/>
<enum value='7' name='OID_PE_LENGTH'/>
<enum value='1' name='OID_PKCS'/>
<enum value='1' name='OID_PKCS_1'/>
<enum value='10' name='OID_PKCS_10'/>
<enum value='11' name='OID_PKCS_11'/>
<enum value='8' name='OID_PKCS_11_LENGTH'/>
<enum value='12' name='OID_PKCS_12'/>
<enum value='8' name='OID_PKCS_12_LENGTH'/>
<enum value='8' name='OID_PKCS_1_LENGTH'/>
<enum value='2' name='OID_PKCS_2'/>
<enum value='3' name='OID_PKCS_3'/>
<enum value='8' name='OID_PKCS_3_LENGTH'/>
<enum value='4' name='OID_PKCS_4'/>
<enum value='5' name='OID_PKCS_5'/>
<enum value='8' name='OID_PKCS_5_LENGTH'/>
<enum value='6' name='OID_PKCS_6'/>
<enum value='7' name='OID_PKCS_7'/>
<enum value='8' name='OID_PKCS_7_LENGTH'/>
<enum value='8' name='OID_PKCS_8'/>
<enum value='9' name='OID_PKCS_9'/>
<enum value='8' name='OID_PKCS_9_LENGTH'/>
<enum value='7' name='OID_PKCS_LENGTH'/>
<enum value='7' name='OID_PKIX'/>
<enum value='6' name='OID_PKIX_LENGTH'/>
<enum value='11' name='OID_QCS'/>
<enum value='7' name='OID_QCS_LENGTH'/>
<enum value='2' name='OID_QT'/>
<enum value='7' name='OID_QT_LENGTH'/>
<enum value='13' name='OID_RSA'/>
<enum value='3' name='OID_RSA_ENCRYPT'/>
<enum value='7' name='OID_RSA_ENCRYPT_LENGTH'/>
<enum value='2' name='OID_RSA_HASH'/>
<enum value='7' name='OID_RSA_HASH_LENGTH'/>
<enum value='6' name='OID_RSA_LENGTH'/>
<enum value='72' name='OID_US'/>
<enum value='3' name='OID_US_LENGTH'/>
<enum value='1024' name='SEC_ASN1_ANY'/>
<enum value='66560' name='SEC_ASN1_ANY_CONTENTS'/>
<enum value='64' name='SEC_ASN1_APPLICATION'/>
<enum value='3' name='SEC_ASN1_BIT_STRING'/>
<enum value='30' name='SEC_ASN1_BMP_STRING'/>
<enum value='1' name='SEC_ASN1_BOOLEAN'/>
<enum value='1048576' name='SEC_ASN1_CHOICE'/>
<enum value='192' name='SEC_ASN1_CLASS_MASK'/>
<enum value='32' name='SEC_ASN1_CONSTRUCTED'/>
<enum value='128' name='SEC_ASN1_CONTEXT_SPECIFIC'/>
<enum value='16384' name='SEC_ASN1_DYNAMIC'/>
<enum value='11' name='SEC_ASN1_EMBEDDED_PDV'/>
<enum value='10' name='SEC_ASN1_ENUMERATED'/>
<enum value='512' name='SEC_ASN1_EXPLICIT'/>
<enum value='24' name='SEC_ASN1_GENERALIZED_TIME'/>
<enum value='27' name='SEC_ASN1_GENERAL_STRING'/>
<enum value='25' name='SEC_ASN1_GRAPHIC_STRING'/>
<enum value='8192' name='SEC_ASN1_GROUP'/>
<enum value='31' name='SEC_ASN1_HIGH_TAG_NUMBER'/>
<enum value='22' name='SEC_ASN1_IA5_STRING'/>
<enum value='2048' name='SEC_ASN1_INLINE'/>
<enum value='65536' name='SEC_ASN1_INNER'/>
<enum value='2' name='SEC_ASN1_INTEGER'/>
<enum value='32' name='SEC_ASN1_METHOD_MASK'/>
<enum value='5' name='SEC_ASN1_NULL'/>
<enum value='18' name='SEC_ASN1_NUMERIC_STRING'/>
<enum value='7' name='SEC_ASN1_OBJECT_DESCRIPTOR'/>
<enum value='6' name='SEC_ASN1_OBJECT_ID'/>
<enum value='4' name='SEC_ASN1_OCTET_STRING'/>
<enum value='256' name='SEC_ASN1_OPTIONAL'/>
<enum value='4096' name='SEC_ASN1_POINTER'/>
<enum value='0' name='SEC_ASN1_PRIMITIVE'/>
<enum value='19' name='SEC_ASN1_PRINTABLE_STRING'/>
<enum value='192' name='SEC_ASN1_PRIVATE'/>
<enum value='9' name='SEC_ASN1_REAL'/>
<enum value='131072' name='SEC_ASN1_SAVE'/>
<enum value='16' name='SEC_ASN1_SEQUENCE'/>
<enum value='8208' name='SEC_ASN1_SEQUENCE_OF'/>
<enum value='17' name='SEC_ASN1_SET'/>
<enum value='8209' name='SEC_ASN1_SET_OF'/>
<enum value='8388608' name='SEC_ASN1_SIGNED_INT'/>
<enum value='32768' name='SEC_ASN1_SKIP'/>
<enum value='524288' name='SEC_ASN1_SKIP_REST'/>
<enum value='20' name='SEC_ASN1_T61_STRING'/>
<enum value='31' name='SEC_ASN1_TAGNUM_MASK'/>
<enum value='255' name='SEC_ASN1_TAG_MASK'/>
<enum value='20' name='SEC_ASN1_TELETEX_STRING'/>
<enum value='0' name='SEC_ASN1_UNIVERSAL'/>
<enum value='28' name='SEC_ASN1_UNIVERSAL_STRING'/>
<enum value='23' name='SEC_ASN1_UTC_TIME'/>
<enum value='12' name='SEC_ASN1_UTF8_STRING'/>
<enum value='21' name='SEC_ASN1_VIDEOTEX_STRING'/>
<enum value='26' name='SEC_ASN1_VISIBLE_STRING'/>
<enum value='1' name='SEC_KEYCHAIN_SETTINGS_VERS1'/>
<enum value='0' name='SEC_KEY_IMPORT_EXPORT_PARAMS_VERSION'/>
<enum value='17' name='SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA'/>
<enum value='19' name='SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA'/>
<enum value='18' name='SSL_DHE_DSS_WITH_DES_CBC_SHA'/>
<enum value='20' name='SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA'/>
<enum value='22' name='SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA'/>
<enum value='21' name='SSL_DHE_RSA_WITH_DES_CBC_SHA'/>
<enum value='11' name='SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA'/>
<enum value='13' name='SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA'/>
<enum value='12' name='SSL_DH_DSS_WITH_DES_CBC_SHA'/>
<enum value='14' name='SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA'/>
<enum value='16' name='SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA'/>
<enum value='15' name='SSL_DH_RSA_WITH_DES_CBC_SHA'/>
<enum value='25' name='SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA'/>
<enum value='23' name='SSL_DH_anon_EXPORT_WITH_RC4_40_MD5'/>
<enum value='27' name='SSL_DH_anon_WITH_3DES_EDE_CBC_SHA'/>
<enum value='26' name='SSL_DH_anon_WITH_DES_CBC_SHA'/>
<enum value='24' name='SSL_DH_anon_WITH_RC4_128_MD5'/>
<enum value='29' name='SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA'/>
<enum value='28' name='SSL_FORTEZZA_DMS_WITH_NULL_SHA'/>
<enum value='65535' name='SSL_NO_SUCH_CIPHERSUITE'/>
<enum value='0' name='SSL_NULL_WITH_NULL_NULL'/>
<enum value='8' name='SSL_RSA_EXPORT_WITH_DES40_CBC_SHA'/>
<enum value='6' name='SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5'/>
<enum value='3' name='SSL_RSA_EXPORT_WITH_RC4_40_MD5'/>
<enum value='65411' name='SSL_RSA_WITH_3DES_EDE_CBC_MD5'/>
<enum value='10' name='SSL_RSA_WITH_3DES_EDE_CBC_SHA'/>
<enum value='65410' name='SSL_RSA_WITH_DES_CBC_MD5'/>
<enum value='9' name='SSL_RSA_WITH_DES_CBC_SHA'/>
<enum value='65409' name='SSL_RSA_WITH_IDEA_CBC_MD5'/>
<enum value='7' name='SSL_RSA_WITH_IDEA_CBC_SHA'/>
<enum value='1' name='SSL_RSA_WITH_NULL_MD5'/>
<enum value='2' name='SSL_RSA_WITH_NULL_SHA'/>
<enum value='65408' name='SSL_RSA_WITH_RC2_CBC_MD5'/>
<enum value='4' name='SSL_RSA_WITH_RC4_128_MD5'/>
<enum value='5' name='SSL_RSA_WITH_RC4_128_SHA'/>
<enum value='19' name='TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA'/>
<enum value='50' name='TLS_DHE_DSS_WITH_AES_128_CBC_SHA'/>
<enum value='64' name='TLS_DHE_DSS_WITH_AES_128_CBC_SHA256'/>
<enum value='162' name='TLS_DHE_DSS_WITH_AES_128_GCM_SHA256'/>
<enum value='56' name='TLS_DHE_DSS_WITH_AES_256_CBC_SHA'/>
<enum value='106' name='TLS_DHE_DSS_WITH_AES_256_CBC_SHA256'/>
<enum value='163' name='TLS_DHE_DSS_WITH_AES_256_GCM_SHA384'/>
<enum value='22' name='TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA'/>
<enum value='51' name='TLS_DHE_RSA_WITH_AES_128_CBC_SHA'/>
<enum value='103' name='TLS_DHE_RSA_WITH_AES_128_CBC_SHA256'/>
<enum value='158' name='TLS_DHE_RSA_WITH_AES_128_GCM_SHA256'/>
<enum value='57' name='TLS_DHE_RSA_WITH_AES_256_CBC_SHA'/>
<enum value='107' name='TLS_DHE_RSA_WITH_AES_256_CBC_SHA256'/>
<enum value='159' name='TLS_DHE_RSA_WITH_AES_256_GCM_SHA384'/>
<enum value='13' name='TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA'/>
<enum value='48' name='TLS_DH_DSS_WITH_AES_128_CBC_SHA'/>
<enum value='62' name='TLS_DH_DSS_WITH_AES_128_CBC_SHA256'/>
<enum value='164' name='TLS_DH_DSS_WITH_AES_128_GCM_SHA256'/>
<enum value='54' name='TLS_DH_DSS_WITH_AES_256_CBC_SHA'/>
<enum value='104' name='TLS_DH_DSS_WITH_AES_256_CBC_SHA256'/>
<enum value='165' name='TLS_DH_DSS_WITH_AES_256_GCM_SHA384'/>
<enum value='16' name='TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA'/>
<enum value='49' name='TLS_DH_RSA_WITH_AES_128_CBC_SHA'/>
<enum value='63' name='TLS_DH_RSA_WITH_AES_128_CBC_SHA256'/>
<enum value='160' name='TLS_DH_RSA_WITH_AES_128_GCM_SHA256'/>
<enum value='55' name='TLS_DH_RSA_WITH_AES_256_CBC_SHA'/>
<enum value='105' name='TLS_DH_RSA_WITH_AES_256_CBC_SHA256'/>
<enum value='161' name='TLS_DH_RSA_WITH_AES_256_GCM_SHA384'/>
<enum value='27' name='TLS_DH_anon_WITH_3DES_EDE_CBC_SHA'/>
<enum value='52' name='TLS_DH_anon_WITH_AES_128_CBC_SHA'/>
<enum value='108' name='TLS_DH_anon_WITH_AES_128_CBC_SHA256'/>
<enum value='166' name='TLS_DH_anon_WITH_AES_128_GCM_SHA256'/>
<enum value='58' name='TLS_DH_anon_WITH_AES_256_CBC_SHA'/>
<enum value='109' name='TLS_DH_anon_WITH_AES_256_CBC_SHA256'/>
<enum value='167' name='TLS_DH_anon_WITH_AES_256_GCM_SHA384'/>
<enum value='24' name='TLS_DH_anon_WITH_RC4_128_MD5'/>
<enum value='49160' name='TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA'/>
<enum value='49161' name='TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA'/>
<enum value='49187' name='TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256'/>
<enum value='49195' name='TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256'/>
<enum value='49162' name='TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA'/>
<enum value='49188' name='TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384'/>
<enum value='49196' name='TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384'/>
<enum value='49158' name='TLS_ECDHE_ECDSA_WITH_NULL_SHA'/>
<enum value='49159' name='TLS_ECDHE_ECDSA_WITH_RC4_128_SHA'/>
<enum value='49170' name='TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA'/>
<enum value='49171' name='TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA'/>
<enum value='49191' name='TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256'/>
<enum value='49199' name='TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256'/>
<enum value='49172' name='TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA'/>
<enum value='49192' name='TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384'/>
<enum value='49200' name='TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384'/>
<enum value='49168' name='TLS_ECDHE_RSA_WITH_NULL_SHA'/>
<enum value='49169' name='TLS_ECDHE_RSA_WITH_RC4_128_SHA'/>
<enum value='49155' name='TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA'/>
<enum value='49156' name='TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA'/>
<enum value='49189' name='TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256'/>
<enum value='49197' name='TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256'/>
<enum value='49157' name='TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA'/>
<enum value='49190' name='TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384'/>
<enum value='49198' name='TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384'/>
<enum value='49153' name='TLS_ECDH_ECDSA_WITH_NULL_SHA'/>
<enum value='49154' name='TLS_ECDH_ECDSA_WITH_RC4_128_SHA'/>
<enum value='49165' name='TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA'/>
<enum value='49166' name='TLS_ECDH_RSA_WITH_AES_128_CBC_SHA'/>
<enum value='49193' name='TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256'/>
<enum value='49201' name='TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256'/>
<enum value='49167' name='TLS_ECDH_RSA_WITH_AES_256_CBC_SHA'/>
<enum value='49194' name='TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384'/>
<enum value='49202' name='TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384'/>
<enum value='49163' name='TLS_ECDH_RSA_WITH_NULL_SHA'/>
<enum value='49164' name='TLS_ECDH_RSA_WITH_RC4_128_SHA'/>
<enum value='49175' name='TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA'/>
<enum value='49176' name='TLS_ECDH_anon_WITH_AES_128_CBC_SHA'/>
<enum value='49177' name='TLS_ECDH_anon_WITH_AES_256_CBC_SHA'/>
<enum value='49173' name='TLS_ECDH_anon_WITH_NULL_SHA'/>
<enum value='49174' name='TLS_ECDH_anon_WITH_RC4_128_SHA'/>
<enum value='255' name='TLS_EMPTY_RENEGOTIATION_INFO_SCSV'/>
<enum value='0' name='TLS_NULL_WITH_NULL_NULL'/>
<enum value='10' name='TLS_RSA_WITH_3DES_EDE_CBC_SHA'/>
<enum value='47' name='TLS_RSA_WITH_AES_128_CBC_SHA'/>
<enum value='60' name='TLS_RSA_WITH_AES_128_CBC_SHA256'/>
<enum value='156' name='TLS_RSA_WITH_AES_128_GCM_SHA256'/>
<enum value='53' name='TLS_RSA_WITH_AES_256_CBC_SHA'/>
<enum value='61' name='TLS_RSA_WITH_AES_256_CBC_SHA256'/>
<enum value='157' name='TLS_RSA_WITH_AES_256_GCM_SHA384'/>
<enum value='1' name='TLS_RSA_WITH_NULL_MD5'/>
<enum value='2' name='TLS_RSA_WITH_NULL_SHA'/>
<enum value='59' name='TLS_RSA_WITH_NULL_SHA256'/>
<enum value='4' name='TLS_RSA_WITH_RC4_128_MD5'/>
<enum value='5' name='TLS_RSA_WITH_RC4_128_SHA'/>
<enum value='4294967295' name='callerSecuritySession'/>
<enum value='-60033' name='errAuthorizationBadAddress'/>
<enum value='-60006' name='errAuthorizationCanceled'/>
<enum value='-60005' name='errAuthorizationDenied'/>
<enum value='-60009' name='errAuthorizationExternalizeNotAllowed'/>
<enum value='-60007' name='errAuthorizationInteractionNotAllowed'/>
<enum value='-60008' name='errAuthorizationInternal'/>
<enum value='-60010' name='errAuthorizationInternalizeNotAllowed'/>
<enum value='-60011' name='errAuthorizationInvalidFlags'/>
<enum value='-60004' name='errAuthorizationInvalidPointer'/>
<enum value='-60002' name='errAuthorizationInvalidRef'/>
<enum value='-60001' name='errAuthorizationInvalidSet'/>
<enum value='-60003' name='errAuthorizationInvalidTag'/>
<enum value='0' name='errAuthorizationSuccess'/>
<enum value='-60032' name='errAuthorizationToolEnvironmentError'/>
<enum value='-60031' name='errAuthorizationToolExecuteFailure'/>
<enum value='-9808' name='errSSLBadCert'/>
<enum value='-9818' name='errSSLBadCipherSuite'/>
<enum value='-9848' name='errSSLBadConfiguration'/>
<enum value='-9846' name='errSSLBadRecordMac'/>
<enum value='-9817' name='errSSLBufferOverflow'/>
<enum value='-9814' name='errSSLCertExpired'/>
<enum value='-9815' name='errSSLCertNotYetValid'/>
<enum value='-9841' name='errSSLClientAuthCompleted'/>
<enum value='-9842' name='errSSLClientCertRequested'/>
<enum value='-9806' name='errSSLClosedAbort'/>
<enum value='-9805' name='errSSLClosedGraceful'/>
<enum value='-9816' name='errSSLClosedNoNotify'/>
<enum value='-9844' name='errSSLConnectionRefused'/>
<enum value='-9809' name='errSSLCrypto'/>
<enum value='-9845' name='errSSLDecryptionFail'/>
<enum value='-9802' name='errSSLFatalAlert'/>
<enum value='-9843' name='errSSLHostNameMismatch'/>
<enum value='-9830' name='errSSLIllegalParam'/>
<enum value='-9810' name='errSSLInternal'/>
<enum value='-9849' name='errSSLLast'/>
<enum value='-9811' name='errSSLModuleAttach'/>
<enum value='-9801' name='errSSLNegotiation'/>
<enum value='-9813' name='errSSLNoRootCert'/>
<enum value='-9832' name='errSSLPeerAccessDenied'/>
<enum value='-9841' name='errSSLPeerAuthCompleted'/>
<enum value='-9825' name='errSSLPeerBadCert'/>
<enum value='-9820' name='errSSLPeerBadRecordMac'/>
<enum value='-9828' name='errSSLPeerCertExpired'/>
<enum value='-9827' name='errSSLPeerCertRevoked'/>
<enum value='-9829' name='errSSLPeerCertUnknown'/>
<enum value='-9833' name='errSSLPeerDecodeError'/>
<enum value='-9823' name='errSSLPeerDecompressFail'/>
<enum value='-9834' name='errSSLPeerDecryptError'/>
<enum value='-9821' name='errSSLPeerDecryptionFail'/>
<enum value='-9835' name='errSSLPeerExportRestriction'/>
<enum value='-9824' name='errSSLPeerHandshakeFail'/>
<enum value='-9837' name='errSSLPeerInsufficientSecurity'/>
<enum value='-9838' name='errSSLPeerInternalError'/>
<enum value='-9840' name='errSSLPeerNoRenegotiation'/>
<enum value='-9836' name='errSSLPeerProtocolVersion'/>
<enum value='-9822' name='errSSLPeerRecordOverflow'/>
<enum value='-9819' name='errSSLPeerUnexpectedMsg'/>
<enum value='-9831' name='errSSLPeerUnknownCA'/>
<enum value='-9826' name='errSSLPeerUnsupportedCert'/>
<enum value='-9839' name='errSSLPeerUserCancelled'/>
<enum value='-9800' name='errSSLProtocol'/>
<enum value='-9847' name='errSSLRecordOverflow'/>
<enum value='-9841' name='errSSLServerAuthCompleted'/>
<enum value='-9804' name='errSSLSessionNotFound'/>
<enum value='-9812' name='errSSLUnknownRootCert'/>
<enum value='-9803' name='errSSLWouldBlock'/>
<enum value='-9807' name='errSSLXCertChainInvalid'/>
<enum value='-67698' name='errSecACLAddFailed'/>
<enum value='-67699' name='errSecACLChangeFailed'/>
<enum value='-67696' name='errSecACLDeleteFailed'/>
<enum value='-25240' name='errSecACLNotSimple'/>
<enum value='-67697' name='errSecACLReplaceFailed'/>
<enum value='-67711' name='errSecAddinLoadFailed'/>
<enum value='-67714' name='errSecAddinUnloadFailed'/>
<enum value='-67730' name='errSecAlgorithmMismatch'/>
<enum value='-108' name='errSecAllocate'/>
<enum value='-67814' name='errSecAlreadyLoggedIn'/>
<enum value='-67589' name='errSecAppleAddAppACLSubject'/>
<enum value='-67593' name='errSecAppleInvalidKeyEndDate'/>
<enum value='-67592' name='errSecAppleInvalidKeyStartDate'/>
<enum value='-67590' name='errSecApplePublicKeyIncomplete'/>
<enum value='-67595' name='errSecAppleSSLv2Rollback'/>
<enum value='-67591' name='errSecAppleSignatureMismatch'/>
<enum value='-67728' name='errSecAttachHandleBusy'/>
<enum value='-67720' name='errSecAttributeNotInContext'/>
<enum value='-25293' name='errSecAuthFailed'/>
<enum value='-67810' name='errSecBlockSizeMismatch'/>
<enum value='-25301' name='errSecBufferTooSmall'/>
<enum value='-67684' name='errSecCRLAlreadySigned'/>
<enum value='-67617' name='errSecCRLBadURI'/>
<enum value='-67613' name='errSecCRLExpired'/>
<enum value='-67615' name='errSecCRLNotFound'/>
<enum value='-67620' name='errSecCRLNotTrusted'/>
<enum value='-67614' name='errSecCRLNotValidYet'/>
<enum value='-67621' name='errSecCRLPolicyFailed'/>
<enum value='-67616' name='errSecCRLServerDown'/>
<enum value='-67028' name='errSecCSBadBundleFormat'/>
<enum value='-67058' name='errSecCSBadDictionaryFormat'/>
<enum value='-67049' name='errSecCSBadObjectFormat'/>
<enum value='-67054' name='errSecCSBadResource'/>
<enum value='-67036' name='errSecCSCMSTooLarge'/>
<enum value='-67032' name='errSecCSDBAccess'/>
<enum value='-67033' name='errSecCSDBDenied'/>
<enum value='-67024' name='errSecCSDbCorrupt'/>
<enum value='-67026' name='errSecCSFileHardQuarantined'/>
<enum value='-67063' name='errSecCSGuestInvalid'/>
<enum value='-67043' name='errSecCSHostProtocolContradiction'/>
<enum value='-67042' name='errSecCSHostProtocolDedicationError'/>
<enum value='-67031' name='errSecCSHostProtocolInvalidAttribute'/>
<enum value='-67035' name='errSecCSHostProtocolInvalidHash'/>
<enum value='-67041' name='errSecCSHostProtocolNotProxy'/>
<enum value='-67044' name='errSecCSHostProtocolRelativePath'/>
<enum value='-67040' name='errSecCSHostProtocolStateError'/>
<enum value='-67039' name='errSecCSHostProtocolUnrelated'/>
<enum value='-67047' name='errSecCSHostReject'/>
<enum value='-67030' name='errSecCSInfoPlistFailed'/>
<enum value='-67048' name='errSecCSInternalError'/>
<enum value='-67066' name='errSecCSInvalidAttributeValues'/>
<enum value='-67070' name='errSecCSInvalidFlags'/>
<enum value='-67071' name='errSecCSInvalidObjectRef'/>
<enum value='-67064' name='errSecCSMultipleGuests'/>
<enum value='-67029' name='errSecCSNoMainExecutable'/>
<enum value='-67027' name='errSecCSNoMatches'/>
<enum value='-67065' name='errSecCSNoSuchCode'/>
<enum value='-67046' name='errSecCSNotAHost'/>
<enum value='-67037' name='errSecCSNotSupported'/>
<enum value='-67069' name='errSecCSObjectRequired'/>
<enum value='-67025' name='errSecCSOutdated'/>
<enum value='-67050' name='errSecCSReqFailed'/>
<enum value='-67052' name='errSecCSReqInvalid'/>
<enum value='-67051' name='errSecCSReqUnsupported'/>
<enum value='-67053' name='errSecCSResourceRulesInvalid'/>
<enum value='-67055' name='errSecCSResourcesInvalid'/>
<enum value='-67056' name='errSecCSResourcesNotFound'/>
<enum value='-67057' name='errSecCSResourcesNotSealed'/>
<enum value='-67032' name='errSecCSSigDBAccess'/>
<enum value='-67033' name='errSecCSSigDBDenied'/>
<enum value='-67061' name='errSecCSSignatureFailed'/>
<enum value='-67045' name='errSecCSSignatureInvalid'/>
<enum value='-67060' name='errSecCSSignatureNotVerifiable'/>
<enum value='-67059' name='errSecCSSignatureUnsupported'/>
<enum value='-67034' name='errSecCSStaticCodeChanged'/>
<enum value='-67068' name='errSecCSStaticCodeNotFound'/>
<enum value='-67072' name='errSecCSUnimplemented'/>
<enum value='-67062' name='errSecCSUnsigned'/>
<enum value='-67067' name='errSecCSUnsupportedGuestAttributes'/>
<enum value='-67695' name='errSecCallbackFailed'/>
<enum value='-67817' name='errSecCertificateCannotOperate'/>
<enum value='-67818' name='errSecCertificateExpired'/>
<enum value='-67819' name='errSecCertificateNotValidYet'/>
<enum value='-67820' name='errSecCertificateRevoked'/>
<enum value='-67821' name='errSecCertificateSuspended'/>
<enum value='-67647' name='errSecCodeSigningBadCertChainLength'/>
<enum value='-67649' name='errSecCodeSigningBadPathLengthConstraint'/>
<enum value='-67651' name='errSecCodeSigningDevelopment'/>
<enum value='-67648' name='errSecCodeSigningNoBasicConstraints'/>
<enum value='-67650' name='errSecCodeSigningNoExtendedKeyUsage'/>
<enum value='-67594' name='errSecConversionError'/>
<enum value='-25318' name='errSecCreateChainFailed'/>
<enum value='-25316' name='errSecDataNotAvailable'/>
<enum value='-25317' name='errSecDataNotModifiable'/>
<enum value='-25302' name='errSecDataTooLarge'/>
<enum value='-67869' name='errSecDatabaseLocked'/>
<enum value='-67870' name='errSecDatastoreIsOpen'/>
<enum value='-26275' name='errSecDecode'/>
<enum value='-67727' name='errSecDeviceError'/>
<enum value='-67588' name='errSecDeviceFailed'/>
<enum value='-67587' name='errSecDeviceReset'/>
<enum value='-67812' name='errSecDeviceVerifyFailed'/>
<enum value='-34' name='errSecDiskFull'/>
<enum value='-25297' name='errSecDuplicateCallback'/>
<enum value='-25299' name='errSecDuplicateItem'/>
<enum value='-25296' name='errSecDuplicateKeychain'/>
<enum value='-67709' name='errSecEMMLoadFailed'/>
<enum value='-67710' name='errSecEMMUnloadFailed'/>
<enum value='-67634' name='errSecEndOfData'/>
<enum value='100000' name='errSecErrnoBase'/>
<enum value='100255' name='errSecErrnoLimit'/>
<enum value='-67723' name='errSecEventNotificationCallbackNotFound'/>
<enum value='-67881' name='errSecExtendedKeyUsageNotCritical'/>
<enum value='-67866' name='errSecFieldSpecifiedMultiple'/>
<enum value='-67597' name='errSecFileTooBig'/>
<enum value='-67677' name='errSecFunctionFailed'/>
<enum value='-67670' name='errSecFunctionIntegrityFail'/>
<enum value='-67602' name='errSecHostNameMismatch'/>
<enum value='-67622' name='errSecIDPFailure'/>
<enum value='-25320' name='errSecInDarkWake'/>
<enum value='-67600' name='errSecIncompatibleDatabaseBlob'/>
<enum value='-67867' name='errSecIncompatibleFieldFormat'/>
<enum value='-67601' name='errSecIncompatibleKeyBlob'/>
<enum value='-67704' name='errSecIncompatibleVersion'/>
<enum value='-67635' name='errSecIncompleteCertRevocationCheck'/>
<enum value='-67724' name='errSecInputLengthError'/>
<enum value='-67586' name='errSecInsufficientClientID'/>
<enum value='-67822' name='errSecInsufficientCredentials'/>
<enum value='-25308' name='errSecInteractionNotAllowed'/>
<enum value='-25315' name='errSecInteractionRequired'/>
<enum value='-67671' name='errSecInternalError'/>
<enum value='-67827' name='errSecInvaldCRLAuthority'/>
<enum value='-67702' name='errSecInvalidACL'/>
<enum value='-67700' name='errSecInvalidAccessCredentials'/>
<enum value='-67876' name='errSecInvalidAccessRequest'/>
<enum value='-67823' name='errSecInvalidAction'/>
<enum value='-67716' name='errSecInvalidAddinFunctionTable'/>
<enum value='-67747' name='errSecInvalidAlgorithm'/>
<enum value='-67770' name='errSecInvalidAlgorithmParms'/>
<enum value='-67796' name='errSecInvalidAttributeAccessCredentials'/>
<enum value='-67788' name='errSecInvalidAttributeBase'/>
<enum value='-67764' name='errSecInvalidAttributeBlockSize'/>
<enum value='-67794' name='errSecInvalidAttributeDLDBHandle'/>
<enum value='-67778' name='errSecInvalidAttributeEffectiveBits'/>
<enum value='-67782' name='errSecInvalidAttributeEndDate'/>
<enum value='-67750' name='errSecInvalidAttributeInitVector'/>
<enum value='-67792' name='errSecInvalidAttributeIterationCount'/>
<enum value='-67748' name='errSecInvalidAttributeKey'/>
<enum value='-67762' name='errSecInvalidAttributeKeyLength'/>
<enum value='-67774' name='errSecInvalidAttributeKeyType'/>
<enum value='-67772' name='errSecInvalidAttributeLabel'/>
<enum value='-67776' name='errSecInvalidAttributeMode'/>
<enum value='-67766' name='errSecInvalidAttributeOutputSize'/>
<enum value='-67754' name='errSecInvalidAttributePadding'/>
<enum value='-67760' name='errSecInvalidAttributePassphrase'/>
<enum value='-67786' name='errSecInvalidAttributePrime'/>
<enum value='-67800' name='errSecInvalidAttributePrivateKeyFormat'/>
<enum value='-67798' name='errSecInvalidAttributePublicKeyFormat'/>
<enum value='-67756' name='errSecInvalidAttributeRandom'/>
<enum value='-67768' name='errSecInvalidAttributeRounds'/>
<enum value='-67752' name='errSecInvalidAttributeSalt'/>
<enum value='-67758' name='errSecInvalidAttributeSeed'/>
<enum value='-67780' name='errSecInvalidAttributeStartDate'/>
<enum value='-67790' name='errSecInvalidAttributeSubprime'/>
<enum value='-67802' name='errSecInvalidAttributeSymmetricKeyFormat'/>
<enum value='-67784' name='errSecInvalidAttributeVersion'/>
<enum value='-67804' name='errSecInvalidAttributeWrappedKeyFormat'/>
<enum value='-67824' name='errSecInvalidAuthority'/>
<enum value='-67606' name='errSecInvalidAuthorityKeyID'/>
<enum value='-67851' name='errSecInvalidBaseACLs'/>
<enum value='-67857' name='errSecInvalidBundleInfo'/>
<enum value='-67830' name='errSecInvalidCRL'/>
<enum value='-67828' name='errSecInvalidCRLEncoding'/>
<enum value='-67816' name='errSecInvalidCRLGroup'/>
<enum value='-67858' name='errSecInvalidCRLIndex'/>
<enum value='-67829' name='errSecInvalidCRLType'/>
<enum value='-25298' name='errSecInvalidCallback'/>
<enum value='-67826' name='errSecInvalidCertAuthority'/>
<enum value='-67691' name='errSecInvalidCertificateGroup'/>
<enum value='-67690' name='errSecInvalidCertificateRef'/>
<enum value='-67746' name='errSecInvalidContext'/>
<enum value='-67681' name='errSecInvalidDBList'/>
<enum value='-67875' name='errSecInvalidDBLocation'/>
<enum value='-67673' name='errSecInvalidData'/>
<enum value='-67598' name='errSecInvalidDatabaseBlob'/>
<enum value='-67815' name='errSecInvalidDigestAlgorithm'/>
<enum value='-67853' name='errSecInvalidEncoding'/>
<enum value='-67609' name='errSecInvalidExtendedKeyUsage'/>
<enum value='-67831' name='errSecInvalidFormType'/>
<enum value='-67679' name='errSecInvalidGUID'/>
<enum value='-67680' name='errSecInvalidHandle'/>
<enum value='-67668' name='errSecInvalidHandleUsage'/>
<enum value='-67832' name='errSecInvalidID'/>
<enum value='-67610' name='errSecInvalidIDLinkage'/>
<enum value='-67833' name='errSecInvalidIdentifier'/>
<enum value='-67834' name='errSecInvalidIndex'/>
<enum value='-67877' name='errSecInvalidIndexInfo'/>
<enum value='-67744' name='errSecInvalidInputVector'/>
<enum value='-25304' name='errSecInvalidItemRef'/>
<enum value='-67738' name='errSecInvalidKeyAttributeMask'/>
<enum value='-67599' name='errSecInvalidKeyBlob'/>
<enum value='-67742' name='errSecInvalidKeyFormat'/>
<enum value='-67713' name='errSecInvalidKeyHierarchy'/>
<enum value='-67740' name='errSecInvalidKeyLabel'/>
<enum value='-67712' name='errSecInvalidKeyRef'/>
<enum value='-67608' name='errSecInvalidKeyUsageForPolicy'/>
<enum value='-67736' name='errSecInvalidKeyUsageMask'/>
<enum value='-25295' name='errSecInvalidKeychain'/>
<enum value='-67813' name='errSecInvalidLoginName'/>
<enum value='-67879' name='errSecInvalidModifyMode'/>
<enum value='-67689' name='errSecInvalidName'/>
<enum value='-67683' name='errSecInvalidNetworkAddress'/>
<enum value='-67878' name='errSecInvalidNewOwner'/>
<enum value='-67685' name='errSecInvalidNumberOfFields'/>
<enum value='-67745' name='errSecInvalidOutputVector'/>
<enum value='-25244' name='errSecInvalidOwnerEdit'/>
<enum value='-67708' name='errSecInvalidPVC'/>
<enum value='-67868' name='errSecInvalidParsingModule'/>
<enum value='-67682' name='errSecInvalidPassthroughID'/>
<enum value='-25261' name='errSecInvalidPasswordRef'/>
<enum value='-67675' name='errSecInvalidPointer'/>
<enum value='-67835' name='errSecInvalidPolicyIdentifiers'/>
<enum value='-25319' name='errSecInvalidPrefsDomain'/>
<enum value='-67693' name='errSecInvalidQuery'/>
<enum value='-67837' name='errSecInvalidReason'/>
<enum value='-67701' name='errSecInvalidRecord'/>
<enum value='-67838' name='errSecInvalidRequestInputs'/>
<enum value='-67855' name='errSecInvalidRequestor'/>
<enum value='-67839' name='errSecInvalidResponseVector'/>
<enum value='-67612' name='errSecInvalidRoot'/>
<enum value='-67703' name='errSecInvalidSampleValue'/>
<enum value='-67706' name='errSecInvalidScope'/>
<enum value='-25305' name='errSecInvalidSearchRef'/>
<enum value='-67717' name='errSecInvalidServiceMask'/>
<enum value='-67688' name='errSecInvalidSignature'/>
<enum value='-67840' name='errSecInvalidStopOnPolicy'/>
<enum value='-67719' name='errSecInvalidSubServiceID'/>
<enum value='-67607' name='errSecInvalidSubjectKeyID'/>
<enum value='-67655' name='errSecInvalidSubjectName'/>
<enum value='-67836' name='errSecInvalidTimeString'/>
<enum value='-25242' name='errSecInvalidTrustSetting'/>
<enum value='-25262' name='errSecInvalidTrustSettings'/>
<enum value='-67841' name='errSecInvalidTuple'/>
<enum value='-67852' name='errSecInvalidTupleCredendtials'/>
<enum value='-67850' name='errSecInvalidTupleGroup'/>
<enum value='-67854' name='errSecInvalidValidityPeriod'/>
<enum value='-67694' name='errSecInvalidValue'/>
<enum value='-25300' name='errSecItemNotFound'/>
<enum value='-67732' name='errSecKeyBlobTypeIncorrect'/>
<enum value='-67733' name='errSecKeyHeaderInconsistent'/>
<enum value='-25258' name='errSecKeyIsSensitive'/>
<enum value='-25311' name='errSecKeySizeNotAllowed'/>
<enum value='-67731' name='errSecKeyUsageIncorrect'/>
<enum value='-67715' name='errSecLibraryReferenceNotFound'/>
<enum value='-67674' name='errSecMDSError'/>
<enum value='-67672' name='errSecMemoryError'/>
<enum value='-67771' name='errSecMissingAlgorithmParms'/>
<enum value='-67797' name='errSecMissingAttributeAccessCredentials'/>
<enum value='-67789' name='errSecMissingAttributeBase'/>
<enum value='-67765' name='errSecMissingAttributeBlockSize'/>
<enum value='-67795' name='errSecMissingAttributeDLDBHandle'/>
<enum value='-67779' name='errSecMissingAttributeEffectiveBits'/>
<enum value='-67783' name='errSecMissingAttributeEndDate'/>
<enum value='-67751' name='errSecMissingAttributeInitVector'/>
<enum value='-67793' name='errSecMissingAttributeIterationCount'/>
<enum value='-67749' name='errSecMissingAttributeKey'/>
<enum value='-67763' name='errSecMissingAttributeKeyLength'/>
<enum value='-67775' name='errSecMissingAttributeKeyType'/>
<enum value='-67773' name='errSecMissingAttributeLabel'/>
<enum value='-67777' name='errSecMissingAttributeMode'/>
<enum value='-67767' name='errSecMissingAttributeOutputSize'/>
<enum value='-67755' name='errSecMissingAttributePadding'/>
<enum value='-67761' name='errSecMissingAttributePassphrase'/>
<enum value='-67787' name='errSecMissingAttributePrime'/>
<enum value='-67801' name='errSecMissingAttributePrivateKeyFormat'/>
<enum value='-67799' name='errSecMissingAttributePublicKeyFormat'/>
<enum value='-67757' name='errSecMissingAttributeRandom'/>
<enum value='-67769' name='errSecMissingAttributeRounds'/>
<enum value='-67753' name='errSecMissingAttributeSalt'/>
<enum value='-67759' name='errSecMissingAttributeSeed'/>
<enum value='-67781' name='errSecMissingAttributeStartDate'/>
<enum value='-67791' name='errSecMissingAttributeSubprime'/>
<enum value='-67803' name='errSecMissingAttributeSymmetricKeyFormat'/>
<enum value='-67785' name='errSecMissingAttributeVersion'/>
<enum value='-67805' name='errSecMissingAttributeWrappedKeyFormat'/>
<enum value='-67880' name='errSecMissingRequiredExtension'/>
<enum value='-67871' name='errSecMissingValue'/>
<enum value='-67665' name='errSecMobileMeCSRVerifyFailure'/>
<enum value='-67666' name='errSecMobileMeFailedConsistencyCheck'/>
<enum value='-67664' name='errSecMobileMeNoRequestPending'/>
<enum value='-67663' name='errSecMobileMeRequestAlreadyPending'/>
<enum value='-67657' name='errSecMobileMeRequestQueued'/>
<enum value='-67658' name='errSecMobileMeRequestRedirected'/>
<enum value='-67661' name='errSecMobileMeServerAlreadyExists'/>
<enum value='-67659' name='errSecMobileMeServerError'/>
<enum value='-67660' name='errSecMobileMeServerNotAvailable'/>
<enum value='-67662' name='errSecMobileMeServerServiceErr'/>
<enum value='-67721' name='errSecModuleManagerInitializeFailed'/>
<enum value='-67722' name='errSecModuleManagerNotFound'/>
<enum value='-67678' name='errSecModuleManifestVerifyFailed'/>
<enum value='-67718' name='errSecModuleNotLoaded'/>
<enum value='-25259' name='errSecMultiplePrivKeys'/>
<enum value='-67842' name='errSecMultipleValuesUnsupported'/>
<enum value='-67636' name='errSecNetworkFailure'/>
<enum value='-25243' name='errSecNoAccessForItem'/>
<enum value='-67604' name='errSecNoBasicConstraints'/>
<enum value='-67605' name='errSecNoBasicConstraintsCA'/>
<enum value='-25313' name='errSecNoCertificateModule'/>
<enum value='-67844' name='errSecNoDefaultAuthority'/>
<enum value='-25307' name='errSecNoDefaultKeychain'/>
<enum value='-67859' name='errSecNoFieldValues'/>
<enum value='-25314' name='errSecNoPolicyModule'/>
<enum value='-25312' name='errSecNoStorageModule'/>
<enum value='-25303' name='errSecNoSuchAttr'/>
<enum value='-25306' name='errSecNoSuchClass'/>
<enum value='-25294' name='errSecNoSuchKeychain'/>
<enum value='-25263' name='errSecNoTrustSettings'/>
<enum value='-25291' name='errSecNotAvailable'/>
<enum value='-67667' name='errSecNotInitialized'/>
<enum value='-67729' name='errSecNotLoggedIn'/>
<enum value='-26267' name='errSecNotSigner'/>
<enum value='-67843' name='errSecNotTrusted'/>
<enum value='-67631' name='errSecOCSPBadRequest'/>
<enum value='-67630' name='errSecOCSPBadResponse'/>
<enum value='-67640' name='errSecOCSPNoSigner'/>
<enum value='-67637' name='errSecOCSPNotTrustedToAnchor'/>
<enum value='-67642' name='errSecOCSPResponderInternalError'/>
<enum value='-67641' name='errSecOCSPResponderMalformedReq'/>
<enum value='-67644' name='errSecOCSPResponderSignatureRequired'/>
<enum value='-67643' name='errSecOCSPResponderTryLater'/>
<enum value='-67645' name='errSecOCSPResponderUnauthorized'/>
<enum value='-67646' name='errSecOCSPResponseNonceMismatch'/>
<enum value='-67639' name='errSecOCSPSignatureError'/>
<enum value='-67633' name='errSecOCSPStatusUnrecognized'/>
<enum value='-67632' name='errSecOCSPUnavailable'/>
<enum value='-67725' name='errSecOutputLengthError'/>
<enum value='-67707' name='errSecPVCAlreadyConfigured'/>
<enum value='-67669' name='errSecPVCReferentNotFound'/>
<enum value='-50' name='errSecParam'/>
<enum value='-25260' name='errSecPassphraseRequired'/>
<enum value='-67611' name='errSecPathLengthConstraintExceeded'/>
<enum value='-25264' name='errSecPkcs12VerifyFailure'/>
<enum value='-25241' name='errSecPolicyNotFound'/>
<enum value='-67705' name='errSecPrivilegeNotGranted'/>
<enum value='-67726' name='errSecPrivilegeNotSupported'/>
<enum value='-67811' name='errSecPublicKeyInconsistent'/>
<enum value='-67809' name='errSecQuerySizeUnknown'/>
<enum value='-67596' name='errSecQuotaExceeded'/>
<enum value='-25292' name='errSecReadOnly'/>
<enum value='-25309' name='errSecReadOnlyAttr'/>
<enum value='-67638' name='errSecRecordModified'/>
<enum value='-67845' name='errSecRejectedForm'/>
<enum value='-67856' name='errSecRequestDescriptor'/>
<enum value='-67846' name='errSecRequestLost'/>
<enum value='-67847' name='errSecRequestRejected'/>
<enum value='-67652' name='errSecResourceSignBadCertChainLength'/>
<enum value='-67653' name='errSecResourceSignBadExtKeyUsage'/>
<enum value='-67624' name='errSecSMIMEBadExtendedKeyUsage'/>
<enum value='-67625' name='errSecSMIMEBadKeyUsage'/>
<enum value='-67623' name='errSecSMIMEEmailAddressesNotFound'/>
<enum value='-67626' name='errSecSMIMEKeyUsageNotCritical'/>
<enum value='-67627' name='errSecSMIMENoEmailAddress'/>
<enum value='-67628' name='errSecSMIMESubjAltNameNotCritical'/>
<enum value='-67629' name='errSecSSLBadExtendedKeyUsage'/>
<enum value='-67676' name='errSecSelfCheckFailed'/>
<enum value='-67585' name='errSecServiceNotAvailable'/>
<enum value='-67894' name='errSecSigningTimeMissing'/>
<enum value='-67806' name='errSecStagedOperationInProgress'/>
<enum value='-67807' name='errSecStagedOperationNotStarted'/>
<enum value='0' name='errSecSuccess'/>
<enum value='-67692' name='errSecTagNotFound'/>
<enum value='-67892' name='errSecTimestampAddInfoNotAvailable'/>
<enum value='-67886' name='errSecTimestampBadAlg'/>
<enum value='-67888' name='errSecTimestampBadDataFormat'/>
<enum value='-67887' name='errSecTimestampBadRequest'/>
<enum value='-67883' name='errSecTimestampInvalid'/>
<enum value='-67882' name='errSecTimestampMissing'/>
<enum value='-67884' name='errSecTimestampNotTrusted'/>
<enum value='-67895' name='errSecTimestampRejection'/>
<enum value='-67898' name='errSecTimestampRevocationNotification'/>
<enum value='-67897' name='errSecTimestampRevocationWarning'/>
<enum value='-67885' name='errSecTimestampServiceNotAvailable'/>
<enum value='-67893' name='errSecTimestampSystemFailure'/>
<enum value='-67889' name='errSecTimestampTimeNotAvailable'/>
<enum value='-67891' name='errSecTimestampUnacceptedExtension'/>
<enum value='-67890' name='errSecTimestampUnacceptedPolicy'/>
<enum value='-67896' name='errSecTimestampWaiting'/>
<enum value='-25245' name='errSecTrustNotAvailable'/>
<enum value='-67654' name='errSecTrustSettingDeny'/>
<enum value='-4' name='errSecUnimplemented'/>
<enum value='-67619' name='errSecUnknownCRLExtension'/>
<enum value='-67618' name='errSecUnknownCertExtension'/>
<enum value='-67603' name='errSecUnknownCriticalExtensionFlag'/>
<enum value='-25257' name='errSecUnknownFormat'/>
<enum value='-67656' name='errSecUnknownQualifiedCertStatement'/>
<enum value='-67687' name='errSecUnknownTag'/>
<enum value='-67848' name='errSecUnsupportedAddressType'/>
<enum value='-67860' name='errSecUnsupportedFieldFormat'/>
<enum value='-25256' name='errSecUnsupportedFormat'/>
<enum value='-67861' name='errSecUnsupportedIndexInfo'/>
<enum value='-67739' name='errSecUnsupportedKeyAttributeMask'/>
<enum value='-67734' name='errSecUnsupportedKeyFormat'/>
<enum value='-67741' name='errSecUnsupportedKeyLabel'/>
<enum value='-67735' name='errSecUnsupportedKeySize'/>
<enum value='-67737' name='errSecUnsupportedKeyUsageMask'/>
<enum value='-67862' name='errSecUnsupportedLocality'/>
<enum value='-67863' name='errSecUnsupportedNumAttributes'/>
<enum value='-67864' name='errSecUnsupportedNumIndexes'/>
<enum value='-67865' name='errSecUnsupportedNumRecordTypes'/>
<enum value='-67873' name='errSecUnsupportedNumSelectionPreds'/>
<enum value='-67874' name='errSecUnsupportedOperator'/>
<enum value='-67872' name='errSecUnsupportedQueryLimits'/>
<enum value='-67849' name='errSecUnsupportedService'/>
<enum value='-67743' name='errSecUnsupportedVectorOfBuffers'/>
<enum value='-67686' name='errSecVerificationFailure'/>
<enum value='-67825' name='errSecVerifyActionFailed'/>
<enum value='-67808' name='errSecVerifyFailed'/>
<enum value='-25310' name='errSecWrongSecVersion'/>
<enum value='-20053' name='errSecureDownloadInvalidDownload'/>
<enum value='-20052' name='errSecureDownloadInvalidTicket'/>
<enum value='-60502' name='errSessionAuthorizationDenied'/>
<enum value='-60008' name='errSessionInternal'/>
<enum value='-60501' name='errSessionInvalidAttributes'/>
<enum value='-60011' name='errSessionInvalidFlags'/>
<enum value='-60500' name='errSessionInvalidId'/>
<enum value='0' name='errSessionSuccess'/>
<enum value='-60503' name='errSessionValueNotSet'/>
<enum value='1' name='kAlwaysAuthenticate'/>
<enum value='0' name='kAuthorizationCallbacksVersion'/>
<enum value='1' name='kAuthorizationContextFlagExtractable'/>
<enum value='4' name='kAuthorizationContextFlagSticky'/>
<enum value='2' name='kAuthorizationContextFlagVolatile'/>
<enum value='32' name='kAuthorizationExternalFormLength'/>
<enum value='1' name='kAuthorizationFlagCanNotPreAuthorize'/>
<enum value='0' name='kAuthorizationFlagDefaults'/>
<enum value='8' name='kAuthorizationFlagDestroyRights'/>
<enum value='2' name='kAuthorizationFlagExtendRights'/>
<enum value='1' name='kAuthorizationFlagInteractionAllowed'/>
<enum value='1048576' name='kAuthorizationFlagNoData'/>
<enum value='4' name='kAuthorizationFlagPartialRights'/>
<enum value='16' name='kAuthorizationFlagPreAuthorize'/>
<enum value='0' name='kAuthorizationPluginInterfaceVersion'/>
<enum value='0' name='kAuthorizationResultAllow'/>
<enum value='1' name='kAuthorizationResultDeny'/>
<enum value='2' name='kAuthorizationResultUndefined'/>
<enum value='3' name='kAuthorizationResultUserCanceled'/>
<enum value='0' name='kCMSAttrNone'/>
<enum value='8' name='kCMSAttrSigningTime'/>
<enum value='1' name='kCMSAttrSmimeCapabilities'/>
<enum value='2' name='kCMSAttrSmimeEncryptionKeyPrefs'/>
<enum value='4' name='kCMSAttrSmimeMSEncryptionKeyPrefs'/>
<enum value='2' name='kCMSCertificateChain'/>
<enum value='3' name='kCMSCertificateChainWithRoot'/>
<enum value='0' name='kCMSCertificateNone'/>
<enum value='1' name='kCMSCertificateSignerOnly'/>
<enum value='4' name='kCMSSignerInvalidCert'/>
<enum value='5' name='kCMSSignerInvalidIndex'/>
<enum value='3' name='kCMSSignerInvalidSignature'/>
<enum value='2' name='kCMSSignerNeedsDetachedContent'/>
<enum value='0' name='kCMSSignerUnsigned'/>
<enum value='1' name='kCMSSignerValid'/>
<enum value='1' name='kCSSM_APPLEDL_MASK_MODE'/>
<enum value='9' name='kDTLSProtocol1'/>
<enum value='0' name='kNeverAuthenticate'/>
<enum value='4' name='kSSLAborted'/>
<enum value='0' name='kSSLClientCertNone'/>
<enum value='3' name='kSSLClientCertRejected'/>
<enum value='1' name='kSSLClientCertRequested'/>
<enum value='2' name='kSSLClientCertSent'/>
<enum value='1' name='kSSLClientSide'/>
<enum value='3' name='kSSLClosed'/>
<enum value='2' name='kSSLConnected'/>
<enum value='1' name='kSSLDatagramType'/>
<enum value='1' name='kSSLHandshake'/>
<enum value='0' name='kSSLIdle'/>
<enum value='1' name='kSSLProtocol2'/>
<enum value='2' name='kSSLProtocol3'/>
<enum value='3' name='kSSLProtocol3Only'/>
<enum value='6' name='kSSLProtocolAll'/>
<enum value='0' name='kSSLProtocolUnknown'/>
<enum value='0' name='kSSLServerSide'/>
<enum value='1' name='kSSLSessionOptionBreakOnCertRequested'/>
<enum value='2' name='kSSLSessionOptionBreakOnClientAuth'/>
<enum value='0' name='kSSLSessionOptionBreakOnServerAuth'/>
<enum value='0' name='kSSLStreamType'/>
<enum value='192' name='kSec3DES192'/>
<enum value='128' name='kSecAES128'/>
<enum value='192' name='kSecAES192'/>
<enum value='256' name='kSecAES256'/>
<enum value='1633903476' name='kSecAccountItemAttr'/>
<enum value='3' name='kSecAddEvent'/>
<enum value='8' name='kSecAddEventMask'/>
<enum value='1633969266' name='kSecAddressItemAttr'/>
<enum value='1634494835' name='kSecAlias'/>
<enum value='1634953328' name='kSecAppleSharePasswordItemClass'/>
<enum value='0' name='kSecAuthenticationTypeAny'/>
<enum value='1633775716' name='kSecAuthenticationTypeDPA'/>
<enum value='1953261156' name='kSecAuthenticationTypeDefault'/>
<enum value='1836216166' name='kSecAuthenticationTypeHTMLForm'/>
<enum value='1886680168' name='kSecAuthenticationTypeHTTPBasic'/>
<enum value='1685353576' name='kSecAuthenticationTypeHTTPDigest'/>
<enum value='1635023216' name='kSecAuthenticationTypeItemAttr'/>
<enum value='1634628461' name='kSecAuthenticationTypeMSN'/>
<enum value='1835824238' name='kSecAuthenticationTypeNTLM'/>
<enum value='1633775730' name='kSecAuthenticationTypeRPA'/>
<enum value='6' name='kSecCSBasicValidateOnly'/>
<enum value='1' name='kSecCSCheckAllArchitectures'/>
<enum value='8' name='kSecCSCheckNestedCode'/>
<enum value='-2147483648' name='kSecCSConsiderExpiration'/>
<enum value='16' name='kSecCSContentInformation'/>
<enum value='1' name='kSecCSDedicatedHost'/>
<enum value='0' name='kSecCSDefaultFlags'/>
<enum value='2' name='kSecCSDoNotValidateExecutable'/>
<enum value='4' name='kSecCSDoNotValidateResources'/>
<enum value='8' name='kSecCSDynamicInformation'/>
<enum value='1073741824' name='kSecCSEnforceRevocationChecks'/>
<enum value='2' name='kSecCSGenerateGuestHash'/>
<enum value='1' name='kSecCSInternalInformation'/>
<enum value='4' name='kSecCSRequirementInformation'/>
<enum value='2' name='kSecCSSigningInformation'/>
<enum value='1667591779' name='kSecCertEncodingItemAttr'/>
<enum value='1668577648' name='kSecCertTypeItemAttr'/>
<enum value='1667591779' name='kSecCertificateEncoding'/>
<enum value='2147487744' name='kSecCertificateItemClass'/>
<enum value='1668577648' name='kSecCertificateType'/>
<enum value='2' name='kSecCodeSignatureAdhoc'/>
<enum value='1024' name='kSecCodeSignatureForceExpiration'/>
<enum value='256' name='kSecCodeSignatureForceHard'/>
<enum value='512' name='kSecCodeSignatureForceKill'/>
<enum value='1' name='kSecCodeSignatureHost'/>
<enum value='256' name='kSecCodeStatusHard'/>
<enum value='512' name='kSecCodeStatusKill'/>
<enum value='1' name='kSecCodeStatusValid'/>
<enum value='1768123764' name='kSecCommentItemAttr'/>
<enum value='1667522932' name='kSecCreationDateItemAttr'/>
<enum value='1668445298' name='kSecCreatorItemAttr'/>
<enum value='0' name='kSecCredentialTypeDefault'/>
<enum value='2' name='kSecCredentialTypeNoUI'/>
<enum value='1' name='kSecCredentialTypeWithUI'/>
<enum value='1668443747' name='kSecCrlEncoding'/>
<enum value='1668445296' name='kSecCrlType'/>
<enum value='1668641641' name='kSecCustomIconItemAttr'/>
<enum value='10' name='kSecDataAccessEvent'/>
<enum value='1024' name='kSecDataAccessEventMask'/>
<enum value='9' name='kSecDefaultChangedEvent'/>
<enum value='512' name='kSecDefaultChangedEventMask'/>
<enum value='0' name='kSecDefaultKeySize'/>
<enum value='4' name='kSecDeleteEvent'/>
<enum value='16' name='kSecDeleteEventMask'/>
<enum value='1684370275' name='kSecDescriptionItemAttr'/>
<enum value='3' name='kSecDesignatedRequirementType'/>
<enum value='4294967295' name='kSecEveryEventMask'/>
<enum value='3' name='kSecFormatBSAFE'/>
<enum value='13' name='kSecFormatNetscapeCertSequence'/>
<enum value='1' name='kSecFormatOpenSSL'/>
<enum value='10' name='kSecFormatPEMSequence'/>
<enum value='12' name='kSecFormatPKCS12'/>
<enum value='11' name='kSecFormatPKCS7'/>
<enum value='4' name='kSecFormatRawKey'/>
<enum value='2' name='kSecFormatSSH'/>
<enum value='14' name='kSecFormatSSHv2'/>
<enum value='0' name='kSecFormatUnknown'/>
<enum value='8' name='kSecFormatWrappedLSH'/>
<enum value='6' name='kSecFormatWrappedOpenSSL'/>
<enum value='5' name='kSecFormatWrappedPKCS8'/>
<enum value='7' name='kSecFormatWrappedSSH'/>
<enum value='9' name='kSecFormatX509Cert'/>
<enum value='1734700641' name='kSecGenericItemAttr'/>
<enum value='1734700656' name='kSecGenericPasswordItemClass'/>
<enum value='2' name='kSecGuestRequirementType'/>
<enum value='256' name='kSecHonorRoot'/>
<enum value='1' name='kSecHostRequirementType'/>
<enum value='1768842612' name='kSecInternetPasswordItemClass'/>
<enum value='6' name='kSecInvalidRequirementType'/>
<enum value='1768846953' name='kSecInvisibleItemAttr'/>
<enum value='1769173877' name='kSecIssuerItemAttr'/>
<enum value='1' name='kSecItemPemArmour'/>
<enum value='5' name='kSecItemTypeAggregate'/>
<enum value='4' name='kSecItemTypeCertificate'/>
<enum value='1' name='kSecItemTypePrivateKey'/>
<enum value='2' name='kSecItemTypePublicKey'/>
<enum value='3' name='kSecItemTypeSessionKey'/>
<enum value='0' name='kSecItemTypeUnknown'/>
<enum value='2' name='kSecKeyAlias'/>
<enum value='15' name='kSecKeyAlwaysSensitive'/>
<enum value='7' name='kSecKeyApplicationTag'/>
<enum value='19' name='kSecKeyDecrypt'/>
<enum value='20' name='kSecKeyDerive'/>
<enum value='11' name='kSecKeyEffectiveKeySize'/>
<enum value='18' name='kSecKeyEncrypt'/>
<enum value='13' name='kSecKeyEndDate'/>
<enum value='16' name='kSecKeyExtractable'/>
<enum value='1' name='kSecKeyImportOnlyOne'/>
<enum value='0' name='kSecKeyKeyClass'/>
<enum value='8' name='kSecKeyKeyCreator'/>
<enum value='10' name='kSecKeyKeySizeInBits'/>
<enum value='9' name='kSecKeyKeyType'/>
<enum value='6' name='kSecKeyLabel'/>
<enum value='5' name='kSecKeyModifiable'/>
<enum value='17' name='kSecKeyNeverExtractable'/>
<enum value='4' name='kSecKeyNoAccessControl'/>
<enum value='3' name='kSecKeyPermanent'/>
<enum value='1' name='kSecKeyPrintName'/>
<enum value='4' name='kSecKeyPrivate'/>
<enum value='2' name='kSecKeySecurePassphrase'/>
<enum value='14' name='kSecKeySensitive'/>
<enum value='21' name='kSecKeySign'/>
<enum value='23' name='kSecKeySignRecover'/>
<enum value='12' name='kSecKeyStartDate'/>
<enum value='26' name='kSecKeyUnwrap'/>
<enum value='22' name='kSecKeyVerify'/>
<enum value='24' name='kSecKeyVerifyRecover'/>
<enum value='25' name='kSecKeyWrap'/>
<enum value='11' name='kSecKeychainListChangedEvent'/>
<enum value='2048' name='kSecKeychainListChangedMask'/>
<enum value='64' name='kSecKeychainPromptInvalid'/>
<enum value='128' name='kSecKeychainPromptInvalidAct'/>
<enum value='1' name='kSecKeychainPromptRequirePassphase'/>
<enum value='16' name='kSecKeychainPromptUnsigned'/>
<enum value='32' name='kSecKeychainPromptUnsignedAct'/>
<enum value='1818321516' name='kSecLabelItemAttr'/>
<enum value='4' name='kSecLibraryRequirementType'/>
<enum value='1' name='kSecLockEvent'/>
<enum value='2' name='kSecLockEventMask'/>
<enum value='3' name='kSecMatchBits'/>
<enum value='1835295092' name='kSecModDateItemAttr'/>
<enum value='1852139361' name='kSecNegativeItemAttr'/>
<enum value='0' name='kSecNoGuest'/>
<enum value='0' name='kSecPaddingNone'/>
<enum value='1' name='kSecPaddingPKCS1'/>
<enum value='32768' name='kSecPaddingPKCS1MD2'/>
<enum value='32769' name='kSecPaddingPKCS1MD5'/>
<enum value='32770' name='kSecPaddingPKCS1SHA1'/>
<enum value='6' name='kSecPasswordChangedEvent'/>
<enum value='64' name='kSecPasswordChangedEventMask'/>
<enum value='1885434984' name='kSecPathItemAttr'/>
<enum value='5' name='kSecPluginRequirementType'/>
<enum value='1886351988' name='kSecPortItemAttr'/>
<enum value='2' name='kSecPreferencesDomainCommon'/>
<enum value='3' name='kSecPreferencesDomainDynamic'/>
<enum value='1' name='kSecPreferencesDomainSystem'/>
<enum value='0' name='kSecPreferencesDomainUser'/>
<enum value='16' name='kSecPrivateKeyItemClass'/>
<enum value='1886675820' name='kSecProtocolItemAttr'/>
<enum value='1634103328' name='kSecProtocolTypeAFP'/>
<enum value='0' name='kSecProtocolTypeAny'/>
<enum value='1635019883' name='kSecProtocolTypeAppleTalk'/>
<enum value='1667851891' name='kSecProtocolTypeCIFS'/>
<enum value='1668707184' name='kSecProtocolTypeCVSpserver'/>
<enum value='1684103536' name='kSecProtocolTypeDAAP'/>
<enum value='1701867619' name='kSecProtocolTypeEPPC'/>
<enum value='1718906912' name='kSecProtocolTypeFTP'/>
<enum value='1718906977' name='kSecProtocolTypeFTPAccount'/>
<enum value='1718907000' name='kSecProtocolTypeFTPProxy'/>
<enum value='1718906995' name='kSecProtocolTypeFTPS'/>
<enum value='1752462448' name='kSecProtocolTypeHTTP'/>
<enum value='1752461432' name='kSecProtocolTypeHTTPProxy'/>
<enum value='1752461427' name='kSecProtocolTypeHTTPS'/>
<enum value='1752462200' name='kSecProtocolTypeHTTPSProxy'/>
<enum value='1768776048' name='kSecProtocolTypeIMAP'/>
<enum value='1768779891' name='kSecProtocolTypeIMAPS'/>
<enum value='1768976416' name='kSecProtocolTypeIPP'/>
<enum value='1769104160' name='kSecProtocolTypeIRC'/>
<enum value='1769104243' name='kSecProtocolTypeIRCS'/>
<enum value='1818517872' name='kSecProtocolTypeLDAP'/>
<enum value='1818521715' name='kSecProtocolTypeLDAPS'/>
<enum value='1852732528' name='kSecProtocolTypeNNTP'/>
<enum value='1853124723' name='kSecProtocolTypeNNTPS'/>
<enum value='1886351411' name='kSecProtocolTypePOP3'/>
<enum value='1886351475' name='kSecProtocolTypePOP3S'/>
<enum value='1920234352' name='kSecProtocolTypeRTSP'/>
<enum value='1920234360' name='kSecProtocolTypeRTSPProxy'/>
<enum value='1936548384' name='kSecProtocolTypeSMB'/>
<enum value='1936553072' name='kSecProtocolTypeSMTP'/>
<enum value='1936685088' name='kSecProtocolTypeSOCKS'/>
<enum value='1936943136' name='kSecProtocolTypeSSH'/>
<enum value='1937141280' name='kSecProtocolTypeSVN'/>
<enum value='1952803950' name='kSecProtocolTypeTelnet'/>
<enum value='1952803955' name='kSecProtocolTypeTelnetS'/>
<enum value='1752198009' name='kSecPublicKeyHashItemAttr'/>
<enum value='15' name='kSecPublicKeyItemClass'/>
<enum value='4096' name='kSecRSAMax'/>
<enum value='1024' name='kSecRSAMin'/>
<enum value='2' name='kSecReadPermStatus'/>
<enum value='6' name='kSecRequirementTypeCount'/>
<enum value='1935897200' name='kSecScriptCodeItemAttr'/>
<enum value='1935961454' name='kSecSecurityDomainItemAttr'/>
<enum value='1936614002' name='kSecSerialNumberItemAttr'/>
<enum value='1936881266' name='kSecServerItemAttr'/>
<enum value='1937138533' name='kSecServiceItemAttr'/>
<enum value='1936943463' name='kSecSignatureItemAttr'/>
<enum value='1937072746' name='kSecSubjectItemAttr'/>
<enum value='1936419172' name='kSecSubjectKeyIdentifierItemAttr'/>
<enum value='17' name='kSecSymmetricKeyItemClass'/>
<enum value='19' name='kSecTransformErrorAbortInProgress'/>
<enum value='20' name='kSecTransformErrorAborted'/>
<enum value='1' name='kSecTransformErrorAttributeNotFound'/>
<enum value='6' name='kSecTransformErrorInvalidAlgorithm'/>
<enum value='15' name='kSecTransformErrorInvalidConnection'/>
<enum value='10' name='kSecTransformErrorInvalidInput'/>
<enum value='5' name='kSecTransformErrorInvalidInputDictionary'/>
<enum value='7' name='kSecTransformErrorInvalidLength'/>
<enum value='2' name='kSecTransformErrorInvalidOperation'/>
<enum value='8' name='kSecTransformErrorInvalidType'/>
<enum value='14' name='kSecTransformErrorMissingParameter'/>
<enum value='4' name='kSecTransformErrorMoreThanOneOutput'/>
<enum value='11' name='kSecTransformErrorNameAlreadyRegistered'/>
<enum value='3' name='kSecTransformErrorNotInitializedCorrectly'/>
<enum value='12' name='kSecTransformErrorUnsupportedAttribute'/>
<enum value='21' name='kSecTransformInvalidArgument'/>
<enum value='17' name='kSecTransformInvalidOverride'/>
<enum value='7' name='kSecTransformMetaAttributeCanCycle'/>
<enum value='5' name='kSecTransformMetaAttributeDeferred'/>
<enum value='8' name='kSecTransformMetaAttributeExternalize'/>
<enum value='10' name='kSecTransformMetaAttributeHasInboundConnection'/>
<enum value='9' name='kSecTransformMetaAttributeHasOutboundConnections'/>
<enum value='1' name='kSecTransformMetaAttributeName'/>
<enum value='2' name='kSecTransformMetaAttributeRef'/>
<enum value='3' name='kSecTransformMetaAttributeRequired'/>
<enum value='4' name='kSecTransformMetaAttributeRequiresOutboundConnection'/>
<enum value='6' name='kSecTransformMetaAttributeStream'/>
<enum value='0' name='kSecTransformMetaAttributeValue'/>
<enum value='13' name='kSecTransformOperationNotSupportedOnGroup'/>
<enum value='16' name='kSecTransformTransformIsExecuting'/>
<enum value='18' name='kSecTransformTransformIsNotRegistered'/>
<enum value='1' name='kSecTrustOptionAllowExpired'/>
<enum value='8' name='kSecTrustOptionAllowExpiredRoot'/>
<enum value='4' name='kSecTrustOptionFetchIssuerFromNet'/>
<enum value='64' name='kSecTrustOptionImplicitAnchors'/>
<enum value='2' name='kSecTrustOptionLeafIsCA'/>
<enum value='16' name='kSecTrustOptionRequireRevPerCert'/>
<enum value='32' name='kSecTrustOptionUseTrustSettings'/>
<enum value='2' name='kSecTrustResultConfirm'/>
<enum value='3' name='kSecTrustResultDeny'/>
<enum value='6' name='kSecTrustResultFatalTrustFailure'/>
<enum value='0' name='kSecTrustResultInvalid'/>
<enum value='7' name='kSecTrustResultOtherError'/>
<enum value='1' name='kSecTrustResultProceed'/>
<enum value='5' name='kSecTrustResultRecoverableTrustFailure'/>
<enum value='4' name='kSecTrustResultUnspecified'/>
<enum value='12' name='kSecTrustSettingsChangedEvent'/>
<enum value='4096' name='kSecTrustSettingsChangedEventMask'/>
<enum value='1' name='kSecTrustSettingsDomainAdmin'/>
<enum value='2' name='kSecTrustSettingsDomainSystem'/>
<enum value='0' name='kSecTrustSettingsDomainUser'/>
<enum value='4294967295' name='kSecTrustSettingsKeyUseAny'/>
<enum value='2' name='kSecTrustSettingsKeyUseEnDecryptData'/>
<enum value='4' name='kSecTrustSettingsKeyUseEnDecryptKey'/>
<enum value='32' name='kSecTrustSettingsKeyUseKeyExchange'/>
<enum value='8' name='kSecTrustSettingsKeyUseSignCert'/>
<enum value='16' name='kSecTrustSettingsKeyUseSignRevocation'/>
<enum value='1' name='kSecTrustSettingsKeyUseSignature'/>
<enum value='3' name='kSecTrustSettingsResultDeny'/>
<enum value='0' name='kSecTrustSettingsResultInvalid'/>
<enum value='2' name='kSecTrustSettingsResultTrustAsRoot'/>
<enum value='1' name='kSecTrustSettingsResultTrustRoot'/>
<enum value='4' name='kSecTrustSettingsResultUnspecified'/>
<enum value='1954115685' name='kSecTypeItemAttr'/>
<enum value='2' name='kSecUnlockEvent'/>
<enum value='4' name='kSecUnlockEventMask'/>
<enum value='1' name='kSecUnlockStateStatus'/>
<enum value='5' name='kSecUpdateEvent'/>
<enum value='32' name='kSecUpdateEventMask'/>
<enum value='2' name='kSecUseOnlyGID'/>
<enum value='1' name='kSecUseOnlyUID'/>
<enum value='1986817381' name='kSecVolumeItemAttr'/>
<enum value='4' name='kSecWritePermStatus'/>
<enum value='192' name='kSecp192r1'/>
<enum value='256' name='kSecp256r1'/>
<enum value='384' name='kSecp384r1'/>
<enum value='521' name='kSecp521r1'/>
<enum value='0' name='kSecureDownloadDoNotEvaluateSigner'/>
<enum value='1' name='kSecureDownloadEvaluateSigner'/>
<enum value='2' name='kSecureDownloadFailEvaluation'/>
<enum value='4' name='kTLSProtocol1'/>
<enum value='7' name='kTLSProtocol11'/>
<enum value='8' name='kTLSProtocol12'/>
<enum value='5' name='kTLSProtocol1Only'/>
<enum value='2' name='kTryAuthenticate'/>
<enum value='0' name='noSecuritySession'/>
<enum value='16' name='sessionHasGraphicAccess'/>
<enum value='32' name='sessionHasTTY'/>
<enum value='4096' name='sessionIsRemote'/>
<enum value='1' name='sessionIsRoot'/>
<enum value='32768' name='sessionKeepCurrentBootstrap'/>
<function name='AuthorizationCopyInfo'>
<arg type='^{AuthorizationOpaqueRef=}' name='authorization' declared_type='AuthorizationRef'/>
<arg type='*' name='tag' declared_type='AuthorizationString'/>
<arg type='^^{?}' name='info' declared_type='AuthorizationItemSet**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationCopyPrivilegedReference'>
<arg type='^^{AuthorizationOpaqueRef}' name='authorization' declared_type='AuthorizationRef*'/>
<arg type64='I' type='L' name='flags' declared_type='AuthorizationFlags'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationCopyRights'>
<arg type='^{AuthorizationOpaqueRef=}' name='authorization' declared_type='AuthorizationRef'/>
<arg type64='^{_AuthorizationRights=I^{_AuthorizationItem=*Q^vI}}' type='^{_AuthorizationRights=I^{_AuthorizationItem=*I^vI}}' name='rights' const='true' declared_type='AuthorizationRights*'/>
<arg type64='^{_AuthorizationEnvironment=I^{_AuthorizationItem=*Q^vI}}' type='^{_AuthorizationEnvironment=I^{_AuthorizationItem=*I^vI}}' name='environment' const='true' declared_type='AuthorizationEnvironment*'/>
<arg type64='I' type='L' name='flags' declared_type='AuthorizationFlags'/>
<arg type='^^{?}' name='authorizedRights' declared_type='AuthorizationRights**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationCopyRightsAsync'>
<arg type='^{AuthorizationOpaqueRef=}' name='authorization' declared_type='AuthorizationRef'/>
<arg type64='^{_AuthorizationRights=I^{_AuthorizationItem=*Q^vI}}' type='^{_AuthorizationRights=I^{_AuthorizationItem=*I^vI}}' name='rights' const='true' declared_type='AuthorizationRights*'/>
<arg type64='^{_AuthorizationEnvironment=I^{_AuthorizationItem=*Q^vI}}' type='^{_AuthorizationEnvironment=I^{_AuthorizationItem=*I^vI}}' name='environment' const='true' declared_type='AuthorizationEnvironment*'/>
<arg type64='I' type='L' name='flags' declared_type='AuthorizationFlags'/>
<arg function_pointer='true' type='@?' name='callbackBlock' declared_type='AuthorizationAsyncCallback'>
<arg type64='i' type='l' declared_type='OSStatus'/>
<arg type64='^{_AuthorizationRights=I^{_AuthorizationItem=*Q^vI}}' type='^{_AuthorizationRights=I^{_AuthorizationItem=*I^vI}}' declared_type='AuthorizationRights*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='AuthorizationCreate'>
<arg type64='^{_AuthorizationRights=I^{_AuthorizationItem=*Q^vI}}' type='^{_AuthorizationRights=I^{_AuthorizationItem=*I^vI}}' name='rights' const='true' declared_type='AuthorizationRights*'/>
<arg type64='^{_AuthorizationEnvironment=I^{_AuthorizationItem=*Q^vI}}' type='^{_AuthorizationEnvironment=I^{_AuthorizationItem=*I^vI}}' name='environment' const='true' declared_type='AuthorizationEnvironment*'/>
<arg type64='I' type='L' name='flags' declared_type='AuthorizationFlags'/>
<arg type='^^{AuthorizationOpaqueRef}' name='authorization' declared_type='AuthorizationRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationCreateFromExternalForm'>
<arg type='^{_AuthorizationExternalForm=[32c]}' name='extForm' const='true' declared_type='AuthorizationExternalForm*'/>
<arg type='^^{AuthorizationOpaqueRef}' name='authorization' declared_type='AuthorizationRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationExecuteWithPrivileges'>
<arg type='^{AuthorizationOpaqueRef=}' name='authorization' declared_type='AuthorizationRef'/>
<arg type='*' name='pathToTool' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='options' declared_type='AuthorizationFlags'/>
<arg type='^*' name='arguments' const='true' declared_type='char **'/>
<arg type='^^{__sFILE}' name='communicationsPipe' declared_type='FILE**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationFree'>
<arg type='^{AuthorizationOpaqueRef=}' name='authorization' declared_type='AuthorizationRef'/>
<arg type64='I' type='L' name='flags' declared_type='AuthorizationFlags'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationFreeItemSet'>
<arg type64='^{_AuthorizationItemSet=I^{_AuthorizationItem=*Q^vI}}' type='^{_AuthorizationItemSet=I^{_AuthorizationItem=*I^vI}}' name='set' declared_type='AuthorizationItemSet*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationMakeExternalForm'>
<arg type='^{AuthorizationOpaqueRef=}' name='authorization' declared_type='AuthorizationRef'/>
<arg type='^{_AuthorizationExternalForm=[32c]}' name='extForm' declared_type='AuthorizationExternalForm*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationPluginCreate'>
<arg type='^{AuthorizationCallbacks=I^?^?^?^?^?^?^?^?^?}' name='callbacks' const='true' declared_type='AuthorizationCallbacks*'/>
<arg type='^^v' name='outPlugin' declared_type='AuthorizationPluginRef*'/>
<arg type='^^{AuthorizationPluginInterface}' name='outPluginInterface' const='true' declared_type='AuthorizationPluginInterface**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationRightGet'>
<arg type='*' name='rightName' const='true' declared_type='char*'/>
<arg type='^^{__CFDictionary}' name='rightDefinition' declared_type='CFDictionaryRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationRightRemove'>
<arg type='^{AuthorizationOpaqueRef=}' name='authRef' declared_type='AuthorizationRef'/>
<arg type='*' name='rightName' const='true' declared_type='char*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AuthorizationRightSet'>
<arg type='^{AuthorizationOpaqueRef=}' name='authRef' declared_type='AuthorizationRef'/>
<arg type='*' name='rightName' const='true' declared_type='char*'/>
<arg type='@' name='rightDefinition' declared_type='CFTypeRef'/>
<arg type='^{__CFString=}' name='descriptionKey' declared_type='CFStringRef'/>
<arg type='^{__CFBundle=}' name='bundle' declared_type='CFBundleRef'/>
<arg type='^{__CFString=}' name='localeTableName' declared_type='CFStringRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCopyAllCerts'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type='^^{__CFArray}' name='certsOut' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCopyContent'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type='^^{__CFData}' name='contentOut' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCopyDetachedContent'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type='^^{__CFData}' name='detachedContentOut' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCopyEncapsulatedContentType'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type='^^{__CFData}' name='eContentTypeOut' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCopySignerCert'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type64='Q' type='L' name='signerIndex' declared_type='size_t'/>
<arg type='^^{OpaqueSecCertificateRef}' name='signerCertOut' declared_type='SecCertificateRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCopySignerEmailAddress'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type64='Q' type='L' name='signerIndex' declared_type='size_t'/>
<arg type='^^{__CFString}' name='signerEmailAddressOut' declared_type='CFStringRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCopySignerSigningTime'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type64='Q' type='L' name='signerIndex' declared_type='size_t'/>
<arg type='^d' name='signingTime' declared_type='CFAbsoluteTime*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCopySignerStatus'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type64='Q' type='L' name='signerIndex' declared_type='size_t'/>
<arg type='@' name='policyOrArray' declared_type='CFTypeRef'/>
<arg type='B' name='evaluateSecTrust' declared_type='Boolean'/>
<arg type='^I' name='signerStatusOut' declared_type='CMSSignerStatus*'/>
<arg type='^^{OpaqueSecTrustRef}' name='secTrustOut' declared_type='SecTrustRef*'/>
<arg type='^i' name='certVerifyResultCodeOut' declared_type='OSStatus*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCopySignerTimestamp'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type64='Q' type='L' name='signerIndex' declared_type='size_t'/>
<arg type='^d' name='timestamp' declared_type='CFAbsoluteTime*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCopySignerTimestampCertificates'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type64='Q' type='L' name='signerIndex' declared_type='size_t'/>
<arg type='^^{__CFArray}' name='certificateRefs' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderCreate'>
<arg type='^^{_CMSDecoder}' name='cmsDecoderOut' declared_type='CMSDecoderRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderFinalizeMessage'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderGetNumSigners'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type64='^Q' type='^I' name='numSignersOut' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CMSDecoderIsContentEncrypted'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type='^B' name='isEncryptedOut' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderSetDetachedContent'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type='^{__CFData=}' name='detachedContent' declared_type='CFDataRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderSetSearchKeychain'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type='@' name='keychainOrArray' declared_type='CFTypeRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSDecoderUpdateMessage'>
<arg type='^{_CMSDecoder=}' name='cmsDecoder' declared_type='CMSDecoderRef'/>
<arg type='^v' name='msgBytes' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='msgBytesLen' declared_type='size_t'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncode'>
<arg type='@' name='signers' declared_type='CFTypeRef'/>
<arg type='@' name='recipients' declared_type='CFTypeRef'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='eContentType' const='true' declared_type='CSSM_OID*'/>
<arg type='B' name='detachedContent' declared_type='Boolean'/>
<arg type='I' name='signedAttributes' declared_type='CMSSignedAttributes'/>
<arg type='^v' name='content' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='contentLen' declared_type='size_t'/>
<arg type='^^{__CFData}' name='encodedContentOut' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncodeContent'>
<arg type='@' name='signers' declared_type='CFTypeRef'/>
<arg type='@' name='recipients' declared_type='CFTypeRef'/>
<arg type='@' name='eContentTypeOID' declared_type='CFTypeRef'/>
<arg type='B' name='detachedContent' declared_type='Boolean'/>
<arg type='I' name='signedAttributes' declared_type='CMSSignedAttributes'/>
<arg type='^v' name='content' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='contentLen' declared_type='size_t'/>
<arg type='^^{__CFData}' name='encodedContentOut' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderAddRecipients'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='@' name='recipientOrArray' declared_type='CFTypeRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderAddSignedAttributes'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='I' name='signedAttributes' declared_type='CMSSignedAttributes'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderAddSigners'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='@' name='signerOrArray' declared_type='CFTypeRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderAddSupportingCerts'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='@' name='certOrArray' declared_type='CFTypeRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderCopyEncapsulatedContentType'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='^^{__CFData}' name='eContentTypeOut' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderCopyEncodedContent'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='^^{__CFData}' name='encodedContentOut' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderCopyRecipients'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='^^{__CFArray}' name='recipientsOut' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderCopySignerTimestamp'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type64='Q' type='L' name='signerIndex' declared_type='size_t'/>
<arg type='^d' name='timestamp' declared_type='CFAbsoluteTime*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderCopySigners'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='^^{__CFArray}' name='signersOut' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderCopySupportingCerts'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='^^{__CFArray}' name='certsOut' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderCreate'>
<arg type='^^{_CMSEncoder}' name='cmsEncoderOut' declared_type='CMSEncoderRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderGetCertificateChainMode'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='^I' name='chainModeOut' declared_type='CMSCertificateChainMode*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderGetHasDetachedContent'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='^B' name='detachedContentOut' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='CMSEncoderSetCertificateChainMode'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='I' name='chainMode' declared_type='CMSCertificateChainMode'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderSetEncapsulatedContentType'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='eContentType' const='true' declared_type='CSSM_OID*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderSetEncapsulatedContentTypeOID'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='@' name='eContentTypeOID' declared_type='CFTypeRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderSetHasDetachedContent'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='B' name='detachedContent' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CMSEncoderUpdateContent'>
<arg type='^{_CMSEncoder=}' name='cmsEncoder' declared_type='CMSEncoderRef'/>
<arg type='^v' name='content' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='contentLen' declared_type='size_t'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='CSSM_AC_AuthCompute'>
<arg type64='q' type='l' name='ACHandle' declared_type='CSSM_AC_HANDLE'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' name='BaseAuthorizations' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' name='Credentials' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='I' name='NumberOfRequestors' declared_type='uint32'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' name='Requestors' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' name='RequestedAuthorizationPeriod' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_list=I^{cssm_list_element}^{cssm_list_element}}' name='RequestedAuthorization' const='true' declared_type='CSSM_LIST*'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' name='AuthorizationResult' declared_type='CSSM_TUPLEGROUP_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_AC_PassThrough'>
<arg type64='q' type='l' name='ACHandle' declared_type='CSSM_AC_HANDLE'/>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' name='DBList' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='I' name='PassThroughId' declared_type='uint32'/>
<arg type='^v' name='InputParams' const='true' declared_type='void*'/>
<arg type='^^v' name='OutputParams' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertAbortCache'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CertHandle' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertAbortQuery'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='ResultsHandle' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertCache'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^q' type='^i' name='CertHandle' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertCreateTemplate'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' name='NumberOfFields' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='CertFields' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertTemplate' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertDescribeFormat'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='^I' name='NumberOfFields' declared_type='uint32*'/>
<arg type='^^{cssm_data}' name='OidList' declared_type='CSSM_OID_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertGetAllFields'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' name='NumberOfFields' declared_type='uint32*'/>
<arg type='^^{cssm_field}' name='CertFields' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertGetAllTemplateFields'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertTemplate' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' name='NumberOfFields' declared_type='uint32*'/>
<arg type='^^{cssm_field}' name='CertFields' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertGetFirstCachedFieldValue'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CertHandle' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertField' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' name='ResultsHandle' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' name='NumberOfMatchedFields' declared_type='uint32*'/>
<arg type='^^{cssm_data}' name='Value' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertGetFirstFieldValue'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertField' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' name='ResultsHandle' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' name='NumberOfMatchedFields' declared_type='uint32*'/>
<arg type='^^{cssm_data}' name='Value' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertGetKeyInfo'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_key}' name='Key' declared_type='CSSM_KEY_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertGetNextCachedFieldValue'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='ResultsHandle' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' name='Value' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertGetNextFieldValue'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='ResultsHandle' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' name='Value' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertGroupFromVerifiedBundle'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_cert_bundle={cssm_cert_bundle_header=II}{cssm_data=Q*}}' type='^{cssm_cert_bundle={cssm_cert_bundle_header=II}{cssm_data=I*}}' name='CertBundle' const='true' declared_type='CSSM_CERT_BUNDLE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='SignerCert' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_certgroup}' name='CertGroup' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertGroupToSignedBundle'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='CertGroupToBundle' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_cert_bundle_header=II}' name='BundleInfo' const='true' declared_type='CSSM_CERT_BUNDLE_HEADER*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='SignedBundle' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertSign'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertTemplate' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SignScope' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' name='ScopeSize' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='SignedCert' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertVerify'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertToBeVerified' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='SignerCert' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='VerifyScope' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' name='ScopeSize' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CertVerifyWithKey'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertToBeVerified' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlAbortCache'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CrlHandle' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlAbortQuery'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='ResultsHandle' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlAddCert'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='NumberOfFields' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='CrlEntryFields' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='OldCrl' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='NewCrl' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlCache'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Crl' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^q' type='^i' name='CrlHandle' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlCreateTemplate'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' name='NumberOfFields' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='CrlTemplate' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='NewCrl' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlDescribeFormat'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='^I' name='NumberOfFields' declared_type='uint32*'/>
<arg type='^^{cssm_data}' name='OidList' declared_type='CSSM_OID_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlGetAllCachedRecordFields'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CrlHandle' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CrlRecordIndex' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' name='NumberOfFields' declared_type='uint32*'/>
<arg type='^^{cssm_field}' name='CrlFields' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlGetAllFields'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Crl' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' name='NumberOfCrlFields' declared_type='uint32*'/>
<arg type='^^{cssm_field}' name='CrlFields' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlGetFirstCachedFieldValue'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CrlHandle' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CrlRecordIndex' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CrlField' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' name='ResultsHandle' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' name='NumberOfMatchedFields' declared_type='uint32*'/>
<arg type='^^{cssm_data}' name='Value' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlGetFirstFieldValue'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Crl' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CrlField' const='true' declared_type='CSSM_OID*'/>
<arg type64='^q' type='^i' name='ResultsHandle' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' name='NumberOfMatchedFields' declared_type='uint32*'/>
<arg type='^^{cssm_data}' name='Value' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlGetNextCachedFieldValue'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='ResultsHandle' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' name='Value' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlGetNextFieldValue'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='ResultsHandle' declared_type='CSSM_HANDLE'/>
<arg type='^^{cssm_data}' name='Value' declared_type='CSSM_DATA_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlRemoveCert'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='OldCrl' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='NewCrl' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlSetFields'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' name='NumberOfFields' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='CrlTemplate' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='OldCrl' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ModifiedCrl' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlSign'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='UnsignedCrl' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='SignScope' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' name='ScopeSize' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='SignedCrl' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlVerify'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CrlToBeVerified' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='SignerCert' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='VerifyScope' const='true' declared_type='CSSM_FIELD*'/>
<arg type='I' name='ScopeSize' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_CrlVerifyWithKey'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CrlToBeVerified' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_FreeFieldValue'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertOrCrlOid' const='true' declared_type='CSSM_OID*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Value' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_FreeFields'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' name='NumberOfFields' declared_type='uint32'/>
<arg type='^^{cssm_field}' name='Fields' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_IsCertInCachedCrl'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' const='true' declared_type='CSSM_DATA*'/>
<arg type64='q' type='l' name='CrlHandle' declared_type='CSSM_HANDLE'/>
<arg type='^i' name='CertFound' declared_type='CSSM_BOOL*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CrlRecordIndex' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_IsCertInCrl'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Cert' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Crl' const='true' declared_type='CSSM_DATA*'/>
<arg type='^i' name='CertFound' declared_type='CSSM_BOOL*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CL_PassThrough'>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='PassThroughId' declared_type='uint32'/>
<arg type='^v' name='InputParams' const='true' declared_type='void*'/>
<arg type='^^v' name='OutputParams' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_ChangeLoginAcl'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' name='AclEdit' const='true' declared_type='CSSM_ACL_EDIT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_ChangeLoginOwner'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' name='NewOwner' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_CreateAsymmetricContext'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' name='AlgorithmID' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type='I' name='Padding' declared_type='CSSM_PADDING'/>
<arg type='^Q' name='NewContextHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_CreateDeriveKeyContext'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' name='AlgorithmID' declared_type='CSSM_ALGORITHMS'/>
<arg type='I' name='DeriveKeyType' declared_type='CSSM_KEY_TYPE'/>
<arg type='I' name='DeriveKeyLengthInBits' declared_type='uint32'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='BaseKey' const='true' declared_type='CSSM_KEY*'/>
<arg type='I' name='IterationCount' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Salt' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_crypto_data={cssm_data=Q*}^?^v}' type='^{cssm_crypto_data={cssm_data=I*}^?^v}' name='Seed' const='true' declared_type='CSSM_CRYPTO_DATA*'/>
<arg type='^Q' name='NewContextHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_CreateDigestContext'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' name='AlgorithmID' declared_type='CSSM_ALGORITHMS'/>
<arg type='^Q' name='NewContextHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_CreateKeyGenContext'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' name='AlgorithmID' declared_type='CSSM_ALGORITHMS'/>
<arg type='I' name='KeySizeInBits' declared_type='uint32'/>
<arg type64='^{cssm_crypto_data={cssm_data=Q*}^?^v}' type='^{cssm_crypto_data={cssm_data=I*}^?^v}' name='Seed' const='true' declared_type='CSSM_CRYPTO_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Salt' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_date=[4C][2C][2C]}' name='StartDate' const='true' declared_type='CSSM_DATE*'/>
<arg type='^{cssm_date=[4C][2C][2C]}' name='EndDate' const='true' declared_type='CSSM_DATE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Params' const='true' declared_type='CSSM_DATA*'/>
<arg type='^Q' name='NewContextHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_CreateMacContext'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' name='AlgorithmID' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type='^Q' name='NewContextHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_CreatePassThroughContext'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type='^Q' name='NewContextHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_CreateRandomGenContext'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' name='AlgorithmID' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_crypto_data={cssm_data=Q*}^?^v}' type='^{cssm_crypto_data={cssm_data=I*}^?^v}' name='Seed' const='true' declared_type='CSSM_CRYPTO_DATA*'/>
<arg type64='Q' type='L' name='Length' declared_type='CSSM_SIZE'/>
<arg type='^Q' name='NewContextHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_CreateSignatureContext'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' name='AlgorithmID' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type='^Q' name='NewContextHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_CreateSymmetricContext'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' name='AlgorithmID' declared_type='CSSM_ALGORITHMS'/>
<arg type='I' name='Mode' declared_type='CSSM_ENCRYPT_MODE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='InitVector' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='Padding' declared_type='CSSM_PADDING'/>
<arg type='^v' name='Reserved' declared_type='void*'/>
<arg type='^Q' name='NewContextHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_GetLoginAcl'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^[68c]' name='SelectionTag' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' name='NumberOfAclInfos' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' name='AclInfos' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_GetLoginOwner'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' name='Owner' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_GetOperationalStatistics'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_csp_operational_statistics=iIIIIIIIII}' name='Statistics' declared_type='CSSM_CSP_OPERATIONAL_STATISTICS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_Login'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='LoginName' const='true' declared_type='CSSM_DATA*'/>
<arg type='^v' name='Reserved' const='true' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_Logout'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_ObtainPrivateKeyFromPublicKey'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='PublicKey' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='PrivateKey' declared_type='CSSM_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_CSP_PassThrough'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='PassThroughId' declared_type='uint32'/>
<arg type='^v' name='InData' const='true' declared_type='void*'/>
<arg type='^^v' name='OutData' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_ChangeKeyAcl'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' name='AclEdit' const='true' declared_type='CSSM_ACL_EDIT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_ChangeKeyOwner'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' name='NewOwner' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_Authenticate'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' name='AccessRequest' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_ChangeDbAcl'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_acl_edit=Iq^{cssm_acl_entry_input}}' type='^{cssm_acl_edit=Ii^{cssm_acl_entry_input}}' name='AclEdit' const='true' declared_type='CSSM_ACL_EDIT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_ChangeDbOwner'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' name='NewOwner' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_CreateRelation'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' name='RelationID' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='*' name='RelationName' const='true' declared_type='char*'/>
<arg type='I' name='NumberOfAttributes' declared_type='uint32'/>
<arg type64='^{cssm_db_schema_attribute_info=I*{cssm_data=Q*}I}' type='^{cssm_db_schema_attribute_info=I*{cssm_data=I*}I}' name='pAttributeInfo' const='true' declared_type='CSSM_DB_SCHEMA_ATTRIBUTE_INFO*'/>
<arg type='I' name='NumberOfIndexes' declared_type='uint32'/>
<arg type='^{cssm_db_schema_index_info=IIII}' name='pIndexInfo' const='true' declared_type='CSSM_DB_SCHEMA_INDEX_INFO*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DataAbortQuery'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='q' type='l' name='ResultsHandle' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DataDelete'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' name='UniqueRecordIdentifier' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DataGetFirst'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^{cssm_query=III^{cssm_selection_predicate}{cssm_query_limits=II}I}' name='Query' const='true' declared_type='CSSM_QUERY*'/>
<arg type64='^q' type='^i' name='ResultsHandle' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' name='Attributes' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Data' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' name='UniqueId' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DataGetFromUniqueRecordId'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' name='UniqueRecord' const='true' declared_type='CSSM_DB_UNIQUE_RECORD*'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' name='Attributes' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Data' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DataGetNext'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='q' type='l' name='ResultsHandle' declared_type='CSSM_HANDLE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' name='Attributes' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Data' declared_type='CSSM_DATA_PTR'/>
<arg type='^^{cssm_db_unique_record}' name='UniqueId' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DataInsert'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' name='RecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' name='Attributes' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Data' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_db_unique_record}' name='UniqueId' declared_type='CSSM_DB_UNIQUE_RECORD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DataModify'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' name='RecordType' declared_type='CSSM_DB_RECORDTYPE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' name='UniqueRecordIdentifier' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<arg type='^{cssm_db_record_attribute_data=III^{cssm_db_attribute_data}}' name='AttributesToBeModified' const='true' declared_type='CSSM_DB_RECORD_ATTRIBUTE_DATA*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataToBeModified' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='ModifyMode' declared_type='CSSM_DB_MODIFY_MODE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DbClose'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DbCreate'>
<arg type64='q' type='l' name='DLHandle' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' name='DbName' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' name='DbLocation' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='^{cssm_dbinfo=I^{cssm_db_parsing_module_info}^{cssm_db_record_attribute_info}^{cssm_db_record_index_info}i*^v}' name='DBInfo' const='true' declared_type='CSSM_DBINFO*'/>
<arg type='I' name='AccessRequest' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' name='CredAndAclEntry' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type='^v' name='OpenParameters' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' name='DbHandle' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DbDelete'>
<arg type64='q' type='l' name='DLHandle' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' name='DbName' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' name='DbLocation' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DbOpen'>
<arg type64='q' type='l' name='DLHandle' declared_type='CSSM_DL_HANDLE'/>
<arg type='*' name='DbName' const='true' declared_type='char*'/>
<arg type64='^{cssm_net_address=I{cssm_data=Q*}}' type='^{cssm_net_address=I{cssm_data=I*}}' name='DbLocation' const='true' declared_type='CSSM_NET_ADDRESS*'/>
<arg type='I' name='AccessRequest' declared_type='CSSM_DB_ACCESS_TYPE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^v' name='OpenParameters' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' name='DbHandle' declared_type='CSSM_DB_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_DestroyRelation'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' name='RelationID' declared_type='CSSM_DB_RECORDTYPE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_FreeNameList'>
<arg type64='q' type='l' name='DLHandle' declared_type='CSSM_DL_HANDLE'/>
<arg type='^{cssm_name_list=I^*}' name='NameList' declared_type='CSSM_NAME_LIST_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_FreeUniqueRecord'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type64='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=Q*}I)I}}{cssm_data=Q*}}' type='^{cssm_db_unique_record={cssm_db_index_info=II{cssm_db_attribute_info=I(cssm_db_attribute_label=*{cssm_data=I*}I)I}}{cssm_data=I*}}' name='UniqueRecord' declared_type='CSSM_DB_UNIQUE_RECORD_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_GetDbAcl'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^[68c]' name='SelectionTag' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' name='NumberOfAclInfos' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' name='AclInfos' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_GetDbNameFromHandle'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^*' name='DbName' declared_type='char**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_GetDbNames'>
<arg type64='q' type='l' name='DLHandle' declared_type='CSSM_DL_HANDLE'/>
<arg type='^^{cssm_name_list}' name='NameList' declared_type='CSSM_NAME_LIST_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_GetDbOwner'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' name='Owner' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DL_PassThrough'>
<arg type64='{cssm_dl_db_handle=qq}' type='{cssm_dl_db_handle=ii}' name='DLDBHandle' declared_type='CSSM_DL_DB_HANDLE'/>
<arg type='I' name='PassThroughId' declared_type='uint32'/>
<arg type='^v' name='InputParams' const='true' declared_type='void*'/>
<arg type='^^v' name='OutputParams' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DecryptData'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CipherBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='CipherBufCount' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ClearBufs' declared_type='CSSM_DATA_PTR'/>
<arg type='I' name='ClearBufCount' declared_type='uint32'/>
<arg type64='^Q' type='^I' name='bytesDecrypted' declared_type='CSSM_SIZE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='RemData' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DecryptDataFinal'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='RemData' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DecryptDataInit'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DecryptDataInitP'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='Q' name='Privilege' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DecryptDataP'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CipherBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='CipherBufCount' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ClearBufs' declared_type='CSSM_DATA_PTR'/>
<arg type='I' name='ClearBufCount' declared_type='uint32'/>
<arg type64='^Q' type='^I' name='bytesDecrypted' declared_type='CSSM_SIZE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='RemData' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' name='Privilege' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DecryptDataUpdate'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CipherBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='CipherBufCount' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ClearBufs' declared_type='CSSM_DATA_PTR'/>
<arg type='I' name='ClearBufCount' declared_type='uint32'/>
<arg type64='^Q' type='^I' name='bytesDecrypted' declared_type='CSSM_SIZE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DeleteContext'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DeleteContextAttributes'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='NumberOfAttributes' declared_type='uint32'/>
<arg type='^{cssm_context_attribute=II(cssm_context_attribute_value=*I^{cssm_access_credentials}^{cssm_key}^{cssm_data}I^{cssm_date}^{cssm_range}^{cssm_crypto_data}^{cssm_version}^{cssm_dl_db_handle}^{cssm_kr_profile})}' name='ContextAttributes' const='true' declared_type='CSSM_CONTEXT_ATTRIBUTE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DeriveKey'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Param' declared_type='CSSM_DATA_PTR'/>
<arg type='I' name='KeyUsage' declared_type='uint32'/>
<arg type='I' name='KeyAttr' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KeyLabel' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' name='CredAndAclEntry' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='DerivedKey' declared_type='CSSM_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DigestData'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='DataBufCount' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Digest' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DigestDataClone'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='^Q' name='ClonednewCCHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DigestDataFinal'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Digest' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DigestDataInit'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_DigestDataUpdate'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='DataBufCount' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_EncryptData'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ClearBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='ClearBufCount' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CipherBufs' declared_type='CSSM_DATA_PTR'/>
<arg type='I' name='CipherBufCount' declared_type='uint32'/>
<arg type64='^Q' type='^I' name='bytesEncrypted' declared_type='CSSM_SIZE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='RemData' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_EncryptDataFinal'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='RemData' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_EncryptDataInit'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_EncryptDataInitP'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='Q' name='Privilege' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_EncryptDataP'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ClearBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='ClearBufCount' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CipherBufs' declared_type='CSSM_DATA_PTR'/>
<arg type='I' name='CipherBufCount' declared_type='uint32'/>
<arg type64='^Q' type='^I' name='bytesEncrypted' declared_type='CSSM_SIZE*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='RemData' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' name='Privilege' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_EncryptDataUpdate'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ClearBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='ClearBufCount' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CipherBufs' declared_type='CSSM_DATA_PTR'/>
<arg type='I' name='CipherBufCount' declared_type='uint32'/>
<arg type64='^Q' type='^I' name='bytesEncrypted' declared_type='CSSM_SIZE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_FreeContext'>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' name='Context' declared_type='CSSM_CONTEXT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_FreeKey'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='KeyPtr' declared_type='CSSM_KEY_PTR'/>
<arg type='i' name='Delete' declared_type='CSSM_BOOL'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GenerateAlgorithmParams'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='ParamBits' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Param' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GenerateKey'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='KeyUsage' declared_type='uint32'/>
<arg type='I' name='KeyAttr' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KeyLabel' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' name='CredAndAclEntry' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' declared_type='CSSM_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GenerateKeyP'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='KeyUsage' declared_type='uint32'/>
<arg type='I' name='KeyAttr' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KeyLabel' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' name='CredAndAclEntry' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' declared_type='CSSM_KEY_PTR'/>
<arg type='Q' name='Privilege' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GenerateKeyPair'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='PublicKeyUsage' declared_type='uint32'/>
<arg type='I' name='PublicKeyAttr' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='PublicKeyLabel' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='PublicKey' declared_type='CSSM_KEY_PTR'/>
<arg type='I' name='PrivateKeyUsage' declared_type='uint32'/>
<arg type='I' name='PrivateKeyAttr' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='PrivateKeyLabel' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' name='CredAndAclEntry' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='PrivateKey' declared_type='CSSM_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GenerateKeyPairP'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='PublicKeyUsage' declared_type='uint32'/>
<arg type='I' name='PublicKeyAttr' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='PublicKeyLabel' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='PublicKey' declared_type='CSSM_KEY_PTR'/>
<arg type='I' name='PrivateKeyUsage' declared_type='uint32'/>
<arg type='I' name='PrivateKeyAttr' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='PrivateKeyLabel' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' name='CredAndAclEntry' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='PrivateKey' declared_type='CSSM_KEY_PTR'/>
<arg type='Q' name='Privilege' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GenerateMac'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='DataBufCount' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Mac' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GenerateMacFinal'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Mac' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GenerateMacInit'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GenerateMacUpdate'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='DataBufCount' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GenerateRandom'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='RandomNumber' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GetAPIMemoryFunctions'>
<arg type64='q' type='l' name='AddInHandle' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' name='AppMemoryFuncs' declared_type='CSSM_API_MEMORY_FUNCS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GetContext'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='^^{cssm_context}' name='Context' declared_type='CSSM_CONTEXT_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GetContextAttribute'>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' name='Context' const='true' declared_type='CSSM_CONTEXT*'/>
<arg type='I' name='AttributeType' declared_type='uint32'/>
<arg type='^^{cssm_context_attribute}' name='ContextAttribute' declared_type='CSSM_CONTEXT_ATTRIBUTE_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GetKeyAcl'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type='^[68c]' name='SelectionTag' const='true' declared_type='CSSM_STRING*'/>
<arg type='^I' name='NumberOfAclInfos' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' name='AclInfos' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GetKeyOwner'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' name='Owner' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GetModuleGUIDFromHandle'>
<arg type64='q' type='l' name='ModuleHandle' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleGUID' declared_type='CSSM_GUID_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GetPrivilege'>
<arg type='^Q' name='Privilege' declared_type='CSSM_PRIVILEGE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GetSubserviceUIDFromHandle'>
<arg type64='q' type='l' name='ModuleHandle' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='^{cssm_subservice_uid={cssm_guid=ISS[8C]}{cssm_version=II}II}' name='SubserviceUID' declared_type='CSSM_SUBSERVICE_UID_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_GetTimeValue'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='I' name='TimeAlgorithm' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='TimeData' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_Init'>
<arg type='^{cssm_version=II}' name='Version' const='true' declared_type='CSSM_VERSION*'/>
<arg type='I' name='Scope' declared_type='CSSM_PRIVILEGE_SCOPE'/>
<arg type='^{cssm_guid=ISS[8C]}' name='CallerGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='I' name='KeyHierarchy' declared_type='CSSM_KEY_HIERARCHY'/>
<arg type='^I' name='PvcPolicy' declared_type='CSSM_PVC_MODE*'/>
<arg type='^v' name='Reserved' const='true' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_Introduce'>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleID' const='true' declared_type='CSSM_GUID*'/>
<arg type='I' name='KeyHierarchy' declared_type='CSSM_KEY_HIERARCHY'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_CreateRecoveryEnablementContext'>
<arg type='I' name='KRSPHandle' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='^{cssm_kr_profile={cssm_kr_name=CC*}^{cssm_certgroup}^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}^{cssm_data}I^{cssm_data}}' name='LocalProfile' const='true' declared_type='CSSM_KR_PROFILE*'/>
<arg type='^{cssm_kr_profile={cssm_kr_name=CC*}^{cssm_certgroup}^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}^{cssm_data}I^{cssm_data}}' name='RemoteProfile' const='true' declared_type='CSSM_KR_PROFILE*'/>
<arg type='^Q' name='NewContext' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_CreateRecoveryRegistrationContext'>
<arg type='I' name='KRSPHandle' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='^Q' name='NewContext' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_CreateRecoveryRequestContext'>
<arg type='I' name='KRSPHandle' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='^{cssm_kr_profile={cssm_kr_name=CC*}^{cssm_certgroup}^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}^{cssm_data}I^{cssm_data}}' name='LocalProfile' const='true' declared_type='CSSM_KR_PROFILE*'/>
<arg type='^Q' name='NewContext' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_GenerateRecoveryFields'>
<arg type='Q' name='KeyRecoveryContext' declared_type='CSSM_CC_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KRSPOptions' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='KRFlags' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KRFields' declared_type='CSSM_DATA_PTR'/>
<arg type='^Q' name='NewCCHandle' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_GetPolicyInfo'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='^I' name='EncryptionProhibited' declared_type='CSSM_KR_POLICY_FLAGS*'/>
<arg type='^I' name='WorkFactor' declared_type='uint32*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_GetRecoveredObject'>
<arg type='I' name='KRSPHandle' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' name='CacheHandle' declared_type='CSSM_HANDLE'/>
<arg type='I' name='IndexInResults' declared_type='uint32'/>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' name='CredAndAclEntry' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type='I' name='Flags' declared_type='uint32'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='RecoveredKey' declared_type='CSSM_KEY_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='OtherInfo' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_PassThrough'>
<arg type='I' name='KRSPHandle' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='Q' name='KeyRecoveryContext' declared_type='CSSM_CC_HANDLE'/>
<arg type='Q' name='CryptoContext' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='PassThroughId' declared_type='uint32'/>
<arg type='^v' name='InputParams' const='true' declared_type='void*'/>
<arg type='^^v' name='OutputParams' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_ProcessRecoveryFields'>
<arg type='Q' name='KeyRecoveryContext' declared_type='CSSM_CC_HANDLE'/>
<arg type='Q' name='CryptoContext' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KRSPOptions' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='KRFlags' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KRFields' const='true' declared_type='CSSM_DATA*'/>
<arg type='^Q' name='NewCryptoContext' declared_type='CSSM_CC_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_QueryPolicyInfo'>
<arg type='I' name='KRSPHandle' declared_type='CSSM_KRSP_HANDLE'/>
<arg type='I' name='AlgorithmID' declared_type='CSSM_ALGORITHMS'/>
<arg type='I' name='Mode' declared_type='CSSM_ENCRYPT_MODE'/>
<arg type='I' name='Class' declared_type='CSSM_CONTEXT_TYPE'/>
<arg type='^^{cssm_kr_policy_info}' name='PolicyInfoData' declared_type='CSSM_KR_POLICY_INFO_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_RecoveryRequest'>
<arg type='Q' name='RecoveryRequestContext' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KRInData' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCredentials' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^i' name='EstimatedTime' declared_type='sint32*'/>
<arg type64='^q' type='^i' name='ReferenceHandle' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_RecoveryRequestAbort'>
<arg type='I' name='KRSPHandle' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' name='CacheHandle' declared_type='CSSM_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_RecoveryRetrieve'>
<arg type='I' name='KRSPHandle' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' name='ReferenceHandle' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCredentials' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^i' name='EstimatedTime' declared_type='sint32*'/>
<arg type64='^q' type='^i' name='CacheHandle' declared_type='CSSM_HANDLE_PTR'/>
<arg type='^I' name='NumberOfRecoveredKeys' declared_type='uint32*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_RegistrationRequest'>
<arg type='Q' name='RecoveryRegistrationContext' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KRInData' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCredentials' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='I' name='KRFlags' declared_type='CSSM_KR_POLICY_FLAGS'/>
<arg type='^i' name='EstimatedTime' declared_type='sint32*'/>
<arg type64='^q' type='^i' name='ReferenceHandle' declared_type='CSSM_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_RegistrationRetrieve'>
<arg type='I' name='KRSPHandle' declared_type='CSSM_KRSP_HANDLE'/>
<arg type64='q' type='l' name='ReferenceHandle' declared_type='CSSM_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCredentials' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type='^i' name='EstimatedTime' declared_type='sint32*'/>
<arg type='^{cssm_kr_profile={cssm_kr_name=CC*}^{cssm_certgroup}^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}C^{cssm_certgroup}^{cssm_data}I^{cssm_data}}' name='KRProfile' declared_type='CSSM_KR_PROFILE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_KR_SetEnterpriseRecoveryPolicy'>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='RecoveryPolicyFileName' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='OldPassPhrase' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='NewPassPhrase' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_ListAttachedModuleManagers'>
<arg type='^I' name='NumberOfModuleManagers' declared_type='uint32*'/>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleManagerGuids' declared_type='CSSM_GUID_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_ModuleAttach'>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='^{cssm_version=II}' name='Version' const='true' declared_type='CSSM_VERSION*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' name='MemoryFuncs' const='true' declared_type='CSSM_API_MEMORY_FUNCS*'/>
<arg type='I' name='SubserviceID' declared_type='uint32'/>
<arg type='I' name='SubServiceType' declared_type='CSSM_SERVICE_TYPE'/>
<arg type='I' name='AttachFlags' declared_type='CSSM_ATTACH_FLAGS'/>
<arg type='I' name='KeyHierarchy' declared_type='CSSM_KEY_HIERARCHY'/>
<arg type='^{cssm_func_name_addr=[68c]^?}' name='FunctionTable' declared_type='CSSM_FUNC_NAME_ADDR*'/>
<arg type='I' name='NumFunctionTable' declared_type='uint32'/>
<arg type='^v' name='Reserved' const='true' declared_type='void*'/>
<arg type64='^q' type='^i' name='NewModuleHandle' declared_type='CSSM_MODULE_HANDLE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_ModuleDetach'>
<arg type64='q' type='l' name='ModuleHandle' declared_type='CSSM_MODULE_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_ModuleLoad'>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='I' name='KeyHierarchy' declared_type='CSSM_KEY_HIERARCHY'/>
<arg function_pointer='true' type='^?' name='AppNotifyCallback' declared_type='CSSM_API_ModuleEventHandler'>
<arg type='^{cssm_guid=ISS[8C]}' const='true' declared_type='CSSM_GUID*'/>
<arg type='^v' declared_type='void*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='CSSM_SERVICE_TYPE'/>
<arg type='I' declared_type='CSSM_MODULE_EVENT'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</arg>
<arg type='^v' name='AppNotifyCallbackCtx' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_ModuleUnload'>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleGuid' const='true' declared_type='CSSM_GUID*'/>
<arg function_pointer='true' type='^?' name='AppNotifyCallback' declared_type='CSSM_API_ModuleEventHandler'>
<arg type='^{cssm_guid=ISS[8C]}' const='true' declared_type='CSSM_GUID*'/>
<arg type='^v' declared_type='void*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='CSSM_SERVICE_TYPE'/>
<arg type='I' declared_type='CSSM_MODULE_EVENT'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</arg>
<arg type='^v' name='AppNotifyCallbackCtx' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_QueryKeySizeInBits'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type='^{cssm_key_size=II}' name='KeySize' declared_type='CSSM_KEY_SIZE_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_QuerySize'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='i' name='Encrypt' declared_type='CSSM_BOOL'/>
<arg type='I' name='QuerySizeCount' declared_type='uint32'/>
<arg type='^{cssm_query_size_data=II}' name='DataBlockSizes' declared_type='CSSM_QUERY_SIZE_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_RetrieveCounter'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Counter' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_RetrieveUniqueId'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='UniqueID' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_SPI_ModuleAttach'>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='^{cssm_version=II}' name='Version' const='true' declared_type='CSSM_VERSION*'/>
<arg type='I' name='SubserviceID' declared_type='uint32'/>
<arg type='I' name='SubServiceType' declared_type='CSSM_SERVICE_TYPE'/>
<arg type='I' name='AttachFlags' declared_type='CSSM_ATTACH_FLAGS'/>
<arg type64='q' type='l' name='ModuleHandle' declared_type='CSSM_MODULE_HANDLE'/>
<arg type='I' name='KeyHierarchy' declared_type='CSSM_KEY_HIERARCHY'/>
<arg type='^{cssm_guid=ISS[8C]}' name='CssmGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleManagerGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='^{cssm_guid=ISS[8C]}' name='CallerGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='^{cssm_upcalls=^?^?^?^?^?^?}' name='Upcalls' const='true' declared_type='CSSM_UPCALLS*'/>
<arg type='^^{cssm_module_funcs}' name='FuncTbl' declared_type='CSSM_MODULE_FUNCS_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_SPI_ModuleDetach'>
<arg type64='q' type='l' name='ModuleHandle' declared_type='CSSM_MODULE_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_SPI_ModuleLoad'>
<arg type='^{cssm_guid=ISS[8C]}' name='CssmGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleGuid' const='true' declared_type='CSSM_GUID*'/>
<arg function_pointer='true' type='^?' name='CssmNotifyCallback' declared_type='CSSM_SPI_ModuleEventHandler'>
<arg type='^{cssm_guid=ISS[8C]}' const='true' declared_type='CSSM_GUID*'/>
<arg type='^v' declared_type='void*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='CSSM_SERVICE_TYPE'/>
<arg type='I' declared_type='CSSM_MODULE_EVENT'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</arg>
<arg type='^v' name='CssmNotifyCallbackCtx' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_SPI_ModuleUnload'>
<arg type='^{cssm_guid=ISS[8C]}' name='CssmGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleGuid' const='true' declared_type='CSSM_GUID*'/>
<arg function_pointer='true' type='^?' name='CssmNotifyCallback' declared_type='CSSM_SPI_ModuleEventHandler'>
<arg type='^{cssm_guid=ISS[8C]}' const='true' declared_type='CSSM_GUID*'/>
<arg type='^v' declared_type='void*'/>
<arg type='I' declared_type='uint32'/>
<arg type='I' declared_type='CSSM_SERVICE_TYPE'/>
<arg type='I' declared_type='CSSM_MODULE_EVENT'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</arg>
<arg type='^v' name='CssmNotifyCallbackCtx' declared_type='void*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_SetContext'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_context=III^{cssm_context_attribute}qiIII}' type='^{cssm_context=III^{cssm_context_attribute}iiIII}' name='Context' const='true' declared_type='CSSM_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_SetPrivilege'>
<arg type='Q' name='Privilege' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_SignData'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='DataBufCount' declared_type='uint32'/>
<arg type='I' name='DigestAlgorithm' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Signature' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_SignDataFinal'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Signature' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_SignDataInit'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_SignDataUpdate'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='DataBufCount' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_ApplyCrlToDb'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' name='CrlToBeApplied' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='SignerCertGroup' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' name='ApplyCrlVerifyContext' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' name='ApplyCrlVerifyResult' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertCreateTemplate'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' name='NumberOfFields' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='CertFields' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertTemplate' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertGetAllTemplateFields'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertTemplate' const='true' declared_type='CSSM_DATA*'/>
<arg type='^I' name='NumberOfFields' declared_type='uint32*'/>
<arg type='^^{cssm_field}' name='CertFields' declared_type='CSSM_FIELD_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertGroupConstruct'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' name='DBList' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='^v' name='ConstructParams' const='true' declared_type='void*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='CertGroupFrag' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_certgroup}' name='CertGroup' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertGroupPrune'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' name='DBList' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='OrderedCertGroup' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_certgroup}' name='PrunedCertGroup' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertGroupToTupleGroup'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='CertGroup' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' name='TupleGroup' declared_type='CSSM_TUPLEGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertGroupVerify'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='CertGroupToBeVerified' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' name='VerifyContext' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' name='VerifyContextResult' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertReclaimAbort'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type='Q' name='KeyCacheHandle' declared_type='CSSM_LONG_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertReclaimKey'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='CertGroup' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='I' name='CertIndex' declared_type='uint32'/>
<arg type='Q' name='KeyCacheHandle' declared_type='CSSM_LONG_HANDLE'/>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' name='CredAndAclEntry' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertRemoveFromCrlTemplate'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='OldCrlTemplate' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='CertGroupToBeRemoved' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='RevokerCertGroup' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' name='RevokerVerifyContext' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' name='RevokerVerifyResult' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='NewCrlTemplate' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertRevoke'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='OldCrlTemplate' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='CertGroupToBeRevoked' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='RevokerCertGroup' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' name='RevokerVerifyContext' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' name='RevokerVerifyResult' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type='I' name='Reason' declared_type='CSSM_TP_CERTCHANGE_REASON'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='NewCrlTemplate' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CertSign'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='CertTemplateToBeSigned' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='SignerCertGroup' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' name='SignerVerifyContext' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' name='SignerVerifyResult' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='SignedCert' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_ConfirmCredResult'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ReferenceIdentifier' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' name='CallerAuthCredentials' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^{cssm_tp_confirm_response=I^I}' name='Responses' const='true' declared_type='CSSM_TP_CONFIRM_RESPONSE*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' name='PreferredAuthority' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CrlCreateTemplate'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='I' name='NumberOfFields' declared_type='uint32'/>
<arg type64='^{cssm_field={cssm_data=Q*}{cssm_data=Q*}}' type='^{cssm_field={cssm_data=I*}{cssm_data=I*}}' name='CrlFields' const='true' declared_type='CSSM_FIELD*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='NewCrlTemplate' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CrlSign'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' name='CrlToBeSigned' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='SignerCertGroup' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' name='SignerVerifyContext' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' name='SignerVerifyResult' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='SignedCrl' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_CrlVerify'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_encoded_crl=II{cssm_data=Q*}}' type='^{cssm_encoded_crl=II{cssm_data=I*}}' name='CrlToBeVerified' const='true' declared_type='CSSM_ENCODED_CRL*'/>
<arg type='^{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}' name='SignerCertGroup' const='true' declared_type='CSSM_CERTGROUP*'/>
<arg type64='^{cssm_tp_verify_context=I{cssm_data=Q*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' type='^{cssm_tp_verify_context=I{cssm_data=I*}{cssm_crlgroup=III(?=^{cssm_data}^{cssm_encoded_crl}^{cssm_parsed_crl}^{cssm_crl_pair})I}^{cssm_tp_callerauth_context}}' name='VerifyContext' const='true' declared_type='CSSM_TP_VERIFY_CONTEXT*'/>
<arg type='^{cssm_tp_verify_context_result=I^{cssm_evidence}}' name='RevokerVerifyResult' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_FormRequest'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' name='PreferredAuthority' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='I' name='FormType' declared_type='CSSM_TP_FORM_TYPE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='BlankForm' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_FormSubmit'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type='I' name='FormType' declared_type='CSSM_TP_FORM_TYPE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Form' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' name='ClearanceAuthority' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' name='RepresentedAuthority' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='Credentials' declared_type='CSSM_ACCESS_CREDENTIALS_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_PassThrough'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='^{cssm_dl_db_list=I^{cssm_dl_db_handle}}' name='DBList' const='true' declared_type='CSSM_DL_DB_LIST*'/>
<arg type='I' name='PassThroughId' declared_type='uint32'/>
<arg type='^v' name='InputParams' const='true' declared_type='void*'/>
<arg type='^^v' name='OutputParams' declared_type='void**'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_ReceiveConfirmation'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ReferenceIdentifier' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{cssm_tp_confirm_response}' name='Responses' declared_type='CSSM_TP_CONFIRM_RESPONSE_PTR*'/>
<arg type='^i' name='ElapsedTime' declared_type='sint32*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_RetrieveCredResult'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ReferenceIdentifier' const='true' declared_type='CSSM_DATA*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' name='CallerAuthCredentials' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^i' name='EstimatedTime' declared_type='sint32*'/>
<arg type='^i' name='ConfirmationRequired' declared_type='CSSM_BOOL*'/>
<arg type='^^{cssm_tp_result_set}' name='RetrieveOutput' declared_type='CSSM_TP_RESULT_SET_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_SubmitCredRequest'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type='^{cssm_tp_authority_id=^{cssm_data}^{cssm_net_address}}' name='PreferredAuthority' const='true' declared_type='CSSM_TP_AUTHORITY_ID*'/>
<arg type='I' name='RequestType' declared_type='CSSM_TP_AUTHORITY_REQUEST_TYPE'/>
<arg type='^{cssm_tp_request_set=I^v}' name='RequestInput' const='true' declared_type='CSSM_TP_REQUEST_SET*'/>
<arg type='^{cssm_tp_callerauth_context={cssm_tp_policyinfo=I^{cssm_field}^v}*I^?I^{cssm_data}^{cssm_dl_db_list}^{cssm_access_credentials}}' name='CallerAuthContext' const='true' declared_type='CSSM_TP_CALLERAUTH_CONTEXT*'/>
<arg type='^i' name='EstimatedTime' declared_type='sint32*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='ReferenceIdentifier' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_TP_TupleGroupToCertGroup'>
<arg type64='q' type='l' name='TPHandle' declared_type='CSSM_TP_HANDLE'/>
<arg type64='q' type='l' name='CLHandle' declared_type='CSSM_CL_HANDLE'/>
<arg type='^{cssm_tuplegroup=I^{_CSSM_TUPLE_PTR={cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_list=I^{cssm_list_element}^{cssm_list_element}}{cssm_list=I^{cssm_list_element}^{cssm_list_element}}}}' name='TupleGroup' const='true' declared_type='CSSM_TUPLEGROUP*'/>
<arg type='^^{cssm_certgroup}' name='CertTemplates' declared_type='CSSM_CERTGROUP_PTR*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_Terminate'>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_Unintroduce'>
<arg type='^{cssm_guid=ISS[8C]}' name='ModuleID' const='true' declared_type='CSSM_GUID*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_UnwrapKey'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='PublicKey' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='WrappedKey' const='true' declared_type='CSSM_WRAP_KEY*'/>
<arg type='I' name='KeyUsage' declared_type='uint32'/>
<arg type='I' name='KeyAttr' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KeyLabel' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' name='CredAndAclEntry' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='UnwrappedKey' declared_type='CSSM_KEY_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DescriptiveData' declared_type='CSSM_DATA_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_UnwrapKeyP'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='PublicKey' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='WrappedKey' const='true' declared_type='CSSM_WRAP_KEY*'/>
<arg type='I' name='KeyUsage' declared_type='uint32'/>
<arg type='I' name='KeyAttr' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='KeyLabel' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}^?^v}}' type='^{cssm_resource_control_context=^{cssm_access_credentials}{cssm_acl_entry_input={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}^?^v}}' name='CredAndAclEntry' const='true' declared_type='CSSM_RESOURCE_CONTROL_CONTEXT*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='UnwrappedKey' declared_type='CSSM_KEY_PTR'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DescriptiveData' declared_type='CSSM_DATA_PTR'/>
<arg type='Q' name='Privilege' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_UpdateContextAttributes'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='NumberOfAttributes' declared_type='uint32'/>
<arg type='^{cssm_context_attribute=II(cssm_context_attribute_value=*I^{cssm_access_credentials}^{cssm_key}^{cssm_data}I^{cssm_date}^{cssm_range}^{cssm_crypto_data}^{cssm_version}^{cssm_dl_db_handle}^{cssm_kr_profile})}' name='ContextAttributes' const='true' declared_type='CSSM_CONTEXT_ATTRIBUTE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_VerifyData'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='DataBufCount' declared_type='uint32'/>
<arg type='I' name='DigestAlgorithm' declared_type='CSSM_ALGORITHMS'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Signature' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_VerifyDataFinal'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Signature' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_VerifyDataInit'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_VerifyDataUpdate'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='DataBufCount' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_VerifyDevice'>
<arg type64='q' type='l' name='CSPHandle' declared_type='CSSM_CSP_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DeviceCert' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_VerifyMac'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='DataBufCount' declared_type='uint32'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Mac' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_VerifyMacFinal'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='Mac' const='true' declared_type='CSSM_DATA*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_VerifyMacInit'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_VerifyMacUpdate'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DataBufs' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='DataBufCount' declared_type='uint32'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_WrapKey'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DescriptiveData' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='WrappedKey' declared_type='CSSM_WRAP_KEY_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='CSSM_WrapKeyP'>
<arg type='Q' name='CCHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type64='^{cssm_access_credentials=[68c]{cssm_base_certs=qq{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' type='^{cssm_access_credentials=[68c]{cssm_base_certs=ii{cssm_certgroup=III(?=^{cssm_data}^{cssm_encoded_cert}^{cssm_parsed_cert}^{cssm_cert_pair})I^v}}{cssm_samplegroup=I^{cssm_sample}}^?^v}' name='AccessCred' const='true' declared_type='CSSM_ACCESS_CREDENTIALS*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='Key' const='true' declared_type='CSSM_KEY*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='DescriptiveData' const='true' declared_type='CSSM_DATA*'/>
<arg type64='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=Q*}}' type='^{cssm_key={cssm_keyheader=I{cssm_guid=ISS[8C]}IIIIIII{cssm_date=[4C][2C][2C]}{cssm_date=[4C][2C][2C]}III}{cssm_data=I*}}' name='WrappedKey' declared_type='CSSM_WRAP_KEY_PTR'/>
<arg type='Q' name='Privilege' declared_type='CSSM_PRIVILEGE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='EISL_CheckAddressWithinModule'>
<arg type='^v' name='Verification' declared_type='ISL_VERIFIED_MODULE_PTR'/>
<arg function_pointer='true' type='^?' name='Address' declared_type='ISL_FUNCTION_PTR'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_CheckDataAddressWithinModule'>
<arg type='^v' name='Verification' declared_type='ISL_VERIFIED_MODULE_PTR'/>
<arg type='^v' name='Address' const='true' declared_type='void*'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_ContinueVerification'>
<arg type='^v' name='Module' declared_type='ISL_VERIFIED_MODULE_PTR'/>
<arg type='I' name='WorkFactor' declared_type='uint32'/>
<retval type='I' declared_type='uint32'/>
</function>
<function name='EISL_CopyCertificateChain'>
<arg type='^v' name='Verification' declared_type='ISL_VERIFIED_CERTIFICATE_CHAIN_PTR'/>
<arg type='^^v' name='Certs' declared_type='ISL_VERIFIED_CERTIFICATE_PTR*'/>
<arg type='I' name='MaxCertificates' declared_type='uint32'/>
<retval type='I' declared_type='uint32'/>
</function>
<function name='EISL_CreateCertificateAttributeEnumerator'>
<arg type='^v' name='Cert' declared_type='ISL_VERIFIED_CERTIFICATE_PTR'/>
<retval type='^v' declared_type='ISL_ITERATOR_PTR'/>
</function>
<function name='EISL_CreateCertificateChain'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='RootIssuer' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='PublicKey' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Credential' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_CERTIFICATE_CHAIN_PTR'/>
</function>
<function name='EISL_CreateCertificateChainWithCertificate'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Certificate' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Credential' const='true' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_CERTIFICATE_CHAIN_PTR'/>
</function>
<function name='EISL_CreateCertificateChainWithCredentialData'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='RootIssuer' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='PublicKey' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='CredentialsImage' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='ModuleSearchPath' const='true' declared_type='ISL_CONST_DATA'/>
<retval type='^v' const='true' declared_type='ISL_VERIFIED_CERTIFICATE_CHAIN_PTR'/>
</function>
<function name='EISL_CreateCertificateChainWithCredentialDataAndCertificate'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Certificate' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='CredentialsImage' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='ModuleSearchPath' const='true' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_CERTIFICATE_CHAIN_PTR'/>
</function>
<function name='EISL_CreateManifestAttributeEnumerator'>
<arg type='^v' name='Context' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
<retval type='^v' declared_type='ISL_ITERATOR_PTR'/>
</function>
<function name='EISL_CreateManifestSectionAttributeEnumerator'>
<arg type='^v' name='Section' declared_type='ISL_MANIFEST_SECTION_PTR'/>
<retval type='^v' declared_type='ISL_ITERATOR_PTR'/>
</function>
<function name='EISL_CreateManifestSectionEnumerator'>
<arg type='^v' name='Root' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
<retval type='^v' declared_type='ISL_ITERATOR_PTR'/>
</function>
<function name='EISL_CreateSignatureAttributeEnumerator'>
<arg type='^v' name='Root' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
<retval type='^v' declared_type='ISL_ITERATOR_PTR'/>
</function>
<function name='EISL_CreateSignerInfoAttributeEnumerator'>
<arg type='^v' name='Context' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
<retval type='^v' declared_type='ISL_ITERATOR_PTR'/>
</function>
<function name='EISL_CreateVerfiedSignatureRoot'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Credentials' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Signer' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='PublicKey' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
</function>
<function name='EISL_CreateVerfiedSignatureRootWithCertificate'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Credentials' declared_type='ISL_CONST_DATA'/>
<arg type='^v' name='Cert' declared_type='ISL_VERIFIED_CERTIFICATE_PTR'/>
<retval type='^v' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
</function>
<function name='EISL_CreateVerifiedSignatureRootWithCredentialData'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='CredentialsImage' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='ModuleSearchPath' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Signer' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='PublicKey' const='true' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
</function>
<function name='EISL_CreateVerifiedSignatureRootWithCredentialDataAndCertificate'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='CredentialsImage' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='ModuleSearchPath' const='true' declared_type='ISL_CONST_DATA'/>
<arg type='^v' name='Cert' declared_type='ISL_VERIFIED_CERTIFICATE_PTR'/>
<retval type='^v' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
</function>
<function name='EISL_DuplicateVerifiedModulePtr'>
<arg type='^v' name='Module' declared_type='ISL_VERIFIED_MODULE_PTR'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_FindCertificateAttribute'>
<arg type='^v' name='Cert' declared_type='ISL_VERIFIED_CERTIFICATE_PTR'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Value' declared_type='ISL_CONST_DATA_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_FindManifestAttribute'>
<arg type='^v' name='Context' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Value' declared_type='ISL_CONST_DATA_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_FindManifestSection'>
<arg type='^v' name='Root' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_MANIFEST_SECTION_PTR'/>
</function>
<function name='EISL_FindManifestSectionAttribute'>
<arg type='^v' name='Section' declared_type='ISL_MANIFEST_SECTION_PTR'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Value' declared_type='ISL_CONST_DATA_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_FindSignatureAttribute'>
<arg type='^v' name='Root' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Value' declared_type='ISL_CONST_DATA_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_FindSignerInfoAttribute'>
<arg type='^v' name='Context' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Value' declared_type='ISL_CONST_DATA_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_GetCertificateChain'>
<arg type='^v' name='Module' declared_type='ISL_VERIFIED_MODULE_PTR'/>
<retval type='^v' declared_type='ISL_VERIFIED_CERTIFICATE_CHAIN_PTR'/>
</function>
<function name='EISL_GetLibHandle'>
<arg type='^v' name='Verification' declared_type='ISL_VERIFIED_MODULE_PTR'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='EISL_GetManifestSignatureRoot'>
<arg type='^v' name='Section' declared_type='ISL_MANIFEST_SECTION_PTR'/>
<retval type='^v' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
</function>
<function name='EISL_GetModuleManifestSection'>
<arg type='^v' name='Module' declared_type='ISL_VERIFIED_MODULE_PTR'/>
<retval type='^v' declared_type='ISL_MANIFEST_SECTION_PTR'/>
</function>
<function name='EISL_GetNextAttribute'>
<arg type='^v' name='Iterator' declared_type='ISL_ITERATOR_PTR'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA_PTR'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Value' declared_type='ISL_CONST_DATA_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_GetNextCertificateAttribute'>
<arg type='^v' name='CertIterator' declared_type='ISL_ITERATOR_PTR'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA_PTR'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Value' declared_type='ISL_CONST_DATA_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_GetNextManifestSection'>
<arg type='^v' name='Iterator' declared_type='ISL_ITERATOR_PTR'/>
<retval type='^v' declared_type='ISL_MANIFEST_SECTION_PTR'/>
</function>
<function name='EISL_GetNextManifestSectionAttribute'>
<arg type='^v' name='Iterator' declared_type='ISL_ITERATOR_PTR'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA_PTR'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Value' declared_type='ISL_CONST_DATA_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_GetNextSignatureAttribute'>
<arg type='^v' name='Iterator' declared_type='ISL_ITERATOR_PTR'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA_PTR'/>
<arg type64='^{isl_const_data=Q*}' type='^{isl_const_data=I*}' name='Value' declared_type='ISL_CONST_DATA_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_LocateProcedureAddress'>
<arg type='^v' name='Module' declared_type='ISL_VERIFIED_MODULE_PTR'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA'/>
<retval function_pointer='true' type='^?' declared_type='ISL_FUNCTION_PTR'>
<retval type='v' declared_type='void'/>
</retval>
</function>
<function name='EISL_RecycleAttributeEnumerator'>
<arg type='^v' name='Iterator' declared_type='ISL_ITERATOR_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_RecycleCertificateAttributeEnumerator'>
<arg type='^v' name='CertIterator' declared_type='ISL_ITERATOR_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_RecycleManifestSectionAttributeEnumerator'>
<arg type='^v' name='Iterator' declared_type='ISL_ITERATOR_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_RecycleManifestSectionEnumerator'>
<arg type='^v' name='Iterator' declared_type='ISL_ITERATOR_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_RecycleSignatureAttributeEnumerator'>
<arg type='^v' name='Iterator' declared_type='ISL_ITERATOR_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_RecycleVerifiedCertificateChain'>
<arg type='^v' name='Chain' declared_type='ISL_VERIFIED_CERTIFICATE_CHAIN_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_RecycleVerifiedModuleCredentials'>
<arg type='^v' name='Verification' declared_type='ISL_VERIFIED_MODULE_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_RecycleVerifiedSignatureRoot'>
<arg type='^v' name='Root' declared_type='ISL_VERIFIED_SIGNATURE_ROOT_PTR'/>
<retval type='i' declared_type='ISL_STATUS'/>
</function>
<function name='EISL_SelfCheck'>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_VerifyAndLoadModule'>
<arg type='^v' name='Section' declared_type='ISL_MANIFEST_SECTION_PTR'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_VerifyAndLoadModuleAndCredentialData'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='CredentialsImage' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='ModuleSearchPath' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Signer' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='PublicKey' const='true' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_VerifyAndLoadModuleAndCredentialDataWithCertificate'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='CredentialsImage' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='ModuleSearchPath' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Signer' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Certificate' const='true' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_VerifyAndLoadModuleAndCredentials'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Credentials' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Signer' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='PublicKey' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_VerifyAndLoadModuleAndCredentialsWithCertificate'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Credentials' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Signer' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Certificate' const='true' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_VerifyLoadedModule'>
<arg type='^v' name='Section' declared_type='ISL_MANIFEST_SECTION_PTR'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_VerifyLoadedModuleAndCredentialData'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='CredentialsImage' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='ModuleSearchPath' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Signer' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='PublicKey' const='true' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_VerifyLoadedModuleAndCredentialDataWithCertificate'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='CredentialsImage' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='ModuleSearchPath' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Signer' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Certificate' const='true' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_VerifyLoadedModuleAndCredentials'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Credentials' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Signer' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='PublicKey' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='EISL_VerifyLoadedModuleAndCredentialsWithCertificate'>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Credentials' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Name' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Signer' const='true' declared_type='ISL_CONST_DATA'/>
<arg type64='{isl_const_data=Q*}' type='{isl_const_data=I*}' name='Certificate' const='true' declared_type='ISL_CONST_DATA'/>
<retval type='^v' declared_type='ISL_VERIFIED_MODULE_PTR'/>
</function>
<function name='MDS_Initialize'>
<arg type='^{cssm_guid=ISS[8C]}' name='pCallerGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='^{cssm_memory_funcs=^?^?^?^?^v}' name='pMemoryFunctions' const='true' declared_type='CSSM_MEMORY_FUNCS*'/>
<arg type='^{mds_funcs=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}' name='pDlFunctions' declared_type='MDS_FUNCS_PTR'/>
<arg type64='^q' type='^i' name='hMds' declared_type='MDS_HANDLE*'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='MDS_Install'>
<arg type64='q' type='l' name='MdsHandle' declared_type='MDS_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='MDS_Terminate'>
<arg type64='q' type='l' name='MdsHandle' declared_type='MDS_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='MDS_Uninstall'>
<arg type64='q' type='l' name='MdsHandle' declared_type='MDS_HANDLE'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='ModuleManagerAuthenticate'>
<arg type='I' name='KeyHierarchy' declared_type='CSSM_KEY_HIERARCHY'/>
<arg type='^{cssm_guid=ISS[8C]}' name='CssmGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='^{cssm_guid=ISS[8C]}' name='AppGuid' const='true' declared_type='CSSM_GUID*'/>
<arg type='^{cssm_manager_registration_info=^?^?^?^?^?^?}' name='FunctionTable' declared_type='CSSM_MANAGER_REGISTRATION_INFO_PTR'/>
<retval type='i' declared_type='CSSM_RETURN'/>
</function>
<function name='SSLAddDistinguishedName'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^v' name='derDN' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='derDNLen' declared_type='size_t'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLClose'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLContextGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SSLCopyCertificateAuthorities'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^^{__CFArray}' name='certificates' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLCopyDistinguishedNames'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^^{__CFArray}' name='names' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLCopyPeerCertificates'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^^{__CFArray}' name='certs' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLCopyPeerTrust'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^^{OpaqueSecTrustRef}' name='trust' declared_type='SecTrustRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLCopyTrustedRoots'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^^{__CFArray}' name='trustedRoots' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLCreateContext'>
<arg type='^{__CFAllocator=}' name='alloc' declared_type='CFAllocatorRef'/>
<arg type='i' name='protocolSide' declared_type='SSLProtocolSide'/>
<arg type='i' name='connectionType' declared_type='SSLConnectionType'/>
<retval already_retained='true' type='^{SSLContext=}' declared_type='SSLContextRef'/>
</function>
<function name='SSLDisposeContext'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetAllowsAnyRoot'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^B' name='anyRoot' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetAllowsExpiredCerts'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^B' name='allowsExpired' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetAllowsExpiredRoots'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^B' name='allowsExpired' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetBufferedReadSize'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type64='^Q' type='^I' name='bufSize' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetClientCertificateState'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^i' name='clientState' declared_type='SSLClientCertificateState*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetConnection'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^^v' name='connection' declared_type='SSLConnectionRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetDatagramWriteSize'>
<arg type='^{SSLContext=}' name='dtlsContext' declared_type='SSLContextRef'/>
<arg type64='^Q' type='^I' name='bufSize' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetDiffieHellmanParams'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^^v' name='dhParams' const='true' declared_type='void**'/>
<arg type64='^Q' type='^I' name='dhParamsLen' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetEnableCertVerify'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^B' name='enableVerify' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetEnabledCiphers'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^I' name='ciphers' declared_type='SSLCipherSuite*'/>
<arg type64='^Q' type='^I' name='numCiphers' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetMaxDatagramRecordSize'>
<arg type='^{SSLContext=}' name='dtlsContext' declared_type='SSLContextRef'/>
<arg type64='^Q' type='^I' name='maxSize' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetNegotiatedCipher'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^I' name='cipherSuite' declared_type='SSLCipherSuite*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetNegotiatedProtocolVersion'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^i' name='protocol' declared_type='SSLProtocol*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetNumberEnabledCiphers'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type64='^Q' type='^I' name='numCiphers' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetNumberSupportedCiphers'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type64='^Q' type='^I' name='numCiphers' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetPeerDomainName'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='*' name='peerName' declared_type='char*'/>
<arg type64='^Q' type='^I' name='peerNameLen' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetPeerDomainNameLength'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type64='^Q' type='^I' name='peerNameLen' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetPeerID'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^^v' name='peerID' const='true' declared_type='void**'/>
<arg type64='^Q' type='^I' name='peerIDLen' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetProtocolVersion'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^i' name='protocol' declared_type='SSLProtocol*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetProtocolVersionEnabled'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='i' name='protocol' declared_type='SSLProtocol'/>
<arg type='^B' name='enable' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetProtocolVersionMax'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^i' name='maxVersion' declared_type='SSLProtocol*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetProtocolVersionMin'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^i' name='minVersion' declared_type='SSLProtocol*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetRsaBlinding'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^B' name='blinding' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetSessionOption'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='i' name='option' declared_type='SSLSessionOption'/>
<arg type='^B' name='value' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetSessionState'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^i' name='state' declared_type='SSLSessionState*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLGetSupportedCiphers'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^I' name='ciphers' declared_type='SSLCipherSuite*'/>
<arg type64='^Q' type='^I' name='numCiphers' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLHandshake'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLNewContext'>
<arg type='B' name='isServer' declared_type='Boolean'/>
<arg type='^^{SSLContext}' name='contextPtr' declared_type='SSLContextRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLRead'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^v' name='data' declared_type='void*'/>
<arg type64='Q' type='L' name='dataLength' declared_type='size_t'/>
<arg type64='^Q' type='^I' name='processed' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetAllowsAnyRoot'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='B' name='anyRoot' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetAllowsExpiredCerts'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='B' name='allowsExpired' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetAllowsExpiredRoots'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='B' name='allowsExpired' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetCertificate'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^{__CFArray=}' name='certRefs' declared_type='CFArrayRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetCertificateAuthorities'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='@' name='certificateOrArray' declared_type='CFTypeRef'/>
<arg type='B' name='replaceExisting' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetClientSideAuthenticate'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='i' name='auth' declared_type='SSLAuthenticate'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetConnection'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='@' name='connection' declared_type='SSLConnectionRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetDatagramHelloCookie'>
<arg type='^{SSLContext=}' name='dtlsContext' declared_type='SSLContextRef'/>
<arg type='^v' name='cookie' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='cookieLen' declared_type='size_t'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetDiffieHellmanParams'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^v' name='dhParams' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='dhParamsLen' declared_type='size_t'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetEnableCertVerify'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='B' name='enableVerify' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetEnabledCiphers'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^I' name='ciphers' const='true' declared_type='SSLCipherSuite*'/>
<arg type64='Q' type='L' name='numCiphers' declared_type='size_t'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetEncryptionCertificate'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^{__CFArray=}' name='certRefs' declared_type='CFArrayRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetIOFuncs'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg function_pointer='true' type='^?' name='readFunc' declared_type='SSLReadFunc'>
<arg type='@' declared_type='SSLConnectionRef'/>
<arg type='^v' declared_type='void*'/>
<arg type64='^Q' type='^I' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</arg>
<arg function_pointer='true' type='^?' name='writeFunc' declared_type='SSLWriteFunc'>
<arg type='@' declared_type='SSLConnectionRef'/>
<arg type='^v' const='true' declared_type='void*'/>
<arg type64='^Q' type='^I' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</arg>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetMaxDatagramRecordSize'>
<arg type='^{SSLContext=}' name='dtlsContext' declared_type='SSLContextRef'/>
<arg type64='Q' type='L' name='maxSize' declared_type='size_t'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetPeerDomainName'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='*' name='peerName' const='true' declared_type='char*'/>
<arg type64='Q' type='L' name='peerNameLen' declared_type='size_t'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetPeerID'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^v' name='peerID' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='peerIDLen' declared_type='size_t'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetProtocolVersion'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='i' name='version' declared_type='SSLProtocol'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetProtocolVersionEnabled'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='i' name='protocol' declared_type='SSLProtocol'/>
<arg type='B' name='enable' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetProtocolVersionMax'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='i' name='maxVersion' declared_type='SSLProtocol'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetProtocolVersionMin'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='i' name='minVersion' declared_type='SSLProtocol'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetRsaBlinding'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='B' name='blinding' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetSessionOption'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='i' name='option' declared_type='SSLSessionOption'/>
<arg type='B' name='value' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLSetTrustedRoots'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^{__CFArray=}' name='trustedRoots' declared_type='CFArrayRef'/>
<arg type='B' name='replaceExisting' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SSLWrite'>
<arg type='^{SSLContext=}' name='context' declared_type='SSLContextRef'/>
<arg type='^v' name='data' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='dataLength' declared_type='size_t'/>
<arg type64='^Q' type='^I' name='processed' declared_type='size_t*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecACLCopyAuthorizations'>
<arg type='^{OpaqueSecTrustRef=}' name='acl' declared_type='SecACLRef'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='SecACLCopyContents'>
<arg type='^{OpaqueSecTrustRef=}' name='acl' declared_type='SecACLRef'/>
<arg type='^^{__CFArray}' name='applicationList' declared_type='CFArrayRef*'/>
<arg type='^^{__CFString}' name='description' declared_type='CFStringRef*'/>
<arg type='^S' name='promptSelector' declared_type='SecKeychainPromptSelector*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecACLCopySimpleContents'>
<arg type='^{OpaqueSecTrustRef=}' name='acl' declared_type='SecACLRef'/>
<arg type='^^{__CFArray}' name='applicationList' declared_type='CFArrayRef*'/>
<arg type='^^{__CFString}' name='description' declared_type='CFStringRef*'/>
<arg type='^{cssm_acl_keychain_prompt_selector=SS}' name='promptSelector' declared_type='CSSM_ACL_KEYCHAIN_PROMPT_SELECTOR*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecACLCreateFromSimpleContents'>
<arg type='^{OpaqueSecAccessRef=}' name='access' declared_type='SecAccessRef'/>
<arg type='^{__CFArray=}' name='applicationList' declared_type='CFArrayRef'/>
<arg type='^{__CFString=}' name='description' declared_type='CFStringRef'/>
<arg type='^{cssm_acl_keychain_prompt_selector=SS}' name='promptSelector' const='true' declared_type='CSSM_ACL_KEYCHAIN_PROMPT_SELECTOR*'/>
<arg type='^^{OpaqueSecTrustRef}' name='newAcl' declared_type='SecACLRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecACLCreateWithSimpleContents'>
<arg type='^{OpaqueSecAccessRef=}' name='access' declared_type='SecAccessRef'/>
<arg type='^{__CFArray=}' name='applicationList' declared_type='CFArrayRef'/>
<arg type='^{__CFString=}' name='description' declared_type='CFStringRef'/>
<arg type='S' name='promptSelector' declared_type='SecKeychainPromptSelector'/>
<arg type='^^{OpaqueSecTrustRef}' name='newAcl' declared_type='SecACLRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecACLGetAuthorizations'>
<arg type='^{OpaqueSecTrustRef=}' name='acl' declared_type='SecACLRef'/>
<arg type='^i' name='tags' declared_type='CSSM_ACL_AUTHORIZATION_TAG*'/>
<arg type='^I' name='tagCount' declared_type='uint32*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecACLGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecACLRemove'>
<arg type='^{OpaqueSecTrustRef=}' name='aclRef' declared_type='SecACLRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecACLSetAuthorizations'>
<arg type='^{OpaqueSecTrustRef=}' name='acl' declared_type='SecACLRef'/>
<arg type='^i' name='tags' declared_type='CSSM_ACL_AUTHORIZATION_TAG*'/>
<arg type='I' name='tagCount' declared_type='uint32'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecACLSetContents'>
<arg type='^{OpaqueSecTrustRef=}' name='acl' declared_type='SecACLRef'/>
<arg type='^{__CFArray=}' name='applicationList' declared_type='CFArrayRef'/>
<arg type='^{__CFString=}' name='description' declared_type='CFStringRef'/>
<arg type='S' name='promptSelector' declared_type='SecKeychainPromptSelector'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecACLSetSimpleContents'>
<arg type='^{OpaqueSecTrustRef=}' name='acl' declared_type='SecACLRef'/>
<arg type='^{__CFArray=}' name='applicationList' declared_type='CFArrayRef'/>
<arg type='^{__CFString=}' name='description' declared_type='CFStringRef'/>
<arg type='^{cssm_acl_keychain_prompt_selector=SS}' name='promptSelector' const='true' declared_type='CSSM_ACL_KEYCHAIN_PROMPT_SELECTOR*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecACLUpdateAuthorizations'>
<arg type='^{OpaqueSecTrustRef=}' name='acl' declared_type='SecACLRef'/>
<arg type='^{__CFArray=}' name='authorizations' declared_type='CFArrayRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAccessCopyACLList'>
<arg type='^{OpaqueSecAccessRef=}' name='accessRef' declared_type='SecAccessRef'/>
<arg type='^^{__CFArray}' name='aclList' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAccessCopyMatchingACLList'>
<arg type='^{OpaqueSecAccessRef=}' name='accessRef' declared_type='SecAccessRef'/>
<arg type='@' name='authorizationTag' declared_type='CFTypeRef'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='SecAccessCopyOwnerAndACL'>
<arg type='^{OpaqueSecAccessRef=}' name='accessRef' declared_type='SecAccessRef'/>
<arg type='^I' name='userId' declared_type='uid_t*'/>
<arg type='^I' name='groupId' declared_type='gid_t*'/>
<arg type='^I' name='ownerType' declared_type='SecAccessOwnerType*'/>
<arg type='^^{__CFArray}' name='aclList' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAccessCopySelectedACLList'>
<arg type='^{OpaqueSecAccessRef=}' name='accessRef' declared_type='SecAccessRef'/>
<arg type='i' name='action' declared_type='CSSM_ACL_AUTHORIZATION_TAG'/>
<arg type='^^{__CFArray}' name='aclList' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAccessCreate'>
<arg type='^{__CFString=}' name='descriptor' declared_type='CFStringRef'/>
<arg type='^{__CFArray=}' name='trustedlist' declared_type='CFArrayRef'/>
<arg type='^^{OpaqueSecAccessRef}' name='accessRef' declared_type='SecAccessRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAccessCreateFromOwnerAndACL'>
<arg type='^{cssm_acl_owner_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i}' name='owner' const='true' declared_type='CSSM_ACL_OWNER_PROTOTYPE*'/>
<arg type='I' name='aclCount' declared_type='uint32'/>
<arg type64='^{cssm_acl_entry_info={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=Q*}{cssm_data=Q*}}[68c]}q}' type='^{cssm_acl_entry_info={cssm_acl_entry_prototype={cssm_list=I^{cssm_list_element}^{cssm_list_element}}i{cssm_authorizationgroup=I^i}{cssm_acl_validity_period={cssm_data=I*}{cssm_data=I*}}[68c]}i}' name='acls' const='true' declared_type='CSSM_ACL_ENTRY_INFO*'/>
<arg type='^^{OpaqueSecAccessRef}' name='accessRef' declared_type='SecAccessRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAccessCreateWithOwnerAndACL'>
<arg type='I' name='userId' declared_type='uid_t'/>
<arg type='I' name='groupId' declared_type='gid_t'/>
<arg type64='I' type='L' name='ownerType' declared_type='SecAccessOwnerType'/>
<arg type='^{__CFArray=}' name='acls' declared_type='CFArrayRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='^{OpaqueSecAccessRef=}' declared_type='SecAccessRef'/>
</function>
<function name='SecAccessGetOwnerAndACL'>
<arg type='^{OpaqueSecAccessRef=}' name='accessRef' declared_type='SecAccessRef'/>
<arg type='^^{cssm_acl_owner_prototype}' name='owner' declared_type='CSSM_ACL_OWNER_PROTOTYPE_PTR*'/>
<arg type='^I' name='aclCount' declared_type='uint32*'/>
<arg type='^^{cssm_acl_entry_info}' name='acls' declared_type='CSSM_ACL_ENTRY_INFO_PTR*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAccessGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecAsn1AllocCopy'>
<arg type='^{SecAsn1Coder=}' name='coder' declared_type='SecAsn1CoderRef'/>
<arg type='^v' name='src' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='len' declared_type='size_t'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='dest' declared_type='SecAsn1Item*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAsn1AllocCopyItem'>
<arg type='^{SecAsn1Coder=}' name='coder' declared_type='SecAsn1CoderRef'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='src' const='true' declared_type='SecAsn1Item*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='dest' declared_type='SecAsn1Item*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAsn1AllocItem'>
<arg type='^{SecAsn1Coder=}' name='coder' declared_type='SecAsn1CoderRef'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='item' declared_type='SecAsn1Item*'/>
<arg type64='Q' type='L' name='len' declared_type='size_t'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAsn1CoderCreate'>
<arg type='^^{SecAsn1Coder}' name='coder' declared_type='SecAsn1CoderRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAsn1CoderRelease'>
<arg type='^{SecAsn1Coder=}' name='coder' declared_type='SecAsn1CoderRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAsn1Decode'>
<arg type='^{SecAsn1Coder=}' name='coder' declared_type='SecAsn1CoderRef'/>
<arg type='^v' name='src' const='true' declared_type='void*'/>
<arg type64='Q' type='L' name='len' declared_type='size_t'/>
<arg type='^{SecAsn1Template_struct=II^vI}' name='templates' const='true' declared_type='SecAsn1Template*'/>
<arg type='^v' name='dest' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAsn1DecodeData'>
<arg type='^{SecAsn1Coder=}' name='coder' declared_type='SecAsn1CoderRef'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='src' const='true' declared_type='SecAsn1Item*'/>
<arg type='^{SecAsn1Template_struct=II^vI}' name='templ' const='true' declared_type='SecAsn1Template*'/>
<arg type='^v' name='dest' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAsn1EncodeItem'>
<arg type='^{SecAsn1Coder=}' name='coder' declared_type='SecAsn1CoderRef'/>
<arg type='^v' name='src' const='true' declared_type='void*'/>
<arg type='^{SecAsn1Template_struct=II^vI}' name='templates' const='true' declared_type='SecAsn1Template*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='dest' declared_type='SecAsn1Item*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecAsn1Malloc'>
<arg type='^{SecAsn1Coder=}' name='coder' declared_type='SecAsn1CoderRef'/>
<arg type64='Q' type='L' name='len' declared_type='size_t'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='SecAsn1OidCompare'>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='oid1' const='true' declared_type='SecAsn1Oid*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='oid2' const='true' declared_type='SecAsn1Oid*'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='SecCertificateAddToKeychain'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateCopyCommonName'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{__CFString}' name='commonName' declared_type='CFStringRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateCopyData'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<retval already_retained='true' type='^{__CFData=}' declared_type='CFDataRef'/>
</function>
<function name='SecCertificateCopyEmailAddresses'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{__CFArray}' name='emailAddresses' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateCopyLongDescription'>
<arg type='^{__CFAllocator=}' name='alloc' declared_type='CFAllocatorRef'/>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='SecCertificateCopyNormalizedIssuerContent'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='^{__CFData=}' declared_type='CFDataRef'/>
</function>
<function name='SecCertificateCopyNormalizedSubjectContent'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='^{__CFData=}' declared_type='CFDataRef'/>
</function>
<function name='SecCertificateCopyPreference'>
<arg type='^{__CFString=}' name='name' declared_type='CFStringRef'/>
<arg type='I' name='keyUsage' declared_type='uint32'/>
<arg type='^^{OpaqueSecCertificateRef}' name='certificate' declared_type='SecCertificateRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateCopyPreferred'>
<arg type='^{__CFString=}' name='name' declared_type='CFStringRef'/>
<arg type='^{__CFArray=}' name='keyUsage' declared_type='CFArrayRef'/>
<retval already_retained='true' type='^{OpaqueSecCertificateRef=}' declared_type='SecCertificateRef'/>
</function>
<function name='SecCertificateCopyPublicKey'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{OpaqueSecKeyRef}' name='key' declared_type='SecKeyRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateCopySerialNumber'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='^{__CFData=}' declared_type='CFDataRef'/>
</function>
<function name='SecCertificateCopyShortDescription'>
<arg type='^{__CFAllocator=}' name='alloc' declared_type='CFAllocatorRef'/>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='SecCertificateCopySubjectSummary'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<retval already_retained='true' type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='SecCertificateCopyValues'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^{__CFArray=}' name='keys' declared_type='CFArrayRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
</function>
<function name='SecCertificateCreateFromData'>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='data' const='true' declared_type='CSSM_DATA*'/>
<arg type='I' name='type' declared_type='CSSM_CERT_TYPE'/>
<arg type='I' name='encoding' declared_type='CSSM_CERT_ENCODING'/>
<arg type='^^{OpaqueSecCertificateRef}' name='certificate' declared_type='SecCertificateRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateCreateWithData'>
<arg type='^{__CFAllocator=}' name='allocator' declared_type='CFAllocatorRef'/>
<arg type='^{__CFData=}' name='data' declared_type='CFDataRef'/>
<retval already_retained='true' type='^{OpaqueSecCertificateRef=}' declared_type='SecCertificateRef'/>
</function>
<function name='SecCertificateGetAlgorithmID'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{cssm_x509_algorithm_identifier}' name='algid' const='true' declared_type='CSSM_X509_ALGORITHM_IDENTIFIER**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateGetCLHandle'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type64='^q' type='^i' name='clHandle' declared_type='CSSM_CL_HANDLE*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateGetData'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='data' declared_type='CSSM_DATA_PTR'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateGetIssuer'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{cssm_x509_name}' name='issuer' const='true' declared_type='CSSM_X509_NAME**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateGetSubject'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^^{cssm_x509_name}' name='subject' const='true' declared_type='CSSM_X509_NAME**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateGetType'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^I' name='certificateType' declared_type='CSSM_CERT_TYPE*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecCertificateSetPreference'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^{__CFString=}' name='name' declared_type='CFStringRef'/>
<arg type='I' name='keyUsage' declared_type='uint32'/>
<arg type='^{__CFDate=}' name='date' declared_type='CFDateRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCertificateSetPreferred'>
<arg type='^{OpaqueSecCertificateRef=}' name='certificate' declared_type='SecCertificateRef'/>
<arg type='^{__CFString=}' name='name' declared_type='CFStringRef'/>
<arg type='^{__CFArray=}' name='keyUsage' declared_type='CFArrayRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCodeCheckValidity'>
<arg type='^{__SecCode=}' name='code' declared_type='SecCodeRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^{__SecRequirement=}' name='requirement' declared_type='SecRequirementRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCodeCheckValidityWithErrors'>
<arg type='^{__SecCode=}' name='code' declared_type='SecCodeRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^{__SecRequirement=}' name='requirement' declared_type='SecRequirementRef'/>
<arg type='^^{__CFError}' name='errors' declared_type='CFErrorRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCodeCopyDesignatedRequirement'>
<arg type='^{__SecCode=}' name='code' declared_type='SecStaticCodeRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__SecRequirement}' name='requirement' declared_type='SecRequirementRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCodeCopyGuestWithAttributes'>
<arg type='^{__SecCode=}' name='host' declared_type='SecCodeRef'/>
<arg type='^{__CFDictionary=}' name='attributes' declared_type='CFDictionaryRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__SecCode}' name='guest' declared_type='SecCodeRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCodeCopyHost'>
<arg type='^{__SecCode=}' name='guest' declared_type='SecCodeRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__SecCode}' name='host' declared_type='SecCodeRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCodeCopyPath'>
<arg type='^{__SecCode=}' name='staticCode' declared_type='SecStaticCodeRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__CFURL}' name='path' declared_type='CFURLRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCodeCopySelf'>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__SecCode}' name='self' declared_type='SecCodeRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCodeCopySigningInformation'>
<arg type='^{__SecCode=}' name='code' declared_type='SecStaticCodeRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__CFDictionary}' name='information' declared_type='CFDictionaryRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCodeCopyStaticCode'>
<arg type='^{__SecCode=}' name='code' declared_type='SecCodeRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__SecCode}' name='staticCode' declared_type='SecStaticCodeRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCodeGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecCodeMapMemory'>
<arg type='^{__SecCode=}' name='code' declared_type='SecStaticCodeRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecCopyErrorMessageString'>
<arg type64='i' type='l' name='status' declared_type='OSStatus'/>
<arg type='^v' name='reserved' declared_type='void*'/>
<retval already_retained='true' type='^{__CFString=}' declared_type='CFStringRef'/>
</function>
<function name='SecDecodeTransformCreate'>
<arg type='@' name='DecodeType' declared_type='CFTypeRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecDecryptTransformCreate'>
<arg type='^{OpaqueSecKeyRef=}' name='keyRef' declared_type='SecKeyRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecDecryptTransformGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecDigestTransformCreate'>
<arg type='@' name='digestType' declared_type='CFTypeRef'/>
<arg type64='q' type='l' name='digestLength' declared_type='CFIndex'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecDigestTransformGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecEncodeTransformCreate'>
<arg type='@' name='encodeType' declared_type='CFTypeRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecEncryptTransformCreate'>
<arg type='^{OpaqueSecKeyRef=}' name='keyRef' declared_type='SecKeyRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecEncryptTransformGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecGroupTransformGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecHostCreateGuest'>
<arg type='I' name='host' declared_type='SecGuestRef'/>
<arg type='I' name='status' declared_type='uint32_t'/>
<arg type='^{__CFURL=}' name='path' declared_type='CFURLRef'/>
<arg type='^{__CFDictionary=}' name='attributes' declared_type='CFDictionaryRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^I' name='newGuest' declared_type='SecGuestRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecHostRemoveGuest'>
<arg type='I' name='host' declared_type='SecGuestRef'/>
<arg type='I' name='guest' declared_type='SecGuestRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecHostSelectGuest'>
<arg type='I' name='guestRef' declared_type='SecGuestRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecHostSelectedGuest'>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^I' name='guestRef' declared_type='SecGuestRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecHostSetGuestStatus'>
<arg type='I' name='guestRef' declared_type='SecGuestRef'/>
<arg type='I' name='status' declared_type='uint32_t'/>
<arg type='^{__CFDictionary=}' name='attributes' declared_type='CFDictionaryRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecHostSetHostingPort'>
<arg type='I' name='hostingPort' declared_type='mach_port_t'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecIdentityCopyCertificate'>
<arg type='^{OpaqueSecIdentityRef=}' name='identityRef' declared_type='SecIdentityRef'/>
<arg type='^^{OpaqueSecCertificateRef}' name='certificateRef' declared_type='SecCertificateRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecIdentityCopyPreference'>
<arg type='^{__CFString=}' name='name' declared_type='CFStringRef'/>
<arg type='I' name='keyUsage' declared_type='CSSM_KEYUSE'/>
<arg type='^{__CFArray=}' name='validIssuers' declared_type='CFArrayRef'/>
<arg type='^^{OpaqueSecIdentityRef}' name='identity' declared_type='SecIdentityRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecIdentityCopyPreferred'>
<arg type='^{__CFString=}' name='name' declared_type='CFStringRef'/>
<arg type='^{__CFArray=}' name='keyUsage' declared_type='CFArrayRef'/>
<arg type='^{__CFArray=}' name='validIssuers' declared_type='CFArrayRef'/>
<retval already_retained='true' type='^{OpaqueSecIdentityRef=}' declared_type='SecIdentityRef'/>
</function>
<function name='SecIdentityCopyPrivateKey'>
<arg type='^{OpaqueSecIdentityRef=}' name='identityRef' declared_type='SecIdentityRef'/>
<arg type='^^{OpaqueSecKeyRef}' name='privateKeyRef' declared_type='SecKeyRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecIdentityCopySystemIdentity'>
<arg type='^{__CFString=}' name='domain' declared_type='CFStringRef'/>
<arg type='^^{OpaqueSecIdentityRef}' name='idRef' declared_type='SecIdentityRef*'/>
<arg type='^^{__CFString}' name='actualDomain' declared_type='CFStringRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecIdentityCreateWithCertificate'>
<arg type='@' name='keychainOrArray' declared_type='CFTypeRef'/>
<arg type='^{OpaqueSecCertificateRef=}' name='certificateRef' declared_type='SecCertificateRef'/>
<arg type='^^{OpaqueSecIdentityRef}' name='identityRef' declared_type='SecIdentityRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecIdentityGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecIdentitySearchCopyNext'>
<arg type='^{OpaqueSecIdentitySearchRef=}' name='searchRef' declared_type='SecIdentitySearchRef'/>
<arg type='^^{OpaqueSecIdentityRef}' name='identity' declared_type='SecIdentityRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecIdentitySearchCreate'>
<arg type='@' name='keychainOrArray' declared_type='CFTypeRef'/>
<arg type='I' name='keyUsage' declared_type='CSSM_KEYUSE'/>
<arg type='^^{OpaqueSecIdentitySearchRef}' name='searchRef' declared_type='SecIdentitySearchRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecIdentitySearchGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecIdentitySetPreference'>
<arg type='^{OpaqueSecIdentityRef=}' name='identity' declared_type='SecIdentityRef'/>
<arg type='^{__CFString=}' name='name' declared_type='CFStringRef'/>
<arg type='I' name='keyUsage' declared_type='CSSM_KEYUSE'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecIdentitySetPreferred'>
<arg type='^{OpaqueSecIdentityRef=}' name='identity' declared_type='SecIdentityRef'/>
<arg type='^{__CFString=}' name='name' declared_type='CFStringRef'/>
<arg type='^{__CFArray=}' name='keyUsage' declared_type='CFArrayRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecIdentitySetSystemIdentity'>
<arg type='^{__CFString=}' name='domain' declared_type='CFStringRef'/>
<arg type='^{OpaqueSecIdentityRef=}' name='idRef' declared_type='SecIdentityRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecItemAdd'>
<arg type='^{__CFDictionary=}' name='attributes' declared_type='CFDictionaryRef'/>
<arg type='^^v' name='result' declared_type='CFTypeRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecItemCopyMatching'>
<arg type='^{__CFDictionary=}' name='query' declared_type='CFDictionaryRef'/>
<arg type='^^v' name='result' declared_type='CFTypeRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecItemDelete'>
<arg type='^{__CFDictionary=}' name='query' declared_type='CFDictionaryRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecItemExport'>
<arg type='@' name='secItemOrArray' declared_type='CFTypeRef'/>
<arg type='I' name='outputFormat' declared_type='SecExternalFormat'/>
<arg type='I' name='flags' declared_type='SecItemImportExportFlags'/>
<arg type='^{_SecItemImportExportKeyParameters=II^v^{__CFString}^{__CFString}^{OpaqueSecAccessRef}^{__CFArray}^{__CFArray}}' name='keyParams' const='true' declared_type='SecItemImportExportKeyParameters*'/>
<arg type='^^{__CFData}' name='exportedData' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecItemImport'>
<arg type='^{__CFData=}' name='importedData' declared_type='CFDataRef'/>
<arg type='^{__CFString=}' name='fileNameOrExtension' declared_type='CFStringRef'/>
<arg type='^I' name='inputFormat' declared_type='SecExternalFormat*'/>
<arg type='^I' name='itemType' declared_type='SecExternalItemType*'/>
<arg type='I' name='flags' declared_type='SecItemImportExportFlags'/>
<arg type='^{_SecItemImportExportKeyParameters=II^v^{__CFString}^{__CFString}^{OpaqueSecAccessRef}^{__CFArray}^{__CFArray}}' name='keyParams' const='true' declared_type='SecItemImportExportKeyParameters*'/>
<arg type='^{OpaqueSecKeychainRef=}' name='importKeychain' declared_type='SecKeychainRef'/>
<arg type='^^{__CFArray}' name='outItems' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecItemUpdate'>
<arg type='^{__CFDictionary=}' name='query' declared_type='CFDictionaryRef'/>
<arg type='^{__CFDictionary=}' name='attributesToUpdate' declared_type='CFDictionaryRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeyCreateFromData'>
<arg type='^{__CFDictionary=}' name='parameters' declared_type='CFDictionaryRef'/>
<arg type='^{__CFData=}' name='keyData' declared_type='CFDataRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='^{OpaqueSecKeyRef=}' declared_type='SecKeyRef'/>
</function>
<function name='SecKeyCreatePair'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychainRef' declared_type='SecKeychainRef'/>
<arg type='I' name='algorithm' declared_type='CSSM_ALGORITHMS'/>
<arg type='I' name='keySizeInBits' declared_type='uint32'/>
<arg type='Q' name='contextHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='publicKeyUsage' declared_type='CSSM_KEYUSE'/>
<arg type='I' name='publicKeyAttr' declared_type='uint32'/>
<arg type='I' name='privateKeyUsage' declared_type='CSSM_KEYUSE'/>
<arg type='I' name='privateKeyAttr' declared_type='uint32'/>
<arg type='^{OpaqueSecAccessRef=}' name='initialAccess' declared_type='SecAccessRef'/>
<arg type='^^{OpaqueSecKeyRef}' name='publicKey' declared_type='SecKeyRef*'/>
<arg type='^^{OpaqueSecKeyRef}' name='privateKey' declared_type='SecKeyRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeyDeriveFromPassword'>
<arg type='^{__CFString=}' name='password' declared_type='CFStringRef'/>
<arg type='^{__CFDictionary=}' name='parameters' declared_type='CFDictionaryRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval type='^{OpaqueSecKeyRef=}' declared_type='SecKeyRef'/>
</function>
<function name='SecKeyGenerate'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychainRef' declared_type='SecKeychainRef'/>
<arg type='I' name='algorithm' declared_type='CSSM_ALGORITHMS'/>
<arg type='I' name='keySizeInBits' declared_type='uint32'/>
<arg type='Q' name='contextHandle' declared_type='CSSM_CC_HANDLE'/>
<arg type='I' name='keyUsage' declared_type='CSSM_KEYUSE'/>
<arg type='I' name='keyAttr' declared_type='uint32'/>
<arg type='^{OpaqueSecAccessRef=}' name='initialAccess' declared_type='SecAccessRef'/>
<arg type='^^{OpaqueSecKeyRef}' name='keyRef' declared_type='SecKeyRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeyGeneratePair'>
<arg type='^{__CFDictionary=}' name='parameters' declared_type='CFDictionaryRef'/>
<arg type='^^{OpaqueSecKeyRef}' name='publicKey' declared_type='SecKeyRef*'/>
<arg type='^^{OpaqueSecKeyRef}' name='privateKey' declared_type='SecKeyRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeyGeneratePairAsync'>
<arg type='^{__CFDictionary=}' name='parameters' declared_type='CFDictionaryRef'/>
<arg type='@' name='deliveryQueue' declared_type='dispatch_queue_t'/>
<arg function_pointer='true' type='@?' name='result' declared_type='SecKeyGeneratePairBlock'>
<arg type='^{OpaqueSecKeyRef=}' declared_type='SecKeyRef'/>
<arg type='^{OpaqueSecKeyRef=}' declared_type='SecKeyRef'/>
<arg type='^{__CFError=}' declared_type='CFErrorRef'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='SecKeyGenerateSymmetric'>
<arg type='^{__CFDictionary=}' name='parameters' declared_type='CFDictionaryRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval type='^{OpaqueSecKeyRef=}' declared_type='SecKeyRef'/>
</function>
<function name='SecKeyGetBlockSize'>
<arg type='^{OpaqueSecKeyRef=}' name='key' declared_type='SecKeyRef'/>
<retval type64='Q' type='L' declared_type='size_t'/>
</function>
<function name='SecKeyGetCSPHandle'>
<arg type='^{OpaqueSecKeyRef=}' name='keyRef' declared_type='SecKeyRef'/>
<arg type64='^q' type='^i' name='cspHandle' declared_type='CSSM_CSP_HANDLE*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeyGetCSSMKey'>
<arg type='^{OpaqueSecKeyRef=}' name='key' declared_type='SecKeyRef'/>
<arg type='^^{cssm_key}' name='cssmKey' const='true' declared_type='CSSM_KEY**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeyGetCredentials'>
<arg type='^{OpaqueSecKeyRef=}' name='keyRef' declared_type='SecKeyRef'/>
<arg type='i' name='operation' declared_type='CSSM_ACL_AUTHORIZATION_TAG'/>
<arg type='I' name='credentialType' declared_type='SecCredentialType'/>
<arg type='^^{cssm_access_credentials}' name='outCredentials' const='true' declared_type='CSSM_ACCESS_CREDENTIALS**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeyGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecKeyUnwrapSymmetric'>
<arg type='^^{__CFData}' name='keyToUnwrap' declared_type='CFDataRef*'/>
<arg type='^{OpaqueSecKeyRef=}' name='unwrappingKey' declared_type='SecKeyRef'/>
<arg type='^{__CFDictionary=}' name='parameters' declared_type='CFDictionaryRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval type='^{OpaqueSecKeyRef=}' declared_type='SecKeyRef'/>
</function>
<function name='SecKeyWrapSymmetric'>
<arg type='^{OpaqueSecKeyRef=}' name='keyToWrap' declared_type='SecKeyRef'/>
<arg type='^{OpaqueSecKeyRef=}' name='wrappingKey' declared_type='SecKeyRef'/>
<arg type='^{__CFDictionary=}' name='parameters' declared_type='CFDictionaryRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval type='^{__CFData=}' declared_type='CFDataRef'/>
</function>
<function name='SecKeychainAddCallback'>
<arg function_pointer='true' type='^?' name='callbackFunction' declared_type='SecKeychainCallback'>
<arg type64='I' type='L' declared_type='SecKeychainEvent'/>
<arg type='^{SecKeychainCallbackInfo=I^{OpaqueSecKeychainItemRef}^{OpaqueSecKeychainRef}i}' declared_type='SecKeychainCallbackInfo*'/>
<arg type='^v' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</arg>
<arg type64='I' type='L' name='eventMask' declared_type='SecKeychainEventMask'/>
<arg type='^v' name='userContext' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainAddGenericPassword'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type64='I' type='L' name='serviceNameLength' declared_type='UInt32'/>
<arg type='*' name='serviceName' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='accountNameLength' declared_type='UInt32'/>
<arg type='*' name='accountName' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='passwordLength' declared_type='UInt32'/>
<arg type='^v' name='passwordData' const='true' declared_type='void*'/>
<arg type='^^{OpaqueSecKeychainItemRef}' name='itemRef' declared_type='SecKeychainItemRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainAddInternetPassword'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type64='I' type='L' name='serverNameLength' declared_type='UInt32'/>
<arg type='*' name='serverName' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='securityDomainLength' declared_type='UInt32'/>
<arg type='*' name='securityDomain' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='accountNameLength' declared_type='UInt32'/>
<arg type='*' name='accountName' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='pathLength' declared_type='UInt32'/>
<arg type='*' name='path' const='true' declared_type='char*'/>
<arg type='S' name='port' declared_type='UInt16'/>
<arg type64='I' type='L' name='protocol' declared_type='SecProtocolType'/>
<arg type64='I' type='L' name='authenticationType' declared_type='SecAuthenticationType'/>
<arg type64='I' type='L' name='passwordLength' declared_type='UInt32'/>
<arg type='^v' name='passwordData' const='true' declared_type='void*'/>
<arg type='^^{OpaqueSecKeychainItemRef}' name='itemRef' declared_type='SecKeychainItemRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainAttributeInfoForItemID'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type64='I' type='L' name='itemID' declared_type='UInt32'/>
<arg type='^^{SecKeychainAttributeInfo}' name='info' declared_type='SecKeychainAttributeInfo**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainCopyAccess'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type='^^{OpaqueSecAccessRef}' name='access' declared_type='SecAccessRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainCopyDefault'>
<arg type='^^{OpaqueSecKeychainRef}' name='keychain' declared_type='SecKeychainRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainCopyDomainDefault'>
<arg type='i' name='domain' declared_type='SecPreferencesDomain'/>
<arg type='^^{OpaqueSecKeychainRef}' name='keychain' declared_type='SecKeychainRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainCopyDomainSearchList'>
<arg type='i' name='domain' declared_type='SecPreferencesDomain'/>
<arg type='^^{__CFArray}' name='searchList' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainCopySearchList'>
<arg type='^^{__CFArray}' name='searchList' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainCopySettings'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type='^{SecKeychainSettings=IBBI}' name='outSettings' declared_type='SecKeychainSettings*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainCreate'>
<arg type='*' name='pathName' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='passwordLength' declared_type='UInt32'/>
<arg type='^v' name='password' const='true' declared_type='void*'/>
<arg type='B' name='promptUser' declared_type='Boolean'/>
<arg type='^{OpaqueSecAccessRef=}' name='initialAccess' declared_type='SecAccessRef'/>
<arg type='^^{OpaqueSecKeychainRef}' name='keychain' declared_type='SecKeychainRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainDelete'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychainOrArray' declared_type='SecKeychainRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainFindGenericPassword'>
<arg type='@' name='keychainOrArray' declared_type='CFTypeRef'/>
<arg type64='I' type='L' name='serviceNameLength' declared_type='UInt32'/>
<arg type='*' name='serviceName' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='accountNameLength' declared_type='UInt32'/>
<arg type='*' name='accountName' const='true' declared_type='char*'/>
<arg type='^I' name='passwordLength' declared_type='UInt32*'/>
<arg type='^^v' name='passwordData' declared_type='void**'/>
<arg type='^^{OpaqueSecKeychainItemRef}' name='itemRef' declared_type='SecKeychainItemRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainFindInternetPassword'>
<arg type='@' name='keychainOrArray' declared_type='CFTypeRef'/>
<arg type64='I' type='L' name='serverNameLength' declared_type='UInt32'/>
<arg type='*' name='serverName' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='securityDomainLength' declared_type='UInt32'/>
<arg type='*' name='securityDomain' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='accountNameLength' declared_type='UInt32'/>
<arg type='*' name='accountName' const='true' declared_type='char*'/>
<arg type64='I' type='L' name='pathLength' declared_type='UInt32'/>
<arg type='*' name='path' const='true' declared_type='char*'/>
<arg type='S' name='port' declared_type='UInt16'/>
<arg type64='I' type='L' name='protocol' declared_type='SecProtocolType'/>
<arg type64='I' type='L' name='authenticationType' declared_type='SecAuthenticationType'/>
<arg type='^I' name='passwordLength' declared_type='UInt32*'/>
<arg type='^^v' name='passwordData' declared_type='void**'/>
<arg type='^^{OpaqueSecKeychainItemRef}' name='itemRef' declared_type='SecKeychainItemRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainFreeAttributeInfo'>
<arg type='^{SecKeychainAttributeInfo=I^I^I}' name='info' declared_type='SecKeychainAttributeInfo*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainGetCSPHandle'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type64='^q' type='^i' name='cspHandle' declared_type='CSSM_CSP_HANDLE*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainGetDLDBHandle'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type64='^{cssm_dl_db_handle=qq}' type='^{cssm_dl_db_handle=ii}' name='dldbHandle' declared_type='CSSM_DL_DB_HANDLE*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainGetPath'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type='^I' name='ioPathLength' declared_type='UInt32*'/>
<arg type='*' name='pathName' declared_type='char*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainGetPreferenceDomain'>
<arg type='^i' name='domain' declared_type='SecPreferencesDomain*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainGetStatus'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type='^I' name='keychainStatus' declared_type='SecKeychainStatus*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecKeychainGetUserInteractionAllowed'>
<arg type='^B' name='state' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainGetVersion'>
<arg type='^I' name='returnVers' declared_type='UInt32*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemCopyAccess'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<arg type='^^{OpaqueSecAccessRef}' name='access' declared_type='SecAccessRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemCopyAttributesAndData'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<arg type='^{SecKeychainAttributeInfo=I^I^I}' name='info' declared_type='SecKeychainAttributeInfo*'/>
<arg type='^I' name='itemClass' declared_type='SecItemClass*'/>
<arg type='^^{SecKeychainAttributeList}' name='attrList' declared_type='SecKeychainAttributeList**'/>
<arg type='^I' name='length' declared_type='UInt32*'/>
<arg type='^^v' name='outData' declared_type='void**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemCopyContent'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<arg type='^I' name='itemClass' declared_type='SecItemClass*'/>
<arg type='^{SecKeychainAttributeList=I^{SecKeychainAttribute}}' name='attrList' declared_type='SecKeychainAttributeList*'/>
<arg type='^I' name='length' declared_type='UInt32*'/>
<arg type='^^v' name='outData' declared_type='void**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemCopyFromPersistentReference'>
<arg type='^{__CFData=}' name='persistentItemRef' declared_type='CFDataRef'/>
<arg type='^^{OpaqueSecKeychainItemRef}' name='itemRef' declared_type='SecKeychainItemRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemCopyKeychain'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<arg type='^^{OpaqueSecKeychainRef}' name='keychainRef' declared_type='SecKeychainRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemCreateCopy'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<arg type='^{OpaqueSecKeychainRef=}' name='destKeychainRef' declared_type='SecKeychainRef'/>
<arg type='^{OpaqueSecAccessRef=}' name='initialAccess' declared_type='SecAccessRef'/>
<arg type='^^{OpaqueSecKeychainItemRef}' name='itemCopy' declared_type='SecKeychainItemRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemCreateFromContent'>
<arg type64='I' type='L' name='itemClass' declared_type='SecItemClass'/>
<arg type='^{SecKeychainAttributeList=I^{SecKeychainAttribute}}' name='attrList' declared_type='SecKeychainAttributeList*'/>
<arg type64='I' type='L' name='length' declared_type='UInt32'/>
<arg type='^v' name='data' const='true' declared_type='void*'/>
<arg type='^{OpaqueSecKeychainRef=}' name='keychainRef' declared_type='SecKeychainRef'/>
<arg type='^{OpaqueSecAccessRef=}' name='initialAccess' declared_type='SecAccessRef'/>
<arg type='^^{OpaqueSecKeychainItemRef}' name='itemRef' declared_type='SecKeychainItemRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemCreatePersistentReference'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<arg type='^^{__CFData}' name='persistentItemRef' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemDelete'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemExport'>
<arg type='@' name='keychainItemOrArray' declared_type='CFTypeRef'/>
<arg type='I' name='outputFormat' declared_type='SecExternalFormat'/>
<arg type='I' name='flags' declared_type='SecItemImportExportFlags'/>
<arg type='^{_SecKeyImportExportParameters=II^v^{__CFString}^{__CFString}^{OpaqueSecAccessRef}II}' name='keyParams' const='true' declared_type='SecKeyImportExportParameters*'/>
<arg type='^^{__CFData}' name='exportedData' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemFreeAttributesAndData'>
<arg type='^{SecKeychainAttributeList=I^{SecKeychainAttribute}}' name='attrList' declared_type='SecKeychainAttributeList*'/>
<arg type='^v' name='data' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemFreeContent'>
<arg type='^{SecKeychainAttributeList=I^{SecKeychainAttribute}}' name='attrList' declared_type='SecKeychainAttributeList*'/>
<arg type='^v' name='data' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemGetDLDBHandle'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='keyItemRef' declared_type='SecKeychainItemRef'/>
<arg type64='^{cssm_dl_db_handle=qq}' type='^{cssm_dl_db_handle=ii}' name='dldbHandle' declared_type='CSSM_DL_DB_HANDLE*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecKeychainItemGetUniqueRecordID'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<arg type='^^{cssm_db_unique_record}' name='uniqueRecordID' const='true' declared_type='CSSM_DB_UNIQUE_RECORD**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemImport'>
<arg type='^{__CFData=}' name='importedData' declared_type='CFDataRef'/>
<arg type='^{__CFString=}' name='fileNameOrExtension' declared_type='CFStringRef'/>
<arg type='^I' name='inputFormat' declared_type='SecExternalFormat*'/>
<arg type='^I' name='itemType' declared_type='SecExternalItemType*'/>
<arg type='I' name='flags' declared_type='SecItemImportExportFlags'/>
<arg type='^{_SecKeyImportExportParameters=II^v^{__CFString}^{__CFString}^{OpaqueSecAccessRef}II}' name='keyParams' const='true' declared_type='SecKeyImportExportParameters*'/>
<arg type='^{OpaqueSecKeychainRef=}' name='importKeychain' declared_type='SecKeychainRef'/>
<arg type='^^{__CFArray}' name='outItems' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemModifyAttributesAndData'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<arg type='^{SecKeychainAttributeList=I^{SecKeychainAttribute}}' name='attrList' const='true' declared_type='SecKeychainAttributeList*'/>
<arg type64='I' type='L' name='length' declared_type='UInt32'/>
<arg type='^v' name='data' const='true' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemModifyContent'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<arg type='^{SecKeychainAttributeList=I^{SecKeychainAttribute}}' name='attrList' const='true' declared_type='SecKeychainAttributeList*'/>
<arg type64='I' type='L' name='length' declared_type='UInt32'/>
<arg type='^v' name='data' const='true' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainItemSetAccess'>
<arg type='^{OpaqueSecKeychainItemRef=}' name='itemRef' declared_type='SecKeychainItemRef'/>
<arg type='^{OpaqueSecAccessRef=}' name='access' declared_type='SecAccessRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainLock'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainLockAll'>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainOpen'>
<arg type='*' name='pathName' const='true' declared_type='char*'/>
<arg type='^^{OpaqueSecKeychainRef}' name='keychain' declared_type='SecKeychainRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainRemoveCallback'>
<arg function_pointer='true' type='^?' name='callbackFunction' declared_type='SecKeychainCallback'>
<arg type64='I' type='L' declared_type='SecKeychainEvent'/>
<arg type='^{SecKeychainCallbackInfo=I^{OpaqueSecKeychainItemRef}^{OpaqueSecKeychainRef}i}' declared_type='SecKeychainCallbackInfo*'/>
<arg type='^v' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</arg>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainSearchCopyNext'>
<arg type='^{OpaqueSecKeychainSearchRef=}' name='searchRef' declared_type='SecKeychainSearchRef'/>
<arg type='^^{OpaqueSecKeychainItemRef}' name='itemRef' declared_type='SecKeychainItemRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainSearchCreateFromAttributes'>
<arg type='@' name='keychainOrArray' declared_type='CFTypeRef'/>
<arg type64='I' type='L' name='itemClass' declared_type='SecItemClass'/>
<arg type='^{SecKeychainAttributeList=I^{SecKeychainAttribute}}' name='attrList' const='true' declared_type='SecKeychainAttributeList*'/>
<arg type='^^{OpaqueSecKeychainSearchRef}' name='searchRef' declared_type='SecKeychainSearchRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainSearchGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecKeychainSetAccess'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type='^{OpaqueSecAccessRef=}' name='access' declared_type='SecAccessRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainSetDefault'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainSetDomainDefault'>
<arg type='i' name='domain' declared_type='SecPreferencesDomain'/>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainSetDomainSearchList'>
<arg type='i' name='domain' declared_type='SecPreferencesDomain'/>
<arg type='^{__CFArray=}' name='searchList' declared_type='CFArrayRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainSetPreferenceDomain'>
<arg type='i' name='domain' declared_type='SecPreferencesDomain'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainSetSearchList'>
<arg type='^{__CFArray=}' name='searchList' declared_type='CFArrayRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainSetSettings'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type='^{SecKeychainSettings=IBBI}' name='newSettings' const='true' declared_type='SecKeychainSettings*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainSetUserInteractionAllowed'>
<arg type='B' name='state' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecKeychainUnlock'>
<arg type='^{OpaqueSecKeychainRef=}' name='keychain' declared_type='SecKeychainRef'/>
<arg type64='I' type='L' name='passwordLength' declared_type='UInt32'/>
<arg type='^v' name='password' const='true' declared_type='void*'/>
<arg type='B' name='usePassword' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecPKCS12Import'>
<arg type='^{__CFData=}' name='pkcs12_data' declared_type='CFDataRef'/>
<arg type='^{__CFDictionary=}' name='options' declared_type='CFDictionaryRef'/>
<arg type='^^{__CFArray}' name='items' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecPolicyCopyProperties'>
<arg type='^{OpaqueSecPolicyRef=}' name='policyRef' declared_type='SecPolicyRef'/>
<retval already_retained='true' type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
</function>
<function name='SecPolicyCreateBasicX509'>
<retval already_retained='true' type='^{OpaqueSecPolicyRef=}' declared_type='SecPolicyRef'/>
</function>
<function name='SecPolicyCreateSSL'>
<arg type='B' name='server' declared_type='Boolean'/>
<arg type='^{__CFString=}' name='hostname' declared_type='CFStringRef'/>
<retval already_retained='true' type='^{OpaqueSecPolicyRef=}' declared_type='SecPolicyRef'/>
</function>
<function name='SecPolicyCreateWithOID'>
<arg type='@' name='policyOID' declared_type='CFTypeRef'/>
<retval already_retained='true' type='^{OpaqueSecPolicyRef=}' declared_type='SecPolicyRef'/>
</function>
<function name='SecPolicyGetOID'>
<arg type='^{OpaqueSecPolicyRef=}' name='policyRef' declared_type='SecPolicyRef'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='oid' declared_type='CSSM_OID*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecPolicyGetTPHandle'>
<arg type='^{OpaqueSecPolicyRef=}' name='policyRef' declared_type='SecPolicyRef'/>
<arg type64='^q' type='^i' name='tpHandle' declared_type='CSSM_TP_HANDLE*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecPolicyGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecPolicyGetValue'>
<arg type='^{OpaqueSecPolicyRef=}' name='policyRef' declared_type='SecPolicyRef'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='value' declared_type='CSSM_DATA*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecPolicySearchCopyNext'>
<arg type='^{OpaquePolicySearchRef=}' name='searchRef' declared_type='SecPolicySearchRef'/>
<arg type='^^{OpaqueSecPolicyRef}' name='policyRef' declared_type='SecPolicyRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecPolicySearchCreate'>
<arg type='I' name='certType' declared_type='CSSM_CERT_TYPE'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='policyOID' const='true' declared_type='CSSM_OID*'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='value' const='true' declared_type='CSSM_DATA*'/>
<arg type='^^{OpaquePolicySearchRef}' name='searchRef' declared_type='SecPolicySearchRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecPolicySearchGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecPolicySetProperties'>
<arg type='^{OpaqueSecPolicyRef=}' name='policyRef' declared_type='SecPolicyRef'/>
<arg type='^{__CFDictionary=}' name='properties' declared_type='CFDictionaryRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecPolicySetValue'>
<arg type='^{OpaqueSecPolicyRef=}' name='policyRef' declared_type='SecPolicyRef'/>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='value' const='true' declared_type='CSSM_DATA*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecRandomCopyBytes'>
<arg type='^{__SecRandom=}' name='rnd' declared_type='SecRandomRef'/>
<arg type64='Q' type='L' name='count' declared_type='size_t'/>
<arg type='*' name='bytes' declared_type='uint8_t*'/>
<retval type='i' declared_type='int'/>
</function>
<function name='SecRequirementCopyData'>
<arg type='^{__SecRequirement=}' name='requirement' declared_type='SecRequirementRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__CFData}' name='data' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecRequirementCopyString'>
<arg type='^{__SecRequirement=}' name='requirement' declared_type='SecRequirementRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__CFString}' name='text' declared_type='CFStringRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecRequirementCreateWithData'>
<arg type='^{__CFData=}' name='data' declared_type='CFDataRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__SecRequirement}' name='requirement' declared_type='SecRequirementRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecRequirementCreateWithString'>
<arg type='^{__CFString=}' name='text' declared_type='CFStringRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__SecRequirement}' name='requirement' declared_type='SecRequirementRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecRequirementCreateWithStringAndErrors'>
<arg type='^{__CFString=}' name='text' declared_type='CFStringRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__CFError}' name='errors' declared_type='CFErrorRef*'/>
<arg type='^^{__SecRequirement}' name='requirement' declared_type='SecRequirementRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecRequirementGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecSignTransformCreate'>
<arg type='^{OpaqueSecKeyRef=}' name='key' declared_type='SecKeyRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecStaticCodeCheckValidity'>
<arg type='^{__SecCode=}' name='staticCode' declared_type='SecStaticCodeRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^{__SecRequirement=}' name='requirement' declared_type='SecRequirementRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecStaticCodeCheckValidityWithErrors'>
<arg type='^{__SecCode=}' name='staticCode' declared_type='SecStaticCodeRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^{__SecRequirement=}' name='requirement' declared_type='SecRequirementRef'/>
<arg type='^^{__CFError}' name='errors' declared_type='CFErrorRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecStaticCodeCreateWithPath'>
<arg type='^{__CFURL=}' name='path' declared_type='CFURLRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^^{__SecCode}' name='staticCode' declared_type='SecStaticCodeRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecStaticCodeCreateWithPathAndAttributes'>
<arg type='^{__CFURL=}' name='path' declared_type='CFURLRef'/>
<arg type='I' name='flags' declared_type='SecCSFlags'/>
<arg type='^{__CFDictionary=}' name='attributes' declared_type='CFDictionaryRef'/>
<arg type='^^{__SecCode}' name='staticCode' declared_type='SecStaticCodeRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecStaticCodeGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecTaskCopyValueForEntitlement'>
<arg type='^{__SecTask=}' name='task' declared_type='SecTaskRef'/>
<arg type='^{__CFString=}' name='entitlement' declared_type='CFStringRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='@' declared_type='CFTypeRef'/>
</function>
<function name='SecTaskCopyValuesForEntitlements'>
<arg type='^{__SecTask=}' name='task' declared_type='SecTaskRef'/>
<arg type='^{__CFArray=}' name='entitlements' declared_type='CFArrayRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
</function>
<function name='SecTaskCreateFromSelf'>
<arg type='^{__CFAllocator=}' name='allocator' declared_type='CFAllocatorRef'/>
<retval already_retained='true' type='^{__SecTask=}' declared_type='SecTaskRef'/>
</function>
<function name='SecTaskCreateWithAuditToken'>
<arg type='^{__CFAllocator=}' name='allocator' declared_type='CFAllocatorRef'/>
<arg type='{_audit_token_t=[8I]}' name='token' declared_type='audit_token_t'/>
<retval already_retained='true' type='^{__SecTask=}' declared_type='SecTaskRef'/>
</function>
<function name='SecTaskGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecTranformCustomGetAttribute'>
<arg type='^{OpaqueSecTransformImplementation=}' name='ref' declared_type='SecTransformImplementationRef'/>
<arg type='@' name='attribute' declared_type='SecTransformStringOrAttributeRef'/>
<arg type64='q' type='l' name='type' declared_type='SecTransformMetaAttributeType'/>
<retval type='@' declared_type='CFTypeRef'/>
</function>
<function name='SecTransformConnectTransforms'>
<arg type='@' name='sourceTransformRef' declared_type='SecTransformRef'/>
<arg type='^{__CFString=}' name='sourceAttributeName' declared_type='CFStringRef'/>
<arg type='@' name='destinationTransformRef' declared_type='SecTransformRef'/>
<arg type='^{__CFString=}' name='destinationAttributeName' declared_type='CFStringRef'/>
<arg type='@' name='group' declared_type='SecGroupTransformRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval type='@' declared_type='SecGroupTransformRef'/>
</function>
<function name='SecTransformCopyExternalRepresentation'>
<arg type='@' name='transformRef' declared_type='SecTransformRef'/>
<retval already_retained='true' type='^{__CFDictionary=}' declared_type='CFDictionaryRef'/>
</function>
<function name='SecTransformCreate'>
<arg type='^{__CFString=}' name='name' declared_type='CFStringRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecTransformCreateFromExternalRepresentation'>
<arg type='^{__CFDictionary=}' name='dictionary' declared_type='CFDictionaryRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecTransformCreateGroupTransform'>
<retval already_retained='true' type='@' declared_type='SecGroupTransformRef'/>
</function>
<function name='SecTransformCreateReadTransformWithReadStream'>
<arg type='^{__CFReadStream=}' name='inputStream' declared_type='CFReadStreamRef'/>
<retval already_retained='true' type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecTransformCustomGetAttribute'>
<arg type='^{OpaqueSecTransformImplementation=}' name='ref' declared_type='SecTransformImplementationRef'/>
<arg type='@' name='attribute' declared_type='SecTransformStringOrAttributeRef'/>
<arg type64='q' type='l' name='type' declared_type='SecTransformMetaAttributeType'/>
<retval type='@' declared_type='CFTypeRef'/>
</function>
<function name='SecTransformCustomSetAttribute'>
<arg type='^{OpaqueSecTransformImplementation=}' name='ref' declared_type='SecTransformImplementationRef'/>
<arg type='@' name='attribute' declared_type='SecTransformStringOrAttributeRef'/>
<arg type64='q' type='l' name='type' declared_type='SecTransformMetaAttributeType'/>
<arg type='@' name='value' declared_type='CFTypeRef'/>
<retval type='@' declared_type='CFTypeRef'/>
</function>
<function name='SecTransformExecute'>
<arg type='@' name='transformRef' declared_type='SecTransformRef'/>
<arg type='^^{__CFError}' name='errorRef' declared_type='CFErrorRef*'/>
<retval type='@' declared_type='CFTypeRef'/>
</function>
<function name='SecTransformExecuteAsync'>
<arg type='@' name='transformRef' declared_type='SecTransformRef'/>
<arg type='@' name='deliveryQueue' declared_type='dispatch_queue_t'/>
<arg function_pointer='true' type='@?' name='deliveryBlock' declared_type='SecMessageBlock'>
<arg type='@' declared_type='CFTypeRef'/>
<arg type='^{__CFError=}' declared_type='CFErrorRef'/>
<arg type='B' declared_type='Boolean'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='SecTransformFindByName'>
<arg type='@' name='transform' declared_type='SecGroupTransformRef'/>
<arg type='^{__CFString=}' name='name' declared_type='CFStringRef'/>
<retval type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecTransformGetAttribute'>
<arg type='@' name='transformRef' declared_type='SecTransformRef'/>
<arg type='^{__CFString=}' name='key' declared_type='CFStringRef'/>
<retval type='@' declared_type='CFTypeRef'/>
</function>
<function name='SecTransformGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecTransformNoData'>
<retval type='@' declared_type='CFTypeRef'/>
</function>
<function name='SecTransformPushbackAttribute'>
<arg type='^{OpaqueSecTransformImplementation=}' name='ref' declared_type='SecTransformImplementationRef'/>
<arg type='@' name='attribute' declared_type='SecTransformStringOrAttributeRef'/>
<arg type='@' name='value' declared_type='CFTypeRef'/>
<retval type='@' declared_type='CFTypeRef'/>
</function>
<function name='SecTransformRegister'>
<arg type='^{__CFString=}' name='uniqueName' declared_type='CFStringRef'/>
<arg function_pointer='true' type='^?' name='createTransformFunction' declared_type='SecTransformCreateFP'>
<arg type='^{__CFString=}' declared_type='CFStringRef'/>
<arg type='@' declared_type='SecTransformRef'/>
<arg type='^{OpaqueSecTransformImplementation=}' declared_type='SecTransformImplementationRef'/>
<retval function_pointer='true' type='@?' declared_type='SecTransformInstanceBlock'>
<retval type='^{__CFError=}' declared_type='CFErrorRef'/>
</retval>
</arg>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval type='B' declared_type='Boolean'/>
</function>
<function name='SecTransformSetAttribute'>
<arg type='@' name='transformRef' declared_type='SecTransformRef'/>
<arg type='^{__CFString=}' name='key' declared_type='CFStringRef'/>
<arg type='@' name='value' declared_type='CFTypeRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval type='B' declared_type='Boolean'/>
</function>
<function name='SecTransformSetAttributeAction'>
<arg type='^{OpaqueSecTransformImplementation=}' name='ref' declared_type='SecTransformImplementationRef'/>
<arg type='^{__CFString=}' name='action' declared_type='CFStringRef'/>
<arg type='@' name='attribute' declared_type='SecTransformStringOrAttributeRef'/>
<arg function_pointer='true' type='@?' name='newAction' declared_type='SecTransformAttributeActionBlock'>
<arg type='@' declared_type='SecTransformAttributeRef'/>
<arg type='@' declared_type='CFTypeRef'/>
<retval type='@' declared_type='CFTypeRef'/>
</arg>
<retval type='^{__CFError=}' declared_type='CFErrorRef'/>
</function>
<function name='SecTransformSetDataAction'>
<arg type='^{OpaqueSecTransformImplementation=}' name='ref' declared_type='SecTransformImplementationRef'/>
<arg type='^{__CFString=}' name='action' declared_type='CFStringRef'/>
<arg function_pointer='true' type='@?' name='newAction' declared_type='SecTransformDataBlock'>
<arg type='@' declared_type='CFTypeRef'/>
<retval type='@' declared_type='CFTypeRef'/>
</arg>
<retval type='^{__CFError=}' declared_type='CFErrorRef'/>
</function>
<function name='SecTransformSetTransformAction'>
<arg type='^{OpaqueSecTransformImplementation=}' name='ref' declared_type='SecTransformImplementationRef'/>
<arg type='^{__CFString=}' name='action' declared_type='CFStringRef'/>
<arg function_pointer='true' type='@?' name='newAction' declared_type='SecTransformActionBlock'>
<retval type='@' declared_type='CFTypeRef'/>
</arg>
<retval type='^{__CFError=}' declared_type='CFErrorRef'/>
</function>
<function name='SecTrustCopyAnchorCertificates'>
<arg type='^^{__CFArray}' name='anchors' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustCopyCustomAnchorCertificates'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='^^{__CFArray}' name='anchors' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustCopyPolicies'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='^^{__CFArray}' name='policies' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustCopyProperties'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<retval already_retained='true' type='^{__CFArray=}' declared_type='CFArrayRef'/>
</function>
<function name='SecTrustCopyPublicKey'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<retval already_retained='true' type='^{OpaqueSecKeyRef=}' declared_type='SecKeyRef'/>
</function>
<function name='SecTrustCreateWithCertificates'>
<arg type='^{__CFArray=}' name='certificates' declared_type='CFArrayRef'/>
<arg type='@' name='policies' declared_type='CFTypeRef'/>
<arg type='^^{OpaqueSecTrustRef}' name='trustRef' declared_type='SecTrustRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustEvaluate'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='^I' name='result' declared_type='SecTrustResultType*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustEvaluateAsync'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='@' name='queue' declared_type='dispatch_queue_t'/>
<arg function_pointer='true' type='@?' name='result' declared_type='SecTrustCallback'>
<arg type='^{OpaqueSecTrustRef=}' declared_type='SecTrustRef'/>
<arg type='I' declared_type='SecTrustResultType'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustGetCertificateAtIndex'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type64='q' type='l' name='ix' declared_type='CFIndex'/>
<retval type='^{OpaqueSecCertificateRef=}' declared_type='SecCertificateRef'/>
</function>
<function name='SecTrustGetCertificateCount'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<retval type64='q' type='l' declared_type='CFIndex'/>
</function>
<function name='SecTrustGetCssmResult'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='^^{cssm_tp_verify_context_result}' name='result' declared_type='CSSM_TP_VERIFY_CONTEXT_RESULT_PTR*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustGetCssmResultCode'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='^i' name='resultCode' declared_type='OSStatus*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustGetResult'>
<arg type='^{OpaqueSecTrustRef=}' name='trustRef' declared_type='SecTrustRef'/>
<arg type='^I' name='result' declared_type='SecTrustResultType*'/>
<arg type='^^{__CFArray}' name='certChain' declared_type='CFArrayRef*'/>
<arg type='^^{?}' name='statusChain' declared_type='CSSM_TP_APPLE_EVIDENCE_INFO**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustGetTPHandle'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type64='^q' type='^i' name='handle' declared_type='CSSM_TP_HANDLE*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustGetTrustResult'>
<arg type='^{OpaqueSecTrustRef=}' name='trustRef' declared_type='SecTrustRef'/>
<arg type='^I' name='result' declared_type='SecTrustResultType*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecTrustGetVerifyTime'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<retval type='d' declared_type='CFAbsoluteTime'/>
</function>
<function name='SecTrustSetAnchorCertificates'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='^{__CFArray=}' name='anchorCertificates' declared_type='CFArrayRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSetAnchorCertificatesOnly'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='B' name='anchorCertificatesOnly' declared_type='Boolean'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSetKeychains'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='@' name='keychainOrArray' declared_type='CFTypeRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSetOptions'>
<arg type='^{OpaqueSecTrustRef=}' name='trustRef' declared_type='SecTrustRef'/>
<arg type='I' name='options' declared_type='SecTrustOptionFlags'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSetParameters'>
<arg type='^{OpaqueSecTrustRef=}' name='trustRef' declared_type='SecTrustRef'/>
<arg type='I' name='action' declared_type='CSSM_TP_ACTION'/>
<arg type='^{__CFData=}' name='actionData' declared_type='CFDataRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSetPolicies'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='@' name='policies' declared_type='CFTypeRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSetVerifyDate'>
<arg type='^{OpaqueSecTrustRef=}' name='trust' declared_type='SecTrustRef'/>
<arg type='^{__CFDate=}' name='verifyDate' declared_type='CFDateRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSettingsCopyCertificates'>
<arg type='I' name='domain' declared_type='SecTrustSettingsDomain'/>
<arg type='^^{__CFArray}' name='certArray' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSettingsCopyModificationDate'>
<arg type='^{OpaqueSecCertificateRef=}' name='certRef' declared_type='SecCertificateRef'/>
<arg type='I' name='domain' declared_type='SecTrustSettingsDomain'/>
<arg type='^^{__CFDate}' name='modificationDate' declared_type='CFDateRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSettingsCopyTrustSettings'>
<arg type='^{OpaqueSecCertificateRef=}' name='certRef' declared_type='SecCertificateRef'/>
<arg type='I' name='domain' declared_type='SecTrustSettingsDomain'/>
<arg type='^^{__CFArray}' name='trustSettings' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSettingsCreateExternalRepresentation'>
<arg type='I' name='domain' declared_type='SecTrustSettingsDomain'/>
<arg type='^^{__CFData}' name='trustSettings' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSettingsImportExternalRepresentation'>
<arg type='I' name='domain' declared_type='SecTrustSettingsDomain'/>
<arg type='^{__CFData=}' name='trustSettings' declared_type='CFDataRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSettingsRemoveTrustSettings'>
<arg type='^{OpaqueSecCertificateRef=}' name='certRef' declared_type='SecCertificateRef'/>
<arg type='I' name='domain' declared_type='SecTrustSettingsDomain'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustSettingsSetTrustSettings'>
<arg type='^{OpaqueSecCertificateRef=}' name='certRef' declared_type='SecCertificateRef'/>
<arg type='I' name='domain' declared_type='SecTrustSettingsDomain'/>
<arg type='@' name='trustSettingsDictOrArray' declared_type='CFTypeRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustedApplicationCopyData'>
<arg type='^{OpaqueSecTrustedApplicationRef=}' name='appRef' declared_type='SecTrustedApplicationRef'/>
<arg type='^^{__CFData}' name='data' declared_type='CFDataRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustedApplicationCreateFromPath'>
<arg type='*' name='path' const='true' declared_type='char*'/>
<arg type='^^{OpaqueSecTrustedApplicationRef}' name='app' declared_type='SecTrustedApplicationRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecTrustedApplicationGetTypeID'>
<retval type64='Q' type='L' declared_type='CFTypeID'/>
</function>
<function name='SecTrustedApplicationSetData'>
<arg type='^{OpaqueSecTrustedApplicationRef=}' name='appRef' declared_type='SecTrustedApplicationRef'/>
<arg type='^{__CFData=}' name='data' declared_type='CFDataRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecVerifyTransformCreate'>
<arg type='^{OpaqueSecKeyRef=}' name='key' declared_type='SecKeyRef'/>
<arg type='^{__CFData=}' name='signature' declared_type='CFDataRef'/>
<arg type='^^{__CFError}' name='error' declared_type='CFErrorRef*'/>
<retval already_retained='true' type='@' declared_type='SecTransformRef'/>
</function>
<function name='SecureDownloadCopyCreationDate'>
<arg type='^{OpaqueSecureDownload=}' name='downloadRef' declared_type='SecureDownloadRef'/>
<arg type='^^{__CFDate}' name='date' declared_type='CFDateRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecureDownloadCopyName'>
<arg type='^{OpaqueSecureDownload=}' name='downloadRef' declared_type='SecureDownloadRef'/>
<arg type='^^{__CFString}' name='name' declared_type='CFStringRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecureDownloadCopyTicketLocation'>
<arg type='^{__CFURL=}' name='url' declared_type='CFURLRef'/>
<arg type='^^{__CFURL}' name='ticketLocation' declared_type='CFURLRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecureDownloadCopyURLs'>
<arg type='^{OpaqueSecureDownload=}' name='downloadRef' declared_type='SecureDownloadRef'/>
<arg type='^^{__CFArray}' name='urls' declared_type='CFArrayRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecureDownloadCreateWithTicket'>
<arg type='^{__CFData=}' name='ticket' declared_type='CFDataRef'/>
<arg function_pointer='true' type='^?' name='setup' declared_type='SecureDownloadTrustSetupCallback'>
<arg type='^{OpaqueSecTrustRef=}' declared_type='SecTrustRef'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' declared_type='SecureDownloadTrustCallbackResult'/>
</arg>
<arg type='^v' name='setupContext' declared_type='void*'/>
<arg function_pointer='true' type='^?' name='evaluate' declared_type='SecureDownloadTrustEvaluateCallback'>
<arg type='^{OpaqueSecTrustRef=}' declared_type='SecTrustRef'/>
<arg type='I' declared_type='SecTrustResultType'/>
<arg type='^v' declared_type='void*'/>
<retval type='I' declared_type='SecTrustResultType'/>
</arg>
<arg type='^v' name='evaluateContext' declared_type='void*'/>
<arg type='^^{OpaqueSecureDownload}' name='downloadRef' declared_type='SecureDownloadRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecureDownloadFinished'>
<arg type='^{OpaqueSecureDownload=}' name='downloadRef' declared_type='SecureDownloadRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecureDownloadGetDownloadSize'>
<arg type='^{OpaqueSecureDownload=}' name='downloadRef' declared_type='SecureDownloadRef'/>
<arg type='^q' name='downloadSize' declared_type='SInt64*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecureDownloadRelease'>
<arg type='^{OpaqueSecureDownload=}' name='downloadRef' declared_type='SecureDownloadRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SecureDownloadUpdateWithData'>
<arg type='^{OpaqueSecureDownload=}' name='downloadRef' declared_type='SecureDownloadRef'/>
<arg type='^{__CFData=}' name='data' declared_type='CFDataRef'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SessionCreate'>
<arg type64='I' type='L' name='flags' declared_type='SessionCreationFlags'/>
<arg type64='I' type='L' name='attributes' declared_type='SessionAttributeBits'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='SessionGetInfo'>
<arg type64='I' type='L' name='session' declared_type='SecuritySessionId'/>
<arg type='^I' name='sessionId' declared_type='SecuritySessionId*'/>
<arg type='^I' name='attributes' declared_type='SessionAttributeBits*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='cssmAlgToOid'>
<arg type='I' name='algId' declared_type='CSSM_ALGORITHMS'/>
<retval type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' const='true' declared_type='CSSM_OID*'/>
</function>
<function name='cssmOidToAlg'>
<arg type64='^{cssm_data=Q*}' type='^{cssm_data=I*}' name='oid' const='true' declared_type='CSSM_OID*'/>
<arg type='^I' name='alg' declared_type='CSSM_ALGORITHMS*'/>
<retval type='B' declared_type='_Bool'/>
</function>
<function name='cssmPerror'>
<arg type='*' name='how' const='true' declared_type='char*'/>
<arg type='i' name='error' declared_type='CSSM_RETURN'/>
<retval type='v' declared_type='void'/>
</function>
</signatures>
