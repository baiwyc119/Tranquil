<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<struct type='{AUChannelInfo=&quot;inChannels&quot;s&quot;outChannels&quot;s}' name='AUChannelInfo'>
<field type='s' name='inChannels' declared_type='SInt16'/>
<field type='s' name='outChannels' declared_type='SInt16'/>
</struct>
<struct type='{AUDependentParameter=&quot;mScope&quot;I&quot;mParameterID&quot;I}' name='AUDependentParameter'>
<field type64='I' type='L' name='mScope' declared_type='AudioUnitScope'/>
<field type64='I' type='L' name='mParameterID' declared_type='AudioUnitParameterID'/>
</struct>
<struct type='{AUDistanceAttenuationData=&quot;inNumberOfPairs&quot;I&quot;pairs&quot;[1{?=&quot;inDistance&quot;f&quot;outGain&quot;f}]}' name='AUDistanceAttenuationData'>
<field type64='I' type='L' name='inNumberOfPairs' declared_type='UInt32'/>
<field type='[1{?=&quot;inDistance&quot;f&quot;outGain&quot;f}]' name='pairs' declared_type='struct AUDistanceAttenuationData::*'/>
</struct>
<struct type='{AUHostIdentifier=&quot;hostName&quot;^{__CFString}&quot;hostVersion&quot;{AUNumVersion=&quot;nonRelRev&quot;C&quot;stage&quot;C&quot;minorAndBugRev&quot;C&quot;majorRev&quot;C}}' name='AUHostIdentifier'>
<field type='^{__CFString=}' name='hostName' declared_type='CFStringRef'/>
<field type='{AUNumVersion=&quot;nonRelRev&quot;C&quot;stage&quot;C&quot;minorAndBugRev&quot;C&quot;majorRev&quot;C}' name='hostVersion' declared_type='AUNumVersion'/>
</struct>
<struct type='{AUHostVersionIdentifier=&quot;hostName&quot;^{__CFString}&quot;hostVersion&quot;I}' name='AUHostVersionIdentifier'>
<field type='^{__CFString=}' name='hostName' declared_type='CFStringRef'/>
<field type64='I' type='L' name='hostVersion' declared_type='UInt32'/>
</struct>
<struct type='{AUInputSamplesInOutputCallbackStruct=&quot;inputToOutputCallback&quot;^?&quot;userData&quot;^v}' name='AUInputSamplesInOutputCallbackStruct'>
<field type='^?' function_pointer='true' name='inputToOutputCallback' declared_type='AUInputSamplesInOutputCallback'>
<arg type='^v' declared_type='void*'/>
<arg const='true' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}' declared_type='AudioTimeStamp*'/>
<arg type='d' declared_type='Float64'/>
<arg type='d' declared_type='Float64'/>
<retval type='v' declared_type='void'/>
</field>
<field type='^v' name='userData' declared_type='void*'/>
</struct>
<struct type='{AUMIDIOutputCallbackStruct=&quot;midiOutputCallback&quot;^?&quot;userData&quot;^v}' name='AUMIDIOutputCallbackStruct'>
<field type='^?' function_pointer='true' name='midiOutputCallback' declared_type='AUMIDIOutputCallback'>
<arg type='^v' declared_type='void*'/>
<arg const='true' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}' declared_type='AudioTimeStamp*'/>
<arg type64='I' type='L' declared_type='UInt32'/>
<arg const='true' type='^{MIDIPacketList=}' declared_type='struct MIDIPacketList*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field type='^v' name='userData' declared_type='void*'/>
</struct>
<struct type='{AUNumVersion=&quot;nonRelRev&quot;C&quot;stage&quot;C&quot;minorAndBugRev&quot;C&quot;majorRev&quot;C}' name='AUNumVersion'>
<field type='C' name='nonRelRev' declared_type='UInt8'/>
<field type='C' name='stage' declared_type='UInt8'/>
<field type='C' name='minorAndBugRev' declared_type='UInt8'/>
<field type='C' name='majorRev' declared_type='UInt8'/>
</struct>
<struct type='{AUParameterMIDIMapping=&quot;mScope&quot;I&quot;mElement&quot;I&quot;mParameterID&quot;I&quot;mFlags&quot;I&quot;mSubRangeMin&quot;f&quot;mSubRangeMax&quot;f&quot;mStatus&quot;C&quot;mData1&quot;C&quot;reserved1&quot;C&quot;reserved2&quot;C&quot;reserved3&quot;I}' name='AUParameterMIDIMapping'>
<field type64='I' type='L' name='mScope' declared_type='AudioUnitScope'/>
<field type64='I' type='L' name='mElement' declared_type='AudioUnitElement'/>
<field type64='I' type='L' name='mParameterID' declared_type='AudioUnitParameterID'/>
<field type64='I' type='L' name='mFlags' declared_type='UInt32'/>
<field type='f' name='mSubRangeMin' declared_type='AudioUnitParameterValue'/>
<field type='f' name='mSubRangeMax' declared_type='AudioUnitParameterValue'/>
<field type='C' name='mStatus' declared_type='UInt8'/>
<field type='C' name='mData1' declared_type='UInt8'/>
<field type='C' name='reserved1' declared_type='UInt8'/>
<field type='C' name='reserved2' declared_type='UInt8'/>
<field type64='I' type='L' name='reserved3' declared_type='UInt32'/>
</struct>
<struct type='{AUPreset=&quot;presetNumber&quot;i&quot;presetName&quot;^{__CFString}}' name='AUPreset'>
<field type64='i' type='l' name='presetNumber' declared_type='SInt32'/>
<field type='^{__CFString=}' name='presetName' declared_type='CFStringRef'/>
</struct>
<struct type='{AURenderCallbackStruct=&quot;inputProc&quot;^?&quot;inputProcRefCon&quot;^v}' name='AURenderCallbackStruct'>
<field type='^?' function_pointer='true' name='inputProc' declared_type='AURenderCallback'>
<arg type='^v' declared_type='void*'/>
<arg type='^I' declared_type='AudioUnitRenderActionFlags*'/>
<arg const='true' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}' declared_type='AudioTimeStamp*'/>
<arg type64='I' type='L' declared_type='UInt32'/>
<arg type64='I' type='L' declared_type='UInt32'/>
<arg type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}' declared_type='AudioBufferList*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field type='^v' name='inputProcRefCon' declared_type='void*'/>
</struct>
<struct type='{AUSamplerBankPresetData=&quot;bankURL&quot;^{__CFURL}&quot;bankMSB&quot;C&quot;bankLSB&quot;C&quot;presetID&quot;C&quot;reserved&quot;C}' name='AUSamplerBankPresetData'>
<field type='^{__CFURL=}' name='bankURL' declared_type='CFURLRef'/>
<field type='C' name='bankMSB' declared_type='UInt8'/>
<field type='C' name='bankLSB' declared_type='UInt8'/>
<field type='C' name='presetID' declared_type='UInt8'/>
<field type='C' name='reserved' declared_type='UInt8'/>
</struct>
<struct type='{AUSamplerInstrumentData=&quot;fileURL&quot;^{__CFURL}&quot;instrumentType&quot;C&quot;bankMSB&quot;C&quot;bankLSB&quot;C&quot;presetID&quot;C}' name='AUSamplerInstrumentData'>
<field type='^{__CFURL=}' name='fileURL' declared_type='CFURLRef'/>
<field type='C' name='instrumentType' declared_type='UInt8'/>
<field type='C' name='bankMSB' declared_type='UInt8'/>
<field type='C' name='bankLSB' declared_type='UInt8'/>
<field type='C' name='presetID' declared_type='UInt8'/>
</struct>
<struct type='{AudioCodecMagicCookieInfo=&quot;mMagicCookieSize&quot;I&quot;mMagicCookie&quot;^v}' name='AudioCodecMagicCookieInfo'>
<field type64='I' type='L' name='mMagicCookieSize' declared_type='UInt32'/>
<field const='true' type='^v' name='mMagicCookie' declared_type='void*'/>
</struct>
<struct type='{AudioCodecPrimeInfo=&quot;leadingFrames&quot;I&quot;trailingFrames&quot;I}' name='AudioCodecPrimeInfo'>
<field type64='I' type='L' name='leadingFrames' declared_type='UInt32'/>
<field type64='I' type='L' name='trailingFrames' declared_type='UInt32'/>
</struct>
<struct type='{AudioComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}' name='AudioComponentDescription'>
<field type64='I' type='L' name='componentType' declared_type='OSType'/>
<field type64='I' type='L' name='componentSubType' declared_type='OSType'/>
<field type64='I' type='L' name='componentManufacturer' declared_type='OSType'/>
<field type64='I' type='L' name='componentFlags' declared_type='UInt32'/>
<field type64='I' type='L' name='componentFlagsMask' declared_type='UInt32'/>
</struct>
<struct type64='{ComponentInstanceRecord=&quot;data&quot;[1q]}' type='{ComponentInstanceRecord=&quot;data&quot;[1l]}' name='AudioComponentInstance'>
<field type64='[1q]' type='[1l]' name='data' declared_type='long*'/>
</struct>
<struct type='{AudioComponentPlugInInterface=&quot;Open&quot;^?&quot;Close&quot;^?&quot;Lookup&quot;^?&quot;reserved&quot;^v}' name='AudioComponentPlugInInterface'>
<field type='^?' function_pointer='true' name='Open' declared_type='OSStatus (*)(void *, AudioComponentInstance)'>
<arg type='^v' declared_type='void*'/>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' declared_type='AudioComponentInstance'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field type='^?' function_pointer='true' name='Close' declared_type='OSStatus (*)(void *)'>
<arg type='^v' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field type='^?' function_pointer='true' name='Lookup' declared_type='AudioComponentMethod (*)(SInt16)'>
<arg type='s' declared_type='SInt16'/>
<retval type='^?' function_pointer='true' declared_type='AudioComponentMethod'>
<arg type='^v' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</retval>
</field>
<field type='^v' name='reserved' declared_type='void*'/>
</struct>
<struct type='{AudioOutputUnitStartAtTimeParams=&quot;mTimestamp&quot;{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}&quot;mFlags&quot;I}' name='AudioOutputUnitStartAtTimeParams'>
<field type='{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}' name='mTimestamp' declared_type='AudioTimeStamp'/>
<field type64='I' type='L' name='mFlags' declared_type='UInt32'/>
</struct>
<struct type='{AudioUnitCocoaViewInfo=&quot;mCocoaAUViewBundleLocation&quot;^{__CFURL}&quot;mCocoaAUViewClass&quot;[1^{__CFString}]}' name='AudioUnitCocoaViewInfo'>
<field type='^{__CFURL=}' name='mCocoaAUViewBundleLocation' declared_type='CFURLRef'/>
<field type='[1^{__CFString}]' name='mCocoaAUViewClass' declared_type='CFStringRef*'/>
</struct>
<struct type='{AudioUnitConnection=&quot;sourceAudioUnit&quot;^{ComponentInstanceRecord}&quot;sourceOutputNumber&quot;I&quot;destInputNumber&quot;I}' name='AudioUnitConnection'>
<field type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='sourceAudioUnit' declared_type='AudioUnit'/>
<field type64='I' type='L' name='sourceOutputNumber' declared_type='UInt32'/>
<field type64='I' type='L' name='destInputNumber' declared_type='UInt32'/>
</struct>
<struct type='{AudioUnitExternalBuffer=&quot;buffer&quot;*&quot;size&quot;I}' name='AudioUnitExternalBuffer'>
<field type='*' name='buffer' declared_type='Byte*'/>
<field type64='I' type='L' name='size' declared_type='UInt32'/>
</struct>
<struct type='{AudioUnitFrequencyResponseBin=&quot;mFrequency&quot;d&quot;mMagnitude&quot;d}' name='AudioUnitFrequencyResponseBin'>
<field type='d' name='mFrequency' declared_type='Float64'/>
<field type='d' name='mMagnitude' declared_type='Float64'/>
</struct>
<struct type='{AudioUnitMIDIControlMapping=&quot;midiNRPN&quot;S&quot;midiControl&quot;C&quot;scope&quot;C&quot;element&quot;I&quot;parameter&quot;I}' name='AudioUnitMIDIControlMapping'>
<field type='S' name='midiNRPN' declared_type='UInt16'/>
<field type='C' name='midiControl' declared_type='UInt8'/>
<field type='C' name='scope' declared_type='UInt8'/>
<field type64='I' type='L' name='element' declared_type='AudioUnitElement'/>
<field type64='I' type='L' name='parameter' declared_type='AudioUnitParameterID'/>
</struct>
<struct type='{AudioUnitMeterClipping=&quot;peakValueSinceLastCall&quot;f&quot;sawInfinity&quot;B&quot;sawNotANumber&quot;B}' name='AudioUnitMeterClipping'>
<field type='f' name='peakValueSinceLastCall' declared_type='Float32'/>
<field type='B' name='sawInfinity' declared_type='Boolean'/>
<field type='B' name='sawNotANumber' declared_type='Boolean'/>
</struct>
<struct type='{AudioUnitOtherPluginDesc=&quot;format&quot;I&quot;plugin&quot;{AudioClassDescription=&quot;mType&quot;I&quot;mSubType&quot;I&quot;mManufacturer&quot;I}}' name='AudioUnitOtherPluginDesc'>
<field type64='I' type='L' name='format' declared_type='UInt32'/>
<field type='{AudioClassDescription=&quot;mType&quot;I&quot;mSubType&quot;I&quot;mManufacturer&quot;I}' name='plugin' declared_type='AudioClassDescription'/>
</struct>
<struct type='{AudioUnitParameter=&quot;mAudioUnit&quot;^{ComponentInstanceRecord}&quot;mParameterID&quot;I&quot;mScope&quot;I&quot;mElement&quot;I}' name='AudioUnitParameter'>
<field type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='mAudioUnit' declared_type='AudioUnit'/>
<field type64='I' type='L' name='mParameterID' declared_type='AudioUnitParameterID'/>
<field type64='I' type='L' name='mScope' declared_type='AudioUnitScope'/>
<field type64='I' type='L' name='mElement' declared_type='AudioUnitElement'/>
</struct>
<struct type='{AudioUnitParameterEvent=&quot;scope&quot;I&quot;element&quot;I&quot;parameter&quot;I&quot;eventType&quot;I&quot;eventValues&quot;(?=&quot;ramp&quot;{?=&quot;startBufferOffset&quot;i&quot;durationInFrames&quot;I&quot;startValue&quot;f&quot;endValue&quot;f}&quot;immediate&quot;{?=&quot;bufferOffset&quot;I&quot;value&quot;f})}' name='AudioUnitParameterEvent'>
<field type64='I' type='L' name='scope' declared_type='AudioUnitScope'/>
<field type64='I' type='L' name='element' declared_type='AudioUnitElement'/>
<field type64='I' type='L' name='parameter' declared_type='AudioUnitParameterID'/>
<field type64='I' type='L' name='eventType' declared_type='AUParameterEventType'/>
<field type='(?=&quot;ramp&quot;{?=&quot;startBufferOffset&quot;i&quot;durationInFrames&quot;I&quot;startValue&quot;f&quot;endValue&quot;f}&quot;immediate&quot;{?=&quot;bufferOffset&quot;I&quot;value&quot;f})' name='eventValues' declared_type='union AudioUnitParameterEvent::'/>
</struct>
<struct type='{AudioUnitParameterHistoryInfo=&quot;updatesPerSecond&quot;f&quot;historyDurationInSeconds&quot;f}' name='AudioUnitParameterHistoryInfo'>
<field type='f' name='updatesPerSecond' declared_type='Float32'/>
<field type='f' name='historyDurationInSeconds' declared_type='Float32'/>
</struct>
<struct type='{AudioUnitParameterNameInfo=&quot;inID&quot;I&quot;inDesiredLength&quot;i&quot;outName&quot;^{__CFString}}' name='AudioUnitParameterIDName'>
<field type64='I' type='L' name='inID' declared_type='AudioUnitParameterID'/>
<field type64='i' type='l' name='inDesiredLength' declared_type='SInt32'/>
<field type='^{__CFString=}' name='outName' declared_type='CFStringRef'/>
</struct>
<struct type='{AudioUnitParameterInfo=&quot;name&quot;[52c]&quot;unitName&quot;^{__CFString}&quot;clumpID&quot;I&quot;cfNameString&quot;^{__CFString}&quot;unit&quot;I&quot;minValue&quot;f&quot;maxValue&quot;f&quot;defaultValue&quot;f&quot;flags&quot;I}' name='AudioUnitParameterInfo'>
<field type='[52c]' name='name' declared_type='char*'/>
<field type='^{__CFString=}' name='unitName' declared_type='CFStringRef'/>
<field type64='I' type='L' name='clumpID' declared_type='UInt32'/>
<field type='^{__CFString=}' name='cfNameString' declared_type='CFStringRef'/>
<field type64='I' type='L' name='unit' declared_type='AudioUnitParameterUnit'/>
<field type='f' name='minValue' declared_type='AudioUnitParameterValue'/>
<field type='f' name='maxValue' declared_type='AudioUnitParameterValue'/>
<field type='f' name='defaultValue' declared_type='AudioUnitParameterValue'/>
<field type64='I' type='L' name='flags' declared_type='UInt32'/>
</struct>
<struct type='{AudioUnitParameterNameInfo=&quot;inID&quot;I&quot;inDesiredLength&quot;i&quot;outName&quot;^{__CFString}}' name='AudioUnitParameterNameInfo'>
<field type64='I' type='L' name='inID' declared_type='AudioUnitParameterID'/>
<field type64='i' type='l' name='inDesiredLength' declared_type='SInt32'/>
<field type='^{__CFString=}' name='outName' declared_type='CFStringRef'/>
</struct>
<struct type='{AudioUnitParameterStringFromValue=&quot;inParamID&quot;I&quot;inValue&quot;^f&quot;outString&quot;^{__CFString}}' name='AudioUnitParameterStringFromValue'>
<field type64='I' type='L' name='inParamID' declared_type='AudioUnitParameterID'/>
<field const='true' type='^f' name='inValue' declared_type='AudioUnitParameterValue*'/>
<field type='^{__CFString=}' name='outString' declared_type='CFStringRef'/>
</struct>
<struct type='{AudioUnitParameterValueFromString=&quot;inParamID&quot;I&quot;inString&quot;^{__CFString}&quot;outValue&quot;f}' name='AudioUnitParameterValueFromString'>
<field type64='I' type='L' name='inParamID' declared_type='AudioUnitParameterID'/>
<field type='^{__CFString=}' name='inString' declared_type='CFStringRef'/>
<field type='f' name='outValue' declared_type='AudioUnitParameterValue'/>
</struct>
<struct type='{AudioUnitParameterValueName=&quot;inParamID&quot;I&quot;inValue&quot;^f&quot;outName&quot;^{__CFString}}' name='AudioUnitParameterValueName'>
<field type64='I' type='L' name='inParamID' declared_type='AudioUnitParameterID'/>
<field const='true' type='^f' name='inValue' declared_type='Float32*'/>
<field type='^{__CFString=}' name='outName' declared_type='CFStringRef'/>
</struct>
<struct type='{AudioUnitParameterValueTranslation=&quot;otherDesc&quot;{AudioUnitOtherPluginDesc=&quot;format&quot;I&quot;plugin&quot;{AudioClassDescription=&quot;mType&quot;I&quot;mSubType&quot;I&quot;mManufacturer&quot;I}}&quot;otherParamID&quot;I&quot;otherValue&quot;f&quot;auParamID&quot;I&quot;auValue&quot;f}' name='AudioUnitParameterValueTranslation'>
<field type='{AudioUnitOtherPluginDesc=&quot;format&quot;I&quot;plugin&quot;{AudioClassDescription=&quot;mType&quot;I&quot;mSubType&quot;I&quot;mManufacturer&quot;I}}' name='otherDesc' declared_type='AudioUnitOtherPluginDesc'/>
<field type64='I' type='L' name='otherParamID' declared_type='UInt32'/>
<field type='f' name='otherValue' declared_type='Float32'/>
<field type64='I' type='L' name='auParamID' declared_type='AudioUnitParameterID'/>
<field type='f' name='auValue' declared_type='AudioUnitParameterValue'/>
</struct>
<struct type='{AudioUnitPresetMAS_SettingData=&quot;isStockSetting&quot;I&quot;settingID&quot;I&quot;dataLen&quot;I&quot;data&quot;[1C]}' name='AudioUnitPresetMAS_SettingData'>
<field type64='I' type='L' name='isStockSetting' declared_type='UInt32'/>
<field type64='I' type='L' name='settingID' declared_type='UInt32'/>
<field type64='I' type='L' name='dataLen' declared_type='UInt32'/>
<field type='[1C]' name='data' declared_type='UInt8*'/>
</struct>
<struct type='{AudioUnitPresetMAS_Settings=&quot;manufacturerID&quot;I&quot;effectID&quot;I&quot;variantID&quot;I&quot;settingsVersion&quot;I&quot;numberOfSettings&quot;I&quot;settings&quot;[1{AudioUnitPresetMAS_SettingData=&quot;isStockSetting&quot;I&quot;settingID&quot;I&quot;dataLen&quot;I&quot;data&quot;[1C]}]}' name='AudioUnitPresetMAS_Settings'>
<field type64='I' type='L' name='manufacturerID' declared_type='UInt32'/>
<field type64='I' type='L' name='effectID' declared_type='UInt32'/>
<field type64='I' type='L' name='variantID' declared_type='UInt32'/>
<field type64='I' type='L' name='settingsVersion' declared_type='UInt32'/>
<field type64='I' type='L' name='numberOfSettings' declared_type='UInt32'/>
<field type='[1{AudioUnitPresetMAS_SettingData=&quot;isStockSetting&quot;I&quot;settingID&quot;I&quot;dataLen&quot;I&quot;data&quot;[1C]}]' name='settings' declared_type='AudioUnitPresetMAS_SettingData*'/>
</struct>
<struct type='{AudioUnitProperty=&quot;mAudioUnit&quot;^{ComponentInstanceRecord}&quot;mPropertyID&quot;I&quot;mScope&quot;I&quot;mElement&quot;I}' name='AudioUnitProperty'>
<field type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='mAudioUnit' declared_type='AudioUnit'/>
<field type64='I' type='L' name='mPropertyID' declared_type='AudioUnitPropertyID'/>
<field type64='I' type='L' name='mScope' declared_type='AudioUnitScope'/>
<field type64='I' type='L' name='mElement' declared_type='AudioUnitElement'/>
</struct>
<struct type='{HostCallbackInfo=&quot;hostUserData&quot;^v&quot;beatAndTempoProc&quot;^?&quot;musicalTimeLocationProc&quot;^?&quot;transportStateProc&quot;^?}' name='HostCallbackInfo'>
<field type='^v' name='hostUserData' declared_type='void*'/>
<field type='^?' function_pointer='true' name='beatAndTempoProc' declared_type='HostCallback_GetBeatAndTempo'>
<arg type='^v' declared_type='void*'/>
<arg type='^d' declared_type='Float64*'/>
<arg type='^d' declared_type='Float64*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field type='^?' function_pointer='true' name='musicalTimeLocationProc' declared_type='HostCallback_GetMusicalTimeLocation'>
<arg type='^v' declared_type='void*'/>
<arg type='^I' declared_type='UInt32*'/>
<arg type='^f' declared_type='Float32*'/>
<arg type='^I' declared_type='UInt32*'/>
<arg type='^d' declared_type='Float64*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
<field type='^?' function_pointer='true' name='transportStateProc' declared_type='HostCallback_GetTransportState'>
<arg type='^v' declared_type='void*'/>
<arg type='^B' declared_type='Boolean*'/>
<arg type='^B' declared_type='Boolean*'/>
<arg type='^d' declared_type='Float64*'/>
<arg type='^B' declared_type='Boolean*'/>
<arg type='^d' declared_type='Float64*'/>
<arg type='^d' declared_type='Float64*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</field>
</struct>
<struct type='{_LogicAUNodePropertyDescription=&quot;mPropertyID&quot;I&quot;mEndianMode&quot;I&quot;mFlags&quot;I}' name='LogicAUNodePropertyDescription'>
<field type64='I' type='L' name='mPropertyID' declared_type='AudioUnitPropertyID'/>
<field type64='I' type='L' name='mEndianMode' declared_type='UInt32'/>
<field type64='I' type='L' name='mFlags' declared_type='UInt32'/>
</struct>
<struct type='{AudioCodecMagicCookieInfo=&quot;mMagicCookieSize&quot;I&quot;mMagicCookie&quot;^v}' name='MagicCookieInfo'>
<field type64='I' type='L' name='mMagicCookieSize' declared_type='UInt32'/>
<field const='true' type='^v' name='mMagicCookie' declared_type='void*'/>
</struct>
<struct type='{MixerDistanceParams=&quot;mReferenceDistance&quot;f&quot;mMaxDistance&quot;f&quot;mMaxAttenuation&quot;f}' name='MixerDistanceParams'>
<field type='f' name='mReferenceDistance' declared_type='Float32'/>
<field type='f' name='mMaxDistance' declared_type='Float32'/>
<field type='f' name='mMaxAttenuation' declared_type='Float32'/>
</struct>
<struct type='{MusicDeviceNoteParams=&quot;argCount&quot;I&quot;mPitch&quot;f&quot;mVelocity&quot;f&quot;mControls&quot;[1{NoteParamsControlValue=&quot;mID&quot;I&quot;mValue&quot;f}]}' name='MusicDeviceNoteParams'>
<field type64='I' type='L' name='argCount' declared_type='UInt32'/>
<field type='f' name='mPitch' declared_type='Float32'/>
<field type='f' name='mVelocity' declared_type='Float32'/>
<field type='[1{NoteParamsControlValue=&quot;mID&quot;I&quot;mValue&quot;f}]' name='mControls' declared_type='NoteParamsControlValue*'/>
</struct>
<struct type='{MusicDeviceStdNoteParams=&quot;argCount&quot;I&quot;mPitch&quot;f&quot;mVelocity&quot;f}' name='MusicDeviceStdNoteParams'>
<field type64='I' type='L' name='argCount' declared_type='UInt32'/>
<field type='f' name='mPitch' declared_type='Float32'/>
<field type='f' name='mVelocity' declared_type='Float32'/>
</struct>
<struct type='{NoteParamsControlValue=&quot;mID&quot;I&quot;mValue&quot;f}' name='NoteParamsControlValue'>
<field type64='I' type='L' name='mID' declared_type='AudioUnitParameterID'/>
<field type='f' name='mValue' declared_type='AudioUnitParameterValue'/>
</struct>
<struct type='{ScheduledAudioFileRegion=&quot;mTimeStamp&quot;{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}&quot;mCompletionProc&quot;^?&quot;mCompletionProcUserData&quot;^v&quot;mAudioFile&quot;^{OpaqueAudioFileID}&quot;mLoopCount&quot;I&quot;mStartFrame&quot;q&quot;mFramesToPlay&quot;I}' name='ScheduledAudioFileRegion'>
<field type='{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}' name='mTimeStamp' declared_type='AudioTimeStamp'/>
<field type='^?' function_pointer='true' name='mCompletionProc' declared_type='ScheduledAudioFileRegionCompletionProc'>
<arg type='^v' declared_type='void*'/>
<arg type='^{ScheduledAudioFileRegion={AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}^?^v^{OpaqueAudioFileID}IqI}' declared_type='ScheduledAudioFileRegion*'/>
<arg type64='i' type='l' declared_type='OSStatus'/>
<retval type='v' declared_type='void'/>
</field>
<field type='^v' name='mCompletionProcUserData' declared_type='void*'/>
<field type='^{OpaqueAudioFileID=}' name='mAudioFile' declared_type='struct OpaqueAudioFileID*'/>
<field type64='I' type='L' name='mLoopCount' declared_type='UInt32'/>
<field type='q' name='mStartFrame' declared_type='SInt64'/>
<field type64='I' type='L' name='mFramesToPlay' declared_type='UInt32'/>
</struct>
<struct type='{ScheduledAudioSlice=&quot;mTimeStamp&quot;{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}&quot;mCompletionProc&quot;^?&quot;mCompletionProcUserData&quot;^v&quot;mFlags&quot;I&quot;mReserved&quot;I&quot;mReserved2&quot;^v&quot;mNumberFrames&quot;I&quot;mBufferList&quot;^{AudioBufferList}}' name='ScheduledAudioSlice'>
<field type='{AudioTimeStamp=&quot;mSampleTime&quot;d&quot;mHostTime&quot;Q&quot;mRateScalar&quot;d&quot;mWordClockTime&quot;Q&quot;mSMPTETime&quot;{SMPTETime=&quot;mSubframes&quot;s&quot;mSubframeDivisor&quot;s&quot;mCounter&quot;I&quot;mType&quot;I&quot;mFlags&quot;I&quot;mHours&quot;s&quot;mMinutes&quot;s&quot;mSeconds&quot;s&quot;mFrames&quot;s}&quot;mFlags&quot;I&quot;mReserved&quot;I}' name='mTimeStamp' declared_type='AudioTimeStamp'/>
<field type='^?' function_pointer='true' name='mCompletionProc' declared_type='ScheduledAudioSliceCompletionProc'>
<arg type='^v' declared_type='void*'/>
<arg type='^{ScheduledAudioSlice={AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}^?^vII^vI^{AudioBufferList}}' declared_type='ScheduledAudioSlice*'/>
<retval type='v' declared_type='void'/>
</field>
<field type='^v' name='mCompletionProcUserData' declared_type='void*'/>
<field type64='I' type='L' name='mFlags' declared_type='UInt32'/>
<field type64='I' type='L' name='mReserved' declared_type='UInt32'/>
<field type='^v' name='mReserved2' declared_type='void*'/>
<field type64='I' type='L' name='mNumberFrames' declared_type='UInt32'/>
<field type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}' name='mBufferList' declared_type='AudioBufferList*'/>
</struct>
<opaque type='^{OpaqueAudioComponent=}' name='AudioComponent'/>
<string_constant value='cpu-load' name='kAUPresetCPULoadKey'/>
<string_constant value='data' name='kAUPresetDataKey'/>
<string_constant value='element-name' name='kAUPresetElementNameKey'/>
<string_constant value='file-references' name='kAUPresetExternalFileRefs'/>
<string_constant value='masdata' name='kAUPresetMASDataKey'/>
<string_constant value='manufacturer' name='kAUPresetManufacturerKey'/>
<string_constant value='name' name='kAUPresetNameKey'/>
<string_constant value='part' name='kAUPresetPartKey'/>
<string_constant value='render-quality' name='kAUPresetRenderQualityKey'/>
<string_constant value='subtype' name='kAUPresetSubtypeKey'/>
<string_constant value='type' name='kAUPresetTypeKey'/>
<string_constant value='vstdata' name='kAUPresetVSTDataKey'/>
<string_constant value='vstpreset' name='kAUPresetVSTPresetKey'/>
<string_constant value='version' name='kAUPresetVersionKey'/>
<string_constant value='available values' name='kAudioSettings_AvailableValues'/>
<string_constant value='current value' name='kAudioSettings_CurrentValue'/>
<string_constant value='hint' name='kAudioSettings_Hint'/>
<string_constant value='limited values' name='kAudioSettings_LimitedValues'/>
<string_constant value='parameters' name='kAudioSettings_Parameters'/>
<string_constant value='key' name='kAudioSettings_SettingKey'/>
<string_constant value='name' name='kAudioSettings_SettingName'/>
<string_constant value='summary' name='kAudioSettings_Summary'/>
<string_constant value='name' name='kAudioSettings_TopLevelKey'/>
<string_constant value='unit' name='kAudioSettings_Unit'/>
<string_constant value='value type' name='kAudioSettings_ValueType'/>
<string_constant value='version' name='kAudioSettings_Version'/>
<string_constant value='ChannelConfigurations' name='kAudioUnitConfigurationInfo_ChannelConfigurations'/>
<string_constant value='HasCustomView' name='kAudioUnitConfigurationInfo_HasCustomView'/>
<string_constant value='InitialInputs' name='kAudioUnitConfigurationInfo_InitialInputs'/>
<string_constant value='InitialOutputs' name='kAudioUnitConfigurationInfo_InitialOutputs'/>
<enum value='1070' name='AUDIO_UNIT_VERSION'/>
<enum value='1' name='k3DMixerAttenuationCurve_Exponential'/>
<enum value='2' name='k3DMixerAttenuationCurve_Inverse'/>
<enum value='3' name='k3DMixerAttenuationCurve_Linear'/>
<enum value='0' name='k3DMixerAttenuationCurve_Power'/>
<enum value='0' name='k3DMixerParam_Azimuth'/>
<enum value='2' name='k3DMixerParam_Distance'/>
<enum value='1' name='k3DMixerParam_Elevation'/>
<enum value='3' name='k3DMixerParam_Gain'/>
<enum value='6' name='k3DMixerParam_GlobalReverbGain'/>
<enum value='10' name='k3DMixerParam_MaxGain'/>
<enum value='9' name='k3DMixerParam_MinGain'/>
<enum value='8' name='k3DMixerParam_ObstructionAttenuation'/>
<enum value='7' name='k3DMixerParam_OcclusionAttenuation'/>
<enum value='4' name='k3DMixerParam_PlaybackRate'/>
<enum value='3000' name='k3DMixerParam_PostAveragePower'/>
<enum value='4000' name='k3DMixerParam_PostPeakHoldLevel'/>
<enum value='1000' name='k3DMixerParam_PreAveragePower'/>
<enum value='2000' name='k3DMixerParam_PrePeakHoldLevel'/>
<enum value='5' name='k3DMixerParam_ReverbBlend'/>
<enum value='64' name='k3DMixerRenderingFlags_ConstantReverbBlend'/>
<enum value='4' name='k3DMixerRenderingFlags_DistanceAttenuation'/>
<enum value='16' name='k3DMixerRenderingFlags_DistanceDiffusion'/>
<enum value='8' name='k3DMixerRenderingFlags_DistanceFilter'/>
<enum value='2' name='k3DMixerRenderingFlags_DopplerShift'/>
<enum value='1' name='k3DMixerRenderingFlags_InterAuralDelay'/>
<enum value='32' name='k3DMixerRenderingFlags_LinearDistanceAttenuation'/>
<enum value='1735291491' name='kAUCarbonViewSubType_Generic'/>
<enum value='123' name='kAUGroupParameterID_AllNotesOff'/>
<enum value='120' name='kAUGroupParameterID_AllSoundOff'/>
<enum value='208' name='kAUGroupParameterID_ChannelPressure'/>
<enum value='6' name='kAUGroupParameterID_DataEntry'/>
<enum value='38' name='kAUGroupParameterID_DataEntry_LSB'/>
<enum value='11' name='kAUGroupParameterID_Expression'/>
<enum value='43' name='kAUGroupParameterID_Expression_LSB'/>
<enum value='4' name='kAUGroupParameterID_Foot'/>
<enum value='36' name='kAUGroupParameterID_Foot_LSB'/>
<enum value='160' name='kAUGroupParameterID_KeyPressure'/>
<enum value='256' name='kAUGroupParameterID_KeyPressure_FirstKey'/>
<enum value='383' name='kAUGroupParameterID_KeyPressure_LastKey'/>
<enum value='1' name='kAUGroupParameterID_ModWheel'/>
<enum value='33' name='kAUGroupParameterID_ModWheel_LSB'/>
<enum value='10' name='kAUGroupParameterID_Pan'/>
<enum value='42' name='kAUGroupParameterID_Pan_LSB'/>
<enum value='224' name='kAUGroupParameterID_PitchBend'/>
<enum value='121' name='kAUGroupParameterID_ResetAllControllers'/>
<enum value='66' name='kAUGroupParameterID_Sostenuto'/>
<enum value='64' name='kAUGroupParameterID_Sustain'/>
<enum value='7' name='kAUGroupParameterID_Volume'/>
<enum value='39' name='kAUGroupParameterID_Volume_LSB'/>
<enum value='0' name='kAULowShelfParam_CutoffFrequency'/>
<enum value='1' name='kAULowShelfParam_Gain'/>
<enum value='1' name='kAUNetReceiveParam_NumParameters'/>
<enum value='0' name='kAUNetReceiveParam_Status'/>
<enum value='3511' name='kAUNetReceiveProperty_Hostname'/>
<enum value='3512' name='kAUNetReceiveProperty_Password'/>
<enum value='18' name='kAUNetSendNumPresetFormats'/>
<enum value='1' name='kAUNetSendParam_NumParameters'/>
<enum value='0' name='kAUNetSendParam_Status'/>
<enum value='7' name='kAUNetSendPresetFormat_AAC_128kbpspc'/>
<enum value='13' name='kAUNetSendPresetFormat_AAC_32kbpspc'/>
<enum value='12' name='kAUNetSendPresetFormat_AAC_40kbpspc'/>
<enum value='11' name='kAUNetSendPresetFormat_AAC_48kbpspc'/>
<enum value='10' name='kAUNetSendPresetFormat_AAC_64kbpspc'/>
<enum value='9' name='kAUNetSendPresetFormat_AAC_80kbpspc'/>
<enum value='8' name='kAUNetSendPresetFormat_AAC_96kbpspc'/>
<enum value='17' name='kAUNetSendPresetFormat_AAC_LD_32kbpspc'/>
<enum value='16' name='kAUNetSendPresetFormat_AAC_LD_40kbpspc'/>
<enum value='15' name='kAUNetSendPresetFormat_AAC_LD_48kbpspc'/>
<enum value='14' name='kAUNetSendPresetFormat_AAC_LD_64kbpspc'/>
<enum value='6' name='kAUNetSendPresetFormat_IMA4'/>
<enum value='4' name='kAUNetSendPresetFormat_Lossless16'/>
<enum value='3' name='kAUNetSendPresetFormat_Lossless24'/>
<enum value='0' name='kAUNetSendPresetFormat_PCMFloat32'/>
<enum value='2' name='kAUNetSendPresetFormat_PCMInt16'/>
<enum value='1' name='kAUNetSendPresetFormat_PCMInt24'/>
<enum value='5' name='kAUNetSendPresetFormat_ULaw'/>
<enum value='3517' name='kAUNetSendProperty_Disconnect'/>
<enum value='3518' name='kAUNetSendProperty_Password'/>
<enum value='3513' name='kAUNetSendProperty_PortNum'/>
<enum value='3516' name='kAUNetSendProperty_ServiceName'/>
<enum value='3514' name='kAUNetSendProperty_TransmissionFormat'/>
<enum value='3515' name='kAUNetSendProperty_TransmissionFormatIndex'/>
<enum value='1' name='kAUNetStatus_Connected'/>
<enum value='4' name='kAUNetStatus_Connecting'/>
<enum value='5' name='kAUNetStatus_Listening'/>
<enum value='0' name='kAUNetStatus_NotConnected'/>
<enum value='2' name='kAUNetStatus_Overflow'/>
<enum value='3' name='kAUNetStatus_Underflow'/>
<enum value='1' name='kAUParameterMIDIMapping_AnyChannelFlag'/>
<enum value='2' name='kAUParameterMIDIMapping_AnyNoteFlag'/>
<enum value='16' name='kAUParameterMIDIMapping_Bipolar'/>
<enum value='32' name='kAUParameterMIDIMapping_Bipolar_On'/>
<enum value='4' name='kAUParameterMIDIMapping_SubRange'/>
<enum value='8' name='kAUParameterMIDIMapping_Toggle'/>
<enum value='901' name='kAUSamplerParam_CoarseTuning'/>
<enum value='902' name='kAUSamplerParam_FineTuning'/>
<enum value='900' name='kAUSamplerParam_Gain'/>
<enum value='903' name='kAUSamplerParam_Pan'/>
<enum value='4101' name='kAUSamplerProperty_LoadAudioFiles'/>
<enum value='4102' name='kAUSamplerProperty_LoadInstrument'/>
<enum value='4100' name='kAUSamplerProperty_LoadPresetFromBank'/>
<enum value='0' name='kAUSampler_DefaultBankLSB'/>
<enum value='121' name='kAUSampler_DefaultMelodicBankMSB'/>
<enum value='120' name='kAUSampler_DefaultPercussionBankMSB'/>
<enum value='-66784' name='kAUVoiceIOErr_UnexpectedNumberOfInputChannels'/>
<enum value='2100' name='kAUVoiceIOProperty_BypassVoiceProcessing'/>
<enum value='2104' name='kAUVoiceIOProperty_MuteOutput'/>
<enum value='2101' name='kAUVoiceIOProperty_VoiceProcessingEnableAGC'/>
<enum value='2103' name='kAUVoiceIOProperty_VoiceProcessingQuality'/>
<enum value='9' name='kAudioCodecAppendInputBufferListSelect'/>
<enum value='6' name='kAudioCodecAppendInputDataSelect'/>
<enum value='561211770' name='kAudioCodecBadPropertySizeError'/>
<enum value='0' name='kAudioCodecBitRateControlMode_Constant'/>
<enum value='1' name='kAudioCodecBitRateControlMode_LongTermAverage'/>
<enum value='3' name='kAudioCodecBitRateControlMode_Variable'/>
<enum value='2' name='kAudioCodecBitRateControlMode_VariableConstrained'/>
<enum value='1633903206' name='kAudioCodecBitRateFormat'/>
<enum value='1' name='kAudioCodecBitRateFormat_ABR'/>
<enum value='0' name='kAudioCodecBitRateFormat_CBR'/>
<enum value='2' name='kAudioCodecBitRateFormat_VBR'/>
<enum value='0' name='kAudioCodecDelayMode_Compatibility'/>
<enum value='1' name='kAudioCodecDelayMode_Minimum'/>
<enum value='2' name='kAudioCodecDelayMode_Optimal'/>
<enum value='1819112035' name='kAudioCodecDoesSampleRateConversion'/>
<enum value='1633903974' name='kAudioCodecExtendFrequencies'/>
<enum value='1' name='kAudioCodecGetPropertyInfoSelect'/>
<enum value='2' name='kAudioCodecGetPropertySelect'/>
<enum value='1852797029' name='kAudioCodecIllegalOperationError'/>
<enum value='4' name='kAudioCodecInitializeSelect'/>
<enum value='1768305775' name='kAudioCodecInputFormatsForOutputFormat'/>
<enum value='0' name='kAudioCodecNoError'/>
<enum value='560100710' name='kAudioCodecNotEnoughBufferSpaceError'/>
<enum value='1868969065' name='kAudioCodecOutputFormatsForInputFormat'/>
<enum value='1869639794' name='kAudioCodecOutputPrecedence'/>
<enum value='1' name='kAudioCodecOutputPrecedenceBitRate'/>
<enum value='0' name='kAudioCodecOutputPrecedenceNone'/>
<enum value='2' name='kAudioCodecOutputPrecedenceSampleRate'/>
<enum value='2' name='kAudioCodecPrimeMethod_None'/>
<enum value='1' name='kAudioCodecPrimeMethod_Normal'/>
<enum value='0' name='kAudioCodecPrimeMethod_Pre'/>
<enum value='10' name='kAudioCodecProduceOutputBufferListSelect'/>
<enum value='7' name='kAudioCodecProduceOutputDataSelect'/>
<enum value='5' name='kAudioCodecProduceOutputPacketAtEOF'/>
<enum value='1' name='kAudioCodecProduceOutputPacketFailure'/>
<enum value='4' name='kAudioCodecProduceOutputPacketNeedsMoreInputData'/>
<enum value='2' name='kAudioCodecProduceOutputPacketSuccess'/>
<enum value='3' name='kAudioCodecProduceOutputPacketSuccessHasMore'/>
<enum value='1651668065' name='kAudioCodecPropertyApplicableBitRateRange'/>
<enum value='1769173601' name='kAudioCodecPropertyApplicableInputSampleRates'/>
<enum value='1869836897' name='kAudioCodecPropertyApplicableOutputSampleRates'/>
<enum value='1633841780' name='kAudioCodecPropertyAvailableBitRateRange'/>
<enum value='1651668003' name='kAudioCodecPropertyAvailableBitRates'/>
<enum value='1634296684' name='kAudioCodecPropertyAvailableInputChannelLayoutTags'/>
<enum value='1634296684' name='kAudioCodecPropertyAvailableInputChannelLayouts'/>
<enum value='1634300786' name='kAudioCodecPropertyAvailableInputSampleRates'/>
<enum value='1668116067' name='kAudioCodecPropertyAvailableNumberChannels'/>
<enum value='1634689900' name='kAudioCodecPropertyAvailableOutputChannelLayoutTags'/>
<enum value='1634689900' name='kAudioCodecPropertyAvailableOutputChannelLayouts'/>
<enum value='1634694002' name='kAudioCodecPropertyAvailableOutputSampleRates'/>
<enum value='1633903206' name='kAudioCodecPropertyBitRateControlMode'/>
<enum value='1768123424' name='kAudioCodecPropertyCurrentInputChannelLayout'/>
<enum value='1768320372' name='kAudioCodecPropertyCurrentInputFormat'/>
<enum value='1667855218' name='kAudioCodecPropertyCurrentInputSampleRate'/>
<enum value='1868786720' name='kAudioCodecPropertyCurrentOutputChannelLayout'/>
<enum value='1868983668' name='kAudioCodecPropertyCurrentOutputFormat'/>
<enum value='1668248434' name='kAudioCodecPropertyCurrentOutputSampleRate'/>
<enum value='1651663220' name='kAudioCodecPropertyCurrentTargetBitRate'/>
<enum value='1684893540' name='kAudioCodecPropertyDelayMode'/>
<enum value='1819112035' name='kAudioCodecPropertyDoesSampleRateConversion'/>
<enum value='1818652530' name='kAudioCodecPropertyFormatCFString'/>
<enum value='1633904233' name='kAudioCodecPropertyFormatInfo'/>
<enum value='1633904236' name='kAudioCodecPropertyFormatList'/>
<enum value='1987078975' name='kAudioCodecPropertyHasVariablePacketByteSizes'/>
<enum value='1952609638' name='kAudioCodecPropertyInputBufferSize'/>
<enum value='1768123424' name='kAudioCodecPropertyInputChannelLayout'/>
<enum value='1768305775' name='kAudioCodecPropertyInputFormatsForOutputFormat'/>
<enum value='1768843636' name='kAudioCodecPropertyIsInitialized'/>
<enum value='1802857321' name='kAudioCodecPropertyMagicCookie'/>
<enum value='1819107691' name='kAudioCodecPropertyManufacturerCFString'/>
<enum value='1885432674' name='kAudioCodecPropertyMaximumPacketByteSize'/>
<enum value='1835296108' name='kAudioCodecPropertyMinimumDelayMode'/>
<enum value='1835952496' name='kAudioCodecPropertyMinimumNumberInputPackets'/>
<enum value='1835954032' name='kAudioCodecPropertyMinimumNumberOutputPackets'/>
<enum value='1819173229' name='kAudioCodecPropertyNameCFString'/>
<enum value='1868786720' name='kAudioCodecPropertyOutputChannelLayout'/>
<enum value='1868969065' name='kAudioCodecPropertyOutputFormatsForInputFormat'/>
<enum value='1885432678' name='kAudioCodecPropertyPacketFrameSize'/>
<enum value='1885430832' name='kAudioCodecPropertyPaddedZeros'/>
<enum value='1886546285' name='kAudioCodecPropertyPrimeInfo'/>
<enum value='1886547309' name='kAudioCodecPropertyPrimeMethod'/>
<enum value='1936876401' name='kAudioCodecPropertyQualitySetting'/>
<enum value='1885432676' name='kAudioCodecPropertyRequiresPacketDescription'/>
<enum value='1633907488' name='kAudioCodecPropertySettings'/>
<enum value='1986163313' name='kAudioCodecPropertySoundQualityForVBR'/>
<enum value='1768320291' name='kAudioCodecPropertySupportedInputFormats'/>
<enum value='1868983587' name='kAudioCodecPropertySupportedOutputFormats'/>
<enum value='1969386854' name='kAudioCodecPropertyUsedInputBufferSize'/>
<enum value='1885430832' name='kAudioCodecPropertyZeroFramesPadded'/>
<enum value='96' name='kAudioCodecQuality_High'/>
<enum value='32' name='kAudioCodecQuality_Low'/>
<enum value='127' name='kAudioCodecQuality_Max'/>
<enum value='64' name='kAudioCodecQuality_Medium'/>
<enum value='0' name='kAudioCodecQuality_Min'/>
<enum value='8' name='kAudioCodecResetSelect'/>
<enum value='3' name='kAudioCodecSetPropertySelect'/>
<enum value='561214580' name='kAudioCodecStateError'/>
<enum value='5' name='kAudioCodecUninitializeSelect'/>
<enum value='2003332927' name='kAudioCodecUnknownPropertyError'/>
<enum value='2003329396' name='kAudioCodecUnspecifiedError'/>
<enum value='560226676' name='kAudioCodecUnsupportedFormatError'/>
<enum value='1970434930' name='kAudioCodecUseRecommendedSampleRate'/>
<enum value='2' name='kAudioComponentFlag_SandboxSafe'/>
<enum value='1' name='kAudioComponentFlag_Unsearchable'/>
<enum value='1633969507' name='kAudioDecoderComponentType'/>
<enum value='1634037347' name='kAudioEncoderComponentType'/>
<enum value='3020' name='kAudioOfflineUnitProperty_InputSize'/>
<enum value='3021' name='kAudioOfflineUnitProperty_OutputSize'/>
<enum value='128' name='kAudioOfflineUnitRenderAction_Complete'/>
<enum value='32' name='kAudioOfflineUnitRenderAction_Preflight'/>
<enum value='64' name='kAudioOfflineUnitRenderAction_Render'/>
<enum value='2002' name='kAudioOutputUnitProperty_ChannelMap'/>
<enum value='2000' name='kAudioOutputUnitProperty_CurrentDevice'/>
<enum value='2003' name='kAudioOutputUnitProperty_EnableIO'/>
<enum value='2006' name='kAudioOutputUnitProperty_HasIO'/>
<enum value='2001' name='kAudioOutputUnitProperty_IsRunning'/>
<enum value='2005' name='kAudioOutputUnitProperty_SetInputCallback'/>
<enum value='2004' name='kAudioOutputUnitProperty_StartTime'/>
<enum value='2007' name='kAudioOutputUnitProperty_StartTimestampsAtZero'/>
<enum value='512' name='kAudioOutputUnitRange'/>
<enum value='513' name='kAudioOutputUnitStartSelect'/>
<enum value='514' name='kAudioOutputUnitStopSelect'/>
<enum value='1' name='kAudioSettingsFlags_ExpertParameter'/>
<enum value='2' name='kAudioSettingsFlags_InvisibleParameter'/>
<enum value='4' name='kAudioSettingsFlags_MetaParameter'/>
<enum value='8' name='kAudioSettingsFlags_UserInterfaceParameter'/>
<enum value='10' name='kAudioUnitAddPropertyListenerSelect'/>
<enum value='15' name='kAudioUnitAddRenderNotifySelect'/>
<enum value='1635087991' name='kAudioUnitCarbonViewComponentType'/>
<enum value='769' name='kAudioUnitCarbonViewCreateSelect'/>
<enum value='0' name='kAudioUnitCarbonViewEvent_MouseDownInControl'/>
<enum value='1' name='kAudioUnitCarbonViewEvent_MouseUpInControl'/>
<enum value='768' name='kAudioUnitCarbonViewRange'/>
<enum value='770' name='kAudioUnitCarbonViewSetEventListenerSelect'/>
<enum value='0' name='kAudioUnitClumpID_System'/>
<enum value='19' name='kAudioUnitComplexRenderSelect'/>
<enum value='-10863' name='kAudioUnitErr_CannotDoInCurrentContext'/>
<enum value='-10875' name='kAudioUnitErr_FailedInitialization'/>
<enum value='-10869' name='kAudioUnitErr_FileNotSpecified'/>
<enum value='-10868' name='kAudioUnitErr_FormatNotSupported'/>
<enum value='-10873' name='kAudioUnitErr_IllegalInstrument'/>
<enum value='-10849' name='kAudioUnitErr_Initialized'/>
<enum value='-10872' name='kAudioUnitErr_InstrumentTypeNotFound'/>
<enum value='-10877' name='kAudioUnitErr_InvalidElement'/>
<enum value='-10871' name='kAudioUnitErr_InvalidFile'/>
<enum value='-10848' name='kAudioUnitErr_InvalidOfflineRender'/>
<enum value='-10878' name='kAudioUnitErr_InvalidParameter'/>
<enum value='-10879' name='kAudioUnitErr_InvalidProperty'/>
<enum value='-10851' name='kAudioUnitErr_InvalidPropertyValue'/>
<enum value='-10866' name='kAudioUnitErr_InvalidScope'/>
<enum value='-10876' name='kAudioUnitErr_NoConnection'/>
<enum value='-10850' name='kAudioUnitErr_PropertyNotInUse'/>
<enum value='-10865' name='kAudioUnitErr_PropertyNotWritable'/>
<enum value='-10874' name='kAudioUnitErr_TooManyFramesToProcess'/>
<enum value='-10847' name='kAudioUnitErr_Unauthorized'/>
<enum value='-10867' name='kAudioUnitErr_Uninitialized'/>
<enum value='-10870' name='kAudioUnitErr_UnknownFileType'/>
<enum value='6' name='kAudioUnitGetParameterSelect'/>
<enum value='3' name='kAudioUnitGetPropertyInfoSelect'/>
<enum value='4' name='kAudioUnitGetPropertySelect'/>
<enum value='1' name='kAudioUnitInitializeSelect'/>
<enum value='1634758764' name='kAudioUnitManufacturer_Apple'/>
<enum value='4000' name='kAudioUnitMigrateProperty_FromPlugin'/>
<enum value='4001' name='kAudioUnitMigrateProperty_OldAutomation'/>
<enum value='3020' name='kAudioUnitOfflineProperty_InputSize'/>
<enum value='3021' name='kAudioUnitOfflineProperty_OutputSize'/>
<enum value='3024' name='kAudioUnitOfflineProperty_PreflightName'/>
<enum value='3023' name='kAudioUnitOfflineProperty_PreflightRequirements'/>
<enum value='3022' name='kAudioUnitOfflineProperty_StartOffset'/>
<enum value='16' name='kAudioUnitParameterFlag_CFNameRelease'/>
<enum value='33554432' name='kAudioUnitParameterFlag_CanRamp'/>
<enum value='262144' name='kAudioUnitParameterFlag_DisplayCubeRoot'/>
<enum value='196608' name='kAudioUnitParameterFlag_DisplayCubed'/>
<enum value='327680' name='kAudioUnitParameterFlag_DisplayExponential'/>
<enum value='4194304' name='kAudioUnitParameterFlag_DisplayLogarithmic'/>
<enum value='4653056' name='kAudioUnitParameterFlag_DisplayMask'/>
<enum value='65536' name='kAudioUnitParameterFlag_DisplaySquareRoot'/>
<enum value='131072' name='kAudioUnitParameterFlag_DisplaySquared'/>
<enum value='67108864' name='kAudioUnitParameterFlag_ExpertMode'/>
<enum value='1' name='kAudioUnitParameterFlag_Global'/>
<enum value='8' name='kAudioUnitParameterFlag_Group'/>
<enum value='134217728' name='kAudioUnitParameterFlag_HasCFNameString'/>
<enum value='1048576' name='kAudioUnitParameterFlag_HasClump'/>
<enum value='2097152' name='kAudioUnitParameterFlag_HasName'/>
<enum value='2' name='kAudioUnitParameterFlag_Input'/>
<enum value='536870912' name='kAudioUnitParameterFlag_IsElementMeta'/>
<enum value='268435456' name='kAudioUnitParameterFlag_IsGlobalMeta'/>
<enum value='8388608' name='kAudioUnitParameterFlag_IsHighResolution'/>
<enum value='1073741824' name='kAudioUnitParameterFlag_IsReadable'/>
<enum value='-2147483648' value64='2147483648' name='kAudioUnitParameterFlag_IsWritable'/>
<enum value='32768' name='kAudioUnitParameterFlag_MeterReadOnly'/>
<enum value='16777216' name='kAudioUnitParameterFlag_NonRealTime'/>
<enum value='4' name='kAudioUnitParameterFlag_Output'/>
<enum value='16384' name='kAudioUnitParameterFlag_PlotHistory'/>
<enum value='2097152' name='kAudioUnitParameterFlag_ValuesHaveStrings'/>
<enum value='-1' name='kAudioUnitParameterName_Full'/>
<enum value='20' name='kAudioUnitParameterUnit_AbsoluteCents'/>
<enum value='22' name='kAudioUnitParameterUnit_BPM'/>
<enum value='23' name='kAudioUnitParameterUnit_Beats'/>
<enum value='2' name='kAudioUnitParameterUnit_Boolean'/>
<enum value='9' name='kAudioUnitParameterUnit_Cents'/>
<enum value='26' name='kAudioUnitParameterUnit_CustomUnit'/>
<enum value='13' name='kAudioUnitParameterUnit_Decibels'/>
<enum value='15' name='kAudioUnitParameterUnit_Degrees'/>
<enum value='16' name='kAudioUnitParameterUnit_EqualPowerCrossfade'/>
<enum value='0' name='kAudioUnitParameterUnit_Generic'/>
<enum value='8' name='kAudioUnitParameterUnit_Hertz'/>
<enum value='1' name='kAudioUnitParameterUnit_Indexed'/>
<enum value='14' name='kAudioUnitParameterUnit_LinearGain'/>
<enum value='12' name='kAudioUnitParameterUnit_MIDIController'/>
<enum value='11' name='kAudioUnitParameterUnit_MIDINoteNumber'/>
<enum value='19' name='kAudioUnitParameterUnit_Meters'/>
<enum value='24' name='kAudioUnitParameterUnit_Milliseconds'/>
<enum value='17' name='kAudioUnitParameterUnit_MixerFaderCurve1'/>
<enum value='21' name='kAudioUnitParameterUnit_Octaves'/>
<enum value='18' name='kAudioUnitParameterUnit_Pan'/>
<enum value='3' name='kAudioUnitParameterUnit_Percent'/>
<enum value='6' name='kAudioUnitParameterUnit_Phase'/>
<enum value='7' name='kAudioUnitParameterUnit_Rate'/>
<enum value='25' name='kAudioUnitParameterUnit_Ratio'/>
<enum value='10' name='kAudioUnitParameterUnit_RelativeSemiTones'/>
<enum value='5' name='kAudioUnitParameterUnit_SampleFrames'/>
<enum value='4' name='kAudioUnitParameterUnit_Seconds'/>
<enum value='21' name='kAudioUnitProcessMultipleSelect'/>
<enum value='20' name='kAudioUnitProcessSelect'/>
<enum value='3013' name='kAudioUnitProperty_3DMixerAttenuationCurve'/>
<enum value='3004' name='kAudioUnitProperty_3DMixerDistanceAtten'/>
<enum value='3010' name='kAudioUnitProperty_3DMixerDistanceParams'/>
<enum value='3003' name='kAudioUnitProperty_3DMixerRenderingFlags'/>
<enum value='46' name='kAudioUnitProperty_AUHostIdentifier'/>
<enum value='42' name='kAudioUnitProperty_AddParameterMIDIMapping'/>
<enum value='41' name='kAudioUnitProperty_AllParameterMIDIMappings'/>
<enum value='19' name='kAudioUnitProperty_AudioChannelLayout'/>
<enum value='11' name='kAudioUnitProperty_BusCount'/>
<enum value='21' name='kAudioUnitProperty_BypassEffect'/>
<enum value='6' name='kAudioUnitProperty_CPULoad'/>
<enum value='0' name='kAudioUnitProperty_ClassInfo'/>
<enum value='50' name='kAudioUnitProperty_ClassInfoFromDocument'/>
<enum value='31' name='kAudioUnitProperty_CocoaUI'/>
<enum value='25' name='kAudioUnitProperty_ContextName'/>
<enum value='3302' name='kAudioUnitProperty_CurrentPlayTime'/>
<enum value='28' name='kAudioUnitProperty_CurrentPreset'/>
<enum value='3321' name='kAudioUnitProperty_DeferredRendererExtraLatency'/>
<enum value='3320' name='kAudioUnitProperty_DeferredRendererPullSize'/>
<enum value='3322' name='kAudioUnitProperty_DeferredRendererWaitFrames'/>
<enum value='45' name='kAudioUnitProperty_DependentParameters'/>
<enum value='3600' name='kAudioUnitProperty_DistanceAttenuationData'/>
<enum value='3002' name='kAudioUnitProperty_DopplerShift'/>
<enum value='11' name='kAudioUnitProperty_ElementCount'/>
<enum value='30' name='kAudioUnitProperty_ElementName'/>
<enum value='24' name='kAudioUnitProperty_FactoryPresets'/>
<enum value='5' name='kAudioUnitProperty_FastDispatch'/>
<enum value='52' name='kAudioUnitProperty_FrequencyResponse'/>
<enum value='18' name='kAudioUnitProperty_GetUIComponentList'/>
<enum value='27' name='kAudioUnitProperty_HostCallbacks'/>
<enum value='44' name='kAudioUnitProperty_HotMapParameterMIDIMapping'/>
<enum value='39' name='kAudioUnitProperty_IconLocation'/>
<enum value='29' name='kAudioUnitProperty_InPlaceProcessing'/>
<enum value='49' name='kAudioUnitProperty_InputSamplesInOutput'/>
<enum value='22' name='kAudioUnitProperty_LastRenderError'/>
<enum value='12' name='kAudioUnitProperty_Latency'/>
<enum value='17' name='kAudioUnitProperty_MIDIControlMapping'/>
<enum value='48' name='kAudioUnitProperty_MIDIOutputCallback'/>
<enum value='47' name='kAudioUnitProperty_MIDIOutputCallbackInfo'/>
<enum value='1' name='kAudioUnitProperty_MakeConnection'/>
<enum value='3009' name='kAudioUnitProperty_MatrixDimensions'/>
<enum value='3006' name='kAudioUnitProperty_MatrixLevels'/>
<enum value='14' name='kAudioUnitProperty_MaximumFramesPerSlice'/>
<enum value='3011' name='kAudioUnitProperty_MeterClipping'/>
<enum value='3007' name='kAudioUnitProperty_MeteringMode'/>
<enum value='37' name='kAudioUnitProperty_OfflineRender'/>
<enum value='3008' name='kAudioUnitProperty_PannerMode'/>
<enum value='35' name='kAudioUnitProperty_ParameterClumpName'/>
<enum value='53' name='kAudioUnitProperty_ParameterHistoryInfo'/>
<enum value='34' name='kAudioUnitProperty_ParameterIDName'/>
<enum value='4' name='kAudioUnitProperty_ParameterInfo'/>
<enum value='3' name='kAudioUnitProperty_ParameterList'/>
<enum value='33' name='kAudioUnitProperty_ParameterStringFromValue'/>
<enum value='38' name='kAudioUnitProperty_ParameterValueFromString'/>
<enum value='33' name='kAudioUnitProperty_ParameterValueName'/>
<enum value='16' name='kAudioUnitProperty_ParameterValueStrings'/>
<enum value='36' name='kAudioUnitProperty_PresentPreset'/>
<enum value='40' name='kAudioUnitProperty_PresentationLatency'/>
<enum value='43' name='kAudioUnitProperty_RemoveParameterMIDIMapping'/>
<enum value='26' name='kAudioUnitProperty_RenderQuality'/>
<enum value='3012' name='kAudioUnitProperty_ReverbPreset'/>
<enum value='10' name='kAudioUnitProperty_ReverbRoomType'/>
<enum value='9' name='kAudioUnitProperty_SRCAlgorithm'/>
<enum value='2' name='kAudioUnitProperty_SampleRate'/>
<enum value='3014' name='kAudioUnitProperty_SampleRateConverterComplexity'/>
<enum value='3300' name='kAudioUnitProperty_ScheduleAudioSlice'/>
<enum value='3301' name='kAudioUnitProperty_ScheduleStartTimeStamp'/>
<enum value='3313' name='kAudioUnitProperty_ScheduledFileBufferSizeFrames'/>
<enum value='3310' name='kAudioUnitProperty_ScheduledFileIDs'/>
<enum value='3314' name='kAudioUnitProperty_ScheduledFileNumberBuffers'/>
<enum value='3312' name='kAudioUnitProperty_ScheduledFilePrime'/>
<enum value='3311' name='kAudioUnitProperty_ScheduledFileRegion'/>
<enum value='15' name='kAudioUnitProperty_SetExternalBuffer'/>
<enum value='23' name='kAudioUnitProperty_SetRenderCallback'/>
<enum value='51' name='kAudioUnitProperty_ShouldAllocateBuffer'/>
<enum value='3000' name='kAudioUnitProperty_SpatializationAlgorithm'/>
<enum value='3001' name='kAudioUnitProperty_SpeakerConfiguration'/>
<enum value='8' name='kAudioUnitProperty_StreamFormat'/>
<enum value='32' name='kAudioUnitProperty_SupportedChannelLayoutTags'/>
<enum value='13' name='kAudioUnitProperty_SupportedNumChannels'/>
<enum value='20' name='kAudioUnitProperty_TailTime'/>
<enum value='1005' name='kAudioUnitProperty_UsesInternalReverb'/>
<enum value='0' name='kAudioUnitRange'/>
<enum value='11' name='kAudioUnitRemovePropertyListenerSelect'/>
<enum value='18' name='kAudioUnitRemovePropertyListenerWithUserDataSelect'/>
<enum value='16' name='kAudioUnitRemoveRenderNotifySelect'/>
<enum value='512' name='kAudioUnitRenderAction_DoNotCheckRenderArgs'/>
<enum value='16' name='kAudioUnitRenderAction_OutputIsSilence'/>
<enum value='8' name='kAudioUnitRenderAction_PostRender'/>
<enum value='256' name='kAudioUnitRenderAction_PostRenderError'/>
<enum value='4' name='kAudioUnitRenderAction_PreRender'/>
<enum value='14' name='kAudioUnitRenderSelect'/>
<enum value='9' name='kAudioUnitResetSelect'/>
<enum value='1668510307' name='kAudioUnitSRCAlgorithm_MediumQuality'/>
<enum value='1886350457' name='kAudioUnitSRCAlgorithm_Polyphase'/>
<enum value='1818848869' name='kAudioUnitSampleRateConverterComplexity_Linear'/>
<enum value='1650553971' name='kAudioUnitSampleRateConverterComplexity_Mastering'/>
<enum value='1852797549' name='kAudioUnitSampleRateConverterComplexity_Normal'/>
<enum value='17' name='kAudioUnitScheduleParametersSelect'/>
<enum value='0' name='kAudioUnitScope_Global'/>
<enum value='3' name='kAudioUnitScope_Group'/>
<enum value='1' name='kAudioUnitScope_Input'/>
<enum value='6' name='kAudioUnitScope_Layer'/>
<enum value='7' name='kAudioUnitScope_LayerItem'/>
<enum value='5' name='kAudioUnitScope_Note'/>
<enum value='2' name='kAudioUnitScope_Output'/>
<enum value='4' name='kAudioUnitScope_Part'/>
<enum value='7' name='kAudioUnitSetParameterSelect'/>
<enum value='5' name='kAudioUnitSetPropertySelect'/>
<enum value='862219640' name='kAudioUnitSubType_3DMixer'/>
<enum value='1668247158' name='kAudioUnitSubType_AUConverter'/>
<enum value='1718185076' name='kAudioUnitSubType_AUFilter'/>
<enum value='1634103404' name='kAudioUnitSubType_AudioFilePlayer'/>
<enum value='1651532147' name='kAudioUnitSubType_BandPassFilter'/>
<enum value='1684828960' name='kAudioUnitSubType_DLSSynth'/>
<enum value='1684366880' name='kAudioUnitSubType_DefaultOutput'/>
<enum value='1684366962' name='kAudioUnitSubType_DeferredRenderer'/>
<enum value='1684368505' name='kAudioUnitSubType_Delay'/>
<enum value='1684632436' name='kAudioUnitSubType_Distortion'/>
<enum value='1684237680' name='kAudioUnitSubType_DynamicsProcessor'/>
<enum value='1734700658' name='kAudioUnitSubType_GenericOutput'/>
<enum value='1735550321' name='kAudioUnitSubType_GraphicEQ'/>
<enum value='1634230636' name='kAudioUnitSubType_HALOutput'/>
<enum value='1752331366' name='kAudioUnitSubType_HRTFPanner'/>
<enum value='1752195443' name='kAudioUnitSubType_HighPassFilter'/>
<enum value='1752393830' name='kAudioUnitSubType_HighShelfFilter'/>
<enum value='1819304307' name='kAudioUnitSubType_LowPassFilter'/>
<enum value='1819502694' name='kAudioUnitSubType_LowShelfFilter'/>
<enum value='1836608888' name='kAudioUnitSubType_MatrixMixer'/>
<enum value='1836213622' name='kAudioUnitSubType_MatrixReverb'/>
<enum value='1835364967' name='kAudioUnitSubType_Merger'/>
<enum value='1835232624' name='kAudioUnitSubType_MultiBandCompressor'/>
<enum value='1835232632' name='kAudioUnitSubType_MultiChannelMixer'/>
<enum value='1852990326' name='kAudioUnitSubType_NetReceive'/>
<enum value='1853058660' name='kAudioUnitSubType_NetSend'/>
<enum value='1853191280' name='kAudioUnitSubType_NewTimePitch'/>
<enum value='1886217585' name='kAudioUnitSubType_ParametricEQ'/>
<enum value='1819112562' name='kAudioUnitSubType_PeakLimiter'/>
<enum value='1953329268' name='kAudioUnitSubType_Pitch'/>
<enum value='1919903602' name='kAudioUnitSubType_RogerBeep'/>
<enum value='1918984547' name='kAudioUnitSubType_RoundTripAAC'/>
<enum value='1935961209' name='kAudioUnitSubType_SampleDelay'/>
<enum value='1935764848' name='kAudioUnitSubType_Sampler'/>
<enum value='1936945260' name='kAudioUnitSubType_ScheduledSoundPlayer'/>
<enum value='1634558569' name='kAudioUnitSubType_SoundFieldPanner'/>
<enum value='1936746610' name='kAudioUnitSubType_SphericalHeadPanner'/>
<enum value='1936747636' name='kAudioUnitSubType_Splitter'/>
<enum value='1936554098' name='kAudioUnitSubType_StereoMixer'/>
<enum value='1937339168' name='kAudioUnitSubType_SystemOutput'/>
<enum value='1953329268' name='kAudioUnitSubType_TimePitch'/>
<enum value='1986097769' name='kAudioUnitSubType_Varispeed'/>
<enum value='1986158963' name='kAudioUnitSubType_VectorPanner'/>
<enum value='1987078511' name='kAudioUnitSubType_VoiceProcessingIO'/>
<enum value='1635083896' name='kAudioUnitType_Effect'/>
<enum value='1635083875' name='kAudioUnitType_FormatConverter'/>
<enum value='1635084142' name='kAudioUnitType_Generator'/>
<enum value='1635085688' name='kAudioUnitType_Mixer'/>
<enum value='1635085685' name='kAudioUnitType_MusicDevice'/>
<enum value='1635085670' name='kAudioUnitType_MusicEffect'/>
<enum value='1635086188' name='kAudioUnitType_OfflineEffect'/>
<enum value='1635086197' name='kAudioUnitType_Output'/>
<enum value='1635086446' name='kAudioUnitType_Panner'/>
<enum value='2' name='kAudioUnitUninitializeSelect'/>
<enum value='1633903715' name='kAudioUnityCodecComponentType'/>
<enum value='1' name='kBandpassParam_Bandwidth'/>
<enum value='0' name='kBandpassParam_CenterFrequency'/>
<enum value='1' name='kDelayParam_DelayTime'/>
<enum value='2' name='kDelayParam_Feedback'/>
<enum value='3' name='kDelayParam_LopassCutoff'/>
<enum value='0' name='kDelayParam_WetDryMix'/>
<enum value='8' name='kDistortionParam_CubicTerm'/>
<enum value='1' name='kDistortionParam_Decay'/>
<enum value='3' name='kDistortionParam_Decimation'/>
<enum value='5' name='kDistortionParam_DecimationMix'/>
<enum value='0' name='kDistortionParam_Delay'/>
<enum value='2' name='kDistortionParam_DelayMix'/>
<enum value='15' name='kDistortionParam_FinalMix'/>
<enum value='6' name='kDistortionParam_LinearTerm'/>
<enum value='9' name='kDistortionParam_PolynomialMix'/>
<enum value='12' name='kDistortionParam_RingModBalance'/>
<enum value='10' name='kDistortionParam_RingModFreq1'/>
<enum value='11' name='kDistortionParam_RingModFreq2'/>
<enum value='13' name='kDistortionParam_RingModMix'/>
<enum value='4' name='kDistortionParam_Rounding'/>
<enum value='14' name='kDistortionParam_SoftClipGain'/>
<enum value='7' name='kDistortionParam_SquaredTerm'/>
<enum value='4' name='kDynamicsProcessorParam_AttackTime'/>
<enum value='1000' name='kDynamicsProcessorParam_CompressionAmount'/>
<enum value='2' name='kDynamicsProcessorParam_ExpansionRatio'/>
<enum value='3' name='kDynamicsProcessorParam_ExpansionThreshold'/>
<enum value='1' name='kDynamicsProcessorParam_HeadRoom'/>
<enum value='2000' name='kDynamicsProcessorParam_InputAmplitude'/>
<enum value='6' name='kDynamicsProcessorParam_MasterGain'/>
<enum value='3000' name='kDynamicsProcessorParam_OutputAmplitude'/>
<enum value='5' name='kDynamicsProcessorParam_ReleaseTime'/>
<enum value='0' name='kDynamicsProcessorParam_Threshold'/>
<enum value='10000' name='kGraphicEQParam_NumberOfBands'/>
<enum value='14' name='kHALOutputParam_Volume'/>
<enum value='0' name='kHighShelfParam_CutOffFrequency'/>
<enum value='1' name='kHighShelfParam_Gain'/>
<enum value='1' name='kHintAdvanced'/>
<enum value='0' name='kHintBasic'/>
<enum value='2' name='kHintHidden'/>
<enum value='0' name='kHipassParam_CutoffFrequency'/>
<enum value='1' name='kHipassParam_Resonance'/>
<enum value='2' name='kInstrumentType_AUPreset'/>
<enum value='3' name='kInstrumentType_Audiofile'/>
<enum value='1' name='kInstrumentType_DLSPreset'/>
<enum value='4' name='kInstrumentType_EXS24'/>
<enum value='1' name='kInstrumentType_SF2Preset'/>
<enum value='0' name='kLimiterParam_AttackTime'/>
<enum value='1' name='kLimiterParam_DecayTime'/>
<enum value='2' name='kLimiterParam_PreGain'/>
<enum value='4' name='kLogicAUNodeOperationMode_EndianSwap'/>
<enum value='7' name='kLogicAUNodeOperationMode_FullSupport'/>
<enum value='1' name='kLogicAUNodeOperationMode_NodeEnabled'/>
<enum value='2' name='kLogicAUNodeOperationMode_RemoteUI'/>
<enum value='1' name='kLogicAUNodePropertyEndianMode_All32Bits'/>
<enum value='2' name='kLogicAUNodePropertyEndianMode_All64Bits'/>
<enum value='0' name='kLogicAUNodePropertyEndianMode_DontTouch'/>
<enum value='3' name='kLogicAUNodePropertyEndianMode_SerializableCFType'/>
<enum value='4' name='kLogicAUNodePropertyFlag_FullRoundTrip'/>
<enum value='2' name='kLogicAUNodePropertyFlag_NeedsInitialization'/>
<enum value='1' name='kLogicAUNodePropertyFlag_Synchronous'/>
<enum value='9000' name='kLogicAUProperty_NodeOperationMode'/>
<enum value='9001' name='kLogicAUProperty_NodePropertyDescriptions'/>
<enum value='0' name='kLowPassParam_CutoffFrequency'/>
<enum value='1' name='kLowPassParam_Resonance'/>
<enum value='1' name='kMatrixMixerParam_Enable'/>
<enum value='3000' name='kMatrixMixerParam_PostAveragePower'/>
<enum value='7000' name='kMatrixMixerParam_PostAveragePowerLinear'/>
<enum value='4000' name='kMatrixMixerParam_PostPeakHoldLevel'/>
<enum value='8000' name='kMatrixMixerParam_PostPeakHoldLevelLinear'/>
<enum value='1000' name='kMatrixMixerParam_PreAveragePower'/>
<enum value='5000' name='kMatrixMixerParam_PreAveragePowerLinear'/>
<enum value='2000' name='kMatrixMixerParam_PrePeakHoldLevel'/>
<enum value='6000' name='kMatrixMixerParam_PrePeakHoldLevelLinear'/>
<enum value='0' name='kMatrixMixerParam_Volume'/>
<enum value='1' name='kMultiChannelMixerParam_Enable'/>
<enum value='2' name='kMultiChannelMixerParam_Pan'/>
<enum value='3000' name='kMultiChannelMixerParam_PostAveragePower'/>
<enum value='4000' name='kMultiChannelMixerParam_PostPeakHoldLevel'/>
<enum value='1000' name='kMultiChannelMixerParam_PreAveragePower'/>
<enum value='2000' name='kMultiChannelMixerParam_PrePeakHoldLevel'/>
<enum value='0' name='kMultiChannelMixerParam_Volume'/>
<enum value='13' name='kMultibandCompressorParam_AttackTime'/>
<enum value='1000' name='kMultibandCompressorParam_CompressionAmount1'/>
<enum value='2000' name='kMultibandCompressorParam_CompressionAmount2'/>
<enum value='3000' name='kMultibandCompressorParam_CompressionAmount3'/>
<enum value='4000' name='kMultibandCompressorParam_CompressionAmount4'/>
<enum value='2' name='kMultibandCompressorParam_Crossover1'/>
<enum value='3' name='kMultibandCompressorParam_Crossover2'/>
<enum value='4' name='kMultibandCompressorParam_Crossover3'/>
<enum value='15' name='kMultibandCompressorParam_EQ1'/>
<enum value='16' name='kMultibandCompressorParam_EQ2'/>
<enum value='17' name='kMultibandCompressorParam_EQ3'/>
<enum value='18' name='kMultibandCompressorParam_EQ4'/>
<enum value='9' name='kMultibandCompressorParam_Headroom1'/>
<enum value='10' name='kMultibandCompressorParam_Headroom2'/>
<enum value='11' name='kMultibandCompressorParam_Headroom3'/>
<enum value='12' name='kMultibandCompressorParam_Headroom4'/>
<enum value='5000' name='kMultibandCompressorParam_InputAmplitude1'/>
<enum value='6000' name='kMultibandCompressorParam_InputAmplitude2'/>
<enum value='7000' name='kMultibandCompressorParam_InputAmplitude3'/>
<enum value='8000' name='kMultibandCompressorParam_InputAmplitude4'/>
<enum value='9000' name='kMultibandCompressorParam_OutputAmplitude1'/>
<enum value='10000' name='kMultibandCompressorParam_OutputAmplitude2'/>
<enum value='11000' name='kMultibandCompressorParam_OutputAmplitude3'/>
<enum value='12000' name='kMultibandCompressorParam_OutputAmplitude4'/>
<enum value='1' name='kMultibandCompressorParam_Postgain'/>
<enum value='0' name='kMultibandCompressorParam_Pregain'/>
<enum value='14' name='kMultibandCompressorParam_ReleaseTime'/>
<enum value='5' name='kMultibandCompressorParam_Threshold1'/>
<enum value='6' name='kMultibandCompressorParam_Threshold2'/>
<enum value='7' name='kMultibandCompressorParam_Threshold3'/>
<enum value='8' name='kMultibandCompressorParam_Threshold4'/>
<enum value='5' name='kMultibandFilter_Bandwidth1'/>
<enum value='8' name='kMultibandFilter_Bandwidth2'/>
<enum value='11' name='kMultibandFilter_Bandwidth3'/>
<enum value='3' name='kMultibandFilter_CenterFreq1'/>
<enum value='6' name='kMultibandFilter_CenterFreq2'/>
<enum value='9' name='kMultibandFilter_CenterFreq3'/>
<enum value='4' name='kMultibandFilter_CenterGain1'/>
<enum value='7' name='kMultibandFilter_CenterGain2'/>
<enum value='10' name='kMultibandFilter_CenterGain3'/>
<enum value='12' name='kMultibandFilter_HighFilterType'/>
<enum value='13' name='kMultibandFilter_HighFrequency'/>
<enum value='14' name='kMultibandFilter_HighGain'/>
<enum value='0' name='kMultibandFilter_LowFilterType'/>
<enum value='1' name='kMultibandFilter_LowFrequency'/>
<enum value='2' name='kMultibandFilter_LowGain'/>
<enum value='257' name='kMusicDeviceMIDIEventSelect'/>
<enum value='2' name='kMusicDeviceParam_ReverbVolume'/>
<enum value='0' name='kMusicDeviceParam_Tuning'/>
<enum value='1' name='kMusicDeviceParam_Volume'/>
<enum value='259' name='kMusicDevicePrepareInstrumentSelect'/>
<enum value='1007' name='kMusicDeviceProperty_BankName'/>
<enum value='1013' name='kMusicDeviceProperty_DualSchedulingMode'/>
<enum value='1002' name='kMusicDeviceProperty_GroupOutputBus'/>
<enum value='1000' name='kMusicDeviceProperty_InstrumentCount'/>
<enum value='1001' name='kMusicDeviceProperty_InstrumentName'/>
<enum value='1004' name='kMusicDeviceProperty_InstrumentNumber'/>
<enum value='1006' name='kMusicDeviceProperty_MIDIXMLNames'/>
<enum value='1010' name='kMusicDeviceProperty_PartGroup'/>
<enum value='1008' name='kMusicDeviceProperty_SoundBankData'/>
<enum value='1012' name='kMusicDeviceProperty_SoundBankFSRef'/>
<enum value='1003' name='kMusicDeviceProperty_SoundBankFSSpec'/>
<enum value='1100' name='kMusicDeviceProperty_SoundBankURL'/>
<enum value='1011' name='kMusicDeviceProperty_StreamFromDisk'/>
<enum value='1014' name='kMusicDeviceProperty_SupportsStartStopNote'/>
<enum value='1005' name='kMusicDeviceProperty_UsesInternalReverb'/>
<enum value='256' name='kMusicDeviceRange'/>
<enum value='260' name='kMusicDeviceReleaseInstrumentSelect'/>
<enum value='16777216' name='kMusicDeviceSampleFrameMask_IsScheduled'/>
<enum value='16777215' name='kMusicDeviceSampleFrameMask_SampleOffset'/>
<enum value='261' name='kMusicDeviceStartNoteSelect'/>
<enum value='262' name='kMusicDeviceStopNoteSelect'/>
<enum value='258' name='kMusicDeviceSysExSelect'/>
<enum value='4294967295' name='kMusicNoteEvent_Unused'/>
<enum value='4294967295' name='kMusicNoteEvent_UseGroupInstrument'/>
<enum value='6' name='kNewTimePitchParam_EnablePeakLocking'/>
<enum value='4' name='kNewTimePitchParam_Overlap'/>
<enum value='1' name='kNewTimePitchParam_Pitch'/>
<enum value='0' name='kNewTimePitchParam_Rate'/>
<enum value='1024' name='kNumberOfResponseFrequencies'/>
<enum value='0' name='kOfflinePreflight_NotRequired'/>
<enum value='1' name='kOfflinePreflight_Optional'/>
<enum value='2' name='kOfflinePreflight_Required'/>
<enum value='3' name='kOtherPluginFormat_AU'/>
<enum value='0' name='kOtherPluginFormat_Undefined'/>
<enum value='1' name='kOtherPluginFormat_kMAS'/>
<enum value='2' name='kOtherPluginFormat_kVST'/>
<enum value='1' name='kPannerParam_Azimuth'/>
<enum value='4' name='kPannerParam_CoordScale'/>
<enum value='3' name='kPannerParam_Distance'/>
<enum value='2' name='kPannerParam_Elevation'/>
<enum value='0' name='kPannerParam_Gain'/>
<enum value='5' name='kPannerParam_RefDistance'/>
<enum value='1' name='kParameterEvent_Immediate'/>
<enum value='2' name='kParameterEvent_Ramped'/>
<enum value='0' name='kParametricEQParam_CenterFreq'/>
<enum value='2' name='kParametricEQParam_Gain'/>
<enum value='1' name='kParametricEQParam_Q'/>
<enum value='96' name='kRenderQuality_High'/>
<enum value='32' name='kRenderQuality_Low'/>
<enum value='127' name='kRenderQuality_Max'/>
<enum value='64' name='kRenderQuality_Medium'/>
<enum value='0' name='kRenderQuality_Min'/>
<enum value='0' name='kReverbParam_DryWetMix'/>
<enum value='15' name='kReverbParam_FilterBandwidth'/>
<enum value='14' name='kReverbParam_FilterFrequency'/>
<enum value='16' name='kReverbParam_FilterGain'/>
<enum value='10' name='kReverbParam_LargeBrightness'/>
<enum value='5' name='kReverbParam_LargeDelay'/>
<enum value='8' name='kReverbParam_LargeDelayRange'/>
<enum value='7' name='kReverbParam_LargeDensity'/>
<enum value='3' name='kReverbParam_LargeSize'/>
<enum value='13' name='kReverbParam_ModulationDepth'/>
<enum value='12' name='kReverbParam_ModulationRate'/>
<enum value='4' name='kReverbParam_PreDelay'/>
<enum value='9' name='kReverbParam_SmallBrightness'/>
<enum value='11' name='kReverbParam_SmallDelayRange'/>
<enum value='6' name='kReverbParam_SmallDensity'/>
<enum value='1' name='kReverbParam_SmallLargeMix'/>
<enum value='2' name='kReverbParam_SmallSize'/>
<enum value='8' name='kReverbRoomType_Cathedral'/>
<enum value='7' name='kReverbRoomType_LargeChamber'/>
<enum value='4' name='kReverbRoomType_LargeHall'/>
<enum value='12' name='kReverbRoomType_LargeHall2'/>
<enum value='2' name='kReverbRoomType_LargeRoom'/>
<enum value='9' name='kReverbRoomType_LargeRoom2'/>
<enum value='6' name='kReverbRoomType_MediumChamber'/>
<enum value='3' name='kReverbRoomType_MediumHall'/>
<enum value='10' name='kReverbRoomType_MediumHall2'/>
<enum value='11' name='kReverbRoomType_MediumHall3'/>
<enum value='1' name='kReverbRoomType_MediumRoom'/>
<enum value='5' name='kReverbRoomType_Plate'/>
<enum value='0' name='kReverbRoomType_SmallRoom'/>
<enum value='0' name='kRogerBeepParam_InGateThreshold'/>
<enum value='1' name='kRogerBeepParam_InGateThresholdTime'/>
<enum value='2' name='kRogerBeepParam_OutGateThreshold'/>
<enum value='3' name='kRogerBeepParam_OutGateThresholdTime'/>
<enum value='6' name='kRogerBeepParam_RogerGain'/>
<enum value='5' name='kRogerBeepParam_RogerType'/>
<enum value='4' name='kRogerBeepParam_Sensitivity'/>
<enum value='1' name='kRoundTripAACParam_BitRate'/>
<enum value='3' name='kRoundTripAACParam_CompressedFormatSampleRate'/>
<enum value='1' name='kRoundTripAACParam_EncodingStrategy'/>
<enum value='0' name='kRoundTripAACParam_Format'/>
<enum value='2' name='kRoundTripAACParam_Quality'/>
<enum value='2' name='kRoundTripAACParam_RateOrQuality'/>
<enum value='2' name='kScheduledAudioSliceFlag_BeganToRender'/>
<enum value='4' name='kScheduledAudioSliceFlag_BeganToRenderLate'/>
<enum value='1' name='kScheduledAudioSliceFlag_Complete'/>
<enum value='0' name='kSpatializationAlgorithm_EqualPowerPanning'/>
<enum value='2' name='kSpatializationAlgorithm_HRTF'/>
<enum value='3' name='kSpatializationAlgorithm_SoundField'/>
<enum value='1' name='kSpatializationAlgorithm_SphericalHead'/>
<enum value='5' name='kSpatializationAlgorithm_StereoPassThrough'/>
<enum value='4' name='kSpatializationAlgorithm_VectorBasedPanning'/>
<enum value='3' name='kSpeakerConfiguration_5_0'/>
<enum value='3' name='kSpeakerConfiguration_5_1'/>
<enum value='0' name='kSpeakerConfiguration_HeadPhones'/>
<enum value='2' name='kSpeakerConfiguration_Quad'/>
<enum value='1' name='kSpeakerConfiguration_Stereo'/>
<enum value='1' name='kStereoMixerParam_Pan'/>
<enum value='3000' name='kStereoMixerParam_PostAveragePower'/>
<enum value='4000' name='kStereoMixerParam_PostPeakHoldLevel'/>
<enum value='1000' name='kStereoMixerParam_PreAveragePower'/>
<enum value='2000' name='kStereoMixerParam_PrePeakHoldLevel'/>
<enum value='0' name='kStereoMixerParam_Volume'/>
<enum value='2' name='kTimePitchParam_EffectBlend'/>
<enum value='1' name='kTimePitchParam_Pitch'/>
<enum value='0' name='kTimePitchParam_Rate'/>
<enum value='1' name='kVarispeedParam_PlaybackCents'/>
<enum value='0' name='kVarispeedParam_PlaybackRate'/>
<function name='AudioCodecAppendInputBufferList'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inCodec' declared_type='AudioCodec'/>
<arg const='true' type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}' name='inBufferList' declared_type='AudioBufferList*'/>
<arg type='^I' name='ioNumberPackets' declared_type='UInt32*'/>
<arg const='true' type='^{AudioStreamPacketDescription=qII}' name='inPacketDescription' declared_type='AudioStreamPacketDescription*'/>
<arg type='^I' name='outBytesConsumed' declared_type='UInt32*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioCodecAppendInputData'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inCodec' declared_type='AudioCodec'/>
<arg const='true' type='^v' name='inInputData' declared_type='void*'/>
<arg type='^I' name='ioInputDataByteSize' declared_type='UInt32*'/>
<arg type='^I' name='ioNumberPackets' declared_type='UInt32*'/>
<arg const='true' type='^{AudioStreamPacketDescription=qII}' name='inPacketDescription' declared_type='AudioStreamPacketDescription*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioCodecGetProperty'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inCodec' declared_type='AudioCodec'/>
<arg type64='I' type='L' name='inPropertyID' declared_type='AudioCodecPropertyID'/>
<arg type='^I' name='ioPropertyDataSize' declared_type='UInt32*'/>
<arg type='^v' name='outPropertyData' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioCodecGetPropertyInfo'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inCodec' declared_type='AudioCodec'/>
<arg type64='I' type='L' name='inPropertyID' declared_type='AudioCodecPropertyID'/>
<arg type='^I' name='outSize' declared_type='UInt32*'/>
<arg type='^B' name='outWritable' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioCodecInitialize'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inCodec' declared_type='AudioCodec'/>
<arg const='true' type='^{AudioStreamBasicDescription=dIIIIIIII}' name='inInputFormat' declared_type='AudioStreamBasicDescription*'/>
<arg const='true' type='^{AudioStreamBasicDescription=dIIIIIIII}' name='inOutputFormat' declared_type='AudioStreamBasicDescription*'/>
<arg const='true' type='^v' name='inMagicCookie' declared_type='void*'/>
<arg type64='I' type='L' name='inMagicCookieByteSize' declared_type='UInt32'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioCodecProduceOutputBufferList'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inCodec' declared_type='AudioCodec'/>
<arg type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}' name='ioBufferList' declared_type='AudioBufferList*'/>
<arg type='^I' name='ioNumberPackets' declared_type='UInt32*'/>
<arg type='^{AudioStreamPacketDescription=qII}' name='outPacketDescription' declared_type='AudioStreamPacketDescription*'/>
<arg type='^I' name='outStatus' declared_type='UInt32*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioCodecProduceOutputPackets'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inCodec' declared_type='AudioCodec'/>
<arg type='^v' name='outOutputData' declared_type='void*'/>
<arg type='^I' name='ioOutputDataByteSize' declared_type='UInt32*'/>
<arg type='^I' name='ioNumberPackets' declared_type='UInt32*'/>
<arg type='^{AudioStreamPacketDescription=qII}' name='outPacketDescription' declared_type='AudioStreamPacketDescription*'/>
<arg type='^I' name='outStatus' declared_type='UInt32*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioCodecReset'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inCodec' declared_type='AudioCodec'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioCodecSetProperty'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inCodec' declared_type='AudioCodec'/>
<arg type64='I' type='L' name='inPropertyID' declared_type='AudioCodecPropertyID'/>
<arg type64='I' type='L' name='inPropertyDataSize' declared_type='UInt32'/>
<arg const='true' type='^v' name='inPropertyData' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioCodecUninitialize'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inCodec' declared_type='AudioCodec'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioComponentCopyConfigurationInfo'>
<arg type='^{OpaqueAudioComponent=}' name='inComponent' declared_type='AudioComponent'/>
<arg type='^^{__CFDictionary}' name='outConfigurationInfo' declared_type='CFDictionaryRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioComponentCopyName'>
<arg type='^{OpaqueAudioComponent=}' name='inComponent' declared_type='AudioComponent'/>
<arg type='^^{__CFString}' name='outName' declared_type='CFStringRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioComponentCount'>
<arg const='true' type='^{AudioComponentDescription=IIIII}' name='inDesc' declared_type='AudioComponentDescription*'/>
<retval type64='I' type='L' declared_type='UInt32'/>
</function>
<function name='AudioComponentFindNext'>
<arg type='^{OpaqueAudioComponent=}' name='inComponent' declared_type='AudioComponent'/>
<arg const='true' type='^{AudioComponentDescription=IIIII}' name='inDesc' declared_type='AudioComponentDescription*'/>
<retval type='^{OpaqueAudioComponent=}' declared_type='AudioComponent'/>
</function>
<function name='AudioComponentGetDescription'>
<arg type='^{OpaqueAudioComponent=}' name='inComponent' declared_type='AudioComponent'/>
<arg type='^{AudioComponentDescription=IIIII}' name='outDesc' declared_type='AudioComponentDescription*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioComponentGetVersion'>
<arg type='^{OpaqueAudioComponent=}' name='inComponent' declared_type='AudioComponent'/>
<arg type='^I' name='outVersion' declared_type='UInt32*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioComponentInstanceCanDo'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inInstance' declared_type='AudioComponentInstance'/>
<arg type='s' name='inSelectorID' declared_type='SInt16'/>
<retval type='B' declared_type='Boolean'/>
</function>
<function name='AudioComponentInstanceDispose'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inInstance' declared_type='AudioComponentInstance'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioComponentInstanceGetComponent'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inInstance' declared_type='AudioComponentInstance'/>
<retval type='^{OpaqueAudioComponent=}' declared_type='AudioComponent'/>
</function>
<function name='AudioComponentInstanceNew'>
<arg type='^{OpaqueAudioComponent=}' name='inComponent' declared_type='AudioComponent'/>
<arg type='^^{ComponentInstanceRecord}' name='outInstance' declared_type='AudioComponentInstance*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioComponentRegister'>
<arg const='true' type='^{AudioComponentDescription=IIIII}' name='inDesc' declared_type='AudioComponentDescription*'/>
<arg type='^{__CFString=}' name='inName' declared_type='CFStringRef'/>
<arg type64='I' type='L' name='inVersion' declared_type='UInt32'/>
<arg type='^?' function_pointer='true' name='inFactory' declared_type='AudioComponentFactoryFunction'>
<arg const='true' type='^{AudioComponentDescription=IIIII}' declared_type='AudioComponentDescription*'/>
<retval type='^{AudioComponentPlugInInterface=^?^?^?^v}' declared_type='AudioComponentPlugInInterface*'/>
</arg>
<retval type='^{OpaqueAudioComponent=}' declared_type='AudioComponent'/>
</function>
<function name='AudioOutputUnitStart'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='ci' declared_type='AudioUnit'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioOutputUnitStop'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='ci' declared_type='AudioUnit'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitAddPropertyListener'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type64='I' type='L' name='inID' declared_type='AudioUnitPropertyID'/>
<arg type='^?' function_pointer='true' name='inProc' declared_type='AudioUnitPropertyListenerProc'>
<arg type='^v' declared_type='void*'/>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' declared_type='AudioUnit'/>
<arg type64='I' type='L' declared_type='AudioUnitPropertyID'/>
<arg type64='I' type='L' declared_type='AudioUnitScope'/>
<arg type64='I' type='L' declared_type='AudioUnitElement'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='^v' name='inProcUserData' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitAddRenderNotify'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type='^?' function_pointer='true' name='inProc' declared_type='AURenderCallback'>
<arg type='^v' declared_type='void*'/>
<arg type='^I' declared_type='AudioUnitRenderActionFlags*'/>
<arg const='true' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}' declared_type='AudioTimeStamp*'/>
<arg type64='I' type='L' declared_type='UInt32'/>
<arg type64='I' type='L' declared_type='UInt32'/>
<arg type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}' declared_type='AudioBufferList*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</arg>
<arg type='^v' name='inProcUserData' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitCarbonViewCreate'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inView' declared_type='AudioUnitCarbonView'/>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inAudioUnit' declared_type='AudioUnit'/>
<arg type='^{OpaqueWindowPtr=}' name='inWindow' declared_type='WindowRef'/>
<arg type='^{OpaqueControlRef=}' name='inParentControl' declared_type='ControlRef'/>
<arg const='true' type='^{Float32Point=ff}' name='inLocation' declared_type='Float32Point*'/>
<arg const='true' type='^{Float32Point=ff}' name='inSize' declared_type='Float32Point*'/>
<arg type='^^{OpaqueControlRef}' name='outControl' declared_type='ControlRef*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitGetParameter'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type64='I' type='L' name='inID' declared_type='AudioUnitParameterID'/>
<arg type64='I' type='L' name='inScope' declared_type='AudioUnitScope'/>
<arg type64='I' type='L' name='inElement' declared_type='AudioUnitElement'/>
<arg type='^f' name='outValue' declared_type='AudioUnitParameterValue*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitGetProperty'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type64='I' type='L' name='inID' declared_type='AudioUnitPropertyID'/>
<arg type64='I' type='L' name='inScope' declared_type='AudioUnitScope'/>
<arg type64='I' type='L' name='inElement' declared_type='AudioUnitElement'/>
<arg type='^v' name='outData' declared_type='void*'/>
<arg type='^I' name='ioDataSize' declared_type='UInt32*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitGetPropertyInfo'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type64='I' type='L' name='inID' declared_type='AudioUnitPropertyID'/>
<arg type64='I' type='L' name='inScope' declared_type='AudioUnitScope'/>
<arg type64='I' type='L' name='inElement' declared_type='AudioUnitElement'/>
<arg type='^I' name='outDataSize' declared_type='UInt32*'/>
<arg type='^B' name='outWritable' declared_type='Boolean*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitInitialize'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitProcess'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type='^I' name='ioActionFlags' declared_type='AudioUnitRenderActionFlags*'/>
<arg const='true' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}' name='inTimeStamp' declared_type='AudioTimeStamp*'/>
<arg type64='I' type='L' name='inNumberFrames' declared_type='UInt32'/>
<arg type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}' name='ioData' declared_type='AudioBufferList*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitProcessMultiple'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type='^I' name='ioActionFlags' declared_type='AudioUnitRenderActionFlags*'/>
<arg const='true' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}' name='inTimeStamp' declared_type='AudioTimeStamp*'/>
<arg type64='I' type='L' name='inNumberFrames' declared_type='UInt32'/>
<arg type64='I' type='L' name='inNumberInputBufferLists' declared_type='UInt32'/>
<arg const='true' type='^^{AudioBufferList}' name='inInputBufferLists' declared_type='AudioBufferList**'/>
<arg type64='I' type='L' name='inNumberOutputBufferLists' declared_type='UInt32'/>
<arg type='^^{AudioBufferList}' name='ioOutputBufferLists' declared_type='AudioBufferList**'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitRemovePropertyListenerWithUserData'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type64='I' type='L' name='inID' declared_type='AudioUnitPropertyID'/>
<arg type='^?' function_pointer='true' name='inProc' declared_type='AudioUnitPropertyListenerProc'>
<arg type='^v' declared_type='void*'/>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' declared_type='AudioUnit'/>
<arg type64='I' type='L' declared_type='AudioUnitPropertyID'/>
<arg type64='I' type='L' declared_type='AudioUnitScope'/>
<arg type64='I' type='L' declared_type='AudioUnitElement'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='^v' name='inProcUserData' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitRemoveRenderNotify'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type='^?' function_pointer='true' name='inProc' declared_type='AURenderCallback'>
<arg type='^v' declared_type='void*'/>
<arg type='^I' declared_type='AudioUnitRenderActionFlags*'/>
<arg const='true' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}' declared_type='AudioTimeStamp*'/>
<arg type64='I' type='L' declared_type='UInt32'/>
<arg type64='I' type='L' declared_type='UInt32'/>
<arg type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}' declared_type='AudioBufferList*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</arg>
<arg type='^v' name='inProcUserData' declared_type='void*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitRender'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type='^I' name='ioActionFlags' declared_type='AudioUnitRenderActionFlags*'/>
<arg const='true' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}' name='inTimeStamp' declared_type='AudioTimeStamp*'/>
<arg type64='I' type='L' name='inOutputBusNumber' declared_type='UInt32'/>
<arg type64='I' type='L' name='inNumberFrames' declared_type='UInt32'/>
<arg type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}' name='ioData' declared_type='AudioBufferList*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitReset'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type64='I' type='L' name='inScope' declared_type='AudioUnitScope'/>
<arg type64='I' type='L' name='inElement' declared_type='AudioUnitElement'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitScheduleParameters'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg const='true' type='^{AudioUnitParameterEvent=IIII(?={?=iIff}{?=If})}' name='inParameterEvent' declared_type='AudioUnitParameterEvent*'/>
<arg type64='I' type='L' name='inNumParamEvents' declared_type='UInt32'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitSetParameter'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type64='I' type='L' name='inID' declared_type='AudioUnitParameterID'/>
<arg type64='I' type='L' name='inScope' declared_type='AudioUnitScope'/>
<arg type64='I' type='L' name='inElement' declared_type='AudioUnitElement'/>
<arg type='f' name='inValue' declared_type='AudioUnitParameterValue'/>
<arg type64='I' type='L' name='inBufferOffsetInFrames' declared_type='UInt32'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitSetProperty'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<arg type64='I' type='L' name='inID' declared_type='AudioUnitPropertyID'/>
<arg type64='I' type='L' name='inScope' declared_type='AudioUnitScope'/>
<arg type64='I' type='L' name='inElement' declared_type='AudioUnitElement'/>
<arg const='true' type='^v' name='inData' declared_type='void*'/>
<arg type64='I' type='L' name='inDataSize' declared_type='UInt32'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='AudioUnitUninitialize'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='AudioUnit'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='MusicDeviceMIDIEvent'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='MusicDeviceComponent'/>
<arg type64='I' type='L' name='inStatus' declared_type='UInt32'/>
<arg type64='I' type='L' name='inData1' declared_type='UInt32'/>
<arg type64='I' type='L' name='inData2' declared_type='UInt32'/>
<arg type64='I' type='L' name='inOffsetSampleFrame' declared_type='UInt32'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='MusicDevicePrepareInstrument'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='MusicDeviceComponent'/>
<arg type64='I' type='L' name='inInstrument' declared_type='MusicDeviceInstrumentID'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='MusicDeviceReleaseInstrument'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='MusicDeviceComponent'/>
<arg type64='I' type='L' name='inInstrument' declared_type='MusicDeviceInstrumentID'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='MusicDeviceStartNote'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='MusicDeviceComponent'/>
<arg type64='I' type='L' name='inInstrument' declared_type='MusicDeviceInstrumentID'/>
<arg type64='I' type='L' name='inGroupID' declared_type='MusicDeviceGroupID'/>
<arg type='^I' name='outNoteInstanceID' declared_type='NoteInstanceID*'/>
<arg type64='I' type='L' name='inOffsetSampleFrame' declared_type='UInt32'/>
<arg const='true' type='^{MusicDeviceNoteParams=Iff[1{NoteParamsControlValue=If}]}' name='inParams' declared_type='MusicDeviceNoteParams*'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='MusicDeviceStopNote'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='MusicDeviceComponent'/>
<arg type64='I' type='L' name='inGroupID' declared_type='MusicDeviceGroupID'/>
<arg type64='I' type='L' name='inNoteInstanceID' declared_type='NoteInstanceID'/>
<arg type64='I' type='L' name='inOffsetSampleFrame' declared_type='UInt32'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<function name='MusicDeviceSysEx'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' name='inUnit' declared_type='MusicDeviceComponent'/>
<arg const='true' type='*' name='inData' declared_type='UInt8*'/>
<arg type64='I' type='L' name='inLength' declared_type='UInt32'/>
<retval type64='i' type='l' declared_type='OSStatus'/>
</function>
<class name='NSObject'>
<method selector='interfaceVersion'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='uiViewForAudioUnit:withSize:'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' index='0' name='inAudioUnit' declared_type='AudioUnit'/>
<arg type64='{CGSize=dd}' type='{_NSSize=ff}' index='1' name='inPreferredSize' declared_type='NSSize'/>
<retval type='@' declared_type='NSView*'/>
</method>
</class>
<informal_protocol name='AUCocoaUIBase'>
<method type64='I16@0:8' selector='interfaceVersion' type='I8@0:4'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method type64='@40@0:8^{ComponentInstanceRecord=[1q]}16{CGSize=dd}24' selector='uiViewForAudioUnit:withSize:' type='@20@0:4^{ComponentInstanceRecord=[1l]}8{_NSSize=ff}12'>
<arg type64='^{ComponentInstanceRecord=[1q]}' type='^{ComponentInstanceRecord=[1l]}' index='0' name='inAudioUnit' declared_type='AudioUnit'/>
<arg type64='{CGSize=dd}' type='{_NSSize=ff}' index='1' name='inPreferredSize' declared_type='NSSize'/>
<retval type='@' declared_type='NSView*'/>
</method>
</informal_protocol>
</signatures>
