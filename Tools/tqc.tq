\ Tranquil compiler
import "CoreFoundation"

inPath         = nil
outPath        = "a.out"
runtimeLibPath = "/usr/local/tranquil/lib/libtranquil.a"
ldFlags        = ["-all_load", "-framework", "AppKit", "-lobjc", "-lffi", runtimeLibPath]

args = ... objectEnumerator
while arg = args nextObject {
    if arg == "-o"
        outPath = args nextObject
    else if inPath == nil
        inPath = arg
    else
        ldFlags << arg
}

unless inPath != nil {
    "No input provided" print
    Exit(1)
}

uuid = `CFUUIDCreateString(nil, CFUUIDCreate(nil))`

irPath = "/tmp/#{uuid()}.bc"
compilationTask = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/bin/tranquil"
                                          arguments: ["-aot", "-o", irPath, inPath];
                                      waitUntilExit;
                                               self

if compilationTask terminationStatus != 0
    Exit(1)

asmPath = "/tmp/#{uuid()}.s"
assemblingTask = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/llvm/bin/llc"
                                         arguments: ["-O3", "-o", asmPath, irPath];
                                     waitUntilExit;
                                              self
if assemblingTask terminationStatus != 0
    Exit(1)

linkingTask = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/llvm/bin/clang"
                                      arguments: ldFlags + ["-o", outPath, asmPath];
                                  waitUntilExit;
                                           self
if linkingTask terminationStatus != 0
    Exit(1)
