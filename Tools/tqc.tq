\ Tranquil compiler
import "stdlib"

error = { reason |
    "Error! «reason»" print
    Exit(1)
}

inPath         = nil
outPath        = @"a.out"
runtimeLibPath = @"/usr/local/tranquil/lib/libtranquil.a"
ldFlags        = [@-fexceptions, @-all_load,
                  @-framework, @AppKit,
                  @"-mmacosx-version-min=10.7",
                  @-lobjc, @-lffi, runtimeLibPath, @"/usr/local/tranquil/gmp/lib/libgmp.a"]

args = ... objectEnumerator
while arg = args nextObject {
    if arg == @-o then
        outPath = args nextObject
    else if inPath == nil then
        inPath = arg
    else
        ldFlags push: arg
}

error("No input provided") unless inPath ~= nil

uuid = `NSProcessInfo processInfo globallyUniqueString`

irPath = "/tmp/uuid()}.bc"
status = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/bin/tranquil"
                                 arguments: [@-aot, @-o, irPath, inPath];
                             waitUntilExit;
                         terminationStatus
error("Compilation failed") if status ~= 0

asmPath = "/tmp/«uuid()».s"
status = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/llvm/bin/llc"
                                 arguments: [@-O3, @-disable-fp-elim, @-march=x86-64,  @-relocation-model=pic, @-o, asmPath, irPath];
                             waitUntilExit;
                         terminationStatus
error("Assembly failed") if status ~= 0

status = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/llvm/bin/clang"
                                 arguments: ldFlags + [@-o, outPath, asmPath, @"/usr/lib/arc/libarclite_macosx.a"];
                             waitUntilExit;
                         terminationStatus
error("Linking failed") if status ~= 0
