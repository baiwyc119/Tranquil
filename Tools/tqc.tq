\ Tranquil compiler
import "stdlib"
#NSBlock {
    - if:     cond `cond ? self() : nil`
    - unless: cond `cond ? nil    : self()`
}

error = { reason |
    "Error! #{reason}" print
    Exit(1)
}

inPath         = nil
outPath        = $"a.out"
runtimeLibPath = $"/usr/local/tranquil/lib/libtranquil.a"
ldFlags        = [$-fexceptions, $-all_load, $-framework, $AppKit, $-lobjc, $-lffi, runtimeLibPath]

args = ... objectEnumerator
while arg = args nextObject {
    if arg == $-o
        outPath = args nextObject
    else if inPath == nil
        inPath = arg
    else
        ldFlags << arg
}

`error("No input provided")` unless: inPath != nil

uuid = `NSProcessInfo processInfo globallyUniqueString`

irPath = "/tmp/#{uuid()}.bc"
status = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/bin/tranquil"
                                 arguments: [$-aot, $-o, irPath, inPath];
                             waitUntilExit;
                         terminationStatus
error if: status != 0

asmPath = "/tmp/#{uuid()}.s"
status = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/llvm/bin/llc"
                                 arguments: [$-O0, $-disable-fp-elim, $-relocation-model=pic, $-o, asmPath, irPath];
                             waitUntilExit;
                         terminationStatus
error if: status != 0

status = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/llvm/bin/clang"
                                 arguments: ldFlags + [$-o, outPath, asmPath];
                             waitUntilExit;
                         terminationStatus
error if: status != 0
