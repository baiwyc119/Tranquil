\ Tranquil compiler
import "stdlib"

error = { reason |
    "Error! «reason»" print
    Exit(1)
}
uuid = `NSProcessInfo processInfo globallyUniqueString`

clang     = "/usr/local/tranquil/llvm/bin/clang"
arch      = "x86_64"
forIOS    = no

inPath   = nil
outPath  = @"a.out"
irPath   = "/tmp/«uuid()».bc"
asmPath  = "/tmp/«uuid()».s"
initPath = "/tmp/«uuid()».o"

tqFlags = [@-aot, @-arch, arch, @-o, irPath]
ldFlags = [@-fexceptions, @-all_load,
           @-lm, @-ldl, @-lobjc,
           @-framework, @Foundation,
           @"/usr/local/tranquil/lib/libtranquil.a"]

args = ... objectEnumerator
while arg = args nextObject {
    if arg == @-o then
        outPath = args nextObject
    else if arg == @-d then
        tqFlags push: @"-d"
    else if arg == @-ios then
        forIOS = yes
    else if arg == @-arch then
        arch = args nextObject
    else if inPath == nil then
        inPath = arg
    else
        ldFlags push: arg
}
error("No input provided") unless inPath ~= nil
tqFlags push: inPath

if forIOS {
    clang = "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"
    ldFlags; push: @-fobjc-link-runtime;
             push: @"/usr/local/tranquil/libffi-ios/lib/libffi.a";
             push: @-isysroot
    if arch == @i386 then
        ldFlags; push: @"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk";
                 push: @-Xlinker;
                 push: @-no_implicit_dylibs;
                 push: @"-mios-simulator-version-min=5.0";
                 push: @-fobjc-abi-version=2;
                 push: @-fobjc-legacy-dispatch
    else
        ldFlags; push: @"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk";
                 push: @"-miphoneos-version-min=5.0"
} else
    ldFlags; push: @"-mmacosx-version-min=10.7";
             push: @"/usr/lib/arc/libarclite_macosx.a";
             push: @"/usr/local/tranquil/gmp/lib/libgmp.a";
             push: @-lffi

status = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/bin/tranquil"
                                 arguments: tqFlags;
                             waitUntilExit;
                         terminationStatus
error("Compilation failed") if status ~= 0

llcArchs = { @x86_64 => @x86-64, @i386 => @x86, @armv7 => @arm }
status = NSTask launchedTaskWithLaunchPath: "/usr/local/tranquil/llvm/bin/llc"
                                 arguments: [@-O0, @-disable-fp-elim, @-disable-cfi, "-march=«llcArchs[arch]»", @-relocation-model=pic, @-o, asmPath, irPath];
                             waitUntilExit;
                         terminationStatus
error("Assembly failed") if status ~= 0

status = NSTask launchedTaskWithLaunchPath: clang
                                 arguments: [@-c, @-arch, arch, @"-I/usr/local/tranquil/include", @"/usr/local/tranquil/src/Source/Tranquil/tqmain.m", @-o, initPath];
                             waitUntilExit;
                         terminationStatus
error("Initializer compilation failed") if status ~= 0

status = NSTask launchedTaskWithLaunchPath: clang
                                 arguments: ldFlags + [@-fpie, @-fexceptions, @-arch, arch, @-o, outPath, asmPath, initPath];
                             waitUntilExit;
                         terminationStatus
error("Linking failed") if status ~= 0
